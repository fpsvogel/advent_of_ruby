---
http_interactions:
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:32 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=je9G0edMXsa7besjF3; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:32 GMT
- request:
    method: get
    uri: https://oauth.reddit.com/r/adventofcode/comments/z9ezjb/2022_day_1_solutions.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '64592'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      access-control-allow-origin:
      - "*"
      access-control-expose-headers:
      - X-Moose
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '31'
      x-ratelimit-remaining:
      - '69.0'
      x-ratelimit-reset:
      - '327'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:33 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - loid=000000001ksfv2ne2t.2.1741472672199.Z0FBQUFBQm56TU9oN2pnNi1GWHpkZWVSV2hldWw1THczSGdFTFVPVWx3ZmZuTUI3SHJqWE1LWEl2bHpTV3pkSGQxRzRGekdGMEJWeGJTa3BmVmtTWGlQbFlnRDE4T2QxWkczeGRYM3RGemptZ3FNajBFVkFiN0o4dDViYkFVbDJfblBpM3lRSGZnOTU;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:33
        GMT; secure; SameSite=None; Secure, session_tracker=hohbcabhhqmrqdcplo.0.1741472672212.Z0FBQUFBQm56TU9oSElnb3pLRHNRSFZGTnlDbHZEV3FjdGpnZEM0YXE4TVRlMTYtQmpmc0FoME01dVpWdnNqa0hYVnVPc1R1SnQtMndpaEFLLS1MUU0wOHVJUzUxdTFYZ2xhdFQzay1vUmRCQ2JlY0dCQjllbUE1Nk44NVo4eFowcWpvTDJNM2M5VEY;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:33
        GMT; secure; SameSite=None; Secure, csv=2; Max-Age=63072000; Domain=.reddit.com;
        Path=/; Secure; SameSite=None, edgebucket=KvwzdvII5muMLaQmJM; Domain=reddit.com;
        Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '[{"kind": "Listing", "data": {"after": null, "dist": 1, "modhash":
        "", "geo_filter": "", "children": [{"kind": "t3", "data": {"approved_at_utc":
        null, "subreddit": "adventofcode", "selftext": "To steal a song from [Olaf](https://static.wikia.nocookie.net/disney/images/5/53/Profile_-_Olaf.jpeg):\n\n&gt;
        Oh, happy, merry, muletide barrels, faithful glass of cheer  \n&gt; Thanks
        for sharing what you do  \n&gt; At that time of year  \n&gt; Thank you!\n\nIf
        you participated in a previous year, welcome back, and if you''re new this
        year, we hope you have fun and learn lots!\n\nAs always, we''re following
        the same general format as previous years'' megathreads, so make sure to read
        the full posting rules in our community wiki before you post!\n\n# [RULES
        FOR POSTING IN SOLUTION MEGATHREADS](/r/adventofcode/wiki/solution_megathreads/post_guidelines)\n\nIf
        you have any questions, please create your own post in /r/adventofcode with
        the `Help` flair and ask!\n\nAbove all, remember, AoC is all about learning
        more about the wonderful world of programming while hopefully having fun!\n\n***\n\n##
        NEW AND NOTEWORTHY THIS YEAR\n\n* Subreddit styling for new.reddit has been
        fixed yet again and hopefully for good this time!\n * I had to nuke the entire
        styling (reset to default) in order to fix the borked and buggy color contrasts.  Let
        me know if I somehow missed something.\n* All rules, copypasta, etc. are now
        in our [community wiki](https://www.reddit.com/r/adventofcode/wiki)!!!\n *
        With all community rules/FAQs/resources/etc. in one central place, it will
        be easier to link directly to specific sections, which should help cut down
        on my wall-''o-text copypasta-ing ;)\n * Please note that I am still working
        on the wiki, so all sections may not be linked up yet.  Do let me know if
        something is royally FUBAR, though.\n* A request from Eric: [Please include
        your contact info in the User-Agent header of automated requests!](https://www.reddit.com/r/adventofcode/comments/z9dhtd/please_include_your_contact_info_in_the_useragent/)\n\n##
        COMMUNITY NEWS\n\n**Advent of Code Community Fun 2022:** \ud83c\udf3f\ud83c\udf52
        [MisTILtoe Elf-ucation](https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/)
        \ud83e\uddd1\u200d\ud83c\udfeb\n\nWhat makes Advent of Code so *cool* year
        after year is that no matter how much of a newbie or a 1337 h4xx0r you are,
        there is *always* something new to learn.  Or maybe you just really want to
        nerd out with a deep dive into the care and breeding of show-quality [lanternfish](https://adventofcode.com/2021/day/6).\n\nWhatever
        you''ve learned from Advent of Code: **teach us, senpai**!\n\nFor this year''s
        community fun, create a write-up, video, project blog, `Tutorial`, etc. of
        whatever nerdy thing(s) you learned from Advent of Code.  It doesn''t even
        have to be programming-related; \\*any\\* topic is valid as long as you clearly
        tie it into Advent of Code!\n\nMore ideas, full details, rules, timeline,
        templates, etc. are in the [Submissions Megathread](https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/)!\n\n***\n\n#---
        Day 1: Calorie Counting ---\n\n***\n\nRead [the rules in our community wiki](/r/adventofcode/wiki/solution_megathreads/post_guidelines)
        before you post your solution in this megathread!\n\n***\n\n###~~This thread
        will be unlocked when there are a significant number of people on the global
        leaderboard with gold stars for today''s puzzle.~~\n\n###*EDIT:* Global leaderboard
        gold cap reached at 00:02:05, megathread unlocked!\n\nEdit2: Geez, y''all
        capped the global leaderboard before I even finished making/locking the megathread
        XD\n\nEdit3: /u/jeroenheijmans is back again with their [Unofficial AoC 2022
        Participant Survey](/z9eoer)!", "user_reports": [], "saved": false, "mod_reason_title":
        null, "gilded": 0, "clicked": false, "title": "-\ud83c\udf84- 2022 Day 1 Solutions
        -\ud83c\udf84-", "link_flair_richtext": [], "subreddit_name_prefixed": "r/adventofcode",
        "hidden": false, "pwls": 6, "link_flair_css_class": "flair-solutionmegathread",
        "downs": 0, "top_awarded_type": null, "hide_score": false, "name": "t3_z9ezjb",
        "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.99,
        "author_flair_background_color": null, "subreddit_type": "public", "ups":
        151, "total_awards_received": 0, "media_embed": {}, "author_flair_template_id":
        null, "is_original_content": false, "author_fullname": "t2_60niu", "secure_media":
        null, "is_reddit_media_domain": false, "is_meta": false, "category": null,
        "secure_media_embed": {}, "link_flair_text": "SOLUTION MEGATHREAD", "can_mod_post":
        false, "score": 151, "approved_by": null, "is_created_from_ads_ui": false,
        "author_premium": false, "thumbnail": "", "edited": 1671652277.0, "author_flair_css_class":
        null, "author_flair_richtext": [], "gildings": {}, "content_categories": null,
        "is_self": true, "mod_note": null, "created": 1669870921.0, "link_flair_type":
        "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type":
        "text", "domain": "self.adventofcode", "allow_live_comments": true, "selftext_html":
        "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;To steal a song from
        &lt;a href=\"https://static.wikia.nocookie.net/disney/images/5/53/Profile_-_Olaf.jpeg\"&gt;Olaf&lt;/a&gt;:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Oh,
        happy, merry, muletide barrels, faithful glass of cheer&lt;br/&gt;\nThanks
        for sharing what you do&lt;br/&gt;\nAt that time of year&lt;br/&gt;\nThank
        you!&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If you participated in a previous
        year, welcome back, and if you&amp;#39;re new this year, we hope you have
        fun and learn lots!&lt;/p&gt;\n\n&lt;p&gt;As always, we&amp;#39;re following
        the same general format as previous years&amp;#39; megathreads, so make sure
        to read the full posting rules in our community wiki before you post!&lt;/p&gt;\n\n&lt;h1&gt;&lt;a
        href=\"/r/adventofcode/wiki/solution_megathreads/post_guidelines\"&gt;RULES
        FOR POSTING IN SOLUTION MEGATHREADS&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;If you
        have any questions, please create your own post in &lt;a href=\"/r/adventofcode\"&gt;/r/adventofcode&lt;/a&gt;
        with the &lt;code&gt;Help&lt;/code&gt; flair and ask!&lt;/p&gt;\n\n&lt;p&gt;Above
        all, remember, AoC is all about learning more about the wonderful world of
        programming while hopefully having fun!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;NEW
        AND NOTEWORTHY THIS YEAR&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Subreddit styling
        for new.reddit has been fixed yet again and hopefully for good this time!\n\n&lt;ul&gt;\n&lt;li&gt;I
        had to nuke the entire styling (reset to default) in order to fix the borked
        and buggy color contrasts.  Let me know if I somehow missed something.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;All
        rules, copypasta, etc. are now in our &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki\"&gt;community
        wiki&lt;/a&gt;!!!\n\n&lt;ul&gt;\n&lt;li&gt;With all community rules/FAQs/resources/etc.
        in one central place, it will be easier to link directly to specific sections,
        which should help cut down on my wall-&amp;#39;o-text copypasta-ing ;)&lt;/li&gt;\n&lt;li&gt;Please
        note that I am still working on the wiki, so all sections may not be linked
        up yet.  Do let me know if something is royally FUBAR, though.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;A
        request from Eric: &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/z9dhtd/please_include_your_contact_info_in_the_useragent/\"&gt;Please
        include your contact info in the User-Agent header of automated requests!&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;COMMUNITY
        NEWS&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;Advent of Code Community Fun 2022:&lt;/strong&gt;
        \ud83c\udf3f\ud83c\udf52 &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/\"&gt;MisTILtoe
        Elf-ucation&lt;/a&gt; \ud83e\uddd1\u200d\ud83c\udfeb&lt;/p&gt;\n\n&lt;p&gt;What
        makes Advent of Code so &lt;em&gt;cool&lt;/em&gt; year after year is that
        no matter how much of a newbie or a 1337 h4xx0r you are, there is &lt;em&gt;always&lt;/em&gt;
        something new to learn.  Or maybe you just really want to nerd out with a
        deep dive into the care and breeding of show-quality &lt;a href=\"https://adventofcode.com/2021/day/6\"&gt;lanternfish&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Whatever
        you&amp;#39;ve learned from Advent of Code: &lt;strong&gt;teach us, senpai&lt;/strong&gt;!&lt;/p&gt;\n\n&lt;p&gt;For
        this year&amp;#39;s community fun, create a write-up, video, project blog,
        &lt;code&gt;Tutorial&lt;/code&gt;, etc. of whatever nerdy thing(s) you learned
        from Advent of Code.  It doesn&amp;#39;t even have to be programming-related;
        *any* topic is valid as long as you clearly tie it into Advent of Code!&lt;/p&gt;\n\n&lt;p&gt;More
        ideas, full details, rules, timeline, templates, etc. are in the &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/\"&gt;Submissions
        Megathread&lt;/a&gt;!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h1&gt;--- Day 1: Calorie
        Counting ---&lt;/h1&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Read &lt;a href=\"/r/adventofcode/wiki/solution_megathreads/post_guidelines\"&gt;the
        rules in our community wiki&lt;/a&gt; before you post your solution in this
        megathread!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h3&gt;&lt;del&gt;This thread will
        be unlocked when there are a significant number of people on the global leaderboard
        with gold stars for today&amp;#39;s puzzle.&lt;/del&gt;&lt;/h3&gt;\n\n&lt;h3&gt;&lt;em&gt;EDIT:&lt;/em&gt;
        Global leaderboard gold cap reached at 00:02:05, megathread unlocked!&lt;/h3&gt;\n\n&lt;p&gt;Edit2:
        Geez, y&amp;#39;all capped the global leaderboard before I even finished making/locking
        the megathread XD&lt;/p&gt;\n\n&lt;p&gt;Edit3: &lt;a href=\"/u/jeroenheijmans\"&gt;/u/jeroenheijmans&lt;/a&gt;
        is back again with their &lt;a href=\"/z9eoer\"&gt;Unofficial AoC 2022 Participant
        Survey&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null,
        "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived":
        true, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18":
        false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id":
        "caf5e484-9c70-11e5-aa5d-0e1abaa211ff", "can_gild": false, "spoiler": false,
        "locked": false, "author_flair_text": null, "treatment_tags": [], "visited":
        false, "removed_by": null, "num_reports": null, "distinguished": "moderator",
        "subreddit_id": "t5_3b3wa", "author_is_blocked": false, "mod_reason_by": null,
        "removal_reason": null, "link_flair_background_color": "#000000", "id": "z9ezjb",
        "is_robot_indexable": true, "num_duplicates": 0, "report_reasons": null, "author":
        "daggerdragon", "discussion_type": null, "num_comments": 1583, "send_replies":
        false, "media": null, "contest_mode": false, "author_patreon_flair": false,
        "author_flair_text_color": null, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/",
        "stickied": false, "url": "https://www.reddit.com/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/",
        "subreddit_subscribers": 131311, "created_utc": 1669870921.0, "num_crossposts":
        0, "mod_reports": [], "is_video": false}}], "before": null}}, {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "jg1livw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jaccomoc",
        "can_mod_post": false, "created_utc": 1681352724.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_8mzcbozf5", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Thought
        I would use this as a way to test out my new [Jactl](https://jactl.io) language
        (it is like a cut-down Groovy with a bit of Perl mixed in).\n\n**Part 1:**\n\n    stream(nextLine).join(''\\n'')\n                    .split(/^\\n/,
        ''m'')\n                    .map{ it.lines().map{ it as int }.sum() }\n                    .max()\n\n**Part
        2:**\n\nFor part 2 I just had to sort, limit to top 3, and then sum:\n\n    stream(nextLine).join(''\\n'')\n                    .split(/^\\n/,
        ''m'')\n                    .map{ it.lines().map{ it as int }.sum() }\n                    .sort{
        a,b -&gt; b &lt;=&gt; a }\n                    .limit(3)\n                    .sum()\n\n[Blog
        post with more detail](https://jactl.io/blog/2023/04/05/advent-of-code-2022-day1.html)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_jg1livw", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thought
        I would use this as a way to test out my new &lt;a href=\"https://jactl.io\"&gt;Jactl&lt;/a&gt;
        language (it is like a cut-down Groovy with a bit of Perl mixed in).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;stream(nextLine).join(&amp;#39;\\n&amp;#39;)\n                .split(/^\\n/,
        &amp;#39;m&amp;#39;)\n                .map{ it.lines().map{ it as int }.sum()
        }\n                .max()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        2:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;For part 2 I just had to sort, limit
        to top 3, and then sum:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;stream(nextLine).join(&amp;#39;\\n&amp;#39;)\n                .split(/^\\n/,
        &amp;#39;m&amp;#39;)\n                .map{ it.lines().map{ it as int }.sum()
        }\n                .sort{ a,b -&amp;gt; b &amp;lt;=&amp;gt; a }\n                .limit(3)\n                .sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://jactl.io/blog/2023/04/05/advent-of-code-2022-day1.html\"&gt;Blog
        post with more detail&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/jg1livw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1681352724.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j7lxe9r", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "PedramST", "can_mod_post": false, "created_utc":
        1675797941.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_w9d1v8e", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "    with open(''adventcode1.txt'',''r'')
        as my_file:\n        my_file = my_file.readlines()\n    calories = []\n    sum_
        = 0\n    for i in my_file:\n        if i != ''\\n'':\n            sum_ +=
        int(i)\n        else:\n            calories.append(sum_)\n            sum_
        = 0\n    calories.sort(reverse=True)\n    print(calories[0])\n    print(sum(calories[:3]))",
        "edited": 1675883008.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j7lxe9r", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;adventcode1.txt&amp;#39;,&amp;#39;r&amp;#39;) as my_file:\n    my_file
        = my_file.readlines()\ncalories = []\nsum_ = 0\nfor i in my_file:\n    if
        i != &amp;#39;\\n&amp;#39;:\n        sum_ += int(i)\n    else:\n        calories.append(sum_)\n        sum_
        = 0\ncalories.sort(reverse=True)\nprint(calories[0])\nprint(sum(calories[:3]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j7lxe9r/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1675797941.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j5dm25p", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SudeepB1", "can_mod_post": false, "created_utc":
        1674365977.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_6avzndjx", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Pretty new to python. Here''s my solution:  \n```\nfrom
        pathlib import Path\n\nfilePath = Path(__file__).with_name(\"input.txt\")\n\nwith
        filePath.open(\"r\") as contents:\n\tinvs = contents.read().split(\"\\n\\n\")\n\tinvSum
        = []\n\tfor inv in invs:\n\t\tcalories = [eval(calorie) for calorie in inv.split(\"\\n\")]\n\t\tinvSum.append(sum(calories))\n\tprint(max(invSum))
        # Part One\n\tprint(sum(sorted(invSum, reverse = True)[:3:])) # Part Two\n```",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_j5dm25p", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pretty
        new to python. Here&amp;#39;s my solution:&lt;br/&gt;\n```\nfrom pathlib import
        Path&lt;/p&gt;\n\n&lt;p&gt;filePath = Path(&lt;strong&gt;file&lt;/strong&gt;).with_name(&amp;quot;input.txt&amp;quot;)&lt;/p&gt;\n\n&lt;p&gt;with
        filePath.open(&amp;quot;r&amp;quot;) as contents:\n    invs = contents.read().split(&amp;quot;\\n\\n&amp;quot;)\n    invSum
        = []\n    for inv in invs:\n        calories = [eval(calorie) for calorie
        in inv.split(&amp;quot;\\n&amp;quot;)]\n        invSum.append(sum(calories))\n    print(max(invSum))
        # Part One\n    print(sum(sorted(invSum, reverse = True)[:3:])) # Part Two\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j5dm25p/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1674365977.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j4tzdmh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "infostud", "can_mod_post": false, "created_utc":
        1674021930.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_4sbiw", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "J from [https://jsoftware.com](https://jsoftware.com).
        Day 1. Short but not very elegant. Still learning idioms.\n\n    elves=. ''b''
        fread jpath ''~Projects/advent_of_code/calories.txt''\n    calories=. ,(\".
        &gt;elves),0\n    sums=. (0=calories) +/ ;.2 calories\n\nPart 1\n\n    elf=.
        1+(i.&gt;./)sums\n    (elf-1) { sums\n\nPart 2\n\n    +/(0 1 2) { (\\:sums)
        { sums", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j4tzdmh", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;J
        from &lt;a href=\"https://jsoftware.com\"&gt;https://jsoftware.com&lt;/a&gt;.
        Day 1. Short but not very elegant. Still learning idioms.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;elves=.
        &amp;#39;b&amp;#39; fread jpath &amp;#39;~Projects/advent_of_code/calories.txt&amp;#39;\ncalories=.
        ,(&amp;quot;. &amp;gt;elves),0\nsums=. (0=calories) +/ ;.2 calories\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;elf=. 1+(i.&amp;gt;./)sums\n(elf-1)
        { sums\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;+/(0
        1 2) { (\\:sums) { sums\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j4tzdmh/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1674021930.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j4nzkp9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "DJDarkViper", "can_mod_post": false, "created_utc":
        1673919125.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_4jgvz", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Super late to the party, I''ve only just
        learned of AoC''s existence and it looked like fun to take a crack at it even
        though it''s mid January \n\nSolution in PHP 8 to both of Day 1''s issues\n\n[https://github.com/RedactedProfile/AdventOfCode-2022/blob/master/01/calories.php](https://github.com/RedactedProfile/AdventOfCode-2022/blob/master/01/calories.php)\n\nI
        was under a pretty tight time constraint between dropping kids off at various
        things, did this on my laptop in my truck between stops, so probably not the
        best possible solution I could have come up with, nor the prettiest, but neither
        here nor there, here it is", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j4nzkp9", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Super
        late to the party, I&amp;#39;ve only just learned of AoC&amp;#39;s existence
        and it looked like fun to take a crack at it even though it&amp;#39;s mid
        January &lt;/p&gt;\n\n&lt;p&gt;Solution in PHP 8 to both of Day 1&amp;#39;s
        issues&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/RedactedProfile/AdventOfCode-2022/blob/master/01/calories.php\"&gt;https://github.com/RedactedProfile/AdventOfCode-2022/blob/master/01/calories.php&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        was under a pretty tight time constraint between dropping kids off at various
        things, did this on my laptop in my truck between stops, so probably not the
        best possible solution I could have come up with, nor the prettiest, but neither
        here nor there, here it is&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j4nzkp9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1673919125.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j2rdcke", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bobesponjadesbo", "can_mod_post": false,
        "created_utc": 1672748328.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_13gaujz7", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "I''ve tried with php
        but can''t quite grasp how to validate if I had a line break or not, so my
        first ifs of each function won''t work :(\n\nCould someone tell me where to
        find the answer to this?\n\n[my code is here](https://github.com/NekoNoRemilia/Advents-of-code/blob/main/elves-calories.php)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_j2rdcke", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve
        tried with php but can&amp;#39;t quite grasp how to validate if I had a line
        break or not, so my first ifs of each function won&amp;#39;t work :(&lt;/p&gt;\n\n&lt;p&gt;Could
        someone tell me where to find the answer to this?&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/NekoNoRemilia/Advents-of-code/blob/main/elves-calories.php\"&gt;my
        code is here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j2rdcke/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1672748328.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "j1m3va5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Vishoor",
        "can_mod_post": false, "created_utc": 1671979669.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_atjnhvj", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Efficient
        and understandable solution to both tasks in **Python**. If you have some
        problems with the tasks it can maybe help you.\n\n[Full Code](https://github.com/PodolskiBartosz/advent-of-code-2022/blob/main/day-1/main.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_j1m3va5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Efficient
        and understandable solution to both tasks in &lt;strong&gt;Python&lt;/strong&gt;.
        If you have some problems with the tasks it can maybe help you.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/PodolskiBartosz/advent-of-code-2022/blob/main/day-1/main.py\"&gt;Full
        Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j1m3va5/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1671979669.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "j1kg2k2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fish-n-chips-uk",
        "can_mod_post": false, "created_utc": 1671934347.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_56110w9t", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "**SPARC
        assembly** using Solaris syscalls (no libc functions\\*)\n\n[Source](https://github.com/cz-fish/advent-of-code/blob/master/2022/day1.s)
        (both parts)\n\nTested on Solaris 11, SPARC T5\n\n\\* libc still has to be
        linked to the binary. For some reason, the SYS\\_read syscall returns a different
        value when linked without -lc, and the program breaks.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_j1kg2k2",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;SPARC
        assembly&lt;/strong&gt; using Solaris syscalls (no libc functions*)&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/cz-fish/advent-of-code/blob/master/2022/day1.s\"&gt;Source&lt;/a&gt;
        (both parts)&lt;/p&gt;\n\n&lt;p&gt;Tested on Solaris 11, SPARC T5&lt;/p&gt;\n\n&lt;p&gt;*
        libc still has to be linked to the binary. For some reason, the SYS_read syscall
        returns a different value when linked without -lc, and the program breaks.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j1kg2k2/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671934347.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j1bi1cj", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Key__Strokes", "can_mod_post": false,
        "created_utc": 1671760706.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_tm0dc81g", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "## Javascript\n[Solution
        to both parts](https://github.com/doingthisalright/AdventOfCode2022/blob/main/Day01/solution.js)\n\n---\n\n[Video
        Explanation](https://youtu.be/oypHV-Uwv-M)\n\n---\n\n## Part 1:\n* Start summing
        the calories in groups. End of a group can be determined when we hit an empty
        string. And for the last group we will not get any empty string, so after
        the loop ends we just assume that its the end of the group.\n  * For each
        of these group sums, add them to an array.\n* Sort the array in decreasing
        order and return the first element of the array.\n\n## Part 2:\n* Follow everything
        from Part 1, but for the last step just return the sum of first three elements
        from the sorted array.\n\n---\n\nIf you liked the explanation, then please
        don''t forget to cast your vote \ud83d\udc9c to `Adventures of Advent of Code
        - Edition 1 - /u/Key__Strokes` in the [poll](https://www.reddit.com/r/adventofcode/comments/z9he28/comment/j1c4f9x/)",
        "edited": 1673528893.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j1bi1cj", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Javascript&lt;/h2&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/doingthisalright/AdventOfCode2022/blob/main/Day01/solution.js\"&gt;Solution
        to both parts&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;a href=\"https://youtu.be/oypHV-Uwv-M\"&gt;Video
        Explanation&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;Part 1:&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Start
        summing the calories in groups. End of a group can be determined when we hit
        an empty string. And for the last group we will not get any empty string,
        so after the loop ends we just assume that its the end of the group.\n\n&lt;ul&gt;\n&lt;li&gt;For
        each of these group sums, add them to an array.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Sort
        the array in decreasing order and return the first element of the array.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Part
        2:&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Follow everything from Part 1, but
        for the last step just return the sum of first three elements from the sorted
        array.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;If you liked the
        explanation, then please don&amp;#39;t forget to cast your vote \ud83d\udc9c
        to &lt;code&gt;Adventures of Advent of Code - Edition 1 - /u/Key__Strokes&lt;/code&gt;
        in the &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/z9he28/comment/j1c4f9x/\"&gt;poll&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j1bi1cj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671760706.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j1az898", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "JurgenGherkin", "can_mod_post": false,
        "created_utc": 1671752080.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_xa5fu", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "My solution in swift.
        \nhttps://github.com/i-ritchie/AOC-Day-1.git\n\nusing the opportunity to try
        and improve my coding abilities", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_j1az898", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in swift. \n&lt;a href=\"https://github.com/i-ritchie/AOC-Day-1.git\"&gt;https://github.com/i-ritchie/AOC-Day-1.git&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;using
        the opportunity to try and improve my coding abilities&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j1az898/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671752080.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j10znzl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "10xlearner", "can_mod_post": false, "created_utc":
        1671572714.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_3vdvx2ns", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My [C++ solution](https://10xlearner.com/2022/12/06/aoc-2022-day-1-calorie-counting)
        \ud83d\ude42 \n\nFeel free to give me any feedback on it, as I always try
        to learn and improve!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j10znzl", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        &lt;a href=\"https://10xlearner.com/2022/12/06/aoc-2022-day-1-calorie-counting\"&gt;C++
        solution&lt;/a&gt; \ud83d\ude42 &lt;/p&gt;\n\n&lt;p&gt;Feel free to give me
        any feedback on it, as I always try to learn and improve!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j10znzl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671572714.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j0yr839", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Zaorhion_", "can_mod_post": false, "created_utc":
        1671538872.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_gzqgz5b2", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "C++\n\n[Solution](https://github.com/Eric-Philippe/Advent-Of-Code-2022/tree/master/Day01%20[C++]%20%F0%9F%8E%84)",
        "edited": 1671558714.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j0yr839", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Eric-Philippe/Advent-Of-Code-2022/tree/master/Day01%20%5BC++%5D%20%F0%9F%8E%84\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j0yr839/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671538872.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j0t6bq3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "desci1", "can_mod_post": false, "created_utc":
        1671428129.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_wdjyh", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python3  \n\n\nhttps://github.com/iuriguilherme/adventofcode2022/blob/main/1/main.py",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_j0t6bq3", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/iuriguilherme/adventofcode2022/blob/main/1/main.py\"&gt;https://github.com/iuriguilherme/adventofcode2022/blob/main/1/main.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j0t6bq3/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671428129.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "j2fmmxo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KansasRFguy",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_j0h1nlb", "score":
        1, "author_fullname": "t2_u2qpi73", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Thanks, I had this same
        problem.", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_j2fmmxo", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks,
        I had this same problem.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j2fmmxo/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1672526173.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1672526173.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "j0h1nlb", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SoulMan404", "can_mod_post": false, "created_utc":
        1671207264.0, "send_replies": true, "parent_id": "t1_j09lj8k", "score": 2,
        "author_fullname": "t2_j0615", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "I am curious about the very
        last line of the file. Wouldn''t be in variable in i and never got a chance
        to be added to a cal because we don''t iterate after the last line?", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_j0h1nlb",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am curious about the
        very last line of the file. Wouldn&amp;#39;t be in variable in i and never
        got a chance to be added to a cal because we don&amp;#39;t iterate after the
        last line?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j0h1nlb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671207264.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "j09lj8k", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Present_Substance307", "can_mod_post":
        false, "created_utc": 1671067673.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_3vdsqlvj", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "an attempt in C#\n\n    List&lt;int&gt;
        cal = new();\n    int i = 0;\n    \n    foreach (var line in File.ReadLines(\"input_1.txt\"))\n    {
        \n        if (int.TryParse(line, out var n))\n            i += n;\n        else\n        {\n            cal.Add(i);\n            i
        = 0;\n        }\n    }\n    \n    cal.Sort();\n    Console.WriteLine(cal.Max());
        //part 1\n    Console.WriteLine(cal.TakeLast(3).Sum()); //part 2\n\nhttps://pastebin.com/NwPEux0b",
        "edited": 1671068208.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j09lj8k", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;an
        attempt in C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;List&amp;lt;int&amp;gt;
        cal = new();\nint i = 0;\n\nforeach (var line in File.ReadLines(&amp;quot;input_1.txt&amp;quot;))\n{
        \n    if (int.TryParse(line, out var n))\n        i += n;\n    else\n    {\n        cal.Add(i);\n        i
        = 0;\n    }\n}\n\ncal.Sort();\nConsole.WriteLine(cal.Max()); //part 1\nConsole.WriteLine(cal.TakeLast(3).Sum());
        //part 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/NwPEux0b\"&gt;https://pastebin.com/NwPEux0b&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j09lj8k/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671067673.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izrfeee", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "CosmosChen", "can_mod_post": false, "created_utc":
        1670744048.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_3x7xlm6q", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Rust\n\n[Full code on Github](https://github.com/acehinnnqru/aoc-2022/blob/master/src/solutions/day1.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_izrfeee", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/acehinnnqru/aoc-2022/blob/master/src/solutions/day1.rs\"&gt;Full
        code on Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izrfeee/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670744048.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izpspgr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "adimcohen", "can_mod_post": false, "created_utc":
        1670712990.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_k81uksw6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "In single-statement t-sql\nhttps://github.com/adimcohen/Advant_of_Code_2022_Single_Statement_SQL/blob/main/Day_01/Day_01.sql",
        "edited": 1670724461.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_izpspgr", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In
        single-statement t-sql\n&lt;a href=\"https://github.com/adimcohen/Advant_of_Code_2022_Single_Statement_SQL/blob/main/Day_01/Day_01.sql\"&gt;https://github.com/adimcohen/Advant_of_Code_2022_Single_Statement_SQL/blob/main/Day_01/Day_01.sql&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izpspgr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670712990.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "izu1t2y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "OsipXD",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_izu08oi", "score":
        1, "author_fullname": "t2_179nlm", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": " Glad it were helpful
        for you!", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_izu1t2y", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Glad
        it were helpful for you!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izu1t2y/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670793132.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1670793132.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izu08oi", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "-katharina", "can_mod_post": false, "created_utc":
        1670792511.0, "send_replies": true, "parent_id": "t1_izp20ef", "score": 2,
        "author_fullname": "t2_bs4d6wzj", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "thank you so much! I am currently
        learning Kotlin, and your solutions have taught me a lot", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_izu08oi",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thank you so much! I
        am currently learning Kotlin, and your solutions have taught me a lot&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izu08oi/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670792511.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izp20ef", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "OsipXD", "can_mod_post": false, "created_utc":
        1670701704.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_179nlm", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[Kotlin](https://github.com/osipxd/advent-of-code-2022/blob/main/src/Day01.kt)\n\nIncludes
        two solutions for part 2:  \n\\- Simple, but slow: \u23f1 `O(N*log(N))`, \ud83d\udcbe
        `O(N)`  \n\\- Faster, but less simple: \u23f1 `O(N)`, \ud83d\udcbe `O(1)`",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_izp20ef", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/osipxd/advent-of-code-2022/blob/main/src/Day01.kt\"&gt;Kotlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Includes
        two solutions for part 2:&lt;br/&gt;\n- Simple, but slow: \u23f1 &lt;code&gt;O(N*log(N))&lt;/code&gt;,
        \ud83d\udcbe &lt;code&gt;O(N)&lt;/code&gt;&lt;br/&gt;\n- Faster, but less
        simple: \u23f1 &lt;code&gt;O(N)&lt;/code&gt;, \ud83d\udcbe &lt;code&gt;O(1)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izp20ef/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670701704.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izot64j", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "beardmachine", "can_mod_post": false,
        "created_utc": 1670697960.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_16fz1c", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "JavaScript Part 1
        &amp; 2  \n[https://gist.github.com/TomFirth/a97a018ce20d837567a5c822a3c26bef](https://gist.github.com/TomFirth/a97a018ce20d837567a5c822a3c26bef)",
        "edited": 1670777918.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_izot64j", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript
        Part 1 &amp;amp; 2&lt;br/&gt;\n&lt;a href=\"https://gist.github.com/TomFirth/a97a018ce20d837567a5c822a3c26bef\"&gt;https://gist.github.com/TomFirth/a97a018ce20d837567a5c822a3c26bef&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izot64j/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670697960.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "j1gayxv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gullible-Garbage-639",
        "can_mod_post": false, "created_utc": 1671850459.0, "send_replies": true,
        "parent_id": "t1_iznvk2j", "score": 1, "author_fullname": "t2_7f1jhaf3", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Thats wild!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j1gayxv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thats
        wild!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j1gayxv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671850459.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j0t6g94", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "desci1", "can_mod_post": false, "created_utc":
        1671428208.0, "send_replies": true, "parent_id": "t1_iznvk2j", "score": 1,
        "author_fullname": "t2_wdjyh", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "This can be improved to yield
        both answers in one line", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j0t6g94", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        can be improved to yield both answers in one line&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j0t6g94/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671428208.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 2, "removal_reason": null, "link_id": "t3_z9ezjb",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "j0lfv0e", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        true, "author": "[deleted]", "can_mod_post": false, "send_replies": true,
        "parent_id": "t1_j0hn8rn", "score": 2, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Thank you.",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank
        you.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "associated_award":
        null, "stickied": false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j0lfv0e/",
        "num_reports": null, "locked": false, "name": "t1_j0lfv0e", "created": 1671291675.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1671291675.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 3, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "j0hn8rn", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "geek69420", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_j0h8se1", "score": 1, "author_fullname": "t2_dwrszdrt",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Sure! So what \"f.read().rstrip(\"\\n\").split(\"\\n\\n\")\"
        does is read the file, remove all newlines from the end (if there is any)
        and split by two new lines, which means empty lines. After this operation
        we get all elves'' inventory in string. The one-line \"for\" must be put inside
        brackets. It iterates through all list elements as usual, but pushes the expression
        behind it to the list it returns in every iteration. We split every elf inventory
        string at newlines, so what we get after this operation are the calories,
        but in string, so we have to map those to int. The map function takes a list
        and applies a function to every element and returns a list. Well, not exactly
        a list, but a \"map\" object, so we have to convert it to list. After this
        operation we get a list of ints for every elf, which represent the calories
        they are carrying (a 2D list). Now, the same as before, apply the sum function
        to every list element (inventory), convert it to list, then take the biggest
        one with the max function.", "edited": false, "top_awarded_type": null, "downs":
        0, "author_flair_css_class": null, "name": "t1_j0hn8rn", "is_submitter": false,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sure! So what &amp;quot;f.read().rstrip(&amp;quot;\\n&amp;quot;).split(&amp;quot;\\n\\n&amp;quot;)&amp;quot;
        does is read the file, remove all newlines from the end (if there is any)
        and split by two new lines, which means empty lines. After this operation
        we get all elves&amp;#39; inventory in string. The one-line &amp;quot;for&amp;quot;
        must be put inside brackets. It iterates through all list elements as usual,
        but pushes the expression behind it to the list it returns in every iteration.
        We split every elf inventory string at newlines, so what we get after this
        operation are the calories, but in string, so we have to map those to int.
        The map function takes a list and applies a function to every element and
        returns a list. Well, not exactly a list, but a &amp;quot;map&amp;quot; object,
        so we have to convert it to list. After this operation we get a list of ints
        for every elf, which represent the calories they are carrying (a 2D list).
        Now, the same as before, apply the sum function to every list element (inventory),
        convert it to list, then take the biggest one with the max function.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j0hn8rn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1671215596.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1671215596.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "j0h8se1", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iznvk2j", "score": 2, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Hi. Would
        you please explain quickly for me?  \nI have used ''max'' to pick the biggest
        value in the list of totals per elf.", "edited": false, "author_flair_css_class":
        null, "collapsed": false, "downs": 0, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Hi. Would you please explain quickly for
        me?&lt;br/&gt;\nI have used &amp;#39;max&amp;#39; to pick the biggest value
        in the list of totals per elf.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j0h8se1/",
        "num_reports": null, "locked": false, "name": "t1_j0h8se1", "created": 1671209977.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1671209977.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "iznvk2j", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "geek69420", "can_mod_post": false, "created_utc":
        1670683717.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_dwrszdrt", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "A one-liner in python for part 1: https://pastebin.com/T3U2NYik",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iznvk2j", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A
        one-liner in python for part 1: &lt;a href=\"https://pastebin.com/T3U2NYik\"&gt;https://pastebin.com/T3U2NYik&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iznvk2j/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670683717.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izm326r", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "gumnos", "can_mod_post": false, "created_utc":
        1670639824.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_g3epb", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Here''s [Day 1 part 1](https://github.com/Gumnos/AdventOfCode2022/blob/main/01/a.awk)
        &amp; [Day 1 part 2](https://github.com/Gumnos/AdventOfCode2022/blob/main/01/b.awk)
        as written in `awk`.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_izm326r", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        &lt;a href=\"https://github.com/Gumnos/AdventOfCode2022/blob/main/01/a.awk\"&gt;Day
        1 part 1&lt;/a&gt; &amp;amp; &lt;a href=\"https://github.com/Gumnos/AdventOfCode2022/blob/main/01/b.awk\"&gt;Day
        1 part 2&lt;/a&gt; as written in &lt;code&gt;awk&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izm326r/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670639824.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izllv1n", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "remysharp", "can_mod_post": false, "created_utc":
        1670631459.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_dfra", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# JQ\n\n    split(\"\\n\\n\") | map(split(\"\\n\")
        | map(tonumber?) | add) | sort[-3:] | add", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_izllv1n", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;JQ&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;split(&amp;quot;\\n\\n&amp;quot;)
        | map(split(&amp;quot;\\n&amp;quot;) | map(tonumber?) | add) | sort[-3:] |
        add\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": true, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izllv1n/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670631459.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "j00bamg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670902869.0, "send_replies": true,
        "parent_id": "t1_izkoauc", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_j00bamg", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j00bamg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670902869.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izkoauc", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "arnevdb0", "can_mod_post": false, "created_utc":
        1670617483.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_oslid", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "i did mine in Javascript \n     \n```\nconst
        elves = data\n         .split(\"\\n\")\n         .reduce((acc, curr) =&gt;
        curr === '''' ? acc.push(0) &amp;&amp; acc : (acc[acc.length - 1] += parseInt(curr))
        &amp;&amp; acc, [0]);\n \n     console.table({\n         pt1: Math.max(...elves),\n         pt2:
        elves.sort((a, b) =&gt; b - a).slice(0, 3).reduce((acc, curr) =&gt; acc +
        curr, 0),\n     });\n```", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_izkoauc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i
        did mine in Javascript &lt;/p&gt;\n\n&lt;p&gt;```\nconst elves = data\n         .split(&amp;quot;\\n&amp;quot;)\n         .reduce((acc,
        curr) =&amp;gt; curr === &amp;#39;&amp;#39; ? acc.push(0) &amp;amp;&amp;amp;
        acc : (acc[acc.length - 1] += parseInt(curr)) &amp;amp;&amp;amp; acc, [0]);&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;
        console.table({\n     pt1: Math.max(...elves),\n     pt2: elves.sort((a, b)
        =&amp;gt; b - a).slice(0, 3).reduce((acc, curr) =&amp;gt; acc + curr, 0),\n
        });\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izkoauc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670617483.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izkiko9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "WestyLad", "can_mod_post": false, "created_utc":
        1670615207.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_n955b", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Solution written in **C**\n\nhttps://github.com/bantahacka/AdventOfCyber/blob/main/2022/day1/main.c",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_izkiko9", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution
        written in &lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/bantahacka/AdventOfCyber/blob/main/2022/day1/main.c\"&gt;https://github.com/bantahacka/AdventOfCyber/blob/main/2022/day1/main.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izkiko9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670615207.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izk97gp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Sourish17", "can_mod_post": false, "created_utc":
        1670611494.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_56bk8pep", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python 3.10\n\n[https://youtu.be/dBUgbjYMOlc](https://youtu.be/dBUgbjYMOlc)\n\nhttps://github.com/SourishS17/aoc2022",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_izk97gp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3.10&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://youtu.be/dBUgbjYMOlc\"&gt;https://youtu.be/dBUgbjYMOlc&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SourishS17/aoc2022\"&gt;https://github.com/SourishS17/aoc2022&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izk97gp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670611494.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izjkf8z", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "EatonMesss", "can_mod_post": false, "created_utc":
        1670602112.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_jmesm2g6", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[**Python**](https://topaz.github.io/paste/#XQAAAQAcAgAAAAAAAAAyGUj/TzprcPQUiCsZq7fVyyVND7dHE7uPgW+W4M0z+wF5rSMUbIX4sEs/MjQ15WVktJsqmi8znOfx4zG0bFSd/0et6BtPkJQU9VCOpfP72HgNg6SULc3zbWtdzXkwpD7XYPXSkUB0/qUwVkkEY0Roub28jsUReHuOIY1XvMcd5Nhe8pjtjMXYfb64rdw6MHbfj9izfSQ+ILa/dv1MVQFryMACgi1dzpXCe1/AVvhAjZr1QbBmpmemlWfLNdS8eSoKwDbv9mKzoXayA1UCuvjdHy2ZFPlntTa6NB4kBMwghl5NqDljQEUoM30mRpcYoP5H0wLOlY5o0cDf+jFsSwh7FDDjrQJybSwp/Q69Cg==)  \n\n\nPython
        is an excellent fit for solving tasks like these and I figured I should start
        with a language I''m actually familiar with.\n\nI used a generator to aggregate
        the lines and a couple of maps and reducers to calculate the results. In most
        cases I would prefer list comprehensions to using map, but in this case it
        fits perfectly.\n\nWhat can I say... Python is my primary language and I love
        it dearly, so this was not a challenge at all.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_izjkf8z", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAcAgAAAAAAAAAyGUj/TzprcPQUiCsZq7fVyyVND7dHE7uPgW+W4M0z+wF5rSMUbIX4sEs/MjQ15WVktJsqmi8znOfx4zG0bFSd/0et6BtPkJQU9VCOpfP72HgNg6SULc3zbWtdzXkwpD7XYPXSkUB0/qUwVkkEY0Roub28jsUReHuOIY1XvMcd5Nhe8pjtjMXYfb64rdw6MHbfj9izfSQ+ILa/dv1MVQFryMACgi1dzpXCe1/AVvhAjZr1QbBmpmemlWfLNdS8eSoKwDbv9mKzoXayA1UCuvjdHy2ZFPlntTa6NB4kBMwghl5NqDljQEUoM30mRpcYoP5H0wLOlY5o0cDf+jFsSwh7FDDjrQJybSwp/Q69Cg==\"&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Python
        is an excellent fit for solving tasks like these and I figured I should start
        with a language I&amp;#39;m actually familiar with.&lt;/p&gt;\n\n&lt;p&gt;I
        used a generator to aggregate the lines and a couple of maps and reducers
        to calculate the results. In most cases I would prefer list comprehensions
        to using map, but in this case it fits perfectly.&lt;/p&gt;\n\n&lt;p&gt;What
        can I say... Python is my primary language and I love it dearly, so this was
        not a challenge at all.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izjkf8z/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670602112.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j00bf0e", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670902929.0, "send_replies": true, "parent_id": "t1_izjfegk",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Comment removed due
        to naughty language.  [Keep the megathreads SFW](/r/adventofcode/wiki/rules/pg_is_mandatory).\n\nIf
        you edit your comment to take out the naughty abbreviation in the last sentence,
        I''ll re-approve the comment.", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_j00bf0e", "is_submitter": true,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Comment removed due to naughty language.  &lt;a
        href=\"/r/adventofcode/wiki/rules/pg_is_mandatory\"&gt;Keep the megathreads
        SFW&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;If you edit your comment to take out
        the naughty abbreviation in the last sentence, I&amp;#39;ll re-approve the
        comment.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": "moderator", "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j00bf0e/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670902929.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "izjfegk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izjfegk/",
        "num_reports": null, "locked": false, "name": "t1_izjfegk", "created": 1670600124.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670600124.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izftap1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "oddrationale", "can_mod_post": false,
        "created_utc": 1670530210.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_6lo0s", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[C# solution using
        .NET Interactive and Jupyter Notebook](https://github.com/oddrationale/AdventOfCode2022CSharp/blob/main/Day01.ipynb).",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_izftap1", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/oddrationale/AdventOfCode2022CSharp/blob/main/Day01.ipynb\"&gt;C#
        solution using .NET Interactive and Jupyter Notebook&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izftap1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670530210.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izfd5vp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "minerad0", "can_mod_post": false, "created_utc":
        1670523932.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_dwg4y7ma", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Elixir\n\nImplementation using Streams\n\n    defmodule
        Aoc do\n      def solve1, do: cals() |&gt; Enum.sort(:desc) |&gt; List.first()
        \n      def solve2, do: cals() |&gt; Enum.sort(:desc) |&gt; Enum.take(3) |&gt;
        Enum.sum()\n    \n      defp cals do\n        File.read!(\"data.txt\")\n        |&gt;
        String.split(\"\\n\")\n        |&gt; Stream.chunk_by(&amp;(&amp;1 == \"\"))\n        |&gt;
        Stream.filter(&amp;(&amp;1 != [\"\"]))\n        |&gt; Stream.map(fn l -&gt;
        Enum.map(l, &amp;String.to_integer/1) end)\n        |&gt; Stream.map(&amp;Enum.sum/1)\n      end\n    end",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_izfd5vp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;p&gt;Implementation
        using Streams&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule Aoc do\n  def
        solve1, do: cals() |&amp;gt; Enum.sort(:desc) |&amp;gt; List.first() \n  def
        solve2, do: cals() |&amp;gt; Enum.sort(:desc) |&amp;gt; Enum.take(3) |&amp;gt;
        Enum.sum()\n\n  defp cals do\n    File.read!(&amp;quot;data.txt&amp;quot;)\n    |&amp;gt;
        String.split(&amp;quot;\\n&amp;quot;)\n    |&amp;gt; Stream.chunk_by(&amp;amp;(&amp;amp;1
        == &amp;quot;&amp;quot;))\n    |&amp;gt; Stream.filter(&amp;amp;(&amp;amp;1
        != [&amp;quot;&amp;quot;]))\n    |&amp;gt; Stream.map(fn l -&amp;gt; Enum.map(l,
        &amp;amp;String.to_integer/1) end)\n    |&amp;gt; Stream.map(&amp;amp;Enum.sum/1)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izfd5vp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670523932.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izgyea1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_izgu80a", "score": 1, "author_fullname":
        "t2_60niu", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "\ud83d\udc4d", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_izgyea1",
        "is_submitter": true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;\ud83d\udc4d&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izgyea1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670547463.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670547463.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izgu80a", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "IvanR3D", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_izgo3ke", "score": 2, "author_fullname": "t2_q3zxe4o4",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Thanks! Is it correct now?   \nI am new here on Reddit.", "edited":
        false, "top_awarded_type": null, "downs": 0, "author_flair_css_class": null,
        "name": "t1_izgu80a", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks!
        Is it correct now?&lt;br/&gt;\nI am new here on Reddit.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izgu80a/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670545507.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670545507.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izgo3ke", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670542736.0, "send_replies": true, "parent_id": "t1_izf3ctc",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~Inlined code is intended
        for `short snippets` of code only. Your code \"block\" right now is unreadable
        on old.reddit and many mobile clients; whitespace and indentation are not
        preserved and it is not scrollable.~~\n\n~~Please edit your post to use the
        [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1670547482.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_izgo3ke", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Inlined code is
        intended for &lt;code&gt;short snippets&lt;/code&gt; of code only. Your code
        &amp;quot;block&amp;quot; right now is unreadable on old.reddit and many mobile
        clients; whitespace and indentation are not preserved and it is not scrollable.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        thanks for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izgo3ke/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670542736.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izf3ctc", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "IvanR3D", "can_mod_post": false, "created_utc":
        1670520140.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_q3zxe4o4", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Solution in JavaScript:You can see all my
        solutions in this [CodePen](https://codepen.io/ivanr3d/pen/ExRrXzG).Part 1\n\n    let
        rawdata = document.getElementsByTagName(\"pre\")[0].innerText;\n    let counter
        = 0; \n    let data = new Array(); \n    let value = \"\"; \n    for (let
        i=0; i &lt; rawdata.length; i++) { \n     if (rawdata[i] == \"\\n\") {\n      data.push(value);\n      value
        = \"\";\n      counter++;\n     } else {\n      value += rawdata[i];\n     }\n    }\n    \n    let
        elves = new Array();\n    let calories = 0;\n    counter = 0;\n     for (let
        i=0; i &lt; data.length; i++) {\n      if(data\\[i\\] == \"\") {\n       elves.push(calories);\n       calories
        = 0;\n       counter++;\n      } else {\n       calories += Number(data\\[i\\]);}}elves.push(calories);\n       Array.prototype.max
        = function() {\n        return Math.max.apply(null, this);\n       };\n      console.log(\"The
        elf is carrying \" + elves.max() + \" total calories\");\n\nPart 2\n\nThis
        code must be execute after the first part\n\n    max1 = elves.max();\n    elves
        = elves.filter(elf =&gt; elf != elves.max());\n    max2 = elves.max();\n    elves
        = elves.filter(elf =&gt; elf != elves.max());\n    max3 = elves.max();\n    elves
        = elves.filter(elf =&gt; elf != elves.max());\n    \n    console.log(\"The
        elves are carrying \" + (max1+max2+max3) + \" calories in total.\");", "edited":
        1670545476.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_izf3ctc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution
        in JavaScript:You can see all my solutions in this &lt;a href=\"https://codepen.io/ivanr3d/pen/ExRrXzG\"&gt;CodePen&lt;/a&gt;.Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let rawdata = document.getElementsByTagName(&amp;quot;pre&amp;quot;)[0].innerText;\nlet
        counter = 0; \nlet data = new Array(); \nlet value = &amp;quot;&amp;quot;;
        \nfor (let i=0; i &amp;lt; rawdata.length; i++) { \n if (rawdata[i] == &amp;quot;\\n&amp;quot;)
        {\n  data.push(value);\n  value = &amp;quot;&amp;quot;;\n  counter++;\n }
        else {\n  value += rawdata[i];\n }\n}\n\nlet elves = new Array();\nlet calories
        = 0;\ncounter = 0;\n for (let i=0; i &amp;lt; data.length; i++) {\n  if(data\\[i\\]
        == &amp;quot;&amp;quot;) {\n   elves.push(calories);\n   calories = 0;\n   counter++;\n  }
        else {\n   calories += Number(data\\[i\\]);}}elves.push(calories);\n   Array.prototype.max
        = function() {\n    return Math.max.apply(null, this);\n   };\n  console.log(&amp;quot;The
        elf is carrying &amp;quot; + elves.max() + &amp;quot; total calories&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;p&gt;This code must be execute after the first part&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;max1
        = elves.max();\nelves = elves.filter(elf =&amp;gt; elf != elves.max());\nmax2
        = elves.max();\nelves = elves.filter(elf =&amp;gt; elf != elves.max());\nmax3
        = elves.max();\nelves = elves.filter(elf =&amp;gt; elf != elves.max());\n\nconsole.log(&amp;quot;The
        elves are carrying &amp;quot; + (max1+max2+max3) + &amp;quot; calories in
        total.&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izf3ctc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670520140.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izenxwn", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TimWasTakenWasTaken", "can_mod_post":
        false, "created_utc": 1670514070.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_1nog1ve2", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Rust**\n\n[Code](https://github.com/tsatke/aoc2022/blob/main/src/day1.rs)\n\nPart
        1 \\~24\u03bcs  \nPart 2 \\~24\u03bcs", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_izenxwn", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tsatke/aoc2022/blob/main/src/day1.rs\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1 ~24\u03bcs&lt;br/&gt;\nPart 2 ~24\u03bcs&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izenxwn/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670514070.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izd1aae", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "arthurno1", "can_mod_post": false, "created_utc":
        1670475768.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_13zo3p", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Emacs Lisp: \n\n      (with-temp-buffer\n        (insert-file-contents-literally
        \"./input\")\n        (let (supplies)\n          (while (not (eobp))\n            (let
        ((sum 0))\n              (while (and (char-after) (/= ?\\n (char-after)))\n                (cl-incf
        sum (read (current-buffer)))\n                (forward-line))\n              (push
        sum supplies))\n            (forward-line))\n          (setq supplies (cl-sort
        supplies #''&gt;))\n          (message \"Part I: %s\\nPart II: %s\" (car supplies)
        (apply #''+ (last (nreverse supplies) 3)))))", "edited": 1671259100.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_izd1aae", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Emacs Lisp: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  (with-temp-buffer\n    (insert-file-contents-literally
        &amp;quot;./input&amp;quot;)\n    (let (supplies)\n      (while (not (eobp))\n        (let
        ((sum 0))\n          (while (and (char-after) (/= ?\\n (char-after)))\n            (cl-incf
        sum (read (current-buffer)))\n            (forward-line))\n          (push
        sum supplies))\n        (forward-line))\n      (setq supplies (cl-sort supplies
        #&amp;#39;&amp;gt;))\n      (message &amp;quot;Part I: %s\\nPart II: %s&amp;quot;
        (car supplies) (apply #&amp;#39;+ (last (nreverse supplies) 3)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izd1aae/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670475768.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izbqrah", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "gwpmad", "can_mod_post": false, "created_utc":
        1670454032.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_h9wu87rg", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Trying out Rust for this year''s AoC. I am
        100% new to the language, total unknown unknown, so my solutions will be bad
        and take ages, which is why I''ve only just finished day 1 :)\n\n[https://github.com/gwpmad/advent-of-code-2022/blob/main/src/days/day1.rs](https://github.com/gwpmad/advent-of-code-2022/blob/main/src/days/day1.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_izbqrah", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Trying
        out Rust for this year&amp;#39;s AoC. I am 100% new to the language, total
        unknown unknown, so my solutions will be bad and take ages, which is why I&amp;#39;ve
        only just finished day 1 :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gwpmad/advent-of-code-2022/blob/main/src/days/day1.rs\"&gt;https://github.com/gwpmad/advent-of-code-2022/blob/main/src/days/day1.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izbqrah/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670454032.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "izkpt9e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tsenart",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_izkbsyv", "score":
        2, "author_fullname": "t2_3lhd1", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Thanks for spotting that.
        It happened to work on the real input most likely because the last line wasn''t
        part of the top3.\n\nEDIT: Fixed the bug.", "edited": 1670618371.0, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_izkpt9e", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for spotting
        that. It happened to work on the real input most likely because the last line
        wasn&amp;#39;t part of the top3.&lt;/p&gt;\n\n&lt;p&gt;EDIT: Fixed the bug.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izkpt9e/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670618081.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670618081.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izkbsyv", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "remfu", "can_mod_post": false, "created_utc":
        1670612491.0, "send_replies": true, "parent_id": "t1_izboj0i", "score": 1,
        "author_fullname": "t2_s5v65", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Your code is not working ;)\n\nfor
        the last iteration of your scanner, if your input is not ending with a double
        \\\\n, you won''t store le last calories.\n\ntry with the exemple data\n\n    1000\n    2000
        \n    3000\n    \n    4000\n    \n    5000\n    6000\n    \n    7000 \n    8000\n    9000\n    \n    10000\n\nWithout
        empty last line.  \n\n\nyou''ll find 41000 for the second part", "edited":
        1670613188.0, "top_awarded_type": null, "author_flair_css_class": null, "name":
        "t1_izkbsyv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your
        code is not working ;)&lt;/p&gt;\n\n&lt;p&gt;for the last iteration of your
        scanner, if your input is not ending with a double \\n, you won&amp;#39;t
        store le last calories.&lt;/p&gt;\n\n&lt;p&gt;try with the exemple data&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;1000\n2000
        \n3000\n\n4000\n\n5000\n6000\n\n7000 \n8000\n9000\n\n10000\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Without
        empty last line.  &lt;/p&gt;\n\n&lt;p&gt;you&amp;#39;ll find 41000 for the
        second part&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izkbsyv/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670612491.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "izboj0i", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tsenart",
        "can_mod_post": false, "created_utc": 1670453106.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3lhd1", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Go
        solution that avoids sorting at the end by keeping a top3 rank as it parses
        the input.  \n\n\nhttps://github.com/tsenart/advent/blob/master/2022/1/main.go",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_izboj0i", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go
        solution that avoids sorting at the end by keeping a top3 rank as it parses
        the input.  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/tsenart/advent/blob/master/2022/1/main.go\"&gt;https://github.com/tsenart/advent/blob/master/2022/1/main.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izboj0i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670453106.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izalsls", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "greycat70", "can_mod_post": false, "created_utc":
        1670437657.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_il9cr", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I''m doing Python this year.  It''s a language
        I''m newly learning, so my solutions may be clunky and awkward.  Today''s
        lesson was learning how to read a file line by line.  And also that vi(m)''s
        autoindent is totally unsuited to Python indentation requirements unless I
        use tabs exclusively, no spaces.\n\n[Part 1](https://wooledge.org/~greg/advent/2022/1a),
        [Part 2](https://wooledge.org/~greg/advent/2022/1b)", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_izalsls", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m doing Python this
        year.  It&amp;#39;s a language I&amp;#39;m newly learning, so my solutions
        may be clunky and awkward.  Today&amp;#39;s lesson was learning how to read
        a file line by line.  And also that vi(m)&amp;#39;s autoindent is totally
        unsuited to Python indentation requirements unless I use tabs exclusively,
        no spaces.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://wooledge.org/%7Egreg/advent/2022/1a\"&gt;Part
        1&lt;/a&gt;, &lt;a href=\"https://wooledge.org/%7Egreg/advent/2022/1b\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izalsls/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670437657.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iz99jyv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "YokiDiabeu",
        "can_mod_post": false, "created_utc": 1670416683.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_8sy3uc0n", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Java
        17:\n\n[Day1](https://gitlab.com/Diabeul/adventofcode2021/-/blob/master/src/main/java/com/yoki/advent_of_code/aoc/days2022/Day1.java)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz99jyv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java
        17:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gitlab.com/Diabeul/adventofcode2021/-/blob/master/src/main/java/com/yoki/advent_of_code/aoc/days2022/Day1.java\"&gt;Day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz99jyv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670416683.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz8wmag", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ramrunner0xff", "can_mod_post": false,
        "created_utc": 1670406454.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_n66l8ma", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Missed you advent
        of code friends!!! :) late to the party. This year the goal is to do all the
        work from plan9. mostly using plan9 C and checking out the facilities.  \nstrtok
        wouldn''t deal nicely with the double separator so i ended up implementing
        my own (readall1). little i know that plan9 libc had the perfect function
        for the job (found it today on d4).  \n\n\nC (plan9):  \n[day1](https://git.sr.ht/~gotplt/aoc/tree/master/item/2022/d1.c)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz8wmag", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Missed
        you advent of code friends!!! :) late to the party. This year the goal is
        to do all the work from plan9. mostly using plan9 C and checking out the facilities.&lt;br/&gt;\nstrtok
        wouldn&amp;#39;t deal nicely with the double separator so i ended up implementing
        my own (readall1). little i know that plan9 libc had the perfect function
        for the job (found it today on d4).  &lt;/p&gt;\n\n&lt;p&gt;C (plan9):&lt;br/&gt;\n&lt;a
        href=\"https://git.sr.ht/%7Egotplt/aoc/tree/master/item/2022/d1.c\"&gt;day1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz8wmag/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670406454.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz8qrfb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "kitsune-chan88", "can_mod_post": false,
        "created_utc": 1670401144.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_5hgtqdn6", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Hello all, I''m just
        super proud of myself that I was even able to do it! (newbie here!)\n\nPython
        3:\n\n[Part 1](https://github.com/NekoBarista/AdventofCode2022-Day1-Part1-/blob/main/main.py)  \n[Part
        2](https://github.com/NekoBarista/AdventofCode_Day1_part2/blob/main/main.py)",
        "edited": 1670401853.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iz8qrfb", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hello
        all, I&amp;#39;m just super proud of myself that I was even able to do it!
        (newbie here!)&lt;/p&gt;\n\n&lt;p&gt;Python 3:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/NekoBarista/AdventofCode2022-Day1-Part1-/blob/main/main.py\"&gt;Part
        1&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://github.com/NekoBarista/AdventofCode_Day1_part2/blob/main/main.py\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz8qrfb/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670401144.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iz83bir",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "junefish",
        "can_mod_post": false, "created_utc": 1670385427.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_82x07", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Python
        3\n\n* [Part 1](https://raw.githubusercontent.com/junefish/adventofcode/main/adventofcode2022/day1/day1problem1.py)\n*
        [Part 2](https://raw.githubusercontent.com/junefish/adventofcode/main/adventofcode2022/day1/day1problem2.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz83bir", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://raw.githubusercontent.com/junefish/adventofcode/main/adventofcode2022/day1/day1problem1.py\"&gt;Part
        1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://raw.githubusercontent.com/junefish/adventofcode/main/adventofcode2022/day1/day1problem2.py\"&gt;Part
        2&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz83bir/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670385427.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iz6my5z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Python 3**\n- [Part 1](https://github.com/hyper-neutrino/advent-of-code/blob/main/2022/day01p1.py)\n-
        [Part 2](https://github.com/hyper-neutrino/advent-of-code/blob/main/2022/day01p2.py)\n-
        [Walk-Through Video](https://www.youtube.com/watch?v=GGI_gW3egok)", "edited":
        false, "downs": 0, "author_flair_css_class": null, "collapsed": false, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        3&lt;/strong&gt;\n- &lt;a href=\"https://github.com/hyper-neutrino/advent-of-code/blob/main/2022/day01p1.py\"&gt;Part
        1&lt;/a&gt;\n- &lt;a href=\"https://github.com/hyper-neutrino/advent-of-code/blob/main/2022/day01p2.py\"&gt;Part
        2&lt;/a&gt;\n- &lt;a href=\"https://www.youtube.com/watch?v=GGI_gW3egok\"&gt;Walk-Through
        Video&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz6my5z/",
        "num_reports": null, "locked": false, "name": "t1_iz6my5z", "created": 1670362072.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670362072.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz6fecy", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "nicuveo", "can_mod_post": false, "created_utc":
        1670359169.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_58521", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Brainf\\*ck**\n\nUsing a custom transpiler.\n\n*
        See [this post](https://www.reddit.com/r/adventofcode/comments/ze9lq9/2022_day_1brainfck_because_why_not/)
        for more information\n* [part 1](https://github.com/nicuveo/advent-of-code/blob/main/2022/brainfuck/01-A.bf)
        on github\n* [part 2](https://github.com/nicuveo/advent-of-code/blob/main/2022/brainfuck/01-B.bf)
        on github", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iz6fecy", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Brainf*ck&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Using
        a custom transpiler.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;See &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/ze9lq9/2022_day_1brainfck_because_why_not/\"&gt;this
        post&lt;/a&gt; for more information&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/nicuveo/advent-of-code/blob/main/2022/brainfuck/01-A.bf\"&gt;part
        1&lt;/a&gt; on github&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/nicuveo/advent-of-code/blob/main/2022/brainfuck/01-B.bf\"&gt;part
        2&lt;/a&gt; on github&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz6fecy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670359169.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz68n07", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "hariharan1990s", "can_mod_post": false,
        "created_utc": 1670356598.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_1v30d62w", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**C# Solution**, [repo
        link](https://github.com/hariharansubramanian/AdventOfCode-Day1-ElvesCalorieCounting/blob/master/Program.cs)\n\n    Console.WriteLine(\"Counting
        calories...\");\n    \n    var calorieEntries = File.ReadLines(\"calorie_list.txt\").ToList();\n    \n    var
        elvesCalorieCountList = new List&lt;long&gt;();\n    \n    long elfCalorieCount
        = 0;\n    foreach (var calorieEntry in calorieEntries)\n        if (calorieEntry
        != \"\")\n        {\n            elfCalorieCount += long.Parse(calorieEntry);\n        }\n        else\n        {\n            elvesCalorieCountList.Add(elfCalorieCount);\n            elfCalorieCount
        = 0;\n        }\n    \n    var elvesCalorieCountListSorted = elvesCalorieCountList.OrderByDescending(x
        =&gt; x).ToList();\n    var top3Calories = elvesCalorieCountListSorted.Take(3).ToList();\n    var
        top3CalorieCount = top3Calories.Sum(x =&gt; x);\n    \n    Console.WriteLine($\"The
        top 3 calories counted are {string.Join('','', top3Calories.Select(x =&gt;
        x))}\");\n    Console.WriteLine($\"The total calories counted are {top3CalorieCount}\");",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz68n07", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#
        Solution&lt;/strong&gt;, &lt;a href=\"https://github.com/hariharansubramanian/AdventOfCode-Day1-ElvesCalorieCounting/blob/master/Program.cs\"&gt;repo
        link&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Console.WriteLine(&amp;quot;Counting
        calories...&amp;quot;);\n\nvar calorieEntries = File.ReadLines(&amp;quot;calorie_list.txt&amp;quot;).ToList();\n\nvar
        elvesCalorieCountList = new List&amp;lt;long&amp;gt;();\n\nlong elfCalorieCount
        = 0;\nforeach (var calorieEntry in calorieEntries)\n    if (calorieEntry !=
        &amp;quot;&amp;quot;)\n    {\n        elfCalorieCount += long.Parse(calorieEntry);\n    }\n    else\n    {\n        elvesCalorieCountList.Add(elfCalorieCount);\n        elfCalorieCount
        = 0;\n    }\n\nvar elvesCalorieCountListSorted = elvesCalorieCountList.OrderByDescending(x
        =&amp;gt; x).ToList();\nvar top3Calories = elvesCalorieCountListSorted.Take(3).ToList();\nvar
        top3CalorieCount = top3Calories.Sum(x =&amp;gt; x);\n\nConsole.WriteLine($&amp;quot;The
        top 3 calories counted are {string.Join(&amp;#39;,&amp;#39;, top3Calories.Select(x
        =&amp;gt; x))}&amp;quot;);\nConsole.WriteLine($&amp;quot;The total calories
        counted are {top3CalorieCount}&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz68n07/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670356598.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz5vwls", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Catbert321", "can_mod_post": false, "created_utc":
        1670351703.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_31pi0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Kotlin [Day 01](https://github.com/peckb1/advent-of-code/tree/main/src/main/kotlin/me/peckb/aoc/_2022/calendar/day01)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz5vwls", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin
        &lt;a href=\"https://github.com/peckb1/advent-of-code/tree/main/src/main/kotlin/me/peckb/aoc/_2022/calendar/day01\"&gt;Day
        01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz5vwls/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670351703.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iz5p6nx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "adidushi",
        "can_mod_post": false, "created_utc": 1670349165.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_7k06c", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "This
        year I''m going to do as much as possible with [scratch](https://scratch.mit.edu/):\n\n[Part
        1](https://scratch.mit.edu/projects/772056207/)\n\n[Part 2](https://scratch.mit.edu/projects/772045737/)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz5p6nx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        year I&amp;#39;m going to do as much as possible with &lt;a href=\"https://scratch.mit.edu/\"&gt;scratch&lt;/a&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://scratch.mit.edu/projects/772056207/\"&gt;Part 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://scratch.mit.edu/projects/772045737/\"&gt;Part 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz5p6nx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670349165.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz84nnq", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670386120.0, "send_replies": true, "parent_id": "t1_iz4l9bz",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "FYI: your link is borked
        on old.reddit and some mobile Reddit apps.  [Please fix it](https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links).",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz84nnq", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FYI:
        your link is borked on old.reddit and some mobile Reddit apps.  &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links\"&gt;Please
        fix it&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz84nnq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670386120.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iz4l9bz", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_z9ezjb", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "PHP - https://github.com/onei2l/adventofcode\\_php/blob/master/01/index.php",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP
        - &lt;a href=\"https://github.com/onei2l/adventofcode%5C_php/blob/master/01/index.php\"&gt;https://github.com/onei2l/adventofcode\\_php/blob/master/01/index.php&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz4l9bz/",
        "num_reports": null, "locked": false, "name": "t1_iz4l9bz", "created": 1670331764.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670331764.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz4261r", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "gbegerow", "can_mod_post": false, "created_utc":
        1670316515.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_he6ie", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Rust [2022 01](https://github.com/gbegerow/advent-of-code/blob/main/aoc_2022_01/src/lib.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz4261r", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust
        &lt;a href=\"https://github.com/gbegerow/advent-of-code/blob/main/aoc_2022_01/src/lib.rs\"&gt;2022
        01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz4261r/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670316515.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iz3wqca",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bigmagnus",
        "can_mod_post": false, "created_utc": 1670311721.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3nszy", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "**COBOL**
        \\- [Part 1](https://github.com/ironllama/adventofcode2022/blob/master/01a.cbl)
        &amp; [Part 2](https://github.com/ironllama/adventofcode2022/blob/master/01b.cbl)\n\nJust
        started learning COBOL last week. Any constructive criticism is welcome!",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz3wqca", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;COBOL&lt;/strong&gt;
        - &lt;a href=\"https://github.com/ironllama/adventofcode2022/blob/master/01a.cbl\"&gt;Part
        1&lt;/a&gt; &amp;amp; &lt;a href=\"https://github.com/ironllama/adventofcode2022/blob/master/01b.cbl\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Just started learning COBOL last week. Any
        constructive criticism is welcome!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz3wqca/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670311721.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz3otu3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Magister-", "can_mod_post": false, "created_utc":
        1670305768.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_df9t8", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Day 01 2022 - [Python 3](https://github.com/mer-sublime/advent-of-code/tree/master/2022/01)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz3otu3", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        01 2022 - &lt;a href=\"https://github.com/mer-sublime/advent-of-code/tree/master/2022/01\"&gt;Python
        3&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz3otu3/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670305768.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 2, "removal_reason": null, "link_id": "t3_z9ezjb",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "iz2igmb", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        true, "author": "[deleted]", "can_mod_post": false, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Teaching myself
        Rust this year:\n\n[Part 1](https://topaz.github.io/paste/#XQAAAQBtAwAAAAAAAAA6nMjJFMpQiatS1vawr3e1FeSX4+v3qommQ59SPV5uXEGM+1Dq5S9rXrsydP/alcY4ePFJk9jiyd8nCZZJ6qGrx4jhM56JVaSoJFPzHlS58fvTYJiSiEhIhk4FquP3OONUVjVM2jGOtfgj6lqALI9phJd1J3Cj7xhAoJ2/TtgigtXzpnNn8vFo3JwF5JYBRF2a+Dcc4cnO9DDiQeHdAftBNhKlmEWftPUeUwyzmRoFR0yiLgxim8dqS5UzvfiPtzDM54URTd9wn7S9tT2hDYpEulpFISCbJ/xekjznaVtXtxSld27hzhDyzSYEl8+gaCvTv5a4/YaiMTXUB4YyB4TmYqQUDqqVf8ZgfIM9VPcBBqFCwNq0+gOEACnBEj/x2JIdq4BwnU97ZXa4gHr0v4+ILvJaNhGJkTIhmXiw0q5Lu2+jkaeDcO+fJawrQcLWEEej+OrkFOLJBcq8BzfpRtkuOU4suLknCfafsHPBZ3/f/K8AWFvR8YuM+PlBxTcNsF5tUn0wU4rrMbugPU2nFoJDflX8DqtIa5BcqRQt+o8UjG/81whW+Hb2EYVjF+R6xkUzA0+QqvdyepRLp6CBH0GMQD1+1C3/gfG8AA==)\n\n[Part
        2](https://topaz.github.io/paste/#XQAAAQAABAAAAAAAAAA6nMjJFMpQiatS1vawr3e1FeSX4+v3qommQ59SPV5uXEGM+1Dq5S9rXrsydP/alcY4ePFJk9jiyd8nCZZJ6qGrx4jhM56JVaSoJFPzHlS58fvTYJiSiEhIhk4FquP3OONUVjVM2jGOtfgj6lqALI9phJd1J3Cj7xhAoJ2/TtgigtXzpnNn8vFo3JwF5JYBRF2a+Dcc4cnO9DDiQeHdAftBNhKlmEWftPUeUwyzmRoFR0yiLgxim8dqS5UzvfiPtzDM54URTd9wn7S9tT2hDYpEulpFISCbJ/xekjznaVtXtxSld27hzhDyzSYEl8+gaCvTv5a4/YaiMTXUB4YyB4TmYqQUDqqVf8ZgfIM9VPcBBqFCwNq0+gOEACnBEj/x2JIdq4BwnU97ZXa4gHr0v4+ILvJaNhGJkTIhmXiw0q5Lu2+jkaeDcO+fJawrQcLWEEej+OrkFOLJBcq8BzfpRtkuOU4suLknCfafsHPBZ3/f/K8AWFvR8YuM+PlBxTcN5kSrq3UtI1EpbroOdJGV/e58xh0lQlwv7eMAWievB5PBUTrzxfG5OPBq2hZ+oKk2ghPgM9CS83VKL+Kix0nVnHIsuoHb7NJ4HlNaJCEpaU5ezSKAA9GgQ//+iYG/0PqDvE+4T/yn2Qw=)",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Teaching
        myself Rust this year:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBtAwAAAAAAAAA6nMjJFMpQiatS1vawr3e1FeSX4+v3qommQ59SPV5uXEGM+1Dq5S9rXrsydP/alcY4ePFJk9jiyd8nCZZJ6qGrx4jhM56JVaSoJFPzHlS58fvTYJiSiEhIhk4FquP3OONUVjVM2jGOtfgj6lqALI9phJd1J3Cj7xhAoJ2/TtgigtXzpnNn8vFo3JwF5JYBRF2a+Dcc4cnO9DDiQeHdAftBNhKlmEWftPUeUwyzmRoFR0yiLgxim8dqS5UzvfiPtzDM54URTd9wn7S9tT2hDYpEulpFISCbJ/xekjznaVtXtxSld27hzhDyzSYEl8+gaCvTv5a4/YaiMTXUB4YyB4TmYqQUDqqVf8ZgfIM9VPcBBqFCwNq0+gOEACnBEj/x2JIdq4BwnU97ZXa4gHr0v4+ILvJaNhGJkTIhmXiw0q5Lu2+jkaeDcO+fJawrQcLWEEej+OrkFOLJBcq8BzfpRtkuOU4suLknCfafsHPBZ3/f/K8AWFvR8YuM+PlBxTcNsF5tUn0wU4rrMbugPU2nFoJDflX8DqtIa5BcqRQt+o8UjG/81whW+Hb2EYVjF+R6xkUzA0+QqvdyepRLp6CBH0GMQD1+1C3/gfG8AA==\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAABAAAAAAAAAA6nMjJFMpQiatS1vawr3e1FeSX4+v3qommQ59SPV5uXEGM+1Dq5S9rXrsydP/alcY4ePFJk9jiyd8nCZZJ6qGrx4jhM56JVaSoJFPzHlS58fvTYJiSiEhIhk4FquP3OONUVjVM2jGOtfgj6lqALI9phJd1J3Cj7xhAoJ2/TtgigtXzpnNn8vFo3JwF5JYBRF2a+Dcc4cnO9DDiQeHdAftBNhKlmEWftPUeUwyzmRoFR0yiLgxim8dqS5UzvfiPtzDM54URTd9wn7S9tT2hDYpEulpFISCbJ/xekjznaVtXtxSld27hzhDyzSYEl8+gaCvTv5a4/YaiMTXUB4YyB4TmYqQUDqqVf8ZgfIM9VPcBBqFCwNq0+gOEACnBEj/x2JIdq4BwnU97ZXa4gHr0v4+ILvJaNhGJkTIhmXiw0q5Lu2+jkaeDcO+fJawrQcLWEEej+OrkFOLJBcq8BzfpRtkuOU4suLknCfafsHPBZ3/f/K8AWFvR8YuM+PlBxTcN5kSrq3UtI1EpbroOdJGV/e58xh0lQlwv7eMAWievB5PBUTrzxfG5OPBq2hZ+oKk2ghPgM9CS83VKL+Kix0nVnHIsuoHb7NJ4HlNaJCEpaU5ezSKAA9GgQ//+iYG/0PqDvE+4T/yn2Qw=\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz2igmb/",
        "num_reports": null, "locked": false, "name": "t1_iz2igmb", "created": 1670284753.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670284753.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz29nz4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "nicole3696", "can_mod_post": false, "created_utc":
        1670280912.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_10xsoq", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python 3- Parts 1 &amp; 2: [GitHub](https://github.com/nicoleserafino/adventofcode2022/blob/master/day01/day01.py).
        No imports, 190 characters, 2 lines.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iz29nz4", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3- Parts 1 &amp;amp;
        2: &lt;a href=\"https://github.com/nicoleserafino/adventofcode2022/blob/master/day01/day01.py\"&gt;GitHub&lt;/a&gt;.
        No imports, 190 characters, 2 lines.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz29nz4/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670280912.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz1lgv5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ilyablue", "can_mod_post": false, "created_utc":
        1670271206.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_4j8qaens", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Excel:**\n\n[https://github.com/ilyablue/advent-of-code/tree/main/day%201](https://github.com/ilyablue/advent-of-code/tree/main/day%201)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iz1lgv5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Excel:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ilyablue/advent-of-code/tree/main/day%201\"&gt;https://github.com/ilyablue/advent-of-code/tree/main/day%201&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz1lgv5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670271206.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz0o8pb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "AffectionateNet6417", "can_mod_post":
        false, "created_utc": 1670258403.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_q31kufkp", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Suggestions welcome!\n\nELISP\n\n    (let
        ((lis (sort (mapcar (lambda (x) (cl-reduce ''+ x)) aoc-input) ''&gt;)))\n      (car
        lis)\n      (+ (cadr lis)\n         (car lis)\n         (caddr lis)))", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iz0o8pb",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Suggestions welcome!&lt;/p&gt;\n\n&lt;p&gt;ELISP&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(let
        ((lis (sort (mapcar (lambda (x) (cl-reduce &amp;#39;+ x)) aoc-input) &amp;#39;&amp;gt;)))\n  (car
        lis)\n  (+ (cadr lis)\n     (car lis)\n     (caddr lis)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz0o8pb/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670258403.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "distinguished":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "distinguished": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "distinguished": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "distinguished":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "izlfb4c", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rubensoon", "can_mod_post": false, "created_utc":
        1670628459.0, "send_replies": true, "parent_id": "t1_izl8h4j", "score": 1,
        "author_fullname": "t2_13nn2i", "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": ":P nah nah credits you.\n\nJust wanted to say that vscode has
        debugging tools as well. I''m surprised Microsoft did a great job with this
        software, given that they always mess up their stuff xD", "edited": false,
        "gildings": {}, "downs": 0, "author_flair_css_class": null, "name": "t1_izlfb4c",
        "is_submitter": false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;:P nah nah credits you.&lt;/p&gt;\n\n&lt;p&gt;Just
        wanted to say that vscode has debugging tools as well. I&amp;#39;m surprised
        Microsoft did a great job with this software, given that they always mess
        up their stuff xD&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izlfb4c/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670628459.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 8, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "izl8h4j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Warm_Conflict_7938",
        "can_mod_post": false, "created_utc": 1670625520.0, "send_replies": true,
        "parent_id": "t1_izj2rkj", "score": 1, "author_fullname": "t2_82f62otf", "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Thanks mate, curious
        way!\nI program on console because i can debug while i program it, that means
        im not good enough tbh xD but thanks!!", "edited": false, "gildings": {},
        "author_flair_css_class": null, "name": "t1_izl8h4j", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks mate, curious way!\nI program on
        console because i can debug while i program it, that means im not good enough
        tbh xD but thanks!!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "link_id": "t3_z9ezjb", "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izl8h4j/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670625520.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 7, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "izj2rkj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rubensoon",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_izi866h", "score":
        1, "author_fullname": "t2_13nn2i", "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "Well,  just simply select
        all data (ctrl+a) copy paste to a txt file, and bring it to my current js
        file  with\n\nconst fs = require(\"fs\");\r  \nconst input= fs.readFileSync(\"./input.txt\",
        \"utf-8\");\n\nor i just copy paste it directly into my js file by assigning
        it to a constant and then in VS Code I can shrink/contract/hide sections,
        so i do it and it becomes hidden in a 2 line code \ud83d\udc4d\ud83d\ude01\n\n\\-
        - - - - - \n\nif you program only in the explorer''s console then that means
        you are pro \ud83d\ude0e! \ud83d\udc4f haha vscode helps me xD", "edited":
        false, "gildings": {}, "author_flair_css_class": null, "name": "t1_izj2rkj",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well,  just simply select
        all data (ctrl+a) copy paste to a txt file, and bring it to my current js
        file  with&lt;/p&gt;\n\n&lt;p&gt;const fs = require(&amp;quot;fs&amp;quot;);&lt;/p&gt;\n\n&lt;p&gt;const
        input= fs.readFileSync(&amp;quot;./input.txt&amp;quot;, &amp;quot;utf-8&amp;quot;);&lt;/p&gt;\n\n&lt;p&gt;or
        i just copy paste it directly into my js file by assigning it to a constant
        and then in VS Code I can shrink/contract/hide sections, so i do it and it
        becomes hidden in a 2 line code \ud83d\udc4d\ud83d\ude01&lt;/p&gt;\n\n&lt;p&gt;-
        - - - - - &lt;/p&gt;\n\n&lt;p&gt;if you program only in the explorer&amp;#39;s
        console then that means you are pro \ud83d\ude0e! \ud83d\udc4f haha vscode
        helps me xD&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "link_id": "t3_z9ezjb", "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izj2rkj/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670594674.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1670594674.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        6, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izi866h", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Warm_Conflict_7938", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_izhrft8", "score": 1, "author_fullname":
        "t2_82f62otf", "approved_by": null, "mod_note": null, "all_awardings": [],
        "body": "Yes there is a way, but you need to execute it in a server with a
        library i think.\n\nI usually program on the console while i debug so yeah
        for me is better this way.\nHow did you get the data? Im so curious", "edited":
        false, "gildings": {}, "downs": 0, "author_flair_css_class": null, "name":
        "t1_izi866h", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes
        there is a way, but you need to execute it in a server with a library i think.&lt;/p&gt;\n\n&lt;p&gt;I
        usually program on the console while i debug so yeah for me is better this
        way.\nHow did you get the data? Im so curious&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "link_id": "t3_z9ezjb", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izi866h/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670573128.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670573128.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 5, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izhrft8", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rubensoon", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_izggy6y", "score": 2, "author_fullname": "t2_13nn2i",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Your code is pretty clean and short! \ud83d\udc4f I''mma give
        it a slow inspection and try to learn form it hehe , thanks!  \nYeah, i saw
        you are getting the input from the html \ud83d\ude02. I would have never thought
        of that either \ud83d\ude02 I''m sure there must be a way to import from one
        file to another, like using vscode or something.... cheers!!!!!", "edited":
        false, "author_flair_css_class": null, "name": "t1_izhrft8", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your code is pretty clean and
        short! \ud83d\udc4f I&amp;#39;mma give it a slow inspection and try to learn
        form it hehe , thanks!&lt;br/&gt;\nYeah, i saw you are getting the input from
        the html \ud83d\ude02. I would have never thought of that either \ud83d\ude02
        I&amp;#39;m sure there must be a way to import from one file to another, like
        using vscode or something.... cheers!!!!!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "link_id": "t3_z9ezjb", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": null, "treatment_tags":
        [], "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izhrft8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670561523.0, "author_flair_text": null, "collapsed": false, "created_utc":
        1670561523.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 4, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izggy6y", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Warm_Conflict_7938", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_izeln8c", "score": 2, "author_fullname":
        "t2_82f62otf", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "Here is my code btw, i think
        is pretty efficient forn js, but a bit tricky in the way you get the data
        xD...  \nhttps://prnt.sc/33oVtqqU76WV  \n\n\n`const data = document.getElementById(\"test\").innerHTML;`\n\n`let
        highestCalorieCount = (input) =&gt; {`\n\n`const inputValueList = input.split(\"\\n\");`\n\n`let
        highestCalorie = 0;`\n\n`let groupCalorieCount = 0;`\n\n`for(let i = 0; i
        &lt; inputValueList.length; i++){`\n\n`let value = inputValueList[i];`\n\n`if(value)
        {`\n\n`groupCalorieCount += parseInt(value);`\n\n`} else {`\n\n`highestCalorie
        = highestCalorie &lt; groupCalorieCount ? groupCalorieCount : highestCalorie;`\n\n`groupCalorieCount
        = 0;`\n\n`}`\n\n`}`\n\n`return highestCalorie;`\n\n`}`\n\n`let highestCalorie
        = highestCalorieCount (data);`", "edited": 1670539852.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_izggy6y", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is my code btw, i think
        is pretty efficient forn js, but a bit tricky in the way you get the data
        xD...&lt;br/&gt;\n&lt;a href=\"https://prnt.sc/33oVtqqU76WV\"&gt;https://prnt.sc/33oVtqqU76WV&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const
        data = document.getElementById(&amp;quot;test&amp;quot;).innerHTML;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;let
        highestCalorieCount = (input) =&amp;gt; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const
        inputValueList = input.split(&amp;quot;\\n&amp;quot;);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;let
        highestCalorie = 0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;let groupCalorieCount
        = 0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for(let i = 0; i &amp;lt;
        inputValueList.length; i++){&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;let
        value = inputValueList[i];&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if(value)
        {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;groupCalorieCount += parseInt(value);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}
        else {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;highestCalorie = highestCalorie
        &amp;lt; groupCalorieCount ? groupCalorieCount : highestCalorie;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;groupCalorieCount
        = 0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return
        highestCalorie;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;let
        highestCalorie = highestCalorieCount (data);&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izggy6y/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670539666.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670539666.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izeln8c", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rubensoon", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_izej5kn", "score": 1, "author_fullname": "t2_13nn2i",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "You are so very right, this never even passed in my mind. Thank
        you lots!\n\nupdate:  hehe implemented your suggestion, thank you again!",
        "edited": 1670513798.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_izeln8c", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You
        are so very right, this never even passed in my mind. Thank you lots!&lt;/p&gt;\n\n&lt;p&gt;update:  hehe
        implemented your suggestion, thank you again!&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izeln8c/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670513127.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670513127.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izej5kn", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Warm_Conflict_7938", "can_mod_post": false,
        "created_utc": 1670512101.0, "send_replies": true, "parent_id": "t1_iz0gk24",
        "score": 2, "author_fullname": "t2_82f62otf", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "I created a similar
        code, there is a bug in your code in the function createSmallArrays, the last
        item of all the group of numbers won''t be added, \n\n&amp;#x200B;\n\nspoiler:
        you need to add in the if(array\\[i\\] === \"\" || lasItemArray) -&gt; do\n\n&amp;#x200B;\n\nwhy?
        because the last group of numbers won''t have the \"\" in the split(\\\\n)  you
        can try with few numbers for example -&gt; \n\n''11334\\\\n6264\\\\n9318\\\\n\\\\n1209\\\\n4404\\\\n3988\\\\n5816\\\\n3890\\\\n4990\\\\n2796\\\\n4199\\\\n5439\\\\n4249\\\\n2938\\\\n1120\\\\n2612''
        and you will only sum the first group\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nAlso
        i figure out in the createSmallArrays you can put the logic and avoid the
        iterations that come after (watermelon).\n\n&amp;#x200B;\n\nBut keep going
        mate", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_izej5kn", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        created a similar code, there is a bug in your code in the function createSmallArrays,
        the last item of all the group of numbers won&amp;#39;t be added, &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;spoiler:
        you need to add in the if(array[i] === &amp;quot;&amp;quot; || lasItemArray)
        -&amp;gt; do&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;why?
        because the last group of numbers won&amp;#39;t have the &amp;quot;&amp;quot;
        in the split(\\n)  you can try with few numbers for example -&amp;gt; &lt;/p&gt;\n\n&lt;p&gt;&amp;#39;11334\\n6264\\n9318\\n\\n1209\\n4404\\n3988\\n5816\\n3890\\n4990\\n2796\\n4199\\n5439\\n4249\\n2938\\n1120\\n2612&amp;#39;
        and you will only sum the first group&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Also
        i figure out in the createSmallArrays you can put the logic and avoid the
        iterations that come after (watermelon).&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;But
        keep going mate&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izej5kn/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670512101.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 1, "removal_reason": null, "link_id": "t3_z9ezjb",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "awarders": [], "mod_reason_by": null, "banned_by": null, "ups": 2, "removal_reason":
        null, "link_id": "t3_z9ezjb", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "iz6753r", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iz63pwz", "score": 2, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Well done!
        Good luck with the rest of the challenges", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well
        done! Good luck with the rest of the challenges&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz6753r/",
        "num_reports": null, "locked": false, "name": "t1_iz6753r", "created": 1670356034.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670356034.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 3, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "iz63pwz", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rubensoon", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iz60su4", "score": 1, "author_fullname": "t2_13nn2i",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "haha \ud83d\ude02\ud83d\ude02 i was just testing and it worked
        and i left it like that haha, i''m a begginer", "edited": false, "top_awarded_type":
        null, "downs": 0, "author_flair_css_class": null, "name": "t1_iz63pwz", "is_submitter":
        false, "collapsed": false, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;haha \ud83d\ude02\ud83d\ude02
        i was just testing and it worked and i left it like that haha, i&amp;#39;m
        a begginer&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason": null,
        "author_flair_text_color": null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz63pwz/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670354724.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670354724.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iz60su4", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iz0gk24", "score": 1, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "you have serious
        trouble figuring out names for variables lol", "edited": false, "author_flair_css_class":
        null, "collapsed": false, "downs": 0, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;you have serious trouble figuring out names
        for variables lol&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz60su4/",
        "num_reports": null, "locked": false, "name": "t1_iz60su4", "created": 1670353578.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670353578.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iz2ptyk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rubensoon",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iz2n4lc", "score":
        1, "author_fullname": "t2_13nn2i", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Fixed it, thank you!",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_iz2ptyk", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fixed
        it, thank you!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz2ptyk/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670288074.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1670288074.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iz2p1tr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rubensoon", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iz2n4lc", "score": 1, "author_fullname": "t2_13nn2i",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "thank you!", "edited": false, "top_awarded_type": null, "downs":
        0, "author_flair_css_class": null, "name": "t1_iz2p1tr", "is_submitter": false,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thank you!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz2p1tr/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670287716.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670287716.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iz2n4lc", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670286847.0, "send_replies": true, "parent_id": "t1_iz0gk24",
        "score": 2, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "&gt; Update: I apoligize
        for the crazy comment formatting, Idk why it''s not working.\n\nRead the article
        in our community wiki how to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks).  Make
        sure your editor is in Markdown mode first!", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iz2n4lc", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Update:
        I apoligize for the crazy comment formatting, Idk why it&amp;#39;s not working.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Read
        the article in our community wiki how to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt;.  Make sure your editor is in Markdown mode first!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz2n4lc/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670286847.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iz0gk24", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "rubensoon", "can_mod_post": false, "created_utc":
        1670255284.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_13nn2i", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Update: I apoligize for the crazy comment
        formatting, Idk why it''s not working.\n\nHi, I''m a beginner, i didn''t know
        how to import the input file to my current js so i just had it copypasted
        and hidden on top. This is my take, on Javascript (there''s some spanish here
        and there):\n\n    let numeros = ***here go the numbers***\n    \n    let
        textToArray = numeros.split(\"\\n\");\n    \n    // console.log(textToArray);\n    \n    function
        createSmallArrays(array) { \n        const miniArray = []; \n        let temp
        = 0;\n        let lastItem = array.length - 1;\n        let lastItemArray
        = array[lastItem];\n    \n        for (let i = 0; i &lt; array.length; i++)
        {\n            if (array[i] !== \"\") {\n                let hola = parseInt(array[i]);\n                temp
        = hola + temp;\n            } \n            if (array[i] === \"\" || lastItemArray)
        {\n                miniArray.push(temp);\n                temp = 0;\n            }
        \n        }\n        return miniArray;\n    };\n    \n    // console.log(createSmallArrays(textToArray));\n    \n    const
        hello = createSmallArrays(textToArray);\n    \n    const watermelon = hello.sort(function(a,
        b) { \n        return b - a; \n    });\n    \n    //the greatest\n    \n    console.log(\"The
        greatest number is \" + watermelon[0]);\n    \n    //the 3 greatest\n    const
        sum = watermelon[0] + watermelon[1] + watermelon[2];\n    console.log(\"The
        sum of the 3 greatest is \" + sum);", "edited": 1670513740.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iz0gk24", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Update: I apoligize for the
        crazy comment formatting, Idk why it&amp;#39;s not working.&lt;/p&gt;\n\n&lt;p&gt;Hi,
        I&amp;#39;m a beginner, i didn&amp;#39;t know how to import the input file
        to my current js so i just had it copypasted and hidden on top. This is my
        take, on Javascript (there&amp;#39;s some spanish here and there):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        numeros = ***here go the numbers***\n\nlet textToArray = numeros.split(&amp;quot;\\n&amp;quot;);\n\n//
        console.log(textToArray);\n\nfunction createSmallArrays(array) { \n    const
        miniArray = []; \n    let temp = 0;\n    let lastItem = array.length - 1;\n    let
        lastItemArray = array[lastItem];\n\n    for (let i = 0; i &amp;lt; array.length;
        i++) {\n        if (array[i] !== &amp;quot;&amp;quot;) {\n            let
        hola = parseInt(array[i]);\n            temp = hola + temp;\n        } \n        if
        (array[i] === &amp;quot;&amp;quot; || lastItemArray) {\n            miniArray.push(temp);\n            temp
        = 0;\n        } \n    }\n    return miniArray;\n};\n\n// console.log(createSmallArrays(textToArray));\n\nconst
        hello = createSmallArrays(textToArray);\n\nconst watermelon = hello.sort(function(a,
        b) { \n    return b - a; \n});\n\n//the greatest\n\nconsole.log(&amp;quot;The
        greatest number is &amp;quot; + watermelon[0]);\n\n//the 3 greatest\nconst
        sum = watermelon[0] + watermelon[1] + watermelon[2];\nconsole.log(&amp;quot;The
        sum of the 3 greatest is &amp;quot; + sum);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz0gk24/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670255284.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyzv99w", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "horstg99", "can_mod_post": false, "created_utc":
        1670244740.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_dyxqqbtv", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solution in **Python** for **part** **1**
        and **2:**\n\n[https://github.com/tobstern/AoC2022/blob/master/day01.py](https://github.com/tobstern/AoC2022/blob/master/day01.py)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyzv99w", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution in &lt;strong&gt;Python&lt;/strong&gt; for &lt;strong&gt;part&lt;/strong&gt;
        &lt;strong&gt;1&lt;/strong&gt; and &lt;strong&gt;2:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/tobstern/AoC2022/blob/master/day01.py\"&gt;https://github.com/tobstern/AoC2022/blob/master/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyzv99w/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670244740.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyzu7xv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jotac13", "can_mod_post": false, "created_utc":
        1670244089.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_83mp7gsq", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "This year I''m using advent of code to learn
        Scala. This is my first ever scala code (both parts):\n\n[https://github.com/joao-conde/advents-of-code/blob/master/2022/src/day01.scala](https://github.com/joao-conde/advents-of-code/blob/master/2022/src/day01.scala)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyzu7xv", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        year I&amp;#39;m using advent of code to learn Scala. This is my first ever
        scala code (both parts):&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/joao-conde/advents-of-code/blob/master/2022/src/day01.scala\"&gt;https://github.com/joao-conde/advents-of-code/blob/master/2022/src/day01.scala&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyzu7xv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670244089.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "j0345ek", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_j033bkj", "score": 1, "author_fullname":
        "t2_60niu", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "collapsed": false, "body": "Much better and scrollable,
        thank you!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j0345ek", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Much
        better and scrollable, thank you!&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j0345ek/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670958414.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670958414.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "j033bkj", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheBigBearUK", "can_mod_post": false,
        "send_replies": true, "parent_id": "t1_iz2n5vw", "score": 1, "author_fullname":
        "t2_105ol5", "removal_reason": null, "approved_by": null, "mod_note": null,
        "all_awardings": [], "body": "that close to what you wanted?", "edited": false,
        "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "name":
        "t1_j033bkj", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;that
        close to what you wanted?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j033bkj/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670958088.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1670958088.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iz2n5vw", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670286863.0, "send_replies": true, "parent_id": "t1_iyzpc2v",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~Please edit your post
        to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read.~~\n\nEdit: thanks for fixing
        it!  &lt;3", "edited": 1670958429.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iz2n5vw", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        thanks for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz2n5vw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670286863.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyzpedp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheBigBearUK", "can_mod_post": false,
        "created_utc": 1670240754.0, "send_replies": true, "parent_id": "t1_iyzpc2v",
        "score": 1, "author_fullname": "t2_105ol5", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "and here was/is part
        2:\n\n    # Read the input file and split it into lines\n    $lines = Get
        - Content ''input.txt''\n    # Create an array to store the total number of
        Calories\n    for each Elf\n    $calories = @ ()\n    # Loop through the lines
        and add the Calories to the appropriate Elf ''s total\n    foreach($line in
        $lines) {\n        # If the line is empty, we have reached the end of an Elf
        ''s inventory\n        if ($line - eq '''') {\n            # Initialize a
        new entry in the array\n            for the next Elf\n            $calories
        += 0\n        } else {\n            # If the line is not empty, it contains
        the Calories\n            for a food item# Add the Calories to the current
        Elf ''s total\n            $calories[$calories.Length - 1] += $line\n        }\n    }\n    #
        Find the top three Elves with the most Calories\n    $topElves = $calories
        | Sort - Object - Descending | Select - Object - First 3\n    # Output the
        result\n    Write - Output \"The top three Elves have the following Calories:
        $($topElves -join '', '')\"\n    Write - Output \"Total Calories: $($topElves
        | Measure-Object -Sum | Select-Object -ExpandProperty Sum)\"", "edited": 1670958375.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iyzpedp",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;and here was/is part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Read the input file and split it
        into lines\n$lines = Get - Content &amp;#39;input.txt&amp;#39;\n# Create an
        array to store the total number of Calories\nfor each Elf\n$calories = @ ()\n#
        Loop through the lines and add the Calories to the appropriate Elf &amp;#39;s
        total\nforeach($line in $lines) {\n    # If the line is empty, we have reached
        the end of an Elf &amp;#39;s inventory\n    if ($line - eq &amp;#39;&amp;#39;)
        {\n        # Initialize a new entry in the array\n        for the next Elf\n        $calories
        += 0\n    } else {\n        # If the line is not empty, it contains the Calories\n        for
        a food item# Add the Calories to the current Elf &amp;#39;s total\n        $calories[$calories.Length
        - 1] += $line\n    }\n}\n# Find the top three Elves with the most Calories\n$topElves
        = $calories | Sort - Object - Descending | Select - Object - First 3\n# Output
        the result\nWrite - Output &amp;quot;The top three Elves have the following
        Calories: $($topElves -join &amp;#39;, &amp;#39;)&amp;quot;\nWrite - Output
        &amp;quot;Total Calories: $($topElves | Measure-Object -Sum | Select-Object
        -ExpandProperty Sum)&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyzpedp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670240754.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyzpc2v", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheBigBearUK", "can_mod_post": false,
        "created_utc": 1670240704.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_105ol5", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "I used ChatGPT to
        generate some powershell code and it worked really well.\n\nHere is the generated
        code for part1:\n\n    # Read the input file and split it into lines\n    $lines
        = Get - Content ''input.txt''\n    # Create an array to store the total number
        of Calories\n    for each Elf\n    $calories = @ ()\n    # Loop through the
        lines and add the Calories to the appropriate Elf ''s total\n    foreach($line
        in $lines) {#\n        If the line is empty, we have reached the end of an
        Elf ''s inventory\n        if ($line - eq '''') {#\n            Initialize
        a new entry in the array\n            for the next Elf\n            $calories
        += 0\n        } else {#\n            If the line is not empty, it contains
        the Calories\n            for a food item# Add the Calories to the current
        Elf ''s total\n            $calories[$calories.Length - 1] += $line\n        }\n    }\n    #
        Find the Elf with the most Calories\n    $elfWithMostCalories = $calories
        | Sort - Object - Descending | Select - Object - First 1\n    # Output the
        result\n    Write - Output \"Elf $($calories.IndexOf($elfWithMostCalories)
        + 1) has the most Calories: $($elfWithMostCalories)\"", "edited": 1670958404.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iyzpc2v",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I used ChatGPT to generate
        some powershell code and it worked really well.&lt;/p&gt;\n\n&lt;p&gt;Here
        is the generated code for part1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Read
        the input file and split it into lines\n$lines = Get - Content &amp;#39;input.txt&amp;#39;\n#
        Create an array to store the total number of Calories\nfor each Elf\n$calories
        = @ ()\n# Loop through the lines and add the Calories to the appropriate Elf
        &amp;#39;s total\nforeach($line in $lines) {#\n    If the line is empty, we
        have reached the end of an Elf &amp;#39;s inventory\n    if ($line - eq &amp;#39;&amp;#39;)
        {#\n        Initialize a new entry in the array\n        for the next Elf\n        $calories
        += 0\n    } else {#\n        If the line is not empty, it contains the Calories\n        for
        a food item# Add the Calories to the current Elf &amp;#39;s total\n        $calories[$calories.Length
        - 1] += $line\n    }\n}\n# Find the Elf with the most Calories\n$elfWithMostCalories
        = $calories | Sort - Object - Descending | Select - Object - First 1\n# Output
        the result\nWrite - Output &amp;quot;Elf $($calories.IndexOf($elfWithMostCalories)
        + 1) has the most Calories: $($elfWithMostCalories)&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyzpc2v/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670240704.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyzi6qg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "I''m doing different language each day, all solutions
        [here](https://github.com/d12bb/AdventOfCode/tree/main/2022).\n\nStarting
        with Rust:\n\n    use std::{fs, num::IntErrorKind};\n    \n    fn main() {\n    \tlet
        elves = elves();\n    \tprintln!(\"{}\", part1(&amp;elves));\n    \tprintln!(\"{}\",
        part2(&amp;elves));\n    }\n    \n    fn elves() -&gt; Vec&lt;i32&gt; {\n    \tlet
        mut cals = vec![0];\n    \tfs::read_to_string(\"input.txt\")\n    \t\t.expect(\"Expecting
        `input.txt` in current directory.\")\n    \t\t.lines()\n    \t\t.for_each(|l|
        {\n    \t\t\tmatch l.parse::&lt;i32&gt;() {\n    \t\t\t\tErr(e) if e.kind()
        == &amp;IntErrorKind::Empty =&gt; cals.push(0),\n    \t\t\t\tOk(cal) =&gt;
        {\n    \t\t\t\t\tif let Some(last) = cals.last_mut() {\n    \t\t\t\t\t\t*last
        += cal;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\t_ =&gt; panic!(\"Malformed
        input\"),\n    \t\t\t};\n    \t\t});\n    \treturn cals;\n    }\n    \n    fn
        part1(elves: &amp;Vec&lt;i32&gt;) -&gt; i32 {\n    \telves.iter().fold(0,
        |max, &amp;e| max.max(e))\n    }\n    \n    fn part2(elves: &amp;Vec&lt;i32&gt;)
        -&gt; i32 {\n    \tlet maxes = elves.iter().fold((0, 0, 0), |maxes, &amp;e|
        match maxes {\n    \t\t(huge, bigger, _) if e &gt; huge =&gt; (e, huge, bigger),\n    \t\t(huge,
        bigger, _) if e &gt; bigger =&gt; (huge, e, bigger),\n    \t\t(huge, bigger,
        big) if e &gt; big =&gt; (huge, bigger, e),\n    \t\t_ =&gt; maxes,\n    \t});\n    \treturn
        maxes.0 + maxes.1 + maxes.2;\n    }", "edited": 1670507253.0, "downs": 0,
        "author_flair_css_class": null, "collapsed": false, "is_submitter": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m doing different
        language each day, all solutions &lt;a href=\"https://github.com/d12bb/AdventOfCode/tree/main/2022\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Starting
        with Rust:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::{fs, num::IntErrorKind};\n\nfn
        main() {\n    let elves = elves();\n    println!(&amp;quot;{}&amp;quot;, part1(&amp;amp;elves));\n    println!(&amp;quot;{}&amp;quot;,
        part2(&amp;amp;elves));\n}\n\nfn elves() -&amp;gt; Vec&amp;lt;i32&amp;gt;
        {\n    let mut cals = vec![0];\n    fs::read_to_string(&amp;quot;input.txt&amp;quot;)\n        .expect(&amp;quot;Expecting
        `input.txt` in current directory.&amp;quot;)\n        .lines()\n        .for_each(|l|
        {\n            match l.parse::&amp;lt;i32&amp;gt;() {\n                Err(e)
        if e.kind() == &amp;amp;IntErrorKind::Empty =&amp;gt; cals.push(0),\n                Ok(cal)
        =&amp;gt; {\n                    if let Some(last) = cals.last_mut() {\n                        *last
        += cal;\n                    }\n                }\n                _ =&amp;gt;
        panic!(&amp;quot;Malformed input&amp;quot;),\n            };\n        });\n    return
        cals;\n}\n\nfn part1(elves: &amp;amp;Vec&amp;lt;i32&amp;gt;) -&amp;gt; i32
        {\n    elves.iter().fold(0, |max, &amp;amp;e| max.max(e))\n}\n\nfn part2(elves:
        &amp;amp;Vec&amp;lt;i32&amp;gt;) -&amp;gt; i32 {\n    let maxes = elves.iter().fold((0,
        0, 0), |maxes, &amp;amp;e| match maxes {\n        (huge, bigger, _) if e &amp;gt;
        huge =&amp;gt; (e, huge, bigger),\n        (huge, bigger, _) if e &amp;gt;
        bigger =&amp;gt; (huge, e, bigger),\n        (huge, bigger, big) if e &amp;gt;
        big =&amp;gt; (huge, bigger, e),\n        _ =&amp;gt; maxes,\n    });\n    return
        maxes.0 + maxes.1 + maxes.2;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyzi6qg/",
        "num_reports": null, "locked": false, "name": "t1_iyzi6qg", "created": 1670234585.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670234585.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 2, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyzgldw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Python\n\n&amp;#x200B;\n\n    with open(''day01_input.txt'')
        as f:\n        all_packs = f.read().split(''\\n'')+\n    \n    separators,
        packsums, start_span = [i for i in range(len(all_packs)) if all_packs[i] ==
        ''''], [], 0\n    \n    for end_span in separators: \n        packsums.append(sum([int(cal)
        for cal in all_packs[start_span:end_span]])) \n        start_span = end_span
        +1\n    \n    # Part 01\n    print(\"The largest calorie package is worth
        \" + str(sorted(packsums)[-1]) + \" calories\")\n    \n    # part 02\n    print(\"The
        largest three calorie packages combined are worth \" + str(sum(sorted(packsums)[-3:]))
        + \" calories\")", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;day01_input.txt&amp;#39;) as f:\n    all_packs = f.read().split(&amp;#39;\\n&amp;#39;)+\n\nseparators,
        packsums, start_span = [i for i in range(len(all_packs)) if all_packs[i] ==
        &amp;#39;&amp;#39;], [], 0\n\nfor end_span in separators: \n    packsums.append(sum([int(cal)
        for cal in all_packs[start_span:end_span]])) \n    start_span = end_span +1\n\n#
        Part 01\nprint(&amp;quot;The largest calorie package is worth &amp;quot; +
        str(sorted(packsums)[-1]) + &amp;quot; calories&amp;quot;)\n\n# part 02\nprint(&amp;quot;The
        largest three calorie packages combined are worth &amp;quot; + str(sum(sorted(packsums)[-3:]))
        + &amp;quot; calories&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyzgldw/",
        "num_reports": null, "locked": false, "name": "t1_iyzgldw", "created": 1670233105.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670233105.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyz8rer", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Rust** using nom to parse\n\n[https://github.com/litpho/aoc-2022/blob/main/day1/src/main.rs](https://github.com/litpho/aoc-2022/blob/main/day1/src/main.rs)",
        "edited": false, "downs": 0, "author_flair_css_class": null, "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;
        using nom to parse&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/litpho/aoc-2022/blob/main/day1/src/main.rs\"&gt;https://github.com/litpho/aoc-2022/blob/main/day1/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyz8rer/",
        "num_reports": null, "locked": false, "name": "t1_iyz8rer", "created": 1670226059.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670226059.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyz7ww1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "markjenkinswpg", "can_mod_post": false,
        "created_utc": 1670225349.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_4ud54", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "In Guile Scheme, with
        a focus on using srfi-1 features, particularly fold, reduce and unfold. Just
        using Scheme lists as a data structure. and avoiding fancier features like
        macros and continuations.\n\nI won''t include the full source inline here,
        but the highlights from [part 1](https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223#file-aoc2022_d01p1-scm)
        ([raw](https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223/raw/b1ef15202131551aeb7e7320672ca572f116aeed/aoc2022_d01p1.scm))
        were\n\n    (define (sum_elfs elf_lines)\n      (unfold-right null? ; predicate
        p\n                    sum_until_blankline_or_end_of_list ; next list item
        f\n                    skip_until_after_blankline_or_end_of_list ; seed updater
        g\n                    elf_lines )) ; seed\n    \n    (define elf_sums (sum_elfs
        (read_all_lines_backwards)) )\n    \n    (write-line (reduce max \"no elves
        found\" elf_sums) )\n\nBuilding on part one''s code as already included at
        the top, in [part two](https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223#file-aoc2022_d01p2-scm)
        ([raw](https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223/raw/b1ef15202131551aeb7e7320672ca572f116aeed/aoc2022_d01p2.scm))\n\n    (define
        (merge_item_into_list_and_drop_lowest i l)\n      (cdr (merge l (list i) &lt;)))\n    \n    (define
        (nlargest n l)\n      (fold merge_item_into_list_and_drop_lowest\n            (sort
        (take l n) &lt;) ; initial list, first n items sorted\n            (drop l
        n) ) ) ; remaining items after n\n    \n    (write-line (reduce + \"no elves
        found\" (nlargest 3 elf_sums) ) )", "edited": 1670225704.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyz7ww1", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In Guile Scheme, with a focus
        on using srfi-1 features, particularly fold, reduce and unfold. Just using
        Scheme lists as a data structure. and avoiding fancier features like macros
        and continuations.&lt;/p&gt;\n\n&lt;p&gt;I won&amp;#39;t include the full
        source inline here, but the highlights from &lt;a href=\"https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223#file-aoc2022_d01p1-scm\"&gt;part
        1&lt;/a&gt; (&lt;a href=\"https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223/raw/b1ef15202131551aeb7e7320672ca572f116aeed/aoc2022_d01p1.scm\"&gt;raw&lt;/a&gt;)
        were&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(define (sum_elfs elf_lines)\n  (unfold-right
        null? ; predicate p\n                sum_until_blankline_or_end_of_list ;
        next list item f\n                skip_until_after_blankline_or_end_of_list
        ; seed updater g\n                elf_lines )) ; seed\n\n(define elf_sums
        (sum_elfs (read_all_lines_backwards)) )\n\n(write-line (reduce max &amp;quot;no
        elves found&amp;quot; elf_sums) )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Building
        on part one&amp;#39;s code as already included at the top, in &lt;a href=\"https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223#file-aoc2022_d01p2-scm\"&gt;part
        two&lt;/a&gt; (&lt;a href=\"https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223/raw/b1ef15202131551aeb7e7320672ca572f116aeed/aoc2022_d01p2.scm\"&gt;raw&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(define
        (merge_item_into_list_and_drop_lowest i l)\n  (cdr (merge l (list i) &amp;lt;)))\n\n(define
        (nlargest n l)\n  (fold merge_item_into_list_and_drop_lowest\n        (sort
        (take l n) &amp;lt;) ; initial list, first n items sorted\n        (drop l
        n) ) ) ; remaining items after n\n\n(write-line (reduce + &amp;quot;no elves
        found&amp;quot; (nlargest 3 elf_sums) ) )\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyz7ww1/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670225349.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyxhxba", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "loociano", "can_mod_post": false, "created_utc":
        1670193197.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_530ql", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[GAMEBOY using C and GDK-2020](https://github.com/loociano/advent-of-code/blob/master/aoc2022/src/day01/gbdk2020/aoc2022day01.c)\n\n[Photo](https://imgur.com/1wwRdGy),
        [video](https://imgur.com/3YIeVai).", "edited": 1670193623.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyxhxba", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/loociano/advent-of-code/blob/master/aoc2022/src/day01/gbdk2020/aoc2022day01.c\"&gt;GAMEBOY
        using C and GDK-2020&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://imgur.com/1wwRdGy\"&gt;Photo&lt;/a&gt;,
        &lt;a href=\"https://imgur.com/3YIeVai\"&gt;video&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyxhxba/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670193197.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iywv1ak", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "pgaleone", "can_mod_post": false, "created_utc":
        1670184216.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_wdxkq", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# TensorFlow\n\nhttps://pgaleone.eu/tensorflow/2022/12/04/advent-of-code-tensorflow-day-1-and-2/#day-1-calorie-counting-part-one",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iywv1ak", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;TensorFlow&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pgaleone.eu/tensorflow/2022/12/04/advent-of-code-tensorflow-day-1-and-2/#day-1-calorie-counting-part-one\"&gt;https://pgaleone.eu/tensorflow/2022/12/04/advent-of-code-tensorflow-day-1-and-2/#day-1-calorie-counting-part-one&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iywv1ak/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670184216.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iywcr3f", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "RewrittenCodeA", "can_mod_post": false,
        "created_utc": 1670177265.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_93gyrgef", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Elixir** one-liner\n\nPart
        1:\n\n    text\n    |&gt; String.split(\"\\n\\n\", trim: true)\n    |&gt;
        Enum.map(fn p -&gt;\n      Enum.sum(p |&gt; String.split(\"\\n\", trim: true)
        |&gt; Enum.map(&amp;String.to_integer/1))\n    end)\n    |&gt; Enum.max()\n\nPart
        2:\n\n    text\n    |&gt; String.split(\"\\n\\n\", trim: true)\n    |&gt;
        Enum.map(fn p -&gt;\n      Enum.sum(p |&gt; String.split(\"\\n\", trim: true)
        |&gt; Enum.map(&amp;String.to_integer/1))\n    end)\n    |&gt; Enum.sort(:desc)\n    |&gt;
        Enum.take(3)\n    |&gt; Enum.sum()\n\nRepo: https://github.com/rewritten/aoc.ex",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iywcr3f", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Elixir&lt;/strong&gt;
        one-liner&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;text\n|&amp;gt;
        String.split(&amp;quot;\\n\\n&amp;quot;, trim: true)\n|&amp;gt; Enum.map(fn
        p -&amp;gt;\n  Enum.sum(p |&amp;gt; String.split(&amp;quot;\\n&amp;quot;,
        trim: true) |&amp;gt; Enum.map(&amp;amp;String.to_integer/1))\nend)\n|&amp;gt;
        Enum.max()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;text\n|&amp;gt;
        String.split(&amp;quot;\\n\\n&amp;quot;, trim: true)\n|&amp;gt; Enum.map(fn
        p -&amp;gt;\n  Enum.sum(p |&amp;gt; String.split(&amp;quot;\\n&amp;quot;,
        trim: true) |&amp;gt; Enum.map(&amp;amp;String.to_integer/1))\nend)\n|&amp;gt;
        Enum.sort(:desc)\n|&amp;gt; Enum.take(3)\n|&amp;gt; Enum.sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Repo:
        &lt;a href=\"https://github.com/rewritten/aoc.ex\"&gt;https://github.com/rewritten/aoc.ex&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iywcr3f/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670177265.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyw5m5j", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tobega", "can_mod_post": false, "created_utc":
        1670174384.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_56v5itu2", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Tailspin https://github.com/tobega/aoc2022/blob/main/day01/app.tt",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyw5m5j", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Tailspin
        &lt;a href=\"https://github.com/tobega/aoc2022/blob/main/day01/app.tt\"&gt;https://github.com/tobega/aoc2022/blob/main/day01/app.tt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyw5m5j/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670174384.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyw5kh9", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "luorduz", "can_mod_post": false, "created_utc":
        1670174365.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_i9hbwq", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Total beginner in **Clojure** solution:\n\n    (defn
        countCalories [rdr] (\n      let [\n        lines (map #(if (clojure.string/blank?
        %1) nil (Integer/parseInt %1)) (line-seq rdr))\n        groups (remove #(every?
        nil? %) (partition-by #(nil? %) lines))\n        totals (map #(apply + %)
        groups)\n      ] (reverse (sort totals))\n    ))\n\n    (defn getHighest [calorieCounts]
        (first calorieCounts))\n    (defn getHighestThree [calorieCounts] (apply +
        (take 3 calorieCounts)))\n\n    (def calories (countCalories (clojure.java.io/reader
        \"calories.txt\")))\n\n    (println (getHighest calories))\n    (println (getHighestThree
        calories))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyw5kh9", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Total
        beginner in &lt;strong&gt;Clojure&lt;/strong&gt; solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defn
        countCalories [rdr] (\n  let [\n    lines (map #(if (clojure.string/blank?
        %1) nil (Integer/parseInt %1)) (line-seq rdr))\n    groups (remove #(every?
        nil? %) (partition-by #(nil? %) lines))\n    totals (map #(apply + %) groups)\n  ]
        (reverse (sort totals))\n))\n\n(defn getHighest [calorieCounts] (first calorieCounts))\n(defn
        getHighestThree [calorieCounts] (apply + (take 3 calorieCounts)))\n\n(def
        calories (countCalories (clojure.java.io/reader &amp;quot;calories.txt&amp;quot;)))\n\n(println
        (getHighest calories))\n(println (getHighestThree calories))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyw5kh9/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670174365.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyw0inq", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheClayblock", "can_mod_post": false,
        "created_utc": 1670172298.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_dmaam", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[rust](https://codeberg.org/Placated/aoc22/raw/branch/main/day1/src/main.rs)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyw0inq", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://codeberg.org/Placated/aoc22/raw/branch/main/day1/src/main.rs\"&gt;rust&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyw0inq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670172298.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyvehwv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "PreviousDemand2", "can_mod_post": false,
        "created_utc": 1670161867.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_4dlyklk9", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "[https://github.com/gizlu/AoC2022/blob/8ac51696ded741c94900917efe40b108bd66f7a9/day1/README.md](https://github.com/gizlu/AoC2022/blob/8ac51696ded741c94900917efe40b108bd66f7a9/day1/README.md)
        awk/shell, one line per task", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_iyvehwv", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/gizlu/AoC2022/blob/8ac51696ded741c94900917efe40b108bd66f7a9/day1/README.md\"&gt;https://github.com/gizlu/AoC2022/blob/8ac51696ded741c94900917efe40b108bd66f7a9/day1/README.md&lt;/a&gt;
        awk/shell, one line per task&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyvehwv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670161867.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyv2025", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "report_reasons": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "python3 17 lines\n\nhttps://pastebin.com/9Zw44s3W", "edited":
        false, "downs": 0, "author_flair_css_class": null, "collapsed": false, "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;python3 17 lines&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/9Zw44s3W\"&gt;https://pastebin.com/9Zw44s3W&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyv2025/",
        "num_reports": null, "locked": false, "name": "t1_iyv2025", "created": 1670152922.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670152922.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyv1f08", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "EddmondProch1", "can_mod_post": false,
        "created_utc": 1670152412.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_69j9w68q", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "VBA Excel\n\n[github.com/Nrc0/adventofcode2022](https://github.com/Nrc0/adventofcode2022/blob/85edbbc659a146922c50ceda96c6e0950aca2708/day01/day01.vb)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyv1f08", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;VBA
        Excel&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Nrc0/adventofcode2022/blob/85edbbc659a146922c50ceda96c6e0950aca2708/day01/day01.vb\"&gt;github.com/Nrc0/adventofcode2022&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyv1f08/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670152412.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyuzgqk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "herjaxx", "can_mod_post": false, "created_utc":
        1670150720.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_kwaxx", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "[PYTHON]\n\nForgot to post this!\n\nhttps://pastebin.com/FPZraU5N",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyuzgqk", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[PYTHON]&lt;/p&gt;\n\n&lt;p&gt;Forgot
        to post this!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/FPZraU5N\"&gt;https://pastebin.com/FPZraU5N&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuzgqk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670150720.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyuwzgv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "its_me_sticky", "can_mod_post": false,
        "created_utc": 1670148532.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_5lbcw91q", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "python simple straight
        forward solution   \nhttps://pastebin.com/6hCTGv2g", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyuwzgv", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;python simple straight forward
        solution&lt;br/&gt;\n&lt;a href=\"https://pastebin.com/6hCTGv2g\"&gt;https://pastebin.com/6hCTGv2g&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuwzgv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670148532.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyuu7ba", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bpanthi977", "can_mod_post": false, "created_utc":
        1670146049.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_56jge38", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Common Lisp\nhttps://github.com/bpanthi977/random-code-collection/blob/main/aoc/2022/day1.lisp\n\nUses
        utility functions from seraepum (split-sequence &amp; bestn).\n\n\n    (in-package
        :aoc)\n    \n    (defun total-calories ()\n      (let ((calories (split-sequence
        \"\"\n                                      (input 01 :lines)\n                                      :test
        #''string-equal)))\n        (mapcar (lambda (seq)\n                  (reduce
        #''+ seq :key #''parse-integer))\n                calories)))\n    \n    (defun
        solve1 ()\n      (apply #''max (total-calories)))\n    \n    \n    (defun
        solve2 ()\n      (reduce #''+ (bestn 3 (total-calories) #''&gt;)))", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iyuu7ba",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Common Lisp&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/bpanthi977/random-code-collection/blob/main/aoc/2022/day1.lisp\"&gt;https://github.com/bpanthi977/random-code-collection/blob/main/aoc/2022/day1.lisp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Uses
        utility functions from seraepum (split-sequence &amp;amp; bestn).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(in-package
        :aoc)\n\n(defun total-calories ()\n  (let ((calories (split-sequence &amp;quot;&amp;quot;\n                                  (input
        01 :lines)\n                                  :test #&amp;#39;string-equal)))\n    (mapcar
        (lambda (seq)\n              (reduce #&amp;#39;+ seq :key #&amp;#39;parse-integer))\n            calories)))\n\n(defun
        solve1 ()\n  (apply #&amp;#39;max (total-calories)))\n\n\n(defun solve2 ()\n  (reduce
        #&amp;#39;+ (bestn 3 (total-calories) #&amp;#39;&amp;gt;)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuu7ba/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670146049.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyun643", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "memosaurusyeet", "can_mod_post": false,
        "created_utc": 1670140054.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 3, "author_fullname": "t2_3ux430zg", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Noob Python user here,
        hoping to learn more as we go along. Feel free to share any improvements.
        This isn''t exactly the niftiest piece of code lol, but it works.\n\nDone
        in Python3: [AoC Day 1 - Python3](https://topaz.github.io/paste/#XQAAAQDwBQAAAAAAAAARkQgnkQiMUZ3RJRAv9dVJFWcYYcHiAS7WI6SetJ6EK9Cq8jz3/FssFbhUYFFuJv+XKX09RjB8ZBeIGiU61u0Ngphk+Gk8sP3aO41w0gsVlvQHFc9Xc3Gfkshu5zEegroeNfA7o+pijI0TagHirCS7JyR0YhXGInryABVtQ7oE38bit6Yc5kDZXa1g3PlA3S9nldTa3n5oohNwCsrogiGn29+k/TyE7IzTmgAZl3hzt4zz+ukkfWQTAyAjqu4HJmWzEdCZtGadXrel89aDQ5LKL3j44h0HbfOQpoQ6A4gRXCo1aPmbMjl2Kwi2zZhK23276Lfz8xlGyHrKqptXZFTdooJOfGj4xAvhbzAO+oxQvkbBsh5Z2TtoWvjhz6yx7BDethnR0i2SNsw8cfxrlTyY+kW+M++IJIR2unI/rYGjsthkFcEmioN/wO6gLijayZjGJ2J2MqS+yhZn3PQYPiQ2H4mEuLLoem6OnaaYsVQSrYEnn49lzxQGmai2k76h1ptjCygneUGEAfFDpak/iZ9/GHWiTFa62bsUc/w9BGbK6uRmMQbqR81EPodZoc0pBssG88bum8YX/Bu2euYFX+NbYYxgEe0yxPYHfjtGAlUrgxWcUaTHShuyOkwKeZoSlpQgRM29LKkago/FJty0iH+G/hvlzwdFwQoYsFGV762jfHCwm3EbyEQ2ipX/PLPgi4cUlipapU8FslvCUkhPHTyyw+s6rb8rzus/UmhWThCHvXUMjhY4oYcV5maRz1jpBKiMBrWXvupgxnFDJXvYMFH6VLeF359TqyVagbdOBOGllhISf7dwOky41zwbDSyZRlDaB7uHGYFmLVrvuc9uH4RqZY46OwCgyz0VCT/T6XiX0dn5yNTafDuJqSElw37Q2q2AInRolUSZEZ9Sw12i9epNIyvEHxf+lEnGA9qPJxCMC/7Qg8w=)\n\nCheers!",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyun643", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Noob
        Python user here, hoping to learn more as we go along. Feel free to share
        any improvements. This isn&amp;#39;t exactly the niftiest piece of code lol,
        but it works.&lt;/p&gt;\n\n&lt;p&gt;Done in Python3: &lt;a href=\"https://topaz.github.io/paste/#XQAAAQDwBQAAAAAAAAARkQgnkQiMUZ3RJRAv9dVJFWcYYcHiAS7WI6SetJ6EK9Cq8jz3/FssFbhUYFFuJv+XKX09RjB8ZBeIGiU61u0Ngphk+Gk8sP3aO41w0gsVlvQHFc9Xc3Gfkshu5zEegroeNfA7o+pijI0TagHirCS7JyR0YhXGInryABVtQ7oE38bit6Yc5kDZXa1g3PlA3S9nldTa3n5oohNwCsrogiGn29+k/TyE7IzTmgAZl3hzt4zz+ukkfWQTAyAjqu4HJmWzEdCZtGadXrel89aDQ5LKL3j44h0HbfOQpoQ6A4gRXCo1aPmbMjl2Kwi2zZhK23276Lfz8xlGyHrKqptXZFTdooJOfGj4xAvhbzAO+oxQvkbBsh5Z2TtoWvjhz6yx7BDethnR0i2SNsw8cfxrlTyY+kW+M++IJIR2unI/rYGjsthkFcEmioN/wO6gLijayZjGJ2J2MqS+yhZn3PQYPiQ2H4mEuLLoem6OnaaYsVQSrYEnn49lzxQGmai2k76h1ptjCygneUGEAfFDpak/iZ9/GHWiTFa62bsUc/w9BGbK6uRmMQbqR81EPodZoc0pBssG88bum8YX/Bu2euYFX+NbYYxgEe0yxPYHfjtGAlUrgxWcUaTHShuyOkwKeZoSlpQgRM29LKkago/FJty0iH+G/hvlzwdFwQoYsFGV762jfHCwm3EbyEQ2ipX/PLPgi4cUlipapU8FslvCUkhPHTyyw+s6rb8rzus/UmhWThCHvXUMjhY4oYcV5maRz1jpBKiMBrWXvupgxnFDJXvYMFH6VLeF359TqyVagbdOBOGllhISf7dwOky41zwbDSyZRlDaB7uHGYFmLVrvuc9uH4RqZY46OwCgyz0VCT/T6XiX0dn5yNTafDuJqSElw37Q2q2AInRolUSZEZ9Sw12i9epNIyvEHxf+lEnGA9qPJxCMC/7Qg8w=\"&gt;AoC
        Day 1 - Python3&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Cheers!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyun643/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670140054.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyufc58", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "osalbahr", "can_mod_post": false, "created_utc":
        1670134131.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_j34rdpm4", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Solved in C++  \nhttps://github.com/osalbahr/adventOfCode  \nFeel
        free to ask any questions!  \nYou can find more C++ solutions (and other languages)
        here:  \nhttps://github.com/Bogdanp/awesome-advent-of-code#c-2", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iyufc58",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solved in C++&lt;br/&gt;\n&lt;a
        href=\"https://github.com/osalbahr/adventOfCode\"&gt;https://github.com/osalbahr/adventOfCode&lt;/a&gt;&lt;br/&gt;\nFeel
        free to ask any questions!&lt;br/&gt;\nYou can find more C++ solutions (and
        other languages) here:&lt;br/&gt;\n&lt;a href=\"https://github.com/Bogdanp/awesome-advent-of-code#c-2\"&gt;https://github.com/Bogdanp/awesome-advent-of-code#c-2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyufc58/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670134131.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyu1o0q", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ahmarthered", "can_mod_post": false, "created_utc":
        1670126011.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_hcwj1", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**C#**\n\nSolution to both parts:  \n\n\nhttps://github.com/AhmarTheRed/Advent-of-Code/blob/main/AdventOfCode/Year2022/Day1/Day1.cs",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyu1o0q", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Solution
        to both parts:  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/AhmarTheRed/Advent-of-Code/blob/main/AdventOfCode/Year2022/Day1/Day1.cs\"&gt;https://github.com/AhmarTheRed/Advent-of-Code/blob/main/AdventOfCode/Year2022/Day1/Day1.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyu1o0q/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670126011.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyu1a0u", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "dizzyhobbes", "can_mod_post": false, "created_utc":
        1670125804.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_1yhucx86", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Lazy Golang code and a complete 7+ year repo
        :) \n\nhttps://github.com/alexchao26/advent-of-code-go/blob/main/2022/day01/main.go",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyu1a0u", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Lazy
        Golang code and a complete 7+ year repo :) &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/alexchao26/advent-of-code-go/blob/main/2022/day01/main.go\"&gt;https://github.com/alexchao26/advent-of-code-go/blob/main/2022/day01/main.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyu1a0u/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670125804.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iytks3n", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "QQII", "can_mod_post": false, "created_utc":
        1670117497.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_8m1ym", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Adding to the 6 other \"excel\" users: https://github.com/qqii/adventofcode-2022/tree/master/day01\n\nNot
        a great solution as I use `OFFSET` to perform positive and negative lookups.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iytks3n", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Adding
        to the 6 other &amp;quot;excel&amp;quot; users: &lt;a href=\"https://github.com/qqii/adventofcode-2022/tree/master/day01\"&gt;https://github.com/qqii/adventofcode-2022/tree/master/day01&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Not
        a great solution as I use &lt;code&gt;OFFSET&lt;/code&gt; to perform positive
        and negative lookups.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iytks3n/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670117497.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iytjktk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Avitron5k",
        "can_mod_post": false, "created_utc": 1670116910.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1w5hp3vo", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Nim\n\n[part1](https://topaz.github.io/paste/#XQAAAQANAQAAAAAAAAA0m0pnuFI8c/e2K1Tz926tt1g0cXj25fMSPh8u8YjMoS3D1fY98y/mzz2C0Rl27Ra9th6Udu8yt35nwxrO3Snd6gFlkEFEN4IkzGMIvj8a23h/5OnJgkIokuIH3e3WtayWa9g/4OmfwhnYsJS/H3Q1buBtbWEZGa29uhjuZcMoqHMiZBTngf/qQSN5BwQ3IYRQXSY6zGJibPH/1IPiAA==)\n\n[part2](https://topaz.github.io/paste/#XQAAAQDtAQAAAAAAAAA0m0pnuFI8c/e2K1Tz926tt1g0cXj25fMSPh8u8YjMoS3D1fY98y/mzz2C0Rl/8JVm8cga2GcMEBJANly+yg6uOhXfPfcnF1dai+4RDwj/+DiGtLRzmgDlPnASVWFP/up1IFbA/lxIa4oyH+4j+/wqwbr1FW1JWPyRLXw8psykW33Uz/WyKFxVg/kWhlyJWVQrDV+thj+iJ0ppOmZxB5a8icHnJVN7czhpfWvNxkjlbG4XyJWjWi1WH/+PyHAA)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iytjktk", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nim&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQANAQAAAAAAAAA0m0pnuFI8c/e2K1Tz926tt1g0cXj25fMSPh8u8YjMoS3D1fY98y/mzz2C0Rl27Ra9th6Udu8yt35nwxrO3Snd6gFlkEFEN4IkzGMIvj8a23h/5OnJgkIokuIH3e3WtayWa9g/4OmfwhnYsJS/H3Q1buBtbWEZGa29uhjuZcMoqHMiZBTngf/qQSN5BwQ3IYRQXSY6zGJibPH/1IPiAA==\"&gt;part1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDtAQAAAAAAAAA0m0pnuFI8c/e2K1Tz926tt1g0cXj25fMSPh8u8YjMoS3D1fY98y/mzz2C0Rl/8JVm8cga2GcMEBJANly+yg6uOhXfPfcnF1dai+4RDwj/+DiGtLRzmgDlPnASVWFP/up1IFbA/lxIa4oyH+4j+/wqwbr1FW1JWPyRLXw8psykW33Uz/WyKFxVg/kWhlyJWVQrDV+thj+iJ0ppOmZxB5a8icHnJVN7czhpfWvNxkjlbG4XyJWjWi1WH/+PyHAA\"&gt;part2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iytjktk/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670116910.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iytg4s0", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "brandonchinn178", "can_mod_post": false,
        "created_utc": 1670115216.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_ognt1qc", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "C\n\nhttps://github.com/brandonchinn178/advent-of-code/blob/main/2022/Day01.c\n\nDid
        this on Dec 1, forgot to post. Most of the day was relearning C and Makefiles.
        Rewritten with advice from https://www.reddit.com/r/C_Programming/comments/zaebta/relearning_c_with_advent_of_code/\n\nComing
        from higher-level languages, I''m blown away by how fast C is. 0.15 milliseconds
        for both part 1 + 2.\n\n--\n\nC language, C solution, C programming language
        ([why am i doing this?]( \nhttps://www.reddit.com/r/adventofcode/comments/zbvxk0/meta\\_impossible\\_to\\_search\\_for\\_c\\_solutions/))",
        "edited": 1670115492.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iytg4s0", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/brandonchinn178/advent-of-code/blob/main/2022/Day01.c\"&gt;https://github.com/brandonchinn178/advent-of-code/blob/main/2022/Day01.c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Did
        this on Dec 1, forgot to post. Most of the day was relearning C and Makefiles.
        Rewritten with advice from &lt;a href=\"https://www.reddit.com/r/C_Programming/comments/zaebta/relearning_c_with_advent_of_code/\"&gt;https://www.reddit.com/r/C_Programming/comments/zaebta/relearning_c_with_advent_of_code/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Coming
        from higher-level languages, I&amp;#39;m blown away by how fast C is. 0.15
        milliseconds for both part 1 + 2.&lt;/p&gt;\n\n&lt;h2&gt;&lt;/h2&gt;\n\n&lt;p&gt;C
        language, C solution, C programming language (&lt;a href=\"https://www.reddit.com/r/adventofcode/comments/zbvxk0/meta_impossible_to_search_for_c_solutions/\"&gt;why
        am i doing this?&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iytg4s0/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670115216.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iysvu2z", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bustamamte", "can_mod_post": false, "created_utc":
        1670105817.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_53865607", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Typescript\n\n[Part 1](https://topaz.github.io/paste/#XQAAAQCGAQAAAAAAAAAxm8oZxjYXows3V67OFtTdE1VwEU5RyYkjfXwLZof9OLlCP0kgLbrH2BH7DmE/2I4mwwU9jeP70BqRnghxiGQk5WncwFJrlU+qozmechTdPV2wmmazto+OErUqXxGTUXpKGv/xQ17ALx5ieU6ggKqwFcisSCrOGXu7Nrk2j7ARIH+vXxZzn5oGHNyfl9iRg2+uzZ0YuHfzeOWuYs0wQmifyBfuUxYsPMazGq1TGBuEIxlXq4JUF8s8NIQWPIg68DqNwdEhA2a4Wsm9VmIMrsObNUK1ohV0SwhYGHdWjyGYn8xEaN2xuGUuArSKrg9u7HDnMDktiGs+X8Vz9i1ThSXrP//TmtJg)
        | [Part 2](https://topaz.github.io/paste/#XQAAAQA0AgAAAAAAAAAxm8oZxjYXows3V67OFtTdE1VwEU5RyYkjfXwLZof9OLlCP0kgLbrH2BH7DmE/2I4mwwU9jeP70BqRnghxiGQk5WncwFJrlU+qozmechTdPV2wmmazto+OErUqXxGTUXpKGv/xQ17ALx5ieU6ggKqwFWHghq8MrEO31dz1DdFPx5+4V8/FtT3kDsSpI6Jq3cU6apppm6akNFShFvHQJRF1TllSpYFWg6gSlKE58sDplMnNHLxidnfuuTlDMYgfS0hMM30qY+oI6B/nkrUErlT7+HPhREjJXAWdjgoRU+x2HVViGmt/8iWPxyKbGP+oUmbq5GttptOM0/CWSiFVtndif420g9zWl6L/JcL5CtYdjCiezNa/GVF3cp+qU/eFtcGaALobeqpMcp6Z9Pp2bNH+D5RD)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iysvu2z", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Typescript&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCGAQAAAAAAAAAxm8oZxjYXows3V67OFtTdE1VwEU5RyYkjfXwLZof9OLlCP0kgLbrH2BH7DmE/2I4mwwU9jeP70BqRnghxiGQk5WncwFJrlU+qozmechTdPV2wmmazto+OErUqXxGTUXpKGv/xQ17ALx5ieU6ggKqwFcisSCrOGXu7Nrk2j7ARIH+vXxZzn5oGHNyfl9iRg2+uzZ0YuHfzeOWuYs0wQmifyBfuUxYsPMazGq1TGBuEIxlXq4JUF8s8NIQWPIg68DqNwdEhA2a4Wsm9VmIMrsObNUK1ohV0SwhYGHdWjyGYn8xEaN2xuGUuArSKrg9u7HDnMDktiGs+X8Vz9i1ThSXrP//TmtJg\"&gt;Part
        1&lt;/a&gt; | &lt;a href=\"https://topaz.github.io/paste/#XQAAAQA0AgAAAAAAAAAxm8oZxjYXows3V67OFtTdE1VwEU5RyYkjfXwLZof9OLlCP0kgLbrH2BH7DmE/2I4mwwU9jeP70BqRnghxiGQk5WncwFJrlU+qozmechTdPV2wmmazto+OErUqXxGTUXpKGv/xQ17ALx5ieU6ggKqwFWHghq8MrEO31dz1DdFPx5+4V8/FtT3kDsSpI6Jq3cU6apppm6akNFShFvHQJRF1TllSpYFWg6gSlKE58sDplMnNHLxidnfuuTlDMYgfS0hMM30qY+oI6B/nkrUErlT7+HPhREjJXAWdjgoRU+x2HVViGmt/8iWPxyKbGP+oUmbq5GttptOM0/CWSiFVtndif420g9zWl6L/JcL5CtYdjCiezNa/GVF3cp+qU/eFtcGaALobeqpMcp6Z9Pp2bNH+D5RD\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iysvu2z/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670105817.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iysupqu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "YetiSpeghetti",
        "can_mod_post": false, "created_utc": 1670105311.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_14bq0c", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Python
        (smooth brain version):\n\n[AoC Day 1 - Python](https://topaz.github.io/paste/#XQAAAQCtBAAAAAAAAAARiAKpjNJVN4GBpjp1ArpyeoS7+GYBIfHqlFWM2vy/E2qecBqjDdmj5SEvGn2gQWPHyTdxY48PSnWeP0mhEvhX1IPwGxMYa9XkcwreQxdCCpL09y5QTU3azEtw91jUeW0PnbisVNpyewQRZ3Qr/H37OeIhyyD2Pz8cvW10gQilHewtI34y057VMt0/FkOII9cpP8nDOoWP+svir7zhszwwQF2AIfEJd+7aIOdf2Sd1wsjYUXNejeR7vnNRR7RvMntGJ/6kxaAhzB1D8PA1NRJSXR9+QAZuDf0vMUmcQKS3y8vChpeXuw/aUhuXT4HUcCmt8dDmVjvt7DEyHZIgPWM7bsGcFvKtyLIbaXhJEAjHENXTB6noIM61sz8Cn+50EWH1RlTOMPfz2p1ctDVJ+Ih2cVjJBdoKp8aW6Z8KX3nb0MUtqUeMhHLsCUTE0YGi3gltO2M4TH7YuY/YJ3WXp7/aTL7HcIv9B+7p5vGI8kHsTTm0tpZym0i4Y+XQHrDxic8V5eButrVLlcgP2Yw3Wgb3DP2CRRsd6IomNFu7y2yzwkM58drmicn5FToz8QVHkZP8q/NdbtwC3mN5YbBMdu5ZHQsGeYC8aeBGbEt+Nwe1QoV/Fb+u01vxlN0le+ppp9aw01/280FICg6OMJJtwXVT+vehncQa4jOG6r1TXGncdBdMA25qzKOyQkwdpXNGEOJvI3VE3to3hwL1BgsavgNu9IiRNqoeLHrZhHlUCdpxsGgYVxeCiDwR3ZcpWKSEx+zDg3o0/9Gfqhw=)\n\nI
        never make reddit posts, be gentle... I didn''t do the fancy new line finagling
        I am seeing everywhere else, I don''t even really understand how people are
        doing that data manipulation. But, anyways I converted data to integers and
        based the inventory on the numbers between zeros.", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iysupqu", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python (smooth brain version):&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCtBAAAAAAAAAARiAKpjNJVN4GBpjp1ArpyeoS7+GYBIfHqlFWM2vy/E2qecBqjDdmj5SEvGn2gQWPHyTdxY48PSnWeP0mhEvhX1IPwGxMYa9XkcwreQxdCCpL09y5QTU3azEtw91jUeW0PnbisVNpyewQRZ3Qr/H37OeIhyyD2Pz8cvW10gQilHewtI34y057VMt0/FkOII9cpP8nDOoWP+svir7zhszwwQF2AIfEJd+7aIOdf2Sd1wsjYUXNejeR7vnNRR7RvMntGJ/6kxaAhzB1D8PA1NRJSXR9+QAZuDf0vMUmcQKS3y8vChpeXuw/aUhuXT4HUcCmt8dDmVjvt7DEyHZIgPWM7bsGcFvKtyLIbaXhJEAjHENXTB6noIM61sz8Cn+50EWH1RlTOMPfz2p1ctDVJ+Ih2cVjJBdoKp8aW6Z8KX3nb0MUtqUeMhHLsCUTE0YGi3gltO2M4TH7YuY/YJ3WXp7/aTL7HcIv9B+7p5vGI8kHsTTm0tpZym0i4Y+XQHrDxic8V5eButrVLlcgP2Yw3Wgb3DP2CRRsd6IomNFu7y2yzwkM58drmicn5FToz8QVHkZP8q/NdbtwC3mN5YbBMdu5ZHQsGeYC8aeBGbEt+Nwe1QoV/Fb+u01vxlN0le+ppp9aw01/280FICg6OMJJtwXVT+vehncQa4jOG6r1TXGncdBdMA25qzKOyQkwdpXNGEOJvI3VE3to3hwL1BgsavgNu9IiRNqoeLHrZhHlUCdpxsGgYVxeCiDwR3ZcpWKSEx+zDg3o0/9Gfqhw=\"&gt;AoC
        Day 1 - Python&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I never make reddit posts,
        be gentle... I didn&amp;#39;t do the fancy new line finagling I am seeing
        everywhere else, I don&amp;#39;t even really understand how people are doing
        that data manipulation. But, anyways I converted data to integers and based
        the inventory on the numbers between zeros.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iysupqu/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670105311.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iysmehw", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "RookBe", "can_mod_post": false, "created_utc":
        1670101709.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_84q5m", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "A writeup about today explaining my solution
        (that happens to be in Rust)\nhttps://nickymeuleman.netlify.app/garden/aoc2022-day01",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iysmehw", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A
        writeup about today explaining my solution (that happens to be in Rust)\n&lt;a
        href=\"https://nickymeuleman.netlify.app/garden/aoc2022-day01\"&gt;https://nickymeuleman.netlify.app/garden/aoc2022-day01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iysmehw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670101709.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iysezvd", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Hefty-Courage2945", "can_mod_post": false,
        "created_utc": 1670098672.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_athauxc1", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "I''m a little late
        but. Javascript\n\n    let str = []; \n    let value = 0;\n    input.split(\"\\n\").forEach((element)
        =&gt; {\n        if (!element) {\n            \n            if (value != 0)
        str.push(value);\n            \n            value = null;\n        } else
        {\n            value = parseInt(element) + value;\n        }\n    });\n    console.log(Math.max(...str));
        //Max\n    \n    str.sort((a, b) =&gt; b - a);\n    console.log(str[0] + str[1]
        + str[2]); //Top3", "edited": 1670100220.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iysezvd", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        a little late but. Javascript&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let str
        = []; \nlet value = 0;\ninput.split(&amp;quot;\\n&amp;quot;).forEach((element)
        =&amp;gt; {\n    if (!element) {\n\n        if (value != 0) str.push(value);\n\n        value
        = null;\n    } else {\n        value = parseInt(element) + value;\n    }\n});\nconsole.log(Math.max(...str));
        //Max\n\nstr.sort((a, b) =&amp;gt; b - a);\nconsole.log(str[0] + str[1] +
        str[2]); //Top3\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iysezvd/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670098672.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iys7vtl", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "zatoichi49", "can_mod_post": false, "created_utc":
        1670095730.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_165lak", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python:\n\n    with open(''AOC_2022_day1.txt'',
        ''r'') as f:\n        all_totals = []\n        for group in f.read().split(''\\n\\n''):\n            total
        = sum(int(calorie) for calorie in group.split(''\\n''))\n            all_totals.append(total)\n        all_totals.sort()\n\n    def
        AOC_2022_day1_pt1(totals):\n        return all_totals[-1]\n\n    def AOC_2022_day1_pt2(totals):\n        return
        sum(all_totals[-3:])\n\n    print(AOC_2022_day1_pt1(all_totals))\n    print(AOC_2022_day1_pt2(all_totals))",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iys7vtl", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;AOC_2022_day1.txt&amp;#39;, &amp;#39;r&amp;#39;) as f:\n    all_totals
        = []\n    for group in f.read().split(&amp;#39;\\n\\n&amp;#39;):\n        total
        = sum(int(calorie) for calorie in group.split(&amp;#39;\\n&amp;#39;))\n        all_totals.append(total)\n    all_totals.sort()\n\ndef
        AOC_2022_day1_pt1(totals):\n    return all_totals[-1]\n\ndef AOC_2022_day1_pt2(totals):\n    return
        sum(all_totals[-3:])\n\nprint(AOC_2022_day1_pt1(all_totals))\nprint(AOC_2022_day1_pt2(all_totals))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iys7vtl/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670095730.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyrpm4h", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "asaaki", "can_mod_post": false, "created_utc":
        1670088094.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_391qk", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Rust**, [https://github.com/asaaki/advent-of-code-2022/blob/main/src/bin/day1.rs](https://github.com/asaaki/advent-of-code-2022/blob/main/src/bin/day1.rs)\n\n    use
        aoc_lib::*;\n    const BIN: &amp;str = env!(\"CARGO_BIN_NAME\");\n    type
        N = u32;\n    \n    fn main() -&gt; NullResult {\n        let args = args(BIN)?;\n        let
        now = Instant::now();\n    \n        let elves = args.input.split(\"\\n\\n\").map(|bag|
        {\n            bag.split(''\\n'')\n                .filter_map(|c| c.parse::&lt;N&gt;().ok())\n                .sum::&lt;N&gt;()\n        });\n    \n        let
        solution: N = if !args.second {\n            elves.max().unwrap().to_owned()\n        }
        else {\n            // easiest way to get the top3\n            let mut elves:
        Vec&lt;_&gt; = elves.collect();\n            elves.sort_unstable_by(|a, b|
        b.cmp(a));\n            elves.iter().take(3).sum()\n        };\n    \n        eprintln!(\"time:
        {:?}\", now.elapsed());\n        result(&amp;args, solution)\n    }", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iyrpm4h",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;,
        &lt;a href=\"https://github.com/asaaki/advent-of-code-2022/blob/main/src/bin/day1.rs\"&gt;https://github.com/asaaki/advent-of-code-2022/blob/main/src/bin/day1.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        aoc_lib::*;\nconst BIN: &amp;amp;str = env!(&amp;quot;CARGO_BIN_NAME&amp;quot;);\ntype
        N = u32;\n\nfn main() -&amp;gt; NullResult {\n    let args = args(BIN)?;\n    let
        now = Instant::now();\n\n    let elves = args.input.split(&amp;quot;\\n\\n&amp;quot;).map(|bag|
        {\n        bag.split(&amp;#39;\\n&amp;#39;)\n            .filter_map(|c| c.parse::&amp;lt;N&amp;gt;().ok())\n            .sum::&amp;lt;N&amp;gt;()\n    });\n\n    let
        solution: N = if !args.second {\n        elves.max().unwrap().to_owned()\n    }
        else {\n        // easiest way to get the top3\n        let mut elves: Vec&amp;lt;_&amp;gt;
        = elves.collect();\n        elves.sort_unstable_by(|a, b| b.cmp(a));\n        elves.iter().take(3).sum()\n    };\n\n    eprintln!(&amp;quot;time:
        {:?}&amp;quot;, now.elapsed());\n    result(&amp;amp;args, solution)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyrpm4h/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670088094.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iytav95", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LetarMoon",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iyrtche", "score":
        1, "author_fullname": "t2_upqnxbzl", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "&gt;se very neat. Th\n\nYou
        are right :) I fixed it and now the solution in even neater :) Thank you!",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_iytav95", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;se
        very neat. Th&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You are right :)
        I fixed it and now the solution in even neater :) Thank you!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iytav95/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670112725.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670112725.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyrtche", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "InkyZima", "can_mod_post": false, "created_utc":
        1670089642.0, "send_replies": true, "parent_id": "t1_iyrla4n", "score": 1,
        "author_fullname": "t2_13hcgs", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "i think your elves list will
        be missing the last elf from the provided data (unless there is a ''\\\\n''
        line at the end of the file, which isn''t the case). Otherwise very neat.
        Thanks for sharing!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyrtche", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i
        think your elves list will be missing the last elf from the provided data
        (unless there is a &amp;#39;\\n&amp;#39; line at the end of the file, which
        isn&amp;#39;t the case). Otherwise very neat. Thanks for sharing!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyrtche/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670089642.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyrla4n", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "LetarMoon", "can_mod_post": false, "created_utc":
        1670086369.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_upqnxbzl", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python, my\\_repo: [https://github.com/loramoon/adventofcode.com\\_game\\_2022/tree/main/Day\\_1](https://github.com/loramoon/adventofcode.com_game_2022/tree/main/Day_1)\n\n    Sorry,
        I cannot paste my code in a good format...", "edited": 1670087634.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyrla4n", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python, my_repo: &lt;a href=\"https://github.com/loramoon/adventofcode.com_game_2022/tree/main/Day_1\"&gt;https://github.com/loramoon/adventofcode.com_game_2022/tree/main/Day_1&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Sorry,
        I cannot paste my code in a good format...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyrla4n/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670086369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyuax1i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670131266.0, "send_replies": true,
        "parent_id": "t1_iyrcpur", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyuax1i", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuax1i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670131266.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyrcpur", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "seasonalbroke", "can_mod_post": false,
        "created_utc": 1670082879.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_1gg75vq5", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Go template using
        only sprig functions\n```\n{{- $total := list }}\n{{- range $elf := regexSplit
        \"\\n\\n\"  .Calories -1 }}\n    {{- $counter := 0 }}\n    {{- range $cals
        := regexSplit \"\\n\" $elf -1 }}\n        {{- $counter = atoi $cals | add
        $counter }}\n    {{- end }}\n    {{- $total = append $total $counter -}}\n{{
        end -}}\n\n{{$first := 0 -}}\n{{$second := 0 -}}\n{{$third := 0 }}\n\n{{-
        range $total}}\n    {{- if gt . $first}}\n        {{- $third = $second}}\n        {{-
        $second = $first}}\n        {{- $first = .}}\n    {{- else if gt . $second}}\n        {{-
        $third = $second}}\n        {{- $second = .}}\n    {{- else if gt . $third}}\n        {{-
        $third = . -}}\n    {{end -}}\n{{end -}}\nPart 1 : {{$first}}\nPart 2 : {{add
        $first $second $third}}\n```\n\nMade difficult by sprig lacking sort or max
        operators for lists.", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyrcpur", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go
        template using only sprig functions\n```\n{{- $total := list }}\n{{- range
        $elf := regexSplit &amp;quot;\\n\\n&amp;quot;  .Calories -1 }}\n    {{- $counter
        := 0 }}\n    {{- range $cals := regexSplit &amp;quot;\\n&amp;quot; $elf -1
        }}\n        {{- $counter = atoi $cals | add $counter }}\n    {{- end }}\n    {{-
        $total = append $total $counter -}}\n{{ end -}}&lt;/p&gt;\n\n&lt;p&gt;{{$first
        := 0 -}}\n{{$second := 0 -}}\n{{$third := 0 }}&lt;/p&gt;\n\n&lt;p&gt;{{- range
        $total}}\n    {{- if gt . $first}}\n        {{- $third = $second}}\n        {{-
        $second = $first}}\n        {{- $first = .}}\n    {{- else if gt . $second}}\n        {{-
        $third = $second}}\n        {{- $second = .}}\n    {{- else if gt . $third}}\n        {{-
        $third = . -}}\n    {{end -}}\n{{end -}}\nPart 1 : {{$first}}\nPart 2 : {{add
        $first $second $third}}\n```&lt;/p&gt;\n\n&lt;p&gt;Made difficult by sprig
        lacking sort or max operators for lists.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyrcpur/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670082879.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyr3a2g", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "V1per_Zero", "can_mod_post": false, "created_utc":
        1670078624.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_j7teqsaq", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Part 1 and 2 in Python, here is the Topaz
        [Link](https://topaz.github.io/paste/#XQAAAQCKAQAAAAAAAAA7mkrvHeIvDZUizuO2LI0KXEPUFLLgeIPRqbv/0boLpBFLWKouPjRZJcx6l6Qqwod9SccP33+u0rxvZDQzUe2h5PxHwRR6DfLGQJO3CHQPv+wrvO9onaKlXLxfi4Q9DpQB2Huk3i0MqYYXETEqYqUURPbVICXN2ZmoSHZTRnPFSDNn6AYeMma5FqCkopZG3HWCt5uSsP6+xRAcGJR1zhCiUdy8ywoNr0O9gBJYHlFy/Ic0oVUxgNOPsRktQqyMsV7Z3ecfcvmNvs7QtMWWF2MriaxjnTYxlnBbzypVJ/nz684SGwbpdGL34Cqk/ww995spjoi6m60j/nWemw==).\n\n[My
        Repo](https://github.com/V1perZerofy/Advent-of-Code)", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyr3a2g", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part 1 and 2 in Python, here
        is the Topaz &lt;a href=\"https://topaz.github.io/paste/#XQAAAQCKAQAAAAAAAAA7mkrvHeIvDZUizuO2LI0KXEPUFLLgeIPRqbv/0boLpBFLWKouPjRZJcx6l6Qqwod9SccP33+u0rxvZDQzUe2h5PxHwRR6DfLGQJO3CHQPv+wrvO9onaKlXLxfi4Q9DpQB2Huk3i0MqYYXETEqYqUURPbVICXN2ZmoSHZTRnPFSDNn6AYeMma5FqCkopZG3HWCt5uSsP6+xRAcGJR1zhCiUdy8ywoNr0O9gBJYHlFy/Ic0oVUxgNOPsRktQqyMsV7Z3ecfcvmNvs7QtMWWF2MriaxjnTYxlnBbzypVJ/nz684SGwbpdGL34Cqk/ww995spjoi6m60j/nWemw==\"&gt;Link&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/V1perZerofy/Advent-of-Code\"&gt;My Repo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyr3a2g/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670078624.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyr2pzp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "s3aker", "can_mod_post": false, "created_utc":
        1670078348.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_3xauwsi0", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Raku [solution](https://glot.io/snippets/gfzrc5t76q).",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyr2pzp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Raku
        &lt;a href=\"https://glot.io/snippets/gfzrc5t76q\"&gt;solution&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyr2pzp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670078348.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "izg3hor", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BramboraSK",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_izg1n00", "score":
        2, "author_fullname": "t2_1072xumd", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "It''s just a function
        that I wrote to make opening files easier, the content of it is\n\n    def
        day(day: int) -&gt; str:\n        with open(f\"{day}.in\") as file:\n            return
        file.read()", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_izg3hor", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s
        just a function that I wrote to make opening files easier, the content of
        it is&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def day(day: int) -&amp;gt; str:\n    with
        open(f&amp;quot;{day}.in&amp;quot;) as file:\n        return file.read()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izg3hor/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670534166.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670534166.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "izg1n00", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mpercich", "can_mod_post": false, "created_utc":
        1670533445.0, "send_replies": true, "parent_id": "t1_iyqrzp7", "score": 1,
        "author_fullname": "t2_sfhcmcue", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "&gt;from aoc import day\n\nHow
        can I install the aoc library?", "edited": false, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_izg1n00", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;from aoc import day&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;How
        can I install the aoc library?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/izg1n00/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670533445.0,
        "author_flair_text": null, "treatment_tags": [], "collapsed": false, "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 1}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "ups": 2, "removal_reason": null, "link_id": "t3_z9ezjb",
        "author_flair_template_id": null, "likes": null, "replies": {"kind": "Listing",
        "data": {"after": null, "dist": null, "modhash": "", "geo_filter": "", "children":
        [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyr412h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BramboraSK",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iyr195w", "score":
        1, "author_fullname": "t2_1072xumd", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Oh right, I kinda forgot
        about that. I''ve edited my post so it uses a function that closes the file
        after reading it.", "edited": false, "top_awarded_type": null, "downs": 0,
        "author_flair_css_class": null, "name": "t1_iyr412h", "is_submitter": false,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh right, I kinda forgot about
        that. I&amp;#39;ve edited my post so it uses a function that closes the file
        after reading it.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyr412h/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670078992.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1670078992.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyr195w", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iyqrzp7", "score": 2, "approved_by": null, "report_reasons":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "Did you ever
        close the input file?", "edited": false, "author_flair_css_class": null, "collapsed":
        false, "downs": 0, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Did
        you ever close the input file?&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "subreddit_type": "public",
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyr195w/",
        "num_reports": null, "locked": false, "name": "t1_iyr195w", "created": 1670077605.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670077605.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], "before":
        null}}, "user_reports": [], "saved": false, "id": "iyqrzp7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "BramboraSK", "can_mod_post": false, "created_utc":
        1670072326.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_1072xumd", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# My Python 3 solution\n\n    from aoc import
        day\n    \n    input = sorted([sum(map(int, inventory.splitlines())) for inventory
        in day(1).split(2 * chr(10))])\n    \n    print(f\"Part 1: {input[-1]}\")\n    print(f\"Part
        2: {sum(input[-3:])}\")\n    \n    # One-Liner\n    # print(f\"Part 1: {sorted([sum(map(int,
        inventory.splitlines())) for inventory in day(1).split(2 * chr(10))])[-1]}\\nPart
        2: {sum(sorted([sum(map(int, inventory.splitlines())) for inventory in day(1).split(2
        * chr(10))])[-3:])}\")", "edited": 1670261690.0, "top_awarded_type": null,
        "author_flair_css_class": null, "name": "t1_iyqrzp7", "is_submitter": false,
        "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;My Python 3 solution&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        aoc import day\n\ninput = sorted([sum(map(int, inventory.splitlines())) for
        inventory in day(1).split(2 * chr(10))])\n\nprint(f&amp;quot;Part 1: {input[-1]}&amp;quot;)\nprint(f&amp;quot;Part
        2: {sum(input[-3:])}&amp;quot;)\n\n# One-Liner\n# print(f&amp;quot;Part 1:
        {sorted([sum(map(int, inventory.splitlines())) for inventory in day(1).split(2
        * chr(10))])[-1]}\\nPart 2: {sum(sorted([sum(map(int, inventory.splitlines()))
        for inventory in day(1).split(2 * chr(10))])[-3:])}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyqrzp7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670072326.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyqpyq8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "dellfm", "can_mod_post": false, "created_utc":
        1670070964.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 4,
        "author_fullname": "t2_13nsvw", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Google Sheets\n\nPart 1\n\n    =MAX(ARRAYFORMULA(BYROW(SPLIT(TRANSPOSE(SPLIT(JOIN(\"-\",
        IF(ISBLANK(B2:B), \"x\", B2:B)), \"x\")), \"-\"), LAMBDA(x, SUM(x)))))\n\nPart
        2\n\n    =SUM(QUERY(ARRAYFORMULA(BYROW(SPLIT(TRANSPOSE(SPLIT(JOIN(\"-\", IF(ISBLANK(B2:B),
        \"x\", B2:B)), \"x\")), \"-\"), LAMBDA(x, SUM(x)))), \"order by Col1 desc
        limit 3\"))", "edited": 1670075166.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyqpyq8", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Google
        Sheets&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=MAX(ARRAYFORMULA(BYROW(SPLIT(TRANSPOSE(SPLIT(JOIN(&amp;quot;-&amp;quot;,
        IF(ISBLANK(B2:B), &amp;quot;x&amp;quot;, B2:B)), &amp;quot;x&amp;quot;)),
        &amp;quot;-&amp;quot;), LAMBDA(x, SUM(x)))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=SUM(QUERY(ARRAYFORMULA(BYROW(SPLIT(TRANSPOSE(SPLIT(JOIN(&amp;quot;-&amp;quot;,
        IF(ISBLANK(B2:B), &amp;quot;x&amp;quot;, B2:B)), &amp;quot;x&amp;quot;)),
        &amp;quot;-&amp;quot;), LAMBDA(x, SUM(x)))), &amp;quot;order by Col1 desc
        limit 3&amp;quot;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyqpyq8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670070964.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 4}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "ups": 1, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyuaye6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670131289.0, "send_replies": true, "parent_id": "t1_iyqnbrn",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "Please edit your post
        to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyuaye6", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuaye6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670131289.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyqnbrn", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1, "approved_by":
        null, "report_reasons": null, "all_awardings": [], "subreddit_id": "t5_3b3wa",
        "body": "[deleted]", "edited": false, "downs": 0, "author_flair_css_class":
        null, "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "associated_award": null, "stickied":
        false, "subreddit_type": "public", "can_gild": false, "top_awarded_type":
        null, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyqnbrn/",
        "num_reports": null, "locked": false, "name": "t1_iyqnbrn", "created": 1670069029.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1670069029.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyuskqi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Metarineo",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iyuayw6", "score":
        1, "author_fullname": "t2_upw7txtv", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "changed. Thanx for the
        tip. :-)", "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyuskqi", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;changed.
        Thanx for the tip. :-)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuskqi/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670144607.0,
        "author_flair_text": null, "treatment_tags": [], "created_utc": 1670144607.0,
        "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0, "depth":
        2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyuayw6", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670131297.0, "send_replies": true, "parent_id": "t1_iyqkxif",
        "score": 2, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~Please edit your post
        to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1670181004.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyuayw6", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please edit your
        post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuayw6/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670131297.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyqkxif", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Metarineo", "can_mod_post": false, "created_utc":
        1670067060.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_upw7txtv", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**PHP:**\n\nI used php because i only had
        a texteditor and a webserver, to compensate for this, i made one-liners:\n\nSolution
        for Part A:\n\n    foreach(file(''a'')as$l){$s+=$l;if($l==0){if($a&lt;$s)$a=$s;$s=0;}}echo$a;\n\nSolution
        for Part B:\n\n    foreach(file(''a'')as$l){$s+=$l;if($l==0){if($c&lt;$s)$c=$s;if($b&lt;$s){$c=$b;$b=$s;}if($a&lt;$s){$b=$a;$a=$s;}$s=0;}}echo$a+$b+$c;\n\nI
        say 42, Martin", "edited": 1670144577.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyqkxif", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PHP:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        used php because i only had a texteditor and a webserver, to compensate for
        this, i made one-liners:&lt;/p&gt;\n\n&lt;p&gt;Solution for Part A:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach(file(&amp;#39;a&amp;#39;)as$l){$s+=$l;if($l==0){if($a&amp;lt;$s)$a=$s;$s=0;}}echo$a;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Solution
        for Part B:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach(file(&amp;#39;a&amp;#39;)as$l){$s+=$l;if($l==0){if($c&amp;lt;$s)$c=$s;if($b&amp;lt;$s){$c=$b;$b=$s;}if($a&amp;lt;$s){$b=$a;$a=$s;}$s=0;}}echo$a+$b+$c;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        say 42, Martin&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyqkxif/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670067060.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 2}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyqcqje",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "typingmonk",
        "can_mod_post": false, "created_utc": 1670059751.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_mbiusziu", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "**Python3**\n\nI
        tried not having nested conditional statements. \n\nAlso, I found that people
        solving by `headq`. Might take some time look into it.\n\n    first, second,
        third = 0, 0, 0\n    elf_calories = 0\n    \n    with open(''./01-input.txt'',
        ''r'') as f:\n        lines = f.readlines()\n        for line in lines:\n            line
        = line.strip()\n            if line != '''':\n                elf_calories
        += int(line)\n                continue\n            if elf_calories &gt;=
        first:\n                third = second\n                second = first\n                first
        = elf_calories\n            elif elf_calories &gt;= second:\n                third
        = second\n                second = elf_calories\n            elif elf_calories
        &gt;= third:\n                third = elf_calories\n            elf_calories
        = 0\n\n        print(first)\n        print(first + second + third)", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iyqcqje",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        tried not having nested conditional statements. &lt;/p&gt;\n\n&lt;p&gt;Also,
        I found that people solving by &lt;code&gt;headq&lt;/code&gt;. Might take
        some time look into it.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;first, second,
        third = 0, 0, 0\nelf_calories = 0\n\nwith open(&amp;#39;./01-input.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n    lines = f.readlines()\n    for line in lines:\n        line
        = line.strip()\n        if line != &amp;#39;&amp;#39;:\n            elf_calories
        += int(line)\n            continue\n        if elf_calories &amp;gt;= first:\n            third
        = second\n            second = first\n            first = elf_calories\n        elif
        elf_calories &amp;gt;= second:\n            third = second\n            second
        = elf_calories\n        elif elf_calories &amp;gt;= third:\n            third
        = elf_calories\n        elf_calories = 0\n\n    print(first)\n    print(first
        + second + third)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyqcqje/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670059751.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyq5dnc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "snowe2010", "can_mod_post": false, "created_utc":
        1670053340.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 4,
        "author_fullname": "t2_53c7i", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Ruby\nhttps://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2022/day01/day01.rb\n\n    def
        prioritize(lines)\n      lines.map(&amp;:to_i).slice_when { |i| i == 0 }.to_a.map
        { |arr| arr.sum }\n    end\n\n    execute(1) do |lines|\n      prioritize(lines).max\n    end\n\n    execute(2)
        do |lines|\n      prioritize(lines).sort![-3..-1].sum\n    end\n\n# Kotlin\n\nhttps://github.com/snowe2010/advent-of-code/blob/master/kotlin_aoc/src/main/kotlin/aoc2022/day1.kt\n\n    \n    \n    private
        fun day01() {\n        day(2022, 1) {\n            execute(1) { day01p1(it)
        }\n            execute(2) { day01p2(it) }\n        }\n    }\n    \n    private
        fun day01p1(lines: List&lt;String&gt;): Int {\n        val indexes = listOf(-1)
        + lines.indexesOf(\"\") + listOf(lines.size)\n        return indexes\n            .windowed(2)\n            .maxOf
        { (a, b) -&gt; lines.subList(a + 1, b).sumOf { it.toInt() } }\n    }\n    \n    private
        fun day01p2(lines: List&lt;String&gt;): Int {\n        val indexes = listOf(-1)
        + lines.indexesOf(\"\") + listOf(lines.size)\n        return indexes\n            .windowed(2)\n            .map
        { (a, b) -&gt; lines.subList(a + 1, b).sumOf { it.toInt() } }\n            .sortedDescending()\n            .subList(0,
        3)\n            .sum()\n    }\n    \n    private fun &lt;E&gt; Iterable&lt;E&gt;.indexesOf(e:
        E) = mapIndexedNotNull { index, elem -&gt; index.takeIf { elem == e } }",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyq5dnc", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Ruby&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2022/day01/day01.rb\"&gt;https://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2022/day01/day01.rb&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        prioritize(lines)\n  lines.map(&amp;amp;:to_i).slice_when { |i| i == 0 }.to_a.map
        { |arr| arr.sum }\nend\n\nexecute(1) do |lines|\n  prioritize(lines).max\nend\n\nexecute(2)
        do |lines|\n  prioritize(lines).sort![-3..-1].sum\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h1&gt;Kotlin&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/snowe2010/advent-of-code/blob/master/kotlin_aoc/src/main/kotlin/aoc2022/day1.kt\"&gt;https://github.com/snowe2010/advent-of-code/blob/master/kotlin_aoc/src/main/kotlin/aoc2022/day1.kt&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private
        fun day01() {\n    day(2022, 1) {\n        execute(1) { day01p1(it) }\n        execute(2)
        { day01p2(it) }\n    }\n}\n\nprivate fun day01p1(lines: List&amp;lt;String&amp;gt;):
        Int {\n    val indexes = listOf(-1) + lines.indexesOf(&amp;quot;&amp;quot;)
        + listOf(lines.size)\n    return indexes\n        .windowed(2)\n        .maxOf
        { (a, b) -&amp;gt; lines.subList(a + 1, b).sumOf { it.toInt() } }\n}\n\nprivate
        fun day01p2(lines: List&amp;lt;String&amp;gt;): Int {\n    val indexes = listOf(-1)
        + lines.indexesOf(&amp;quot;&amp;quot;) + listOf(lines.size)\n    return indexes\n        .windowed(2)\n        .map
        { (a, b) -&amp;gt; lines.subList(a + 1, b).sumOf { it.toInt() } }\n        .sortedDescending()\n        .subList(0,
        3)\n        .sum()\n}\n\nprivate fun &amp;lt;E&amp;gt; Iterable&amp;lt;E&amp;gt;.indexesOf(e:
        E) = mapIndexedNotNull { index, elem -&amp;gt; index.takeIf { elem == e }
        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq5dnc/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670053340.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 4}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyxrllv", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "MontyCrane", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iyqjtn5", "score": 1, "author_fullname": "t2_qknae",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "Sorry for the late reply! My only excuse is: the compiler told
        me to do it! Here''s my latest solution to Day 1:\n\n[paste](https://topaz.github.io/paste/#XQAAAQDXAgAAAAAAAAA6nMjJFMpQiatRg5tMnpmeD/f/eUk41B9+eD/kcliAWpzqCKt9aYGmiE0HmpQc3QrAfeT+hawe8sA65FSVL4ohZPvR2K/+/fxDBj2dDMoKEkwElBXVjj39t8VNF0dBBOPBxUxTyM++/o60rbczaa7HIo0A3iJ+0ff8VajHyoeC78leQuTqWI/mWjMjgt5slT1o1VEjRP+5VUIWJY/rRGu44Ktm+I57ZVANKWHYb9tkvmoE2w9ee0DPqVmdbtdw+rSsdCWDlWFreqqbjbq1StgFV34vqvPEU2meifq3K7wGr1jnD9SHy+cajwQWeo6EcPH/zEzaxBf9BHQS/XaT0kDBMdGu7ArrgVQvS35eTFfkhU0tMSxjV1PwWVCMIeOqjxgnTiTJ+y+gWMhRJT9TO0J6FgN1rhN9cA2AImVtm6cH+zLG6W9xP+fVrLgrPQKViDMLIWFscMQib8LH6IDm7lybgV//FAT1YHzWOy8GuH+1yzidN8oDxlAVcDI5uj/YcZF851FXBzjbxiD+2Xtu)",
        "edited": false, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyxrllv", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry
        for the late reply! My only excuse is: the compiler told me to do it! Here&amp;#39;s
        my latest solution to Day 1:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDXAgAAAAAAAAA6nMjJFMpQiatRg5tMnpmeD/f/eUk41B9+eD/kcliAWpzqCKt9aYGmiE0HmpQc3QrAfeT+hawe8sA65FSVL4ohZPvR2K/+/fxDBj2dDMoKEkwElBXVjj39t8VNF0dBBOPBxUxTyM++/o60rbczaa7HIo0A3iJ+0ff8VajHyoeC78leQuTqWI/mWjMjgt5slT1o1VEjRP+5VUIWJY/rRGu44Ktm+I57ZVANKWHYb9tkvmoE2w9ee0DPqVmdbtdw+rSsdCWDlWFreqqbjbq1StgFV34vqvPEU2meifq3K7wGr1jnD9SHy+cajwQWeo6EcPH/zEzaxBf9BHQS/XaT0kDBMdGu7ArrgVQvS35eTFfkhU0tMSxjV1PwWVCMIeOqjxgnTiTJ+y+gWMhRJT9TO0J6FgN1rhN9cA2AImVtm6cH+zLG6W9xP+fVrLgrPQKViDMLIWFscMQib8LH6IDm7lybgV//FAT1YHzWOy8GuH+1yzidN8oDxlAVcDI5uj/YcZF851FXBzjbxiD+2Xtu\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyxrllv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670197305.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670197305.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyqjtn5", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "FetchMeMyHat", "can_mod_post": false,
        "created_utc": 1670066121.0, "send_replies": true, "parent_id": "t1_iypsud5",
        "score": 1, "author_fullname": "t2_3y600gmm", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "I also just started
        to learn Rust and your code was informative, thanks!\n\nI have one question
        about this part:\n\n    for (key, value) in &amp;map {\n        if value &gt;
        &amp;max {\n            max = *value;\n            win = *key;\n        }\n    }\n\nAny
        reason why you borrow here instead of just moving?", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyqjtn5", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I also just started to learn
        Rust and your code was informative, thanks!&lt;/p&gt;\n\n&lt;p&gt;I have one
        question about this part:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (key, value)
        in &amp;amp;map {\n    if value &amp;gt; &amp;amp;max {\n        max = *value;\n        win
        = *key;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any reason why you
        borrow here instead of just moving?&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyqjtn5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670066121.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iypsud5", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "MontyCrane", "can_mod_post": false, "created_utc":
        1670044190.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_qknae", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I''ve just started learning Rust, so part
        one took me a couple of days (still working on part two). Any feedback is
        greatly appreciated!\n\n[paste](https://topaz.github.io/paste/#XQAAAQBlAwAAAAAAAAA6nMjJFMpQiatRZcHeSa9QCfq2XKCi+rQgSSMMZBjAYcAcjuSV0SwAaMhYt728dEvAFcpepnlu6aEQqLEWogO66APGbdG0MRCyjPciQs/6MrvEtI38xFbJCOPtx3/6Q+an6Q/q/UxNX5IAF458fndgNWadNzt8c2KA+3ZOv7HBi1OOo5zY8C6vm9hZlA2UKkaVW5zwkiy+vqK2+RhQbXsdmxpae0ZldlgONLAVzL8f8Xjf5xXnp04Kh58hvJf/bHd377WA53hWX+Nyn/zgWxOk/Welp8rvYi2/X9lCZlLdTVJB5uYfmCwg4u9cqkBp3/wyoJBj8yEQUjqP4e+Uoc2sqAADhKcoHzrQCKmN1LrCPjXtHP9Q4/oNHsXSFbptFZ6IvRHARuLZrrX9DexSdL3i9rbFfxbu7MmJFVQoYwGLRX+DQuXHx1qVsk6DHxFgTJ4TrdPxRVvII9QdIwxgYqMmSYf5Pu6yohSV9mKlVN2pzGy+od0/2fdwXGsFyhoYI7FhcqaMGzvCxW9b9fVormG4gtXRCgpABacALjevxuzrTkE4Nd4V0FKsEjZJ/3OjuQA=)",
        "edited": 1670047107.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iypsud5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve
        just started learning Rust, so part one took me a couple of days (still working
        on part two). Any feedback is greatly appreciated!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBlAwAAAAAAAAA6nMjJFMpQiatRZcHeSa9QCfq2XKCi+rQgSSMMZBjAYcAcjuSV0SwAaMhYt728dEvAFcpepnlu6aEQqLEWogO66APGbdG0MRCyjPciQs/6MrvEtI38xFbJCOPtx3/6Q+an6Q/q/UxNX5IAF458fndgNWadNzt8c2KA+3ZOv7HBi1OOo5zY8C6vm9hZlA2UKkaVW5zwkiy+vqK2+RhQbXsdmxpae0ZldlgONLAVzL8f8Xjf5xXnp04Kh58hvJf/bHd377WA53hWX+Nyn/zgWxOk/Welp8rvYi2/X9lCZlLdTVJB5uYfmCwg4u9cqkBp3/wyoJBj8yEQUjqP4e+Uoc2sqAADhKcoHzrQCKmN1LrCPjXtHP9Q4/oNHsXSFbptFZ6IvRHARuLZrrX9DexSdL3i9rbFfxbu7MmJFVQoYwGLRX+DQuXHx1qVsk6DHxFgTJ4TrdPxRVvII9QdIwxgYqMmSYf5Pu6yohSV9mKlVN2pzGy+od0/2fdwXGsFyhoYI7FhcqaMGzvCxW9b9fVormG4gtXRCgpABacALjevxuzrTkE4Nd4V0FKsEjZJ/3OjuQA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypsud5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670044190.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iypmy8x", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TheBrownJohnBrown", "can_mod_post": false,
        "created_utc": 1670040929.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_14q87b", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Here''s my solution
        in C#  \n[https://github.com/adhurjaty/AdventOfCode/tree/master/Day2](https://github.com/adhurjaty/AdventOfCode/tree/master/Day2)  \nWent
        with a circular double linked list because I wanted to prove something I guess",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iypmy8x", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        my solution in C#&lt;br/&gt;\n&lt;a href=\"https://github.com/adhurjaty/AdventOfCode/tree/master/Day2\"&gt;https://github.com/adhurjaty/AdventOfCode/tree/master/Day2&lt;/a&gt;&lt;br/&gt;\nWent
        with a circular double linked list because I wanted to prove something I guess&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypmy8x/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670040929.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iypnlys",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670041284.0, "send_replies": true,
        "parent_id": "t1_iypmn9k", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~psst: your last curly brace is outside the code block.~~  Edit: all good.",
        "edited": 1670050786.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iypnlys", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;psst:
        your last curly brace is outside the code block.&lt;/del&gt;  Edit: all good.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypnlys/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670041284.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iypmn9k", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "joshlemer", "can_mod_post": false, "created_utc":
        1670040768.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_3l14r", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Golang  \n  \n\tpackage main\n\n\timport
        (\n\t\t\"bufio\"\n\t\t\"fmt\"\n\t\t\"os\"\n\t\t\"strconv\"\n\n\t\t\"github.com/dogmatiq/kyu\"\n\t)\n\n\t//
        part 1\n\t// const topN = 1\n\t// part 2\n\tconst topN = 3\n\n\tfunc main()
        {\n\n\t\tf, err := os.Open(\"day1/input.txt\")\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tdefer
        f.Close()\n\n\t\tscanner := bufio.NewScanner(f)\n\n\t\tdeque := kyu.PDeque{\n\t\t\tLess:
        func(a, b interface{}) bool { return a.(int) &lt; b.(int) },\n\t\t}\n\n\t\tcalsOfCurrentReindeer
        := 0\n\t\tfor scanner.Scan() {\n\t\t\tline := scanner.Text()\n\n\t\t\tif line
        == \"\" {\n\t\t\t\tif deque.Len() &gt;= topN {\n\t\t\t\t\tsmallest, _ := deque.Peek()\n\t\t\t\t\tif
        smallest.Value.(int) &lt; calsOfCurrentReindeer {\n\t\t\t\t\t\tdeque.Pop()\n\t\t\t\t\t\tdeque.Push(calsOfCurrentReindeer)\n\t\t\t\t\t}\n\t\t\t\t}
        else {\n\t\t\t\t\tdeque.Push(calsOfCurrentReindeer)\n\t\t\t\t}\n\t\t\t\tcalsOfCurrentReindeer
        = 0\n\t\t\t} else {\n\t\t\t\tcals, err := strconv.Atoi(line)\n\t\t\t\tif err
        != nil || cals &lt; 0 {\n\t\t\t\t\tpanic(fmt.Sprintf(\"received line ''%s'',
        which is not a valid positive integer\", line))\n\t\t\t\t}\n\t\t\t\tcalsOfCurrentReindeer
        += cals\n\t\t\t}\n\t\t}\n\n\t\tfor {\n\t\t\tbiggest, ok := deque.PopBack()\n\t\t\tif
        !ok {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tfmt.Println(biggest.(int))\n\t\t}\n\t}",
        "edited": 1670046780.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iypmn9k", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Golang  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n    &amp;quot;bufio&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;strconv&amp;quot;\n\n    &amp;quot;github.com/dogmatiq/kyu&amp;quot;\n)\n\n//
        part 1\n// const topN = 1\n// part 2\nconst topN = 3\n\nfunc main() {\n\n    f,
        err := os.Open(&amp;quot;day1/input.txt&amp;quot;)\n    if err != nil {\n        panic(err)\n    }\n    defer
        f.Close()\n\n    scanner := bufio.NewScanner(f)\n\n    deque := kyu.PDeque{\n        Less:
        func(a, b interface{}) bool { return a.(int) &amp;lt; b.(int) },\n    }\n\n    calsOfCurrentReindeer
        := 0\n    for scanner.Scan() {\n        line := scanner.Text()\n\n        if
        line == &amp;quot;&amp;quot; {\n            if deque.Len() &amp;gt;= topN
        {\n                smallest, _ := deque.Peek()\n                if smallest.Value.(int)
        &amp;lt; calsOfCurrentReindeer {\n                    deque.Pop()\n                    deque.Push(calsOfCurrentReindeer)\n                }\n            }
        else {\n                deque.Push(calsOfCurrentReindeer)\n            }\n            calsOfCurrentReindeer
        = 0\n        } else {\n            cals, err := strconv.Atoi(line)\n            if
        err != nil || cals &amp;lt; 0 {\n                panic(fmt.Sprintf(&amp;quot;received
        line &amp;#39;%s&amp;#39;, which is not a valid positive integer&amp;quot;,
        line))\n            }\n            calsOfCurrentReindeer += cals\n        }\n    }\n\n    for
        {\n        biggest, ok := deque.PopBack()\n        if !ok {\n            break\n        }\n        fmt.Println(biggest.(int))\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypmn9k/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670040768.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iypmkq5", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "joshlemer", "can_mod_post": false, "created_utc":
        1670040727.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_3l14r", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Python\n\n    maxCals = 0\n    calsOfCurrentReindeer
        = 0\n    with open(''day1/input.txt'', ''r'') as f:\n        for line in f:\n            if
        line == ''\\n'':\n                maxCals = max(maxCals, calsOfCurrentReindeer)\n                calsOfCurrentReindeer
        = 0\n                continue\n            try:\n                cals = int(line)\n            except
        Exception:\n                raise Exception(f''line {line} not a valid positive
        number'')\n            \n            calsOfCurrentReindeer += cals \n    print(maxCals)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iypmkq5", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;maxCals
        = 0\ncalsOfCurrentReindeer = 0\nwith open(&amp;#39;day1/input.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as f:\n    for line in f:\n        if line == &amp;#39;\\n&amp;#39;:\n            maxCals
        = max(maxCals, calsOfCurrentReindeer)\n            calsOfCurrentReindeer =
        0\n            continue\n        try:\n            cals = int(line)\n        except
        Exception:\n            raise Exception(f&amp;#39;line {line} not a valid
        positive number&amp;#39;)\n\n        calsOfCurrentReindeer += cals \nprint(maxCals)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypmkq5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670040727.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq4o0i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "joshlemer",
        "can_mod_post": false, "created_utc": 1670052739.0, "send_replies": true,
        "parent_id": "t1_iypmidp", "score": 1, "author_fullname": "t2_3l14r", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Here''s one with a MinMaxPriorityQueue in clojure  (using Guava''s Heap implementation)  \n\n    (let
        [lines (line-seq (clojure.java.io/reader \"input.txt\"))\n          deque
        (-&gt; (MinMaxPriorityQueue/orderedBy\n                     (reify java.util.Comparator\n                       (compare
        [_ a b] (- b a))))\n                    (.maximumSize 3)\n                    (.create))]
        \n      (reduce (fn [curr-cals line]\n                (if (empty? line)\n                  (do
        (.add deque curr-cals)\n                      0)\n                  (+ curr-cals
        (parse-long line))))\n              0 \n              lines)\n      (.toArray
        deque))", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyq4o0i", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s
        one with a MinMaxPriorityQueue in clojure  (using Guava&amp;#39;s Heap implementation)  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(let
        [lines (line-seq (clojure.java.io/reader &amp;quot;input.txt&amp;quot;))\n      deque
        (-&amp;gt; (MinMaxPriorityQueue/orderedBy\n                 (reify java.util.Comparator\n                   (compare
        [_ a b] (- b a))))\n                (.maximumSize 3)\n                (.create))]
        \n  (reduce (fn [curr-cals line]\n            (if (empty? line)\n              (do
        (.add deque curr-cals)\n                  0)\n              (+ curr-cals (parse-long
        line))))\n          0 \n          lines)\n  (.toArray deque))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq4o0i/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670052739.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq4oiv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "joshlemer",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iypnnl7", "score":
        1, "author_fullname": "t2_3l14r", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "Thanks!", "edited": false,
        "top_awarded_type": null, "downs": 0, "author_flair_css_class": null, "name":
        "t1_iyq4oiv", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq4oiv/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670052750.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670052750.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iypnnl7", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670041308.0, "send_replies": true, "parent_id": "t1_iypmidp",
        "score": 1, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~Please edit your post
        to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1670050804.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iypnnl7", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please edit your
        post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypnnl7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670041308.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iypmidp", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "joshlemer", "can_mod_post": false, "created_utc":
        1670040691.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_3l14r", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Clojure:  \n  \n    (loop [lines (line-seq
        (clojure.java.io/reader \"input.txt\"))\n           max-cals 0\n           curr-cals
        0]\n      (if-let [line (first lines)]\n        (let [ls (rest lines)]\n          (if
        (empty? line)\n            (recur ls (max max-cals curr-cals) 0)\n            (let
        [cals (parse-long line)]\n              (if (or (nil? cals) (neg? cals))\n                (throw  (ex-info
        (str \"''\" line \"'' is not a valid positive number\") {}))\n                (recur
        ls max-cals (+ curr-cals cals))))))\n        max-cals))", "edited": 1670044423.0,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iypmidp",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Clojure:  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(loop
        [lines (line-seq (clojure.java.io/reader &amp;quot;input.txt&amp;quot;))\n       max-cals
        0\n       curr-cals 0]\n  (if-let [line (first lines)]\n    (let [ls (rest
        lines)]\n      (if (empty? line)\n        (recur ls (max max-cals curr-cals)
        0)\n        (let [cals (parse-long line)]\n          (if (or (nil? cals) (neg?
        cals))\n            (throw  (ex-info (str &amp;quot;&amp;#39;&amp;quot; line
        &amp;quot;&amp;#39; is not a valid positive number&amp;quot;) {}))\n            (recur
        ls max-cals (+ curr-cals cals))))))\n    max-cals))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypmidp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670040691.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iypit0e", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tinfern2", "can_mod_post": false, "created_utc":
        1670038712.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_xw3whzp", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "I decided to use a min heap of size three
        using the Python heapq library.  \n\n\n[Here''s my code](https://topaz.github.io/paste/#XQAAAQBdAgAAAAAAAAA0m0pnuFI8c9q4WY2st59WoSBFxapS5Jn75svet2fFl8DHf6GSV4yDeQO0qrWClMYMBmU1hOiCIhee40P01gQFD+Ctg8IlWzr4/PoTqyOeN2pLVNUytUWsJjxDykMdRV/XPWKp2bGN5BJGeB2bZP2R2G311fzI6wHTJ7tlGMQiw/iEBU7f6MWI8uRNHYK34c0k0j/2Ihs7Ddf9AaR2tEooqL8Sk78TYhh/vvBX4wKI2+LBGvJouHaGfDinzlZMGP0ykh6l0S+2A9lP0W+FBHA3nWDcC8oamuA1VxTYbvHWITxUrZ36XO20j6WWwDvY9Jyv5clsvF8aTwzEbiZelN1PCdIDKHdQLHTTm+0Q1z7knszn2GfvwmAez1eIR/75V6Q=)
        in a paste!", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iypit0e", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        decided to use a min heap of size three using the Python heapq library.  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBdAgAAAAAAAAA0m0pnuFI8c9q4WY2st59WoSBFxapS5Jn75svet2fFl8DHf6GSV4yDeQO0qrWClMYMBmU1hOiCIhee40P01gQFD+Ctg8IlWzr4/PoTqyOeN2pLVNUytUWsJjxDykMdRV/XPWKp2bGN5BJGeB2bZP2R2G311fzI6wHTJ7tlGMQiw/iEBU7f6MWI8uRNHYK34c0k0j/2Ihs7Ddf9AaR2tEooqL8Sk78TYhh/vvBX4wKI2+LBGvJouHaGfDinzlZMGP0ykh6l0S+2A9lP0W+FBHA3nWDcC8oamuA1VxTYbvHWITxUrZ36XO20j6WWwDvY9Jyv5clsvF8aTwzEbiZelN1PCdIDKHdQLHTTm+0Q1z7knszn2GfvwmAez1eIR/75V6Q=\"&gt;Here&amp;#39;s
        my code&lt;/a&gt; in a paste!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypit0e/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670038712.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyp2y9b", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "chubbc", "can_mod_post": false, "created_utc":
        1670030840.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_acpvk", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "# Fractran (Part 1)\n\n    [3/5, 5/7, 13/17,
        17/19, 29/31, 31/37, 43/47, 47/53, 61/67, 67/71, 59/61, 41/2537, 41/59, 41/43,
        23/1189, 23/41, 23/29, 11/299, 11/23, 11/13, 2/33, 2/11, 2/3]\n\nA program
        written entirely in fractions? For anyone interested in the details I wrote
        a separate [longer post](https://www.reddit.com/r/adventofcode/comments/za3m6c/2022_day_1_part_1_fractran_the_return_of_fractran/).",
        "edited": 1670031274.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyp2y9b", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Fractran
        (Part 1)&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;[3/5, 5/7, 13/17, 17/19, 29/31,
        31/37, 43/47, 47/53, 61/67, 67/71, 59/61, 41/2537, 41/59, 41/43, 23/1189,
        23/41, 23/29, 11/299, 11/23, 11/13, 2/33, 2/11, 2/3]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;A
        program written entirely in fractions? For anyone interested in the details
        I wrote a separate &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/za3m6c/2022_day_1_part_1_fractran_the_return_of_fractran/\"&gt;longer
        post&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyp2y9b/", "subreddit_type":
        "public", "locked": false, "report_reasons": null, "created": 1670030840.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "num_reports":
        null, "ups": 3}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": {"kind": "Listing", "data": {"after": null,
        "dist": null, "modhash": "", "geo_filter": "", "children": [{"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyptql8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "CSguyMX", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iypn0in", "score": 1, "author_fullname": "t2_u1cpyho3",
        "removal_reason": null, "approved_by": null, "mod_note": null, "all_awardings":
        [], "body": "edited :D", "edited": false, "top_awarded_type": null, "downs":
        0, "author_flair_css_class": null, "name": "t1_iyptql8", "is_submitter": false,
        "collapsed": false, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;edited :D&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyptql8/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670044742.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670044742.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iypn0in", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670040962.0, "send_replies": true, "parent_id": "t1_iyorcdj",
        "score": 2, "author_fullname": "t2_60niu", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "~~Please edit your post
        to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1670044984.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iypn0in", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please edit your
        post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": "moderator", "associated_award": null, "stickied":
        false, "author_premium": false, "can_gild": false, "link_id": "t3_z9ezjb",
        "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypn0in/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670040962.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyorcdj", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "CSguyMX", "can_mod_post": false, "created_utc":
        1670025296.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_u1cpyho3", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "JAVA: Day 1 part 1 and 2. This way you dont
        have to store all the values in an N array and then sort. You will be keeping
        the top three values all the time. The only down side it''s that it looks
        ugly.\n[paste](https://topaz.github.io/paste/#XQAAAQDLBgAAAAAAAAAlEEcRXh4hjcGwOk0eMEnsHhXh6tVoCHu/GTB9bKj6mqHt9NE9bXPbMHfdB84iHiUdszHI+9QUGP5rRLAfm937vf35pN3gOo246XYOkk2NcRbI54PNMcYTufkjxlPE3aXYL6MjM34gq1FHt4BsBzLMGCGGMqKuzOcFS/5qQLKr2YCMD2582629MaSzr5H2Dn+/HD1kfmbnpz6QSygG2UU2cnjcMVeq2EZx6rk6QHP3C1aznkumdjY5E2MYaHLFzSoBaxkKnqh6Ll4OgSCSwKLY+VtRg2qvbNzQoVIruaMaP68gXSMZvH7OyMtNCrV9tMRb+64uddKVjvsCDpqTCp9rXURp+F0kNQxRfFxAoycvNlqETrUh8+iFNCCLx93TV/+BpxHO0VTQr2IDF/IBnwzTQT6+AnT3WXZ26Tlmq3lZaQ2noFs6eg4xfhTIhpHsyLsy/J+z+ep0tXTismwZtQjKg0D5efhWCIVbUB3IRuprsG1ciyZySAi3X3or2nqEo54BydgxwcgULRBsGnNtWzkDsveD1NZAjK/RR6PuhmerP4A8eSysB4TQKgapBq8t+hVzzf3ZaJmqDAfc+DI8EDi/gupIfbFuDbyjkpFJEOwKUAkTQt3xb6DK+UMhP8SxKjoEirh9CPz5iCXOFOMgjtL5ziuFLOch+winUex17K8Xay+CJpsafQ+F8TNJXyC5Pcb/vuDfvnqWOF7wAlQ1u+mfKvumna4cDufNh3BPgxtpGCphaJ70+0t/RT3cYZZDD89fksNUMrxEg8AV3dhFsjKJstAsArIjIgit0pu9uazaA0v9MXycGb1LdQGKMSV5MHrKZOA7DhWKgX5hjWyzUXvLnz0HGeaotQZYOWiTj7vPex+cT3LFwvFR0gXcgV1yaIyWTI8l8A4wcKLh/vVYVxk=)",
        "edited": 1670044717.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyorcdj", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JAVA:
        Day 1 part 1 and 2. This way you dont have to store all the values in an N
        array and then sort. You will be keeping the top three values all the time.
        The only down side it&amp;#39;s that it looks ugly.\n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDLBgAAAAAAAAAlEEcRXh4hjcGwOk0eMEnsHhXh6tVoCHu/GTB9bKj6mqHt9NE9bXPbMHfdB84iHiUdszHI+9QUGP5rRLAfm937vf35pN3gOo246XYOkk2NcRbI54PNMcYTufkjxlPE3aXYL6MjM34gq1FHt4BsBzLMGCGGMqKuzOcFS/5qQLKr2YCMD2582629MaSzr5H2Dn+/HD1kfmbnpz6QSygG2UU2cnjcMVeq2EZx6rk6QHP3C1aznkumdjY5E2MYaHLFzSoBaxkKnqh6Ll4OgSCSwKLY+VtRg2qvbNzQoVIruaMaP68gXSMZvH7OyMtNCrV9tMRb+64uddKVjvsCDpqTCp9rXURp+F0kNQxRfFxAoycvNlqETrUh8+iFNCCLx93TV/+BpxHO0VTQr2IDF/IBnwzTQT6+AnT3WXZ26Tlmq3lZaQ2noFs6eg4xfhTIhpHsyLsy/J+z+ep0tXTismwZtQjKg0D5efhWCIVbUB3IRuprsG1ciyZySAi3X3or2nqEo54BydgxwcgULRBsGnNtWzkDsveD1NZAjK/RR6PuhmerP4A8eSysB4TQKgapBq8t+hVzzf3ZaJmqDAfc+DI8EDi/gupIfbFuDbyjkpFJEOwKUAkTQt3xb6DK+UMhP8SxKjoEirh9CPz5iCXOFOMgjtL5ziuFLOch+winUex17K8Xay+CJpsafQ+F8TNJXyC5Pcb/vuDfvnqWOF7wAlQ1u+mfKvumna4cDufNh3BPgxtpGCphaJ70+0t/RT3cYZZDD89fksNUMrxEg8AV3dhFsjKJstAsArIjIgit0pu9uazaA0v9MXycGb1LdQGKMSV5MHrKZOA7DhWKgX5hjWyzUXvLnz0HGeaotQZYOWiTj7vPex+cT3LFwvFR0gXcgV1yaIyWTI8l8A4wcKLh/vVYVxk=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyorcdj/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670025296.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "j01qm2o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Patrick20872",
        "can_mod_post": false, "created_utc": 1670937892.0, "send_replies": true,
        "parent_id": "t1_iyoow1x", "score": 1, "author_fullname": "t2_16l8yw", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "bruh", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_j01qm2o", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;bruh&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/j01qm2o/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670937892.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyoow1x", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "dopandasreallyexist", "can_mod_post":
        false, "created_utc": 1670024153.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 6, "author_fullname": "t2_17zrwiyh", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "APL one-liner for
        both parts:\n\n    1 3+/\u2364\u2191\u00a8\u2282{\u2375[\u2352\u2375]}(+/\u234e\u00a8)\u00a8((\u00d7\u2262\u00a8)\u2286\u22a2)\u2283\u2395NGET''input.txt''1\n\nIn
        a nutshell:\n\n- `\u2283\u2395NGET''input.txt''1` - read input as vector of
        vectors\n- `((\u00d7\u2262\u00a8)\u2286\u22a2)` - split on empty line\n- `(+/\u234e\u00a8)\u00a8`
        - for each group, turn strings into numbers and sum\n- `{\u2375[\u2352\u2375]}`
        - sort in descending order\n- `1 3+/\u2364\u2191\u00a8\u2282` - sums of first
        1 and 3 numbers", "edited": false, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyoow1x", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;APL
        one-liner for both parts:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;1 3+/\u2364\u2191\u00a8\u2282{\u2375[\u2352\u2375]}(+/\u234e\u00a8)\u00a8((\u00d7\u2262\u00a8)\u2286\u22a2)\u2283\u2395NGET&amp;#39;input.txt&amp;#39;1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In
        a nutshell:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;\u2283\u2395NGET&amp;#39;input.txt&amp;#39;1&lt;/code&gt;
        - read input as vector of vectors&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;((\u00d7\u2262\u00a8)\u2286\u22a2)&lt;/code&gt;
        - split on empty line&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;(+/\u234e\u00a8)\u00a8&lt;/code&gt;
        - for each group, turn strings into numbers and sum&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;{\u2375[\u2352\u2375]}&lt;/code&gt;
        - sort in descending order&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;1 3+/\u2364\u2191\u00a8\u2282&lt;/code&gt;
        - sums of first 1 and 3 numbers&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyoow1x/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670024153.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 6}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyoo2jp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Ecstatic-Flamingo-33", "can_mod_post":
        false, "created_utc": 1670023770.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 3, "author_fullname": "t2_j21lvld0", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "**Parts 1 and 2 in
        in Python**\n\nI''m still very much a coding newbie, but working on past AOCs
        has been good practice. Excited to try working on it in December this year!\n\n    with
        open(\"day1.txt\") as day_1_data: \n        data = day_1_data.readlines()\n        data
        = [int(line.rstrip(\"\\n\")) if line.strip() else line.replace(\"\\n\", \"next
        elf\") for line in data] \n        data.append(\"next elf\")\n    \n    #
        Part 1\n    all_elf_totals = []\n    elf_total = 0\n    for item in data:\n        if
        item != \"next elf\":\n            elf_total += item\n        else:\n            all_elf_totals.append(elf_total)\n            elf_total
        = 0\n    \n    print(\"The highest total that an elf is carrying is: \", max(all_elf_totals),
        \"calories\")\n    \n    # Part 2\n    sorted_elf_totals = sorted(all_elf_totals)\n    top_three_total
        = sum(sorted_elf_totals[-3:])\n    print(\"The top three elves are carrying:
        \", top_three_total, \"calories\")", "edited": 1670024778.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyoo2jp", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Parts 1 and 2
        in in Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m still very much
        a coding newbie, but working on past AOCs has been good practice. Excited
        to try working on it in December this year!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;day1.txt&amp;quot;) as day_1_data: \n    data = day_1_data.readlines()\n    data
        = [int(line.rstrip(&amp;quot;\\n&amp;quot;)) if line.strip() else line.replace(&amp;quot;\\n&amp;quot;,
        &amp;quot;next elf&amp;quot;) for line in data] \n    data.append(&amp;quot;next
        elf&amp;quot;)\n\n# Part 1\nall_elf_totals = []\nelf_total = 0\nfor item in
        data:\n    if item != &amp;quot;next elf&amp;quot;:\n        elf_total +=
        item\n    else:\n        all_elf_totals.append(elf_total)\n        elf_total
        = 0\n\nprint(&amp;quot;The highest total that an elf is carrying is: &amp;quot;,
        max(all_elf_totals), &amp;quot;calories&amp;quot;)\n\n# Part 2\nsorted_elf_totals
        = sorted(all_elf_totals)\ntop_three_total = sum(sorted_elf_totals[-3:])\nprint(&amp;quot;The
        top three elves are carrying: &amp;quot;, top_three_total, &amp;quot;calories&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyoo2jp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670023770.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyon1gp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "themanushiya", "can_mod_post": false,
        "created_utc": 1670023296.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_t9iyki4i", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Python 3.11 [solution](https://github.com/mahakaal/adventofcode/blob/main/2022/day1/day1.py)
        \n\nA bit late but was working :P catching up whenever I''ll get a chance",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyon1gp", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3.11 &lt;a href=\"https://github.com/mahakaal/adventofcode/blob/main/2022/day1/day1.py\"&gt;solution&lt;/a&gt;
        &lt;/p&gt;\n\n&lt;p&gt;A bit late but was working :P catching up whenever
        I&amp;#39;ll get a chance&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyon1gp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670023296.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyoakcg", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "sterbl", "can_mod_post": false, "created_utc":
        1670017669.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_n3274", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Pico-8**\n\nPico-8 Numbers are capped at
        32767.9999847412109375 so I immediately had overflow issues and had to split
        it out into kilocalories + calories\nImplemented string comparisons to bubble
        sort zero padded number strings for part 2\n\n[Part1](https://www.pico-8-edu.com/?c=AHB4YQNvAdFvcP-NV18fnVS8wP3nP8IJRwczxxwTBMk1JjnHKck9LjrINRcZ6iTv3OSdo6yVpraqgiYIwrQ4OzjplLOnkub6rZmh629qDwuMNHb9E9RjBy1G0TO0r9B1RZZkz-AKTxCGA71AQJE1q8VqlKVJm0ZRsZEnWdSPpMFLRGUahQoCC68QToSrmiS_yMuyT3XD5ELky7IwatSCGrnQvUAunHHX126YGXTSsNUmVuIgXnB7rTezpT0w0I0M66OtVWmY5SMLkd-W4ihccVYwERRzQVHmA2lZzQVN9BAKBulA1peZOVQCljZ2asu4p2r2lEJCMZIgiZtmZK6punRAJ0SLPFdKlMoKJkoKCuE8UyG4KYNgZykJltyfncD_S6SG1M2RaSEWS-ZRLis82Yigw5RTrk9gq3Igb_XEU225ObNj2_ULTRkKhQhADKRB21eaDe7ZCBcl1XaOs9GNsxvC60lvHJF46fXQYYoVYQmBNU_qtzTNsl3dECayVYJDygzSYlk1qssmQTayNTGwILoQxDtC5IylSEMp4kSLMOx0Kpbc0quZmUQ2oQvrTFBiJ5OVzLK9enJuS3hgrd-YGkgGBibniiODSCvpTsVZQwwA&amp;g=w-w-w-w1HQHw-w2Xw-w3Xw-w2HQH)\n\n[Part2](https://www.pico-8-edu.com/?c=AHB4YQSOAklvcP-NV18fnVS8wP3nP8IJRwczxxwTBMk1JjnHKck9LjrINRcZ6iTv3OSdo6yVpt45OzjplLOnkub6rZmh62-aOCww0tj1T1CPHbQYRc-QvkLXFVmSPcMrPEEYDvTBRhfW8Wgd1WWVdvXq6szOwszCQt-mAytj6V1xtlO2TVSWVdpZI4rDsDZbYKao9ks50ixlI48wlKVVUEfZUJNV942ETahAIBAwER85kNi-7teR7j9K_6QbqUeqiZ2ZMk3aFfPHiYsCQQrm2GpmllUMSh9MbZtBrGBua2rMkm54h7WNdmlqIp3aljXwxuZIcWNQSQ25QTLEDjLhmZYJf_QNC_mxvp8MFRu7cKMwkM2ZJEUhxrwzORkMDLbaJDOlW80muRJNhTNLMnCtLKvftmQQZpwVlEGRB2KLq0HdTsks7JVdHGfmkGOYymcWLOOeqlmUZQlHhzwR5VU1M9RUZTzZFYVyyfrq8I5mshjxhhUVFLNMDHZMC6rQfNGKFBFazCqf3Rg2W6tzOrBhkOcrE731SsN5zZNt63q5oREMsYxtNJlMomBxplhh6eXZzNYDVse_qwa3n2Ao2jZQVUqd6KzPrdN2lKsTkhsNtrogmptbGVxzT7G3rcY2t22jfkXB2R7t0pDgjDCL6TG3HgRCeJ6UoWmaLbu6oUuEvZSr1DOkxbJsST9Pgmxuc6Mf0GsIFnaEyBlLkYZi8tMiCTtJj2G3TMrimSSIw70tkYomVIkRyOmWR5eq2WptbeHMthZTNlpsVCEF&amp;g=w-w-w-w1HQHw-w2Xw-w3Xw-w2HQH)",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iyoakcg", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Pico-8&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Pico-8
        Numbers are capped at 32767.9999847412109375 so I immediately had overflow
        issues and had to split it out into kilocalories + calories\nImplemented string
        comparisons to bubble sort zero padded number strings for part 2&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.pico-8-edu.com/?c=AHB4YQNvAdFvcP-NV18fnVS8wP3nP8IJRwczxxwTBMk1JjnHKck9LjrINRcZ6iTv3OSdo6yVpraqgiYIwrQ4OzjplLOnkub6rZmh629qDwuMNHb9E9RjBy1G0TO0r9B1RZZkz-AKTxCGA71AQJE1q8VqlKVJm0ZRsZEnWdSPpMFLRGUahQoCC68QToSrmiS_yMuyT3XD5ELky7IwatSCGrnQvUAunHHX126YGXTSsNUmVuIgXnB7rTezpT0w0I0M66OtVWmY5SMLkd-W4ihccVYwERRzQVHmA2lZzQVN9BAKBulA1peZOVQCljZ2asu4p2r2lEJCMZIgiZtmZK6punRAJ0SLPFdKlMoKJkoKCuE8UyG4KYNgZykJltyfncD_S6SG1M2RaSEWS-ZRLis82Yigw5RTrk9gq3Igb_XEU225ObNj2_ULTRkKhQhADKRB21eaDe7ZCBcl1XaOs9GNsxvC60lvHJF46fXQYYoVYQmBNU_qtzTNsl3dECayVYJDygzSYlk1qssmQTayNTGwILoQxDtC5IylSEMp4kSLMOx0Kpbc0quZmUQ2oQvrTFBiJ5OVzLK9enJuS3hgrd-YGkgGBibniiODSCvpTsVZQwwA&amp;amp;g=w-w-w-w1HQHw-w2Xw-w3Xw-w2HQH\"&gt;Part1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.pico-8-edu.com/?c=AHB4YQSOAklvcP-NV18fnVS8wP3nP8IJRwczxxwTBMk1JjnHKck9LjrINRcZ6iTv3OSdo6yVpt45OzjplLOnkub6rZmh62-aOCww0tj1T1CPHbQYRc-QvkLXFVmSPcMrPEEYDvTBRhfW8Wgd1WWVdvXq6szOwszCQt-mAytj6V1xtlO2TVSWVdpZI4rDsDZbYKao9ks50ixlI48wlKVVUEfZUJNV942ETahAIBAwER85kNi-7teR7j9K_6QbqUeqiZ2ZMk3aFfPHiYsCQQrm2GpmllUMSh9MbZtBrGBua2rMkm54h7WNdmlqIp3aljXwxuZIcWNQSQ25QTLEDjLhmZYJf_QNC_mxvp8MFRu7cKMwkM2ZJEUhxrwzORkMDLbaJDOlW80muRJNhTNLMnCtLKvftmQQZpwVlEGRB2KLq0HdTsks7JVdHGfmkGOYymcWLOOeqlmUZQlHhzwR5VU1M9RUZTzZFYVyyfrq8I5mshjxhhUVFLNMDHZMC6rQfNGKFBFazCqf3Rg2W6tzOrBhkOcrE731SsN5zZNt63q5oREMsYxtNJlMomBxplhh6eXZzNYDVse_qwa3n2Ao2jZQVUqd6KzPrdN2lKsTkhsNtrogmptbGVxzT7G3rcY2t22jfkXB2R7t0pDgjDCL6TG3HgRCeJ6UoWmaLbu6oUuEvZSr1DOkxbJsST9Pgmxuc6Mf0GsIFnaEyBlLkYZi8tMiCTtJj2G3TMrimSSIw70tkYomVIkRyOmWR5eq2WptbeHMthZTNlpsVCEF&amp;amp;g=w-w-w-w1HQHw-w2Xw-w3Xw-w2HQH\"&gt;Part2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyoakcg/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670017669.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyo9lki", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "wzkx", "can_mod_post": false, "created_utc":
        1670017255.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_t1qbo", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**J** J-lang J language...\n\nLet''s use
        the interpreter for calculations :) That is, first get a string like ''(237+38+374),(288),(123+384+583+343)'',
        then make the interpreter calculate it.\n\n    echo(&gt;./,+/@({~3&amp;{.@\\:))\".''('','')'',~rplc&amp;((2$LF);''),('';LF;''+'')}:CR-.~fread''01.dat''",
        "edited": 1670017626.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iyo9lki", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;J&lt;/strong&gt;
        J-lang J language...&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s use the interpreter
        for calculations :) That is, first get a string like &amp;#39;(237+38+374),(288),(123+384+583+343)&amp;#39;,
        then make the interpreter calculate it.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo(&amp;gt;./,+/@({~3&amp;amp;{.@\\:))&amp;quot;.&amp;#39;(&amp;#39;,&amp;#39;)&amp;#39;,~rplc&amp;amp;((2$LF);&amp;#39;),(&amp;#39;;LF;&amp;#39;+&amp;#39;)}:CR-.~fread&amp;#39;01.dat&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyo9lki/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670017255.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iypnq0b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670041344.0, "send_replies": true,
        "parent_id": "t1_iyo6sgo", "score": 2, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "~~Inlined code is intended for `short snippets` of code only. ~~\n\n~~Please
        edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.~~\n\nEdit:
        thanks for fixing it!  &lt;3", "edited": 1670131329.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iypnq0b", "is_submitter":
        true, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;~~Inlined code is intended
        for &lt;code&gt;short snippets&lt;/code&gt; of code only. ~~&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        thanks for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypnq0b/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670041344.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyo6sgo", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "PaxPumpkin", "can_mod_post": false, "created_utc":
        1670016075.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_2oltpjop", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "**Texas Instruments 99-4/A Extended Basic**\n\nMy
        C# solution runs sub-1ms, and is unremarkable to any of the others already
        posted, so I''ll hold off on that.This TI-99 4/A code took a tad over 10 minutes
        to complete execution.\n\nNo, it isn''t optimal. I haven''t touched this language
        in decades. I just thought it would be fun. The best part was getting the
        input into a TI-readable disk image, honestly.\n\nCould have been shorter,
        clearly. I also wanted a perpetual display update running owing to the long
        execution time. That includes updates on the line of input being examined,
        the current max elf, the top three max counts, and the summation thereof.\n\n\\[Imgur\\]([https://i.imgur.com/WSkJEVh.png](https://i.imgur.com/WSkJEVh.png))\n\n&amp;#x200B;\n\n    10
        CALL CLEAR \n    20 DISPLAY AT(6,1)SIZE(25):\"WHICH ELF GOTS GOODIES\"     \n    30
        OPEN #1:\"DSK1.INPUTF\",SEQUENTIAL ,DISPLAY ,INPUT ,FIXED 6 \n    40 LINECOUNTER=0
        \n    50 ENDFILE=0 \n    60 CURRENTTOTAL=0 \n    70 MAX1=0 \n    80 MAX2=0
        \n    90 MAX3=0 \n    100 SORTING=0 \n    110 SUMMAX3=0     \n    120 INPUT
        #1:CALORIE$ \n    130 IF CALORIE$=\"\" OR CALORIE$=\" \" OR CALORIE$=\"12345.\"
        THEN GOSUB 250 \n    140 CALORIE=VAL(CALORIE$) \n    150 CURRENTTOTAL=CURRENTTOTAL+CALORIE\u001d
        \n    160 LINECOUNTER=LINECOUNTER+1 \n    170 DISPLAY AT(7,1)SIZE(25):LINECOUNTER;\"-\";CALORIE$;\"-\";CURRENTTOTAL
        \n    180 IF EOF(1)THEN 200 \n    190 GOTO 120 \n    200 CLOSE #1 \n    210
        ENDFILE=1\n    220 DISPLAY AT(9,1)SIZE(25):\"ELF WITH MOST HAS\";MAX1 \n    230
        DISPLAY AT(10,1)SIZE(25):\"TOP 3 HAVE\";SUMMAX3 \n    240 IF ENDFILE=1 THEN
        END ELSE RETURN \n    250 CALORIE$=\"0\" \n    260 IF (CURRENTTOTAL&gt;MAX1)THEN
        GOSUB 320 \n    270 IF SORTING=0 AND CURRENTTOTAL&gt;MAX2 THEN GOSUB 410 \n    280
        IF SORTING=0 AND CURRENTTOTAL&gt;MAX3 THEN GOSUB 460 \n    290 CURRENTTOTAL=0     \n    300
        SORTING=0 \n    310 RETURN \n    320 SORTING=1 \n    330 MAX3=MAX2 \n    340
        MAX2=MAX1 \n    350 MAX1=CURRENTTOTAL \n    360 DISPLAY AT(8,1)SIZE(28):\"TOP
        3\";MAX1;MAX2;MAX3 \n    370 SUMMAX3=MAX1+MAX2+MAX3 \n    380 CURRENTTOTAL=0
        \n    390 GOSUB 220 \n    400 RETURN \n    410 SORTING=1 \n    420 MAX3=MAX2
        \n    430 MAX2=CURRENTTOTAL \n    440 GOTO 360 \n    450 MAX3=CURRENTTOTAL
        \n    460 SORTING=1 \n    470 GOTO 360", "edited": 1670084091.0, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyo6sgo", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Texas Instruments
        99-4/A Extended Basic&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;My C# solution
        runs sub-1ms, and is unremarkable to any of the others already posted, so
        I&amp;#39;ll hold off on that.This TI-99 4/A code took a tad over 10 minutes
        to complete execution.&lt;/p&gt;\n\n&lt;p&gt;No, it isn&amp;#39;t optimal.
        I haven&amp;#39;t touched this language in decades. I just thought it would
        be fun. The best part was getting the input into a TI-readable disk image,
        honestly.&lt;/p&gt;\n\n&lt;p&gt;Could have been shorter, clearly. I also wanted
        a perpetual display update running owing to the long execution time. That
        includes updates on the line of input being examined, the current max elf,
        the top three max counts, and the summation thereof.&lt;/p&gt;\n\n&lt;p&gt;[Imgur](&lt;a
        href=\"https://i.imgur.com/WSkJEVh.png\"&gt;https://i.imgur.com/WSkJEVh.png&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;10
        CALL CLEAR \n20 DISPLAY AT(6,1)SIZE(25):&amp;quot;WHICH ELF GOTS GOODIES&amp;quot;     \n30
        OPEN #1:&amp;quot;DSK1.INPUTF&amp;quot;,SEQUENTIAL ,DISPLAY ,INPUT ,FIXED
        6 \n40 LINECOUNTER=0 \n50 ENDFILE=0 \n60 CURRENTTOTAL=0 \n70 MAX1=0 \n80 MAX2=0
        \n90 MAX3=0 \n100 SORTING=0 \n110 SUMMAX3=0     \n120 INPUT #1:CALORIE$ \n130
        IF CALORIE$=&amp;quot;&amp;quot; OR CALORIE$=&amp;quot; &amp;quot; OR CALORIE$=&amp;quot;12345.&amp;quot;
        THEN GOSUB 250 \n140 CALORIE=VAL(CALORIE$) \n150 CURRENTTOTAL=CURRENTTOTAL+CALORIE
        \n160 LINECOUNTER=LINECOUNTER+1 \n170 DISPLAY AT(7,1)SIZE(25):LINECOUNTER;&amp;quot;-&amp;quot;;CALORIE$;&amp;quot;-&amp;quot;;CURRENTTOTAL
        \n180 IF EOF(1)THEN 200 \n190 GOTO 120 \n200 CLOSE #1 \n210 ENDFILE=1\n220
        DISPLAY AT(9,1)SIZE(25):&amp;quot;ELF WITH MOST HAS&amp;quot;;MAX1 \n230 DISPLAY
        AT(10,1)SIZE(25):&amp;quot;TOP 3 HAVE&amp;quot;;SUMMAX3 \n240 IF ENDFILE=1
        THEN END ELSE RETURN \n250 CALORIE$=&amp;quot;0&amp;quot; \n260 IF (CURRENTTOTAL&amp;gt;MAX1)THEN
        GOSUB 320 \n270 IF SORTING=0 AND CURRENTTOTAL&amp;gt;MAX2 THEN GOSUB 410 \n280
        IF SORTING=0 AND CURRENTTOTAL&amp;gt;MAX3 THEN GOSUB 460 \n290 CURRENTTOTAL=0     \n300
        SORTING=0 \n310 RETURN \n320 SORTING=1 \n330 MAX3=MAX2 \n340 MAX2=MAX1 \n350
        MAX1=CURRENTTOTAL \n360 DISPLAY AT(8,1)SIZE(28):&amp;quot;TOP 3&amp;quot;;MAX1;MAX2;MAX3
        \n370 SUMMAX3=MAX1+MAX2+MAX3 \n380 CURRENTTOTAL=0 \n390 GOSUB 220 \n400 RETURN
        \n410 SORTING=1 \n420 MAX3=MAX2 \n430 MAX2=CURRENTTOTAL \n440 GOTO 360 \n450
        MAX3=CURRENTTOTAL \n460 SORTING=1 \n470 GOTO 360\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyo6sgo/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670016075.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 3}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": {"kind": "Listing", "data": {"after": null, "dist": null,
        "modhash": "", "geo_filter": "", "children": [{"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "awarders": [], "mod_reason_by": null, "banned_by": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iz7udkq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nickforddesign",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iyqbou5", "score":
        2, "author_fullname": "t2_o66bv63", "removal_reason": null, "approved_by":
        null, "mod_note": null, "all_awardings": [], "body": "lmao wow ok bruh, well
        I would welcome constructive criticism, as opposed to hate... Plus this is
        like the quintessential place to write code that is not production-level.
        glhf", "edited": 1670381987.0, "top_awarded_type": null, "downs": 0, "author_flair_css_class":
        null, "name": "t1_iz7udkq", "is_submitter": false, "collapsed": false, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;lmao
        wow ok bruh, well I would welcome constructive criticism, as opposed to hate...
        Plus this is like the quintessential place to write code that is not production-level.
        glhf&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null, "distinguished":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "link_id": "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iz7udkq/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670381071.0, "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670381071.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyqbou5", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "diaz2168", "can_mod_post": false, "created_utc":
        1670058789.0, "send_replies": true, "parent_id": "t1_iyo0lky", "score": -1,
        "author_fullname": "t2_jens1bps", "removal_reason": null, "approved_by": null,
        "mod_note": null, "all_awardings": [], "body": "This had to be the ugliest
        Node solution out there. I would hate to work with you.", "edited": false,
        "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iyqbou5",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This had to be the ugliest
        Node solution out there. I would hate to work with you.&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyqbou5/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670058789.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": -1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iyo0lky", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "nickforddesign", "can_mod_post": false,
        "created_utc": 1670013572.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_o66bv63", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Node.js solution ([repo](https://github.com/nickforddev/AoC/blob/master/2022/Day01/day01.js))\n\n    //
        https://adventofcode.com/2022/day/1\n\n    import { loadInputs, test, submit,
        sum } from ''../../utils/index.mjs''\n\n    const { exampleData, inputData
        } = await loadInputs(import.meta)\n\n    const parseData = rawData =&gt;\n      rawData\n        .trim()\n        .split(''\\n\\n'')\n        .map(inventory
        =&gt; inventory.split(''\\n'').map(Number))\n\n    const partOne = rawData
        =&gt; {\n      const data = parseData(rawData)\n      return Math.max(...data.map(sum))\n    }\n\n    await
        test(partOne, exampleData)\n    submit(await test(partOne, inputData, 69836),
        1)\n\n    const partTwo = rawData =&gt; {\n      const data = parseData(rawData)\n      const
        summed = data.map(sum).sort((a, b) =&gt; (a &lt; b ? 1 : -1))\n      return
        sum(summed.slice(0, 3))\n    }\n\n    await test(partTwo, exampleData)\n    submit(await
        test(partTwo, inputData, 207968), 2)", "edited": false, "top_awarded_type":
        null, "author_flair_css_class": null, "name": "t1_iyo0lky", "is_submitter":
        false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair": false,
        "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Node.js solution (&lt;a href=\"https://github.com/nickforddev/AoC/blob/master/2022/Day01/day01.js\"&gt;repo&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        https://adventofcode.com/2022/day/1\n\nimport { loadInputs, test, submit,
        sum } from &amp;#39;../../utils/index.mjs&amp;#39;\n\nconst { exampleData,
        inputData } = await loadInputs(import.meta)\n\nconst parseData = rawData =&amp;gt;\n  rawData\n    .trim()\n    .split(&amp;#39;\\n\\n&amp;#39;)\n    .map(inventory
        =&amp;gt; inventory.split(&amp;#39;\\n&amp;#39;).map(Number))\n\nconst partOne
        = rawData =&amp;gt; {\n  const data = parseData(rawData)\n  return Math.max(...data.map(sum))\n}\n\nawait
        test(partOne, exampleData)\nsubmit(await test(partOne, inputData, 69836),
        1)\n\nconst partTwo = rawData =&amp;gt; {\n  const data = parseData(rawData)\n  const
        summed = data.map(sum).sort((a, b) =&amp;gt; (a &amp;lt; b ? 1 : -1))\n  return
        sum(summed.slice(0, 3))\n}\n\nawait test(partTwo, exampleData)\nsubmit(await
        test(partTwo, inputData, 207968), 2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyo0lky/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670013572.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "awarders": [], "mod_reason_by":
        null, "banned_by": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iypnrtw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670041371.0, "send_replies": true,
        "parent_id": "t1_iynzqqy", "score": 1, "author_fullname": "t2_60niu", "removal_reason":
        null, "approved_by": null, "mod_note": null, "all_awardings": [], "body":
        "Inlined code is intended for `short snippets` of code only.  Your code \"block\"
        right now hard to read.\n\nPlease edit your post to use the [four-spaces Markdown
        syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iypnrtw", "is_submitter": true, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Inlined
        code is intended for &lt;code&gt;short snippets&lt;/code&gt; of code only.  Your
        code &amp;quot;block&amp;quot; right now hard to read.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": "moderator", "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "link_id":
        "t3_z9ezjb", "unrepliable_reason": null, "author_flair_text_color": null,
        "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypnrtw/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670041371.0, "author_flair_text": null, "treatment_tags": [], "collapsed":
        false, "subreddit_name_prefixed": "r/adventofcode", "controversiality": 0,
        "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}], "before": null}},
        "user_reports": [], "saved": false, "id": "iynzqqy", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "PlazmaDolphin", "can_mod_post": false,
        "created_utc": 1670013230.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_j62ac9", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "Not the smallest thing
        ever, but I think it''s pretty understandable (though i do like spaghetti
        one-liners)\n\n`def parse(path): #makes 2D array`\r  \n`txt = open(path, ''r'')`\r  \n`out
        = []`\r  \n`subout = []`\r  \n`for line in txt:`\r  \n`if line and line !=
        ''\\n'':`\r  \n`subout.append(int(line))`\r  \n`else:`\r  \n`out.append(subout)`\r  \n`subout
        = []`\r  \n`return out`\r  \n`data = parse(''data.txt'')`\r  \n`sums = [sum(x)
        for x in data]`\r  \n`print(sum(sorted(sums, reverse=True)[:3]))`", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iynzqqy",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not the smallest thing
        ever, but I think it&amp;#39;s pretty understandable (though i do like spaghetti
        one-liners)&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;def parse(path): #makes 2D array&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;txt
        = open(path, &amp;#39;r&amp;#39;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;out
        = []&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;subout = []&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for
        line in txt:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if line and line
        != &amp;#39;\\n&amp;#39;:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;subout.append(int(line))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;else:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;out.append(subout)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;subout
        = []&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return out&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;data
        = parse(&amp;#39;data.txt&amp;#39;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sums
        = [sum(x) for x in data]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(sum(sorted(sums,
        reverse=True)[:3]))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iynzqqy/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670013230.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 1}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iynzee7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "micka190", "can_mod_post": false, "created_utc":
        1670013090.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_ei8gk", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solution in C#: \n\nhttps://github.com/micka190/advent-of-code/tree/main/2022/day%201",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iynzee7", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        solution in C#: &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/micka190/advent-of-code/tree/main/2022/day%201\"&gt;https://github.com/micka190/advent-of-code/tree/main/2022/day%201&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iynzee7/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670013090.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iynyk90", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Wilczeek", "can_mod_post": false, "created_utc":
        1670012750.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_ee1kj", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "Powershell\n\n        $aInput = Get-Content
        \"input.txt\"\r\n    $aElves = @()\r\n    $iElvesId = 0\r\n    for($i = 0;
        $i -lt $aInput.Length; $i++){\r\n        if($aInput[$i].Length -eq 0) {\r\n            if($ob)
        {\r\n                $aElves += $ob\r\n                Remove-Variable ob\r\n            }\r\n            $iElvesId++\r\n            $ob
        = New-Object psobject -Property @{\r\n                Id = $iElvesId\r\n                Calories
        = 0\r\n            }\r\n        }\r\n        else {\r\n            $ob.Calories
        += $aInput[$i]\r\n        }\r\n    }\r\n    \r\n    ## PART 1\r\n    $aElves
        | Sort-Object -Property Calories -Descending | Select-Object -First 1\r\n    \r\n    ##
        PART 2\r\n    $bestElvesCalories = 0\r\n    $bestElves = $aElves | Sort-Object
        -Property Calories -Descending | Select-Object -First 3\r\n    foreach($elf
        in $bestElves) {\r\n        $bestElvesCalories += $elf.Calories\r\n    }\r\n    $bestElvesCalories",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iynyk90", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Powershell&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    $aInput
        = Get-Content &amp;quot;input.txt&amp;quot;\n$aElves = @()\n$iElvesId = 0\nfor($i
        = 0; $i -lt $aInput.Length; $i++){\n    if($aInput[$i].Length -eq 0) {\n        if($ob)
        {\n            $aElves += $ob\n            Remove-Variable ob\n        }\n        $iElvesId++\n        $ob
        = New-Object psobject -Property @{\n            Id = $iElvesId\n            Calories
        = 0\n        }\n    }\n    else {\n        $ob.Calories += $aInput[$i]\n    }\n}\n\n##
        PART 1\n$aElves | Sort-Object -Property Calories -Descending | Select-Object
        -First 1\n\n## PART 2\n$bestElvesCalories = 0\n$bestElves = $aElves | Sort-Object
        -Property Calories -Descending | Select-Object -First 3\nforeach($elf in $bestElves)
        {\n    $bestElvesCalories += $elf.Calories\n}\n$bestElvesCalories\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iynyk90/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670012750.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iynu09o", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Available_Wonder_685", "can_mod_post":
        false, "created_utc": 1670010914.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_upuou9yn", "approved_by": null, "mod_note":
        null, "all_awardings": [], "collapsed": false, "body": "C# beginner here.
        Full repo: https://github.com/robing29/adventofcode2022/tree/main/aoc2022/aoc2022-day1\n\nReally
        struggled with the blank line in the beginning.\n\n    using System.Collections.Generic;\n    \n    //Data
        Entry\n    \n    List&lt;string&gt; strings= new List&lt;string&gt;();\n    strings
        = System.IO.File.ReadAllLines(@\"..\\..\\..\\..\\inputs\\day1.txt\").ToList();\n    \n    \n    //Part1\n    \n    int
        maximumCalories = 0;\n    int thisElfsCalories = 0;\n    \n    foreach (string
        s in strings)\n    {\n        \n        if (String.IsNullOrEmpty(s))\n        {\n            if
        (thisElfsCalories &gt;= maximumCalories)\n            {\n                maximumCalories
        = thisElfsCalories;\n            }        \n            thisElfsCalories =
        0;\n    \n        } else\n        {\n            int sInt = int.Parse(s);\n            thisElfsCalories
        += sInt;\n        }\n    }\n    Console.WriteLine(\"Maximum calories carried
        by one elf: \" + maximumCalories);\n    \n    //Part2\n    int[] topThreeElves
        = { 0, 0, 0 };\n    \n    thisElfsCalories = 0;\n    \n    foreach (string
        s in strings)\n    {\n        if (String.IsNullOrEmpty(s))\n        {\n            if
        (thisElfsCalories &gt;= topThreeElves[0])\n            {\n                topThreeElves[2]
        = topThreeElves[1];\n                topThreeElves[1] = topThreeElves[0];\n                topThreeElves[0]
        = thisElfsCalories;\n            }\n            else if (thisElfsCalories
        &gt;= topThreeElves[1])\n            {\n                topThreeElves[2] =
        topThreeElves[1];\n                topThreeElves[1] = thisElfsCalories;\n            }\n            else
        if (thisElfsCalories &gt;= topThreeElves[2])\n            {\n                topThreeElves[2]
        = thisElfsCalories;\n            }\n            Console.WriteLine(\"Log: \"
        + thisElfsCalories);\n            thisElfsCalories = 0;\n    \n        }\n        else\n        {\n            int
        sInt = int.Parse(s);\n            thisElfsCalories += sInt;\n        }\n    }\n    \n    Console.WriteLine(\"Top1:
        \" + topThreeElves[0]);\n    Console.WriteLine(\"Top2: \" + topThreeElves[1]);\n    Console.WriteLine(\"Top3:
        \" + topThreeElves[2]);\n    Console.WriteLine(\"Top3 together: \" + topThreeElves.Sum());\n    \n    Console.ReadLine();",
        "edited": false, "top_awarded_type": null, "author_flair_css_class": null,
        "name": "t1_iynu09o", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#
        beginner here. Full repo: &lt;a href=\"https://github.com/robing29/adventofcode2022/tree/main/aoc2022/aoc2022-day1\"&gt;https://github.com/robing29/adventofcode2022/tree/main/aoc2022/aoc2022-day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Really
        struggled with the blank line in the beginning.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;using
        System.Collections.Generic;\n\n//Data Entry\n\nList&amp;lt;string&amp;gt;
        strings= new List&amp;lt;string&amp;gt;();\nstrings = System.IO.File.ReadAllLines(@&amp;quot;..\\..\\..\\..\\inputs\\day1.txt&amp;quot;).ToList();\n\n\n//Part1\n\nint
        maximumCalories = 0;\nint thisElfsCalories = 0;\n\nforeach (string s in strings)\n{\n\n    if
        (String.IsNullOrEmpty(s))\n    {\n        if (thisElfsCalories &amp;gt;= maximumCalories)\n        {\n            maximumCalories
        = thisElfsCalories;\n        }        \n        thisElfsCalories = 0;\n\n    }
        else\n    {\n        int sInt = int.Parse(s);\n        thisElfsCalories +=
        sInt;\n    }\n}\nConsole.WriteLine(&amp;quot;Maximum calories carried by one
        elf: &amp;quot; + maximumCalories);\n\n//Part2\nint[] topThreeElves = { 0,
        0, 0 };\n\nthisElfsCalories = 0;\n\nforeach (string s in strings)\n{\n    if
        (String.IsNullOrEmpty(s))\n    {\n        if (thisElfsCalories &amp;gt;= topThreeElves[0])\n        {\n            topThreeElves[2]
        = topThreeElves[1];\n            topThreeElves[1] = topThreeElves[0];\n            topThreeElves[0]
        = thisElfsCalories;\n        }\n        else if (thisElfsCalories &amp;gt;=
        topThreeElves[1])\n        {\n            topThreeElves[2] = topThreeElves[1];\n            topThreeElves[1]
        = thisElfsCalories;\n        }\n        else if (thisElfsCalories &amp;gt;=
        topThreeElves[2])\n        {\n            topThreeElves[2] = thisElfsCalories;\n        }\n        Console.WriteLine(&amp;quot;Log:
        &amp;quot; + thisElfsCalories);\n        thisElfsCalories = 0;\n\n    }\n    else\n    {\n        int
        sInt = int.Parse(s);\n        thisElfsCalories += sInt;\n    }\n}\n\nConsole.WriteLine(&amp;quot;Top1:
        &amp;quot; + topThreeElves[0]);\nConsole.WriteLine(&amp;quot;Top2: &amp;quot;
        + topThreeElves[1]);\nConsole.WriteLine(&amp;quot;Top3: &amp;quot; + topThreeElves[2]);\nConsole.WriteLine(&amp;quot;Top3
        together: &amp;quot; + topThreeElves.Sum());\n\nConsole.ReadLine();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iynu09o/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670010914.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iynqazp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "LinAGKar", "can_mod_post": false, "created_utc":
        1670009427.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_hbt9n", "approved_by": null, "mod_note": null, "all_awardings":
        [], "collapsed": false, "body": "My solutions in Rust https://github.com/LinAGKar/advent-of-code-2022-rust/tree/main/day1a,
        https://github.com/LinAGKar/advent-of-code-2022-rust/tree/main/day1b", "edited":
        false, "top_awarded_type": null, "author_flair_css_class": null, "name": "t1_iynqazp",
        "is_submitter": false, "downs": 0, "author_flair_richtext": [], "author_patreon_flair":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solutions in Rust
        &lt;a href=\"https://github.com/LinAGKar/advent-of-code-2022-rust/tree/main/day1a\"&gt;https://github.com/LinAGKar/advent-of-code-2022-rust/tree/main/day1a&lt;/a&gt;,
        &lt;a href=\"https://github.com/LinAGKar/advent-of-code-2022-rust/tree/main/day1b\"&gt;https://github.com/LinAGKar/advent-of-code-2022-rust/tree/main/day1b&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iynqazp/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670009427.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 2}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "awarders": [], "mod_reason_by": null, "banned_by":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        {"kind": "Listing", "data": {"after": null, "dist": null, "modhash": "", "geo_filter":
        "", "children": [{"kind": "more", "data": {"count": 2, "name": "t1_iz0p3i7",
        "id": "iz0p3i7", "parent_id": "t1_iynpxtx", "depth": 1, "children": ["iz0p3i7",
        "iyor02n"]}}], "before": null}}, "user_reports": [], "saved": false, "id":
        "iynpxtx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "sublimnl",
        "can_mod_post": false, "created_utc": 1670009274.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_6psaq", "approved_by":
        null, "mod_note": null, "all_awardings": [], "collapsed": false, "body": "Part
        1 solve:\n```\nperl -pe''$\\=$l,if$l&gt;$\\;$l=$_==$/?0:$l+$_}{''&lt;input.txt\n```\nsorry.",
        "edited": 1670010168.0, "top_awarded_type": null, "author_flair_css_class":
        null, "name": "t1_iynpxtx", "is_submitter": false, "downs": 0, "author_flair_richtext":
        [], "author_patreon_flair": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part
        1 solve:\n&lt;code&gt;\nperl -pe&amp;#39;$\\=$l,if$l&amp;gt;$\\;$l=$_==$/?0:$l+$_}{&amp;#39;&amp;lt;input.txt\n&lt;/code&gt;\nsorry.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iynpxtx/",
        "subreddit_type": "public", "locked": false, "report_reasons": null, "created":
        1670009274.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "num_reports": null, "ups": 7}}, {"kind": "more",
        "data": {"count": 1611, "name": "t1_iyndflq", "id": "iyndflq", "parent_id":
        "t3_z9ezjb", "depth": 0, "children": ["iyndflq", "iyna5us", "iyml7p5", "iynmvck",
        "iymm9y8", "iymtg1y", "iymoetz", "iymfr3k", "iym1oim", "iyndnm7", "iyn5own",
        "iym0xxj", "iylw4iq", "iymrn28", "iymeok0", "iylvtwj", "iykty7b", "iylbokf",
        "iylyrfw", "iylrdmd", "iylpn1h", "iynanji", "iylrzr2", "iykxc31", "iymnxs4",
        "iyloqpg", "iylkrc2", "iylrl58", "iylt0c2", "iylv8l4", "iylldan", "iylr8nj",
        "iyllxtz", "iylruwg", "iylvnvr", "iykcpbh", "iykih4i", "iyl15he", "iyjxybu",
        "iyls2ng", "iylsah5", "iykw82v", "iyl7t9c", "iylbtc9", "iyl783x", "iylsfbg",
        "iymaugp", "iyjj4z7", "iylenyb", "iykh5as", "iykp93u", "iykuhvk", "iykqwil",
        "iyktzod", "iykxscx", "iyktjwk", "iykr360", "iyjrdd3", "iylbsbk", "iylrykp",
        "iylrvts", "iylofbp", "iyjtc5m", "iylahzo", "iyj8sit", "iykr4j2", "iyjufhy",
        "iylhx8m", "iyjo0p4", "iykca4b", "iyll509", "iyl2era", "iyk589m", "iyk1xr7",
        "iyjphct", "iykgq29", "iyj8hzx", "iyj9nk4", "iykopsr", "iyjr1gr", "iyjes91",
        "iykkyaf", "iylmebf", "iyk964p", "iyl3nhm", "iyk5rz1", "iyju5na", "iykt1ij",
        "iykv833", "iykl2k8", "iyknwo6", "iykbd6u", "iykhd3j", "iykillk", "iykbxca",
        "iyjosmn", "iylvz2d", "iyjdd5h", "iyiva1l", "iyjs7bn", "iyjrlwy", "iyjqdky",
        "iykf2rh", "iykhf2b", "iykjata", "iyjumwq", "iyjz08s", "iyk33x5", "iyki2hv",
        "iyjfti2", "iyk8tpt", "iyjoxe5", "iyk78oy", "iykjqu5", "iyjutdf", "iykqjpw",
        "iyigqnw", "iyjgbn4", "iyik00f", "iyjmyoj", "iyjkilt", "iyjuml8", "iyiuevh",
        "iyjzlv2", "iyk0fpn", "iykeihg", "iykhrv4", "iyjll1x", "iyizv63", "iyl6d5z",
        "iyin5hd", "iyizzou", "iyhp9mw", "iyk30jj", "iyjqu6s", "iyjqs6b", "iyjbqi4",
        "iyk2sbf", "iykr6rb", "iyjlqwe", "iyjd08l", "iyi8t6h", "iyifjlg", "iyjlma8",
        "iyj68z1", "iyi0vt0", "iykukm3", "iyji2ik", "iyk2b5l", "iyjp7up", "iyjttql",
        "iyig963", "iyjmfg2", "iyk3370", "iyk2rga", "iyi73mk", "iyj05dc", "iyippe0",
        "iyio5ot", "iyj7qvx", "iyk38p6", "iyizg5x", "iyjjlwa", "iyj6eg1", "iyj82ao",
        "iyjuwbr", "iyk42v2", "iyk8vik", "iyiglmf", "iyjo9dr", "iyk6f5r", "iyhs4pw",
        "iyimdcj", "iyjs61z", "iyjqxua", "iyjfjcb", "iyhs2br", "iyi8it6", "iyj1jqy",
        "iyk5arh", "iyk5zef", "iyjyxup", "iyjqn57", "iyjr2fv", "iyhmu7g", "iyjtywa",
        "iyjq2ke", "iykba6a", "iyj4jvs", "iyixwn5", "iyhqhyf", "iyjxqbh", "iyj9hb0",
        "iyiijcf", "iyirah1", "iyifpzv", "iykiwgh", "iyj5mny", "iyhq2wq", "iyhtfc5",
        "iyiew8r", "iyjh0by", "iyjjbuu", "iyib1g3", "iyi25hy", "iyimw2r", "iyi4gnr",
        "iykcmen", "iyjsuh9", "iyk142r", "iyjq27f", "iyjqo0n", "iyjn0xs", "iyj01y1",
        "iyjk8d1", "iyjhb6d", "iyihj07", "iyjpq76", "iyjamqj", "iyjh7lh", "iyjq8cq",
        "iyiuj74", "iyilg4g", "iyjfcnq", "iyjt0id", "iyij19r", "iygty01", "iyjpndh",
        "iygkuux", "iyjoviq", "iyjpreq", "iyivmd4", "iyi0efs", "iyhno87", "iyjuk4z",
        "iyi92dh", "iyi4yrd", "iyhwmf9", "iyidtjc", "iygrl7g", "iyi43qa", "iyh5gmk",
        "iygzx33", "iyjdde5", "iyhly7i", "iyht2wb", "iyids34", "iyifepj", "iyhckmi",
        "iyhoclc", "iyhzbnm", "iyhfatq", "iyjsr7s", "iyjk5c5", "iyj8eyl", "iyjo6pc",
        "iyjmlnl", "iyi61u1", "iyiile1", "iyiq59r", "iyh7ecp", "iyi5mb6", "iyh9s69",
        "iyh4bg4", "iyhwb6s", "iyhd2b7", "iyhk1w1", "iyhdo8q", "iyhhlqt", "iyhjx47",
        "iyjjx19", "iyjkm2g", "iyhbekg", "iyjmzei", "iyjmjti", "iyikfew", "iyi4dk8",
        "iyjt0r4", "iyhdmga", "iygtgn9", "iyiyt15", "iyiuahb", "iyh24ub", "iyjcn65",
        "iyijotf", "iyhk8ik", "iyhud6h", "iyhde68", "iyhazll", "iyig2js", "iyixtuz",
        "iyi9lor", "iyit8hi", "iygs99u", "iyglilp", "iyiwnvn", "iyk5mru", "iyj0l1g",
        "iyid3mu", "iyhhmdv", "iyh6avq", "iygk7ty", "iyh9nu7", "iygz1v6", "iyiyv19",
        "iyh4msz", "iyi41x5", "iyjdyny", "iygu4na", "iyglkya", "iyj12wv", "iyiptcs",
        "iyizsac", "iyhdtk6", "iyi58dz", "iyhsqac", "iyi7wuv", "iyi3voe", "iyhdm18",
        "iyid8ah", "iyh92tp", "iyik796", "iyj6m98", "iyj3ots", "iyhjkjw", "iyhlys6",
        "iyi42bx", "iyi03l0", "iyitfmg", "iyicmdx", "iyicsds", "iyi4egb", "iyilrwd",
        "iyhwfqd", "iyjmvn5", "iyh40eu", "iyhnuwt", "iygpln4", "iyi8c85", "iyhogu7",
        "iyibg18", "iyj2an6", "iyiz95o", "iyiev6x", "iygpogb", "iyhkd91", "iyhqeou",
        "iyhej8p", "iyhmipo", "iyh9v1e", "iyhwhv8", "iyiuo14", "iyigaiq", "iyj4wrk",
        "iyhta1w", "iyhdc65", "iyhoas8", "iyh5f37", "iyh1ocu", "iyhzopl", "iyhwkux",
        "iyhu7hi", "iyhlomk", "iyjhii0", "iyhnl8j", "iyh70zr", "iyjhoro", "iyihtt5",
        "iyioig2", "iygw4pj", "iyi2ubt", "iygvepx", "iyh8acg", "iyjrsrt", "iyijpue",
        "iyja14o", "iyha8g1", "iyjnnkz", "iyityzs", "iyhh2tg", "iyhbs19", "iyirrcf",
        "iyibwag", "iyh9cuj", "iygxthu", "iyh4u5o", "iygzohd", "iyhqehc", "iyhtniy",
        "iyhd6hi", "iyhx6dw", "iyhx7im", "iyi2jlu", "iygwh92", "iyhawrr", "iyk2msm",
        "iygnov1", "iygvva1", "iyhmy8u", "iyhg2qj", "iyhf4pi", "iyhkpo5", "iygxrp3",
        "iyhnrc6", "iyi4ypd", "iyj33ns", "iyhwp80", "iyisc1l", "iygxx9k", "iyhwkbu",
        "iyhoehu", "iygzowu", "iyhcc5a", "iyh94pi", "iyigmi0", "iyhjxcg", "iyh3qk1",
        "iyienel", "iyjfvg4", "iyghrha", "iyhn1tj", "iyi8rpl", "iyjg3qu", "iyghhlf",
        "iyih8nf", "iyiuhlp", "iyj8urz", "iyifqq9", "iyj2rpc", "iyh2xk0", "iyio3gx",
        "iygnjv0", "iyjg18i", "iyikovq", "iyjca4f", "iygretv", "iygumyg", "iyj9zcg",
        "iyi5lfb", "iyj2fnp", "iyi8o4g", "iygjifz", "iyj5tvu", "iyhap4o", "iyh1cly",
        "iyhfj16", "iygt7fy", "iyh5nde", "iygi5xr", "iyhhmuf", "iyibyuw", "iyjhev8",
        "iyjjk6w", "iygh7jy", "iyhm9bd", "iygs8y7", "iyglyla", "iyhaofh", "iyjon13",
        "iygihp4", "iygj0fa", "iyiuabl", "iyghdgp", "iygg7oy", "iyh55x1", "iyhjhbv",
        "iygifp2", "iygwwax", "iygvchv", "iyhb9y8", "iyhncoa", "iygpwyd", "iygsonm",
        "iyghinf", "iygorni", "iygk841", "iyhg8mm", "iygm5ma", "iygvtt2", "iyhhx5j",
        "iyh3qkb", "iygje2d", "iyggef3", "iyglca6", "iyi1l73", "iyggs0n", "iygipfe",
        "iyghijn", "iyggs40", "iyhj14i", "iyijtn7", "iygg75r", "iygifh5", "iygspbg",
        "iyhm1al", "iygi5po", "iyhqtzi", "iygtowk", "iyh1z60", "iyh2pvn", "iygjf6u",
        "iygxiqu", "iygtt5s", "iygiar9", "iygl9gz", "iyh8iil", "iygonqk", "iyi6v95",
        "iygml7d", "iyguic4", "iyh2jzk", "iygq7k5", "iyh9sz6", "iygtqba", "iygo7is",
        "iyh2nsp", "iyhihj8", "iygsgdd", "iygwcfb", "iygl6mf", "iygj0gb", "iygiboc",
        "iyilp2v", "iyggvx5", "iygzbp2", "iyh4j50", "iyghl2g", "iyghs29", "iyglvip",
        "iygmgvu", "iygoshr", "iygz25b", "iyh4d67", "iygx5l6", "iyh0jn5", "iygtai7",
        "iyggtxq", "iygkwuf", "iygvgm6", "iyh5meo", "iyh53if", "iygwx9e", "iyguelm",
        "iygslyw", "iyhh6i8", "iygtz22", "iyip2ky", "iyh134y", "iygot51", "iygi8pa",
        "iyig3lr", "iygihhd", "iyj1e8h", "iyh6v07", "iyi66d2", "iygqbgt", "iygst2e",
        "iygi7c9", "iyh7ico", "iyh8rkb", "iygpb55", "iygq3eu", "iyghlbt", "iyh01nr",
        "iyglq7r", "iygocru", "iyhrqsb", "iygm78r", "iygsprw", "iygnnt2", "iyhucho",
        "iygllw5", "iyh0630", "iygibnn", "iyhenrh", "iyh9uw5", "iyhqtl8", "iygxxwx",
        "iygxk18", "iygj91q", "iygmznb", "iygire9", "iyhepar", "iygibn4", "iyhp7bp",
        "iygs1yo", "iygs4zx", "iyhviwa", "iyh1sbe", "iyghgsh", "iygnqyy", "iygh5ur",
        "iyggs2n", "iyh58he", "iyh7kil", "iyhfum8", "iygrb24", "iygqs57", "iyie245",
        "iyh9omv", "iygortf", "iygr5ot", "iyh2y8f", "iyghyk7", "iygk2q0", "iyghdyp",
        "iyghuum", "iygvg47", "iyh254k", "iygjbqv", "iyggvrp", "iyhae6e", "iyglepl",
        "iygnnpp", "iygoqj0", "iyh48zd", "iyggugi", "iygu5jv", "iyhfzli", "iygka65",
        "iygld5k", "iygkxlq", "iygii8u", "iygrfdj", "iygikbe", "iygtnyj", "iyijcur",
        "iygin6x", "iyh9vm9", "iygu8w6", "iyh87eq", "iyhg6wl", "iygnrsm", "iygnv45",
        "iyggld4", "iyghtgr", "iyggqcs", "iygjsuh", "iygnqq5", "iyh4dcw", "iygls4b",
        "iyglpww", "iyhu377", "iygzep7", "iyh8y4t", "iygw0eo", "iyh9nau", "iygjpdu",
        "iyhjfge", "iygidqj", "iyhe9x7", "iygmo7x", "iyh3pws", "iygh1vn", "iyghnsf",
        "iygukmc", "iygul2m", "iygmnpp", "iyhnct3", "iyguahj", "iygnqgl", "iygilxa",
        "iygzh5i", "iygk31x", "iygtcbe", "iygikhh", "iygvd37", "iyh47kb", "iyhmkiz",
        "iygumi2", "iygq8yp", "iyhr51u", "iygpwy8", "iygh9b7", "iyh2ga8", "iygogzm",
        "iygqj28", "iygk3a4", "iygjuhs", "iygk5ym", "iyh23v3", "iygjmnl", "iyh83ef",
        "iyhnlpb", "iygiahl", "iygizh5", "iyi42o2", "iygnie1", "iyi9xmp", "iygix60",
        "iyi5ph1", "iyggmu0", "iygjmei", "iyhclqb", "iyhggf4", "iygrr0v", "iygwq3y",
        "iyh5ex1", "iyhbnku", "iyghbx9", "iyh37cn", "iyggh30", "iyh85kz", "iygojh4",
        "iygu7yp", "iygi1lg", "iyiu5e2", "iygrvl3", "iygzzzp", "iygkieb", "iygsj3n",
        "iyggsko", "iygyccj", "iyh4jvk", "iyh7vgw", "iygits6", "iygjqps", "iygzbos",
        "iygjmjd", "iygkf3o", "iygm2io", "iygksew", "iygv06u", "iyh903q", "iyglg0j",
        "iygxxq2", "iyhcntx", "iygilpw", "iyha6dn", "iyj0pbg", "iyhp9bc", "iyh27hi",
        "iygnsdd", "iyghk2v", "iygm8qt", "iygo9uo", "iygnqw6", "iygqjmn", "iygwtge",
        "iyh7938", "iyi6v6k", "iygiuk8", "iygnbrd", "iyggs37", "iygh4ev", "iygiuff",
        "iyggemo", "iygwf7e", "iygtn82", "iyghf4q", "iyhhp2z", "iygu9im", "iygmaml",
        "iyihdaz", "iygo26j", "iyggrwr", "iygtexq", "iygq9ex", "iyhchgs", "iygpi5x",
        "iyhru9e", "iyghaz9", "iyh3w62", "iygllu2", "iygk71s", "iyghhpq", "iygywj5",
        "iyh572v", "iygmlvs", "iygigso", "iygr848", "iyghhwb", "iygn1c3", "iygr6q7",
        "iygqxbs", "iygm01k", "iyghfwr", "iyh6ipy", "iygvdkc", "iyhpim5", "iygy509",
        "iygi2zb", "iygjzud", "iyhi0hs", "iyh8dn4", "iyhc157", "iyhths8", "iygiges",
        "iygul8j", "iygw4nv", "iygixyt", "iyh3ipx", "iygpvr6", "iygjyh0", "iyjglih"]}}],
        "before": null}}]'
  recorded_at: Sat, 08 Mar 2025 22:24:33 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:33 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=6CP6agQLnhQ5VGOWtG; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:33 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyndflq,iyna5us,iyml7p5,iynmvck,iymm9y8,iymtg1y,iymoetz,iymfr3k,iym1oim,iyndnm7,iyn5own,iym0xxj,iylw4iq,iymrn28,iymeok0,iylvtwj,iykty7b,iylbokf,iylyrfw,iylrdmd,iylpn1h,iynanji,iylrzr2,iykxc31,iymnxs4,iyloqpg,iylkrc2,iylrl58,iylt0c2,iylv8l4,iylldan,iylr8nj,iyllxtz,iylruwg,iylvnvr,iykcpbh,iykih4i,iyl15he,iyjxybu,iyls2ng,iylsah5,iykw82v,iyl7t9c,iylbtc9,iyl783x,iylsfbg,iymaugp,iyjj4z7,iylenyb,iykh5as,iykp93u,iykuhvk,iykqwil,iyktzod,iykxscx,iyktjwk,iykr360,iyjrdd3,iylbsbk,iylrykp,iylrvts,iylofbp,iyjtc5m,iylahzo,iyj8sit,iykr4j2,iyjufhy,iylhx8m,iyjo0p4,iykca4b,iyll509,iyl2era,iyk589m,iyk1xr7,iyjphct,iykgq29,iyj8hzx,iyj9nk4,iykopsr,iyjr1gr,iyjes91,iykkyaf,iylmebf,iyk964p,iyl3nhm,iyk5rz1,iyju5na,iykt1ij,iykv833,iykl2k8,iyknwo6,iykbd6u,iykhd3j,iykillk,iykbxca,iyjosmn,iylvz2d,iyjdd5h,iyiva1l,iyjs7bn,iyjrlwy,iyjqdky,iykf2rh,iykhf2b,iykjata,iyjumwq,iyjz08s,iyk33x5,iyki2hv,iyjfti2,iyk8tpt,iyjoxe5,iyk78oy,iykjqu5,iyjutdf,iykqjpw,iyigqnw,iyjgbn4,iyik00f,iyjmyoj,iyjkilt,iyjuml8,iyiuevh,iyjzlv2,iyk0fpn,iykeihg,iykhrv4,iyjll1x,iyizv63,iyl6d5z,iyin5hd,iyizzou,iyhp9mw,iyk30jj,iyjqu6s,iyjqs6b,iyjbqi4,iyk2sbf,iykr6rb,iyjlqwe,iyjd08l,iyi8t6h,iyifjlg,iyjlma8,iyj68z1,iyi0vt0,iykukm3,iyji2ik,iyk2b5l,iyjp7up,iyjttql,iyig963,iyjmfg2,iyk3370,iyk2rga,iyi73mk,iyj05dc,iyippe0,iyio5ot,iyj7qvx,iyk38p6,iyizg5x,iyjjlwa,iyj6eg1,iyj82ao,iyjuwbr,iyk42v2,iyk8vik,iyiglmf,iyjo9dr,iyk6f5r,iyhs4pw,iyimdcj,iyjs61z,iyjqxua,iyjfjcb,iyhs2br,iyi8it6,iyj1jqy,iyk5arh,iyk5zef,iyjyxup,iyjqn57,iyjr2fv,iyhmu7g,iyjtywa,iyjq2ke,iykba6a,iyj4jvs,iyixwn5,iyhqhyf,iyjxqbh,iyj9hb0,iyiijcf,iyirah1,iyifpzv,iykiwgh,iyj5mny,iyhq2wq,iyhtfc5,iyiew8r,iyjh0by,iyjjbuu,iyib1g3,iyi25hy,iyimw2r,iyi4gnr,iykcmen,iyjsuh9,iyk142r,iyjq27f,iyjqo0n,iyjn0xs,iyj01y1,iyjk8d1,iyjhb6d,iyihj07,iyjpq76,iyjamqj,iyjh7lh,iyjq8cq,iyiuj74,iyilg4g,iyjfcnq,iyjt0id,iyij19r,iygty01,iyjpndh,iygkuux,iyjoviq,iyjpreq,iyivmd4,iyi0efs,iyhno87,iyjuk4z,iyi92dh,iyi4yrd,iyhwmf9,iyidtjc,iygrl7g,iyi43qa,iyh5gmk,iygzx33,iyjdde5,iyhly7i,iyht2wb,iyids34,iyifepj,iyhckmi,iyhoclc,iyhzbnm,iyhfatq,iyjsr7s,iyjk5c5,iyj8eyl,iyjo6pc,iyjmlnl,iyi61u1,iyiile1,iyiq59r,iyh7ecp,iyi5mb6,iyh9s69,iyh4bg4,iyhwb6s,iyhd2b7,iyhk1w1,iyhdo8q,iyhhlqt,iyhjx47,iyjjx19,iyjkm2g,iyhbekg,iyjmzei,iyjmjti,iyikfew,iyi4dk8,iyjt0r4,iyhdmga,iygtgn9,iyiyt15,iyiuahb,iyh24ub,iyjcn65,iyijotf,iyhk8ik,iyhud6h,iyhde68,iyhazll,iyig2js,iyixtuz,iyi9lor,iyit8hi,iygs99u,iyglilp,iyiwnvn,iyk5mru,iyj0l1g,iyid3mu,iyhhmdv,iyh6avq,iygk7ty,iyh9nu7,iygz1v6,iyiyv19,iyh4msz,iyi41x5,iyjdyny,iygu4na,iyglkya,iyj12wv,iyiptcs,iyizsac,iyhdtk6,iyi58dz,iyhsqac,iyi7wuv,iyi3voe,iyhdm18,iyid8ah,iyh92tp,iyik796,iyj6m98,iyj3ots,iyhjkjw,iyhlys6,iyi42bx,iyi03l0,iyitfmg,iyicmdx,iyicsds,iyi4egb,iyilrwd,iyhwfqd,iyjmvn5,iyh40eu,iyhnuwt,iygpln4,iyi8c85,iyhogu7,iyibg18,iyj2an6,iyiz95o,iyiev6x,iygpogb,iyhkd91,iyhqeou,iyhej8p,iyhmipo,iyh9v1e,iyhwhv8,iyiuo14,iyigaiq,iyj4wrk,iyhta1w,iyhdc65,iyhoas8,iyh5f37,iyh1ocu,iyhzopl,iyhwkux,iyhu7hi,iyhlomk,iyjhii0,iyhnl8j,iyh70zr,iyjhoro,iyihtt5,iyioig2,iygw4pj,iyi2ubt,iygvepx,iyh8acg,iyjrsrt,iyijpue,iyja14o,iyha8g1,iyjnnkz,iyityzs,iyhh2tg,iyhbs19,iyirrcf,iyibwag,iyh9cuj,iygxthu,iyh4u5o,iygzohd,iyhqehc,iyhtniy,iyhd6hi,iyhx6dw,iyhx7im,iyi2jlu,iygwh92,iyhawrr,iyk2msm,iygnov1,iygvva1,iyhmy8u,iyhg2qj,iyhf4pi,iyhkpo5,iygxrp3,iyhnrc6,iyi4ypd,iyj33ns,iyhwp80,iyisc1l,iygxx9k,iyhwkbu,iyhoehu,iygzowu,iyhcc5a,iyh94pi,iyigmi0,iyhjxcg,iyh3qk1,iyienel,iyjfvg4,iyghrha,iyhn1tj,iyi8rpl,iyjg3qu,iyghhlf,iyih8nf,iyiuhlp,iyj8urz,iyifqq9,iyj2rpc,iyh2xk0,iyio3gx,iygnjv0,iyjg18i,iyikovq,iyjca4f,iygretv,iygumyg,iyj9zcg,iyi5lfb,iyj2fnp,iyi8o4g,iygjifz,iyj5tvu,iyhap4o,iyh1cly,iyhfj16,iygt7fy,iyh5nde,iygi5xr,iyhhmuf,iyibyuw,iyjhev8,iyjjk6w,iygh7jy,iyhm9bd,iygs8y7,iyglyla,iyhaofh,iyjon13,iygihp4,iygj0fa,iyiuabl,iyghdgp,iygg7oy,iyh55x1,iyhjhbv,iygifp2,iygwwax,iygvchv,iyhb9y8,iyhncoa,iygpwyd,iygsonm,iyghinf,iygorni,iygk841,iyhg8mm,iygm5ma,iygvtt2,iyhhx5j,iyh3qkb,iygje2d,iyggef3,iyglca6,iyi1l73,iyggs0n,iygipfe,iyghijn,iyggs40,iyhj14i,iyijtn7,iygg75r,iygifh5,iygspbg,iyhm1al,iygi5po,iyhqtzi,iygtowk,iyh1z60,iyh2pvn,iygjf6u,iygxiqu,iygtt5s,iygiar9,iygl9gz,iyh8iil,iygonqk,iyi6v95,iygml7d,iyguic4,iyh2jzk,iygq7k5,iyh9sz6,iygtqba,iygo7is,iyh2nsp,iyhihj8,iygsgdd,iygwcfb,iygl6mf,iygj0gb,iygiboc,iyilp2v,iyggvx5,iygzbp2,iyh4j50,iyghl2g,iyghs29,iyglvip,iygmgvu,iygoshr,iygz25b,iyh4d67,iygx5l6,iyh0jn5,iygtai7,iyggtxq,iygkwuf,iygvgm6,iyh5meo,iyh53if,iygwx9e,iyguelm,iygslyw,iyhh6i8,iygtz22,iyip2ky,iyh134y,iygot51,iygi8pa,iyig3lr,iygihhd,iyj1e8h,iyh6v07,iyi66d2,iygqbgt,iygst2e,iygi7c9,iyh7ico,iyh8rkb,iygpb55,iygq3eu,iyghlbt,iyh01nr,iyglq7r,iygocru,iyhrqsb,iygm78r,iygsprw,iygnnt2,iyhucho,iygllw5,iyh0630,iygibnn,iyhenrh,iyh9uw5,iyhqtl8,iygxxwx,iygxk18,iygj91q,iygmznb,iygire9,iyhepar,iygibn4,iyhp7bp,iygs1yo,iygs4zx,iyhviwa,iyh1sbe,iyghgsh,iygnqyy,iygh5ur,iyggs2n,iyh58he,iyh7kil,iyhfum8,iygrb24,iygqs57,iyie245,iyh9omv,iygortf,iygr5ot,iyh2y8f,iyghyk7,iygk2q0,iyghdyp,iyghuum,iygvg47,iyh254k,iygjbqv,iyggvrp,iyhae6e,iyglepl,iygnnpp,iygoqj0,iyh48zd,iyggugi,iygu5jv,iyhfzli,iygka65,iygld5k,iygkxlq,iygii8u,iygrfdj,iygikbe,iygtnyj,iyijcur,iygin6x,iyh9vm9,iygu8w6,iyh87eq,iyhg6wl,iygnrsm,iygnv45,iyggld4,iyghtgr,iyggqcs,iygjsuh,iygnqq5,iyh4dcw,iygls4b,iyglpww,iyhu377,iygzep7,iyh8y4t,iygw0eo,iyh9nau,iygjpdu,iyhjfge,iygidqj,iyhe9x7,iygmo7x,iyh3pws,iygh1vn,iyghnsf,iygukmc,iygul2m,iygmnpp,iyhnct3,iyguahj,iygnqgl,iygilxa,iygzh5i,iygk31x,iygtcbe,iygikhh,iygvd37,iyh47kb,iyhmkiz,iygumi2,iygq8yp,iyhr51u,iygpwy8,iygh9b7,iyh2ga8,iygogzm,iygqj28,iygk3a4,iygjuhs,iygk5ym,iyh23v3,iygjmnl,iyh83ef,iyhnlpb,iygiahl,iygizh5,iyi42o2,iygnie1,iyi9xmp,iygix60,iyi5ph1,iyggmu0,iygjmei,iyhclqb,iyhggf4,iygrr0v,iygwq3y,iyh5ex1,iyhbnku,iyghbx9,iyh37cn,iyggh30,iyh85kz,iygojh4,iygu7yp,iygi1lg,iyiu5e2,iygrvl3,iygzzzp,iygkieb,iygsj3n,iyggsko,iygyccj,iyh4jvk,iyh7vgw,iygits6,iygjqps,iygzbos,iygjmjd,iygkf3o,iygm2io,iygksew,iygv06u,iyh903q,iyglg0j,iygxxq2,iyhcntx,iygilpw,iyha6dn,iyj0pbg,iyhp9bc,iyh27hi,iygnsdd,iyghk2v,iygm8qt,iygo9uo,iygnqw6,iygqjmn,iygwtge,iyh7938,iyi6v6k,iygiuk8,iygnbrd,iyggs37,iygh4ev,iygiuff,iyggemo,iygwf7e,iygtn82,iyghf4q,iyhhp2z,iygu9im,iygmaml,iyihdaz,iygo26j,iyggrwr,iygtexq,iygq9ex,iyhchgs,iygpi5x,iyhru9e,iyghaz9,iyh3w62,iygllu2,iygk71s,iyghhpq,iygywj5,iyh572v,iygmlvs,iygigso,iygr848,iyghhwb,iygn1c3,iygr6q7,iygqxbs,iygm01k,iyghfwr,iyh6ipy,iygvdkc,iyhpim5,iygy509,iygi2zb,iygjzud,iyhi0hs,iyh8dn4,iyhc157,iyhths8,iygiges,iygul8j,iygw4nv,iygixyt,iyh3ipx,iygpvr6,iygjyh0,iyjglih
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '46368'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv2we11.2.1741472673420.Z0FBQUFBQm56TU9pTVB2NE5SNFhMZjVrdkdjNTlQTGtobllCc0RjMERJM1hTNHJFXzJ0NVo2ZzBHSXhnWjZYTVdYSUxCYm1LTmVpbVNHcnN5N0RWQ1hzblh0N2dDVjdiOEpoQ0FYalo5RHMxTUtsVUJ6ZHFIQVExS3Z4UHNNQmFKUHVKM2Z1ZldUbzM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:34
        GMT; secure, session_tracker=jhdqeibdpirdmdbboq.0.1741472673434.Z0FBQUFBQm56TU9pQk81alpDZXU5Um1hQ2xVUHI1T2NrOV9Ydjg0TXllUWdYTkhNdm1XV3FTY2psSzRoaXE4OTZURDNVOW4ycFVSYWlVNkYxN1lyZTFmS3Q0djVaMGRvaE85dVJsWE82TDRPQi1SV1cxU0NIaVdJLU5Bc0tkVTEtckx4Ni1KeVpQdzI;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:34
        GMT; secure, edgebucket=HhkglKf3ZJfX2jhg9G; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '32'
      x-ratelimit-remaining:
      - '68.0'
      x-ratelimit-reset:
      - '326'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:34 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 77, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyghuum",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "DooFomDum",
        "can_mod_post": false, "created_utc": 1669872043.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 77, "author_fullname": "t2_x2ti1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution produced by GPT-3:\n\nPrompt: Write a Python3 program to parse a
        file that consists of groups of integers. Each group is separated by newlines,
        and groups are separated by two newlines. Sum up the numbers in each group
        and find the largest sum. One line. Input file is day1.txt.\n\n    print(max([sum(list(map(int,line.split())))
        for line in open(''day1.txt'').read().split(''\\n\\n'')]))", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Solution produced by GPT-3:&lt;/p&gt;\n\n&lt;p&gt;Prompt:
        Write a Python3 program to parse a file that consists of groups of integers.
        Each group is separated by newlines, and groups are separated by two newlines.
        Sum up the numbers in each group and find the largest sum. One line. Input
        file is day1.txt.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(max([sum(list(map(int,line.split())))
        for line in open(&amp;#39;day1.txt&amp;#39;).read().split(&amp;#39;\\n\\n&amp;#39;)]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghuum/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghuum", "created":
        1669872043.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 20, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygidoe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "drivers9001",
        "can_mod_post": false, "created_utc": 1669872359.0, "send_replies": true,
        "parent_id": "t1_iyghuum", "score": 20, "author_fullname": "t2_9neqk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "An AI did that? That''s scary.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;An AI did that? That&amp;#39;s scary.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygidoe/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygidoe", "created":
        1669872359.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygk58s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Hyper1on",
        "can_mod_post": false, "created_utc": 1669873483.0, "send_replies": true,
        "parent_id": "t1_iyghuum", "score": 9, "author_fullname": "t2_7c7fe", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Have you tried chat-gpt? I think it''s pretty good, I tried just copy pasting
        in the entire problem and asking it for a Python solution, and it got pretty
        close (passed the test file but had some bugs which failed on the main input).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have you tried chat-gpt?
        I think it&amp;#39;s pretty good, I tried just copy pasting in the entire
        problem and asking it for a Python solution, and it got pretty close (passed
        the test file but had some bugs which failed on the main input).&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygk58s/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygk58s", "created":
        1669873483.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygie4s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Conceptizual",
        "can_mod_post": false, "created_utc": 1669872368.0, "send_replies": true,
        "parent_id": "t1_iyghuum", "score": 5, "author_fullname": "t2_f996y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Wowwww. I wonder if this will work for more complicated days. :O", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Wowwww. I wonder if this will work for more
        complicated days. :O&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygie4s/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygie4s", "created":
        1669872368.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygi89p", "id": "iygi89p", "parent_id":
        "t1_iyghuum", "depth": 1, "children": ["iygi89p", "iyihnao"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670163893.0, "mod_reason_by": null,
        "banned_by": null, "ups": 47, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygjmei", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "4HbQ",
        "can_mod_post": false, "created_utc": 1669873147.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 47, "author_fullname": "t2_55chxi28", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**. Since everyone is doing pretty much the same (split on `\\n\\n`,
        then on `\\n`), here''s some early `eval()` abuse!\n\n    f = sorted(eval(open(''in.txt'').read().\n        replace(''\\n\\n'',
        '','').replace(''\\n'', ''+'')))\n    \n    print(f[-1], sum(f[-3:]))\n\n*Edit:*
        I''m glad to see many of last year''s regulars are back again! Looking forward
        to some nice tricks, and lots of teaching and learning!", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;. Since
        everyone is doing pretty much the same (split on &lt;code&gt;\\n\\n&lt;/code&gt;,
        then on &lt;code&gt;\\n&lt;/code&gt;), here&amp;#39;s some early &lt;code&gt;eval()&lt;/code&gt;
        abuse!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f = sorted(eval(open(&amp;#39;in.txt&amp;#39;).read().\n    replace(&amp;#39;\\n\\n&amp;#39;,
        &amp;#39;,&amp;#39;).replace(&amp;#39;\\n&amp;#39;, &amp;#39;+&amp;#39;)))\n\nprint(f[-1],
        sum(f[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Edit:&lt;/em&gt;
        I&amp;#39;m glad to see many of last year&amp;#39;s regulars are back again!
        Looking forward to some nice tricks, and lots of teaching and learning!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjmei/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjmei", "created":
        1669873147.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygzr8w", "id": "iygzr8w", "parent_id":
        "t1_iygjmei", "depth": 1, "children": ["iygzr8w", "iyhqyeb"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 43, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygq7k5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Smylers",
        "can_mod_post": false, "created_utc": 1669877773.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 43, "author_fullname": "t2_13cudg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Vim keystrokes** \u2014 load your input file into Vim, then type these
        keystrokes to make your part\u00a01 answer appear on the first line:\n\n    O\u27e8Esc\u27e9\n    :v/./norm
        vapJ\u27e8Enter\u27e9\n    gg\n    qaqqaf y0dw@0\u27e8Ctrl+A\u27e9@aq\n    :%norm@a\u27e8Enter\u27e9\n    :sor!n\u27e8Enter\u27e9\n\nThen
        for part\u00a02 just continue with:\n\n    JJ0@a\n\nand the top line is again
        the number you want.\n\nHow? First arrange the food one line per elf:\n\n*
        `vap` **V**isually selects **A** **P**aragraph (try it). `vap` on a blank
        line selects from there to the bottom of the following paragraph, and `J`
        joins it all on to a single line.\n* `:v/pattern/` runs an Ex-style command
        on all lines that don''t match the pattern. `/./` matches any character, so
        `:v/./` matches all the blank lines between each Elf''s food list.\n* `:norm`
        \u2018types\u2019 Vim keystrokes for you on the specified lines.\n* So that
        entire `:v` line finds all the blank lines and does `vapJ` on them.\n* To
        get the first elf''s food joined, the initial `O` adds a blank line at the
        top, giving the `:v/./` something to match.\n\nThen move to the top (`gg`)
        and add together the calories of the first elf''s first two items:\n\n* `f\u2423`
        moves to the space between the first and second calorie counts. It will fail
        (with a beep!) if there''s no space on the line (that is, only a single calorie
        count).\n* `y0` yanks from just before the cursor to the beginning of the
        line \u2014 that is, the first calorie number, without the space.\n* That
        also moves the cursor back to the beginning of the line. `dw` then deletes
        the first \u2018word\u2019 \u2014 that is, the first calorie number *and*
        its following space.\n* The cursor is now on the second calorie count. Typing
        `\u27e8Ctrl+A\u27e9` increases the number at the cursor by 1; typing `123\u27e8Ctrl+A\u27e9`
        increases it by 123. Yanking by default stores the yanked text in register
        `0`. `@` followed by a register name runs that register''s contents as though
        you''d typed it as keystrokes. So if your first elf''s first calorie count
        was 6529 then `@0\u27e8Ctrl+A\u27e9` is like typing `6529\u27e8Ctrl+A\u27e9`
        on the second calorie count, adding the two of them together.\n\nCreate a
        macro that loops that addition over each calorie count on a line:\n\n* `qa\u2026q`
        records a macro of the keystrokes between them into register `a`.\n* After
        adding the first two calorie counts, we then want to repeat the action and
        add the sum of those to the third count. So before the closing `q`, the last
        action inside the macro recording is `@a`, run the macro in register `a` \u2014
        creating a loop.\n* Technically that creates an infinite loop: after adding
        a pair of calorie values, repeat. But the first item in the loop is `f\u2423`
        \u2014 move to the next space character on the line. And when all the calories
        on a line have been summed, there won''t be any space characters left, so
        that `f` will fail, breaking out of all running macros.\n* To get `@a` into
        the macro, we need to type that when *recording* the macro. That will also,
        during the recording, run whatever is in register `a`. Which, because we''re
        still in the middle of recording our register `a` macro, will be whatever
        was in register `a` before we started. That could be anything, and obviously
        we don''t want to run that. So before recording the register `a` macro properly,
        first blank it out with `qaq`, literally recording nothing into it. That makes
        the `@a` while we''re recording the macro a no-op, but it gets those keystrokes
        into it, so when it''s run subsequently, it loops.\n\nNow we''ve got `@a`
        for summing a single elf''s calories, run that on every line with `:%norm@a`.
        The `%` indicates all the lines, which with the `:norm` command runs the keystrokes
        on each line separately; an error (such as trying to move to a non-existent
        space character) ends the action on the current line, but `:norm` continues
        with running the keystrokes again on the next line.\n\nHaving summed each
        elf''s calories, Vim''s `:sort` command (you don''t need to type the `t`)
        will find the biggest. The `n` indicates numeric sorting and the `!` reverses
        the order, that is putting the biggest item first.\n\nSo that puts your part\u00a01
        answer at the top of the file.\n\nFor part\u00a02, the 3 highest calorie counts
        will be in the top 3 lines. Pressing `J` twice joins them together into a
        single line; we just need to sum them. And, handily, we already recorded the
        `@a` macro for doing just that.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Vim keystrokes&lt;/strong&gt; \u2014
        load your input file into Vim, then type these keystrokes to make your part\u00a01
        answer appear on the first line:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;O\u27e8Esc\u27e9\n:v/./norm
        vapJ\u27e8Enter\u27e9\ngg\nqaqqaf y0dw@0\u27e8Ctrl+A\u27e9@aq\n:%norm@a\u27e8Enter\u27e9\n:sor!n\u27e8Enter\u27e9\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then
        for part\u00a02 just continue with:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;JJ0@a\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and
        the top line is again the number you want.&lt;/p&gt;\n\n&lt;p&gt;How? First
        arrange the food one line per elf:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;vap&lt;/code&gt;
        &lt;strong&gt;V&lt;/strong&gt;isually selects &lt;strong&gt;A&lt;/strong&gt;
        &lt;strong&gt;P&lt;/strong&gt;aragraph (try it). &lt;code&gt;vap&lt;/code&gt;
        on a blank line selects from there to the bottom of the following paragraph,
        and &lt;code&gt;J&lt;/code&gt; joins it all on to a single line.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;:v/pattern/&lt;/code&gt;
        runs an Ex-style command on all lines that don&amp;#39;t match the pattern.
        &lt;code&gt;/./&lt;/code&gt; matches any character, so &lt;code&gt;:v/./&lt;/code&gt;
        matches all the blank lines between each Elf&amp;#39;s food list.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;:norm&lt;/code&gt;
        \u2018types\u2019 Vim keystrokes for you on the specified lines.&lt;/li&gt;\n&lt;li&gt;So
        that entire &lt;code&gt;:v&lt;/code&gt; line finds all the blank lines and
        does &lt;code&gt;vapJ&lt;/code&gt; on them.&lt;/li&gt;\n&lt;li&gt;To get the
        first elf&amp;#39;s food joined, the initial &lt;code&gt;O&lt;/code&gt; adds
        a blank line at the top, giving the &lt;code&gt;:v/./&lt;/code&gt; something
        to match.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Then move to the top (&lt;code&gt;gg&lt;/code&gt;)
        and add together the calories of the first elf&amp;#39;s first two items:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;f\u2423&lt;/code&gt;
        moves to the space between the first and second calorie counts. It will fail
        (with a beep!) if there&amp;#39;s no space on the line (that is, only a single
        calorie count).&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;y0&lt;/code&gt; yanks from
        just before the cursor to the beginning of the line \u2014 that is, the first
        calorie number, without the space.&lt;/li&gt;\n&lt;li&gt;That also moves the
        cursor back to the beginning of the line. &lt;code&gt;dw&lt;/code&gt; then
        deletes the first \u2018word\u2019 \u2014 that is, the first calorie number
        &lt;em&gt;and&lt;/em&gt; its following space.&lt;/li&gt;\n&lt;li&gt;The cursor
        is now on the second calorie count. Typing &lt;code&gt;\u27e8Ctrl+A\u27e9&lt;/code&gt;
        increases the number at the cursor by 1; typing &lt;code&gt;123\u27e8Ctrl+A\u27e9&lt;/code&gt;
        increases it by 123. Yanking by default stores the yanked text in register
        &lt;code&gt;0&lt;/code&gt;. &lt;code&gt;@&lt;/code&gt; followed by a register
        name runs that register&amp;#39;s contents as though you&amp;#39;d typed it
        as keystrokes. So if your first elf&amp;#39;s first calorie count was 6529
        then &lt;code&gt;@0\u27e8Ctrl+A\u27e9&lt;/code&gt; is like typing &lt;code&gt;6529\u27e8Ctrl+A\u27e9&lt;/code&gt;
        on the second calorie count, adding the two of them together.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Create
        a macro that loops that addition over each calorie count on a line:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;qa\u2026q&lt;/code&gt;
        records a macro of the keystrokes between them into register &lt;code&gt;a&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;After
        adding the first two calorie counts, we then want to repeat the action and
        add the sum of those to the third count. So before the closing &lt;code&gt;q&lt;/code&gt;,
        the last action inside the macro recording is &lt;code&gt;@a&lt;/code&gt;,
        run the macro in register &lt;code&gt;a&lt;/code&gt; \u2014 creating a loop.&lt;/li&gt;\n&lt;li&gt;Technically
        that creates an infinite loop: after adding a pair of calorie values, repeat.
        But the first item in the loop is &lt;code&gt;f\u2423&lt;/code&gt; \u2014
        move to the next space character on the line. And when all the calories on
        a line have been summed, there won&amp;#39;t be any space characters left,
        so that &lt;code&gt;f&lt;/code&gt; will fail, breaking out of all running
        macros.&lt;/li&gt;\n&lt;li&gt;To get &lt;code&gt;@a&lt;/code&gt; into the
        macro, we need to type that when &lt;em&gt;recording&lt;/em&gt; the macro.
        That will also, during the recording, run whatever is in register &lt;code&gt;a&lt;/code&gt;.
        Which, because we&amp;#39;re still in the middle of recording our register
        &lt;code&gt;a&lt;/code&gt; macro, will be whatever was in register &lt;code&gt;a&lt;/code&gt;
        before we started. That could be anything, and obviously we don&amp;#39;t
        want to run that. So before recording the register &lt;code&gt;a&lt;/code&gt;
        macro properly, first blank it out with &lt;code&gt;qaq&lt;/code&gt;, literally
        recording nothing into it. That makes the &lt;code&gt;@a&lt;/code&gt; while
        we&amp;#39;re recording the macro a no-op, but it gets those keystrokes into
        it, so when it&amp;#39;s run subsequently, it loops.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Now
        we&amp;#39;ve got &lt;code&gt;@a&lt;/code&gt; for summing a single elf&amp;#39;s
        calories, run that on every line with &lt;code&gt;:%norm@a&lt;/code&gt;. The
        &lt;code&gt;%&lt;/code&gt; indicates all the lines, which with the &lt;code&gt;:norm&lt;/code&gt;
        command runs the keystrokes on each line separately; an error (such as trying
        to move to a non-existent space character) ends the action on the current
        line, but &lt;code&gt;:norm&lt;/code&gt; continues with running the keystrokes
        again on the next line.&lt;/p&gt;\n\n&lt;p&gt;Having summed each elf&amp;#39;s
        calories, Vim&amp;#39;s &lt;code&gt;:sort&lt;/code&gt; command (you don&amp;#39;t
        need to type the &lt;code&gt;t&lt;/code&gt;) will find the biggest. The &lt;code&gt;n&lt;/code&gt;
        indicates numeric sorting and the &lt;code&gt;!&lt;/code&gt; reverses the
        order, that is putting the biggest item first.&lt;/p&gt;\n\n&lt;p&gt;So that
        puts your part\u00a01 answer at the top of the file.&lt;/p&gt;\n\n&lt;p&gt;For
        part\u00a02, the 3 highest calorie counts will be in the top 3 lines. Pressing
        &lt;code&gt;J&lt;/code&gt; twice joins them together into a single line; we
        just need to sum them. And, handily, we already recorded the &lt;code&gt;@a&lt;/code&gt;
        macro for doing just that.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygq7k5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygq7k5", "created":
        1669877773.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygqfo5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iygq7k5", "score":
        8, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygqfo5", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygqfo5/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669877947.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669877947.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygrwju",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Smylers",
        "can_mod_post": false, "created_utc": 1669879096.0, "send_replies": true,
        "parent_id": "t1_iygqfo5", "score": 6, "author_fullname": "t2_13cudg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "We''ll see! I think I typically manage a Vim solution on about a third of
        the days (fewer days as Advent progresses), but often only for part\u00a01.\n\nToday
        was unusual in that part\u00a02 in Vim was probably easier than in many actual
        programming languages: the numbers were literally right there in the editor
        window.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We&amp;#39;ll
        see! I think I typically manage a Vim solution on about a third of the days
        (fewer days as Advent progresses), but often only for part\u00a01.&lt;/p&gt;\n\n&lt;p&gt;Today
        was unusual in that part\u00a02 in Vim was probably easier than in many actual
        programming languages: the numbers were literally right there in the editor
        window.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygrwju/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygrwju", "created":
        1669879096.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygw8qe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1669882741.0, "send_replies": true,
        "parent_id": "t1_iygq7k5", "score": 7, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Oh no, you''re back for even *more* [heinous (ab)uses of Vim](https://www.reddit.com/r/adventofcode/comments/ro2v1c/_/hpw2vpb).\n\nGood
        to see you again this year!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh
        no, you&amp;#39;re back for even &lt;em&gt;more&lt;/em&gt; &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/ro2v1c/_/hpw2vpb\"&gt;heinous
        (ab)uses of Vim&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Good to see you again this
        year!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygw8qe/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygw8qe", "created":
        1669882741.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyh1vwz", "id": "iyh1vwz", "parent_id":
        "t1_iygw8qe", "depth": 2, "children": ["iyh1vwz"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_j067nze", "id": "j067nze", "parent_id": "t1_iygq7k5",
        "depth": 1, "children": ["j067nze"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1669874953.0, "mod_reason_by": null, "banned_by": null, "ups":
        34, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggh30",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "voidhawk42",
        "can_mod_post": false, "created_utc": 1669871211.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 34, "author_fullname": "t2_u464p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Dyalog APL:\n\n    p\u2190(+/\u234e\u00a8)\u00a8(\u22a2\u2286\u23680\u2260\u2262\u00a8)\u2283\u2395nget''01.txt''1\n    \u2308/p
        \u235d part 1\n    +/3\u2191{\u2375[\u2352\u2375]}p \u235d part 2\n\n[Video
        walkthrough](https://www.youtube.com/watch?v=oBJAE10TtDI)\n\nGreat to be back
        this year - good luck everyone!", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Dyalog APL:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p\u2190(+/\u234e\u00a8)\u00a8(\u22a2\u2286\u23680\u2260\u2262\u00a8)\u2283\u2395nget&amp;#39;01.txt&amp;#39;1\n\u2308/p
        \u235d part 1\n+/3\u2191{\u2375[\u2352\u2375]}p \u235d part 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.youtube.com/watch?v=oBJAE10TtDI\"&gt;Video walkthrough&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Great
        to be back this year - good luck everyone!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggh30/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyggh30", "created": 1669871211.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 23, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygh1e7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1669871548.0, "send_replies": true, "parent_id": "t1_iyggh30",
        "score": 23, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Oh no, the alien programming
        languages are back again &lt;3", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh
        no, the alien programming languages are back again &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygh1e7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygh1e7", "created":
        1669871548.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_iygi421", "id": "iygi421",
        "parent_id": "t1_iygh1e7", "depth": 2, "children": ["iygi421"]}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iygm6pz", "id": "iygm6pz", "parent_id":
        "t1_iyggh30", "depth": 1, "children": ["iygm6pz", "iygj0vi"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 34, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygllu2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "CCC_037",
        "can_mod_post": false, "created_utc": 1669874451.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 34, "author_fullname": "t2_b1sp7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[FiM++]\n\n    Dear Princess Celestia: Calorie Counting.\n    \n    Today
        I learned how one counts calories.\n      Did you know that most calories
        is 0?\n      Did you know that next calories is 0?\n      Here''s what I did.\n        next
        calories is now how one finds all the calories using 0.\n        I said next
        calories.\n        If next calories is greater than most calories then:\n          most
        calories is now next calories.\n        That''s what I would do!\n      I
        did this while next calories is not 0.\n      I said \"The most calories are:\".\n      I
        said most calories.\n    That''s all about how one counts calories!\n    \n    I
        learned how one finds all the calories with a number using the number calories.\n      Did
        you know that total calories is 0?\n      Did you know that previous calories
        is 10?\n      Here''s what I did.\n        previous calories is now total
        calories.\n        total calories is now how one reads data using total calories.\n      I
        did this while total calories is not previous calories,\n      Then you get
        total calories!\n    That''s all about how one finds all the calories!\n    \n    I
        learned how one reads data with a number using the number calories.\n      I
        asked another snack.\n      Did you know that total calories is calories plus
        another snack?\n      Then you get total calories!\n    That''s all about
        how one reads data!\n    \n    Your faithful student, Open Book.\n\nSooooo...
        blank lines are not read as 0. Also, single-digit lines are read as characters,
        not numbers. So I did a text search/replace on the input file, replacing the
        end-of-line character (''\\n'' for C programmers) with the end-of-line character
        followed by two zeroes.\n\nI should probably find a better solution for that.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[FiM++]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Dear
        Princess Celestia: Calorie Counting.\n\nToday I learned how one counts calories.\n  Did
        you know that most calories is 0?\n  Did you know that next calories is 0?\n  Here&amp;#39;s
        what I did.\n    next calories is now how one finds all the calories using
        0.\n    I said next calories.\n    If next calories is greater than most calories
        then:\n      most calories is now next calories.\n    That&amp;#39;s what
        I would do!\n  I did this while next calories is not 0.\n  I said &amp;quot;The
        most calories are:&amp;quot;.\n  I said most calories.\nThat&amp;#39;s all
        about how one counts calories!\n\nI learned how one finds all the calories
        with a number using the number calories.\n  Did you know that total calories
        is 0?\n  Did you know that previous calories is 10?\n  Here&amp;#39;s what
        I did.\n    previous calories is now total calories.\n    total calories is
        now how one reads data using total calories.\n  I did this while total calories
        is not previous calories,\n  Then you get total calories!\nThat&amp;#39;s
        all about how one finds all the calories!\n\nI learned how one reads data
        with a number using the number calories.\n  I asked another snack.\n  Did
        you know that total calories is calories plus another snack?\n  Then you get
        total calories!\nThat&amp;#39;s all about how one reads data!\n\nYour faithful
        student, Open Book.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Sooooo... blank
        lines are not read as 0. Also, single-digit lines are read as characters,
        not numbers. So I did a text search/replace on the input file, replacing the
        end-of-line character (&amp;#39;\\n&amp;#39; for C programmers) with the end-of-line
        character followed by two zeroes.&lt;/p&gt;\n\n&lt;p&gt;I should probably
        find a better solution for that.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygllu2/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygllu2", "created": 1669874451.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 11, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygltq8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "topaz2078", "can_mod_post": false, "created_utc":
        1669874600.0, "send_replies": true, "parent_id": "t1_iygllu2", "score": 11,
        "author_fullname": "t2_3ga32", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "*YES*", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": "flair-aoccreator", "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;YES&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": "dark", "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygltq8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygltq8", "created":
        1669874600.0, "author_flair_text": "(AoC creator)", "treatment_tags": [],
        "link_id": "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygm04j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SadBunnyNL",
        "can_mod_post": false, "created_utc": 1669874719.0, "send_replies": true,
        "parent_id": "t1_iygllu2", "score": 7, "author_fullname": "t2_ly04c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt;FiM++\n\nThat... Is a beautiful language. Thanks for letting me know
        about it :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;FiM++&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That...
        Is a beautiful language. Thanks for letting me know about it :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygm04j/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygm04j", "created":
        1669874719.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iygs6am", "id": "iygs6am", "parent_id":
        "t1_iygm04j", "depth": 2, "children": ["iygs6am"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669874816.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyglqe7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "CCC_037",
        "can_mod_post": false, "created_utc": 1669874536.0, "send_replies": true,
        "parent_id": "t1_iygllu2", "score": 6, "author_fullname": "t2_b1sp7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[FiM++]\n\n    Dear Princess Celestia: Calorie Counting.\n    \n    Today
        I learned how one counts calories.\n      Did you know that most calories
        is 0?\n      Did you know that second place is 0?\n      Did you know that
        third place is 0?\n      Did you know that next calories is 0?\n      Here''s
        what I did.\n        next calories is now how one finds all the calories using
        0.\n        I said next calories.\n        If next calories is not less than
        most calories then:\n          third place is now second place.\n          second
        place is now most calories.\n          most calories is now next calories.\n        Otherwise,\n          If
        next calories is not less than second place then:\n            third place
        is now second place.\n    \tsecond place is now next calories.\n          Otherwise,\n            If
        next calories is not less than third place then:\n    \t  third place is now
        next calories.\n    \tThat''s what I would do!\n          That''s what I would
        do!\n        That''s what I would do!\n      I did this while next calories
        is not 0.\n      I said \"The top three most calories are:\".\n      I said
        most calories plus second place plus third place.\n      I said most calories.\n      I
        said second place.\n      I said third place.\n    That''s all about how one
        counts calories!\n    \n    I learned how one finds all the calories with
        a number using the number calories.\n      Did you know that total calories
        is 0?\n      Did you know that previous calories is 10?\n      Here''s what
        I did.\n        previous calories is now total calories.\n        total calories
        is now how one reads data using total calories.\n      I did this while total
        calories is not previous calories,\n      Then you get total calories!\n    That''s
        all about how one finds all the calories!\n    \n    I learned how one reads
        data with a number using the number calories.\n      I asked another snack.\n      Did
        you know that total calories is calories plus another snack?\n      Then you
        get total calories!\n    That''s all about how one reads data!\n    \n    Your
        faithful student, Open Book.\n\nNothing to really add here.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[FiM++]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Dear
        Princess Celestia: Calorie Counting.\n\nToday I learned how one counts calories.\n  Did
        you know that most calories is 0?\n  Did you know that second place is 0?\n  Did
        you know that third place is 0?\n  Did you know that next calories is 0?\n  Here&amp;#39;s
        what I did.\n    next calories is now how one finds all the calories using
        0.\n    I said next calories.\n    If next calories is not less than most
        calories then:\n      third place is now second place.\n      second place
        is now most calories.\n      most calories is now next calories.\n    Otherwise,\n      If
        next calories is not less than second place then:\n        third place is
        now second place.\n    second place is now next calories.\n      Otherwise,\n        If
        next calories is not less than third place then:\n      third place is now
        next calories.\n    That&amp;#39;s what I would do!\n      That&amp;#39;s
        what I would do!\n    That&amp;#39;s what I would do!\n  I did this while
        next calories is not 0.\n  I said &amp;quot;The top three most calories are:&amp;quot;.\n  I
        said most calories plus second place plus third place.\n  I said most calories.\n  I
        said second place.\n  I said third place.\nThat&amp;#39;s all about how one
        counts calories!\n\nI learned how one finds all the calories with a number
        using the number calories.\n  Did you know that total calories is 0?\n  Did
        you know that previous calories is 10?\n  Here&amp;#39;s what I did.\n    previous
        calories is now total calories.\n    total calories is now how one reads data
        using total calories.\n  I did this while total calories is not previous calories,\n  Then
        you get total calories!\nThat&amp;#39;s all about how one finds all the calories!\n\nI
        learned how one reads data with a number using the number calories.\n  I asked
        another snack.\n  Did you know that total calories is calories plus another
        snack?\n  Then you get total calories!\nThat&amp;#39;s all about how one reads
        data!\n\nYour faithful student, Open Book.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Nothing
        to really add here.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglqe7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyglqe7", "created":
        1669874536.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670161932.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygumi2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        26, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Google Sheets** One formula for both parts. \n\n`\n=sort(byrow(large(byrow(split(flatten(split(join(,A:A&amp;if(A:A,\"\u2746\",\"\u221e\")),\"\u221e\")),\"\u2746\"),lambda(r,sum(r))),{1,1,1;1,2,3}),lambda(r,sum(r)))/{3;1})\n`",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iygumi2",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Google
        Sheets&lt;/strong&gt; One formula for both parts. &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\n=sort(byrow(large(byrow(split(flatten(split(join(,A:A&amp;amp;if(A:A,&amp;quot;\u2746&amp;quot;,&amp;quot;\u221e&amp;quot;)),&amp;quot;\u221e&amp;quot;)),&amp;quot;\u2746&amp;quot;),lambda(r,sum(r))),{1,1,1;1,2,3}),lambda(r,sum(r)))/{3;1})\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygumi2/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669881346.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669881346.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 26}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670251699.0, "mod_reason_by": null,
        "banned_by": null, "ups": 27, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh9omv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "weshinsley",
        "can_mod_post": false, "created_utc": 1669894646.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 27, "author_fullname": "t2_2ldxoh7q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rockstar - with apologies. Elves are not really like this.\n    \n    the
        elf is nutritious\n    the biggest is suspicious \n    \n    the alphaelf
        is gargantual\n    the betaelf is cumbersome\n    the gammaelf is overweight\n    \n    Listen
        to the elves\n    \n    while the elves are not mysterious\n      while the
        elves are not empty\n        burn the elves\n        let the elf be with the
        elves\n        listen to the elves\n    \n      if the elf is bigger than
        the biggest\n        let the biggest be the elf\n    \n      if the elf is
        as big as the alphaelf\n        let the gammaelf be the betaelf\n        let
        the betaelf be the alphaelf\n        let the alphaelf be the elf\n        the
        elf is nutritious\n    \n      if the elf is as big as the betaelf\n        let
        the gammaelf be the betaelf\n        let the betaelf be the elf\n        the
        elf is nutritious\n    \n      if the elf is bigger than the gammaelf\n        let
        the gammaelf be the elf\n        the elf is nutritious\n    \n      the elf
        is nutritious\n      listen to the elves\n    \n    shout the biggest\n    shout
        the alphaelf with the betaelf with the gammaelf", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rockstar - with apologies. Elves are not really like
        this.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;the elf is nutritious\nthe biggest
        is suspicious \n\nthe alphaelf is gargantual\nthe betaelf is cumbersome\nthe
        gammaelf is overweight\n\nListen to the elves\n\nwhile the elves are not mysterious\n  while
        the elves are not empty\n    burn the elves\n    let the elf be with the elves\n    listen
        to the elves\n\n  if the elf is bigger than the biggest\n    let the biggest
        be the elf\n\n  if the elf is as big as the alphaelf\n    let the gammaelf
        be the betaelf\n    let the betaelf be the alphaelf\n    let the alphaelf
        be the elf\n    the elf is nutritious\n\n  if the elf is as big as the betaelf\n    let
        the gammaelf be the betaelf\n    let the betaelf be the elf\n    the elf is
        nutritious\n\n  if the elf is bigger than the gammaelf\n    let the gammaelf
        be the elf\n    the elf is nutritious\n\n  the elf is nutritious\n  listen
        to the elves\n\nshout the biggest\nshout the alphaelf with the betaelf with
        the gammaelf\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh9omv/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyh9omv", "created": 1669894646.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 5, "name":
        "t1_iyhghft", "id": "iyhghft", "parent_id": "t1_iyh9omv", "depth": 1, "children":
        ["iyhghft", "iyhozb9", "iyja40t", "iyug6n2"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 24,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhqeou",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "The_Unusual_Coder",
        "can_mod_post": false, "created_utc": 1669904526.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 24, "author_fullname": "t2_uokjod4s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "SHAKESPEARE PROGRAMMING LANGUAGE\n\n[part 1](https://github.com/SansCipher/SPL_AOC2022/blob/main/1-1.spl)\n\n[part
        2](https://github.com/SansCipher/SPL_AOC2022/blob/main/1-2.spl)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;SHAKESPEARE PROGRAMMING LANGUAGE&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SansCipher/SPL_AOC2022/blob/main/1-1.spl\"&gt;part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SansCipher/SPL_AOC2022/blob/main/1-2.spl\"&gt;part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhqeou/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhqeou", "created":
        1669904526.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhs5te", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iyhqeou", "score":
        8, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyhs5te", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhs5te/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669905339.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669905339.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 8}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyhsqmh", "id": "iyhsqmh", "parent_id":
        "t1_iyhs5te", "depth": 2, "children": ["iyhsqmh", "iyuezjt", "iyiilhy"]}},
        {"kind": "more", "data": {"count": 5, "name": "t1_iyiei6e", "id": "iyiei6e",
        "parent_id": "t1_iyhqeou", "depth": 1, "children": ["iyiei6e"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669876453.0, "mod_reason_by": null,
        "banned_by": null, "ups": 22, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygnqyy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "JustinHuPrime",
        "can_mod_post": false, "created_utc": 1669875948.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 22, "author_fullname": "t2_1xbtco41", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# x86_64 Assembly\n\nI''m doing these in assembly, once again!\n\n[Part 1](https://github.com/JustinHuPrime/AoC/blob/main/2022/1a.s)
        was slightly scary - I wasn''t expecting two-dimensional input data, and that
        had me reaching for `brk`, but I found a single-pass solution. I''d keep track
        of the calories for the most supplied elf and the calories for the current
        elf. If the current line isn''t empty, then add the number to the current
        elf. If the current line is empty, then let the most supplied elf''s calories
        be the larger of its current value and the current elf''s calories.\n\nPart
        1 ran in under a millisecond.\n\n[Part 2](https://github.com/JustinHuPrime/AoC/blob/main/2022/1b.s)
        was almost identical to part 1, but I did have to fiddle around a bit with
        the proper way to replace a value when I was keeping track of a set of the
        three largest values - if you replace the largest value, then that replaced
        largest value will replace the second-largest, and so-on. I suppose I could
        have implemented this in a way that avoided unnecessary branching by cascading
        the replacement in the check for each largest value, but I only just though
        of that possibility.\n\nPart 2 ran in under a millisecond.\n\nEdit: I could
        also have used `xchg` for part 2", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;x86_64 Assembly&lt;/h1&gt;\n\n&lt;p&gt;I&amp;#39;m
        doing these in assembly, once again!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/JustinHuPrime/AoC/blob/main/2022/1a.s\"&gt;Part
        1&lt;/a&gt; was slightly scary - I wasn&amp;#39;t expecting two-dimensional
        input data, and that had me reaching for &lt;code&gt;brk&lt;/code&gt;, but
        I found a single-pass solution. I&amp;#39;d keep track of the calories for
        the most supplied elf and the calories for the current elf. If the current
        line isn&amp;#39;t empty, then add the number to the current elf. If the current
        line is empty, then let the most supplied elf&amp;#39;s calories be the larger
        of its current value and the current elf&amp;#39;s calories.&lt;/p&gt;\n\n&lt;p&gt;Part
        1 ran in under a millisecond.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/JustinHuPrime/AoC/blob/main/2022/1b.s\"&gt;Part
        2&lt;/a&gt; was almost identical to part 1, but I did have to fiddle around
        a bit with the proper way to replace a value when I was keeping track of a
        set of the three largest values - if you replace the largest value, then that
        replaced largest value will replace the second-largest, and so-on. I suppose
        I could have implemented this in a way that avoided unnecessary branching
        by cascading the replacement in the check for each largest value, but I only
        just though of that possibility.&lt;/p&gt;\n\n&lt;p&gt;Part 2 ran in under
        a millisecond.&lt;/p&gt;\n\n&lt;p&gt;Edit: I could also have used &lt;code&gt;xchg&lt;/code&gt;
        for part 2&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnqyy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygnqyy", "created":
        1669875948.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iygt2t7", "id": "iygt2t7", "parent_id":
        "t1_iygnqyy", "depth": 1, "children": ["iygt2t7", "iygwsbs", "iygwae4"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 21, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh0630", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "gw_shadow",
        "can_mod_post": false, "created_utc": 1669886286.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 21, "author_fullname": "t2_x8df6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "CMake\n\n    CMAKE_MINIMUM_REQUIRED(VERSION 3.25)\n    PROJECT(\"2022.1\")\n    FILE(READ
        \"${CMAKE_SOURCE_DIR}/COOKIE.txt\" COOKIE)\n    IF(NOT EXISTS \"${CMAKE_SOURCE_DIR}/input.txt\")\n        FILE(DOWNLOAD\n            \"https://adventofcode.com/2022/day/1/input\"
        \"${CMAKE_SOURCE_DIR}/input.txt\"\n            STATUS DOWNLOAD_STATUS\n            TIMEOUT
        2\n            HTTPHEADER \"cookie: ${COOKIE}\"\n        )\n        IF(NOT
        DOWNLOAD_STATUS STREQUAL \"0;\\\"No error\\\"\")\n            FILE(REMOVE
        \"${CMAKE_SOURCE_DIR}/input.txt\")\n            MESSAGE(FATAL_ERROR \"Failed
        to download input: ''${DOWNLOAD_STATUS}''\")\n        ENDIF()\n    ENDIF()\n    FILE(STRINGS
        \"${CMAKE_SOURCE_DIR}/input.txt\" LINES)\n    LIST(LENGTH LINES LINE_COUNT)\n    MATH(EXPR
        LINE_COUNT \"${LINE_COUNT} - 1\")\n    SET(SUM 0)\n    SET(SUMS \"\")\n    FOREACH(INDEX
        RANGE 0 ${LINE_COUNT})\n        LIST(GET LINES ${INDEX} LINE)\n        IF(LINE)\n            MATH(EXPR
        SUM \"${SUM} + ${LINE}\")\n        ELSE()\n            LIST(APPEND SUMS ${SUM})\n            SET(SUM
        0)\n        ENDIF()\n    ENDFOREACH()\n    LIST(SORT SUMS COMPARE NATURAL
        ORDER DESCENDING)\n    LIST(GET SUMS 0 PART_1)\n    MESSAGE(\"PART 1: ${PART_1}\")\n    LIST(GET
        SUMS 0 PART_2_0)\n    LIST(GET SUMS 1 PART_2_1)\n    LIST(GET SUMS 2 PART_2_2)\n    MATH(EXPR
        PART_2 \"${PART_2_0} + ${PART_2_1} + ${PART_2_2}\")\n    MESSAGE(\"PART 2:
        ${PART_2}\")", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;CMake&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED(VERSION
        3.25)\nPROJECT(&amp;quot;2022.1&amp;quot;)\nFILE(READ &amp;quot;${CMAKE_SOURCE_DIR}/COOKIE.txt&amp;quot;
        COOKIE)\nIF(NOT EXISTS &amp;quot;${CMAKE_SOURCE_DIR}/input.txt&amp;quot;)\n    FILE(DOWNLOAD\n        &amp;quot;https://adventofcode.com/2022/day/1/input&amp;quot;
        &amp;quot;${CMAKE_SOURCE_DIR}/input.txt&amp;quot;\n        STATUS DOWNLOAD_STATUS\n        TIMEOUT
        2\n        HTTPHEADER &amp;quot;cookie: ${COOKIE}&amp;quot;\n    )\n    IF(NOT
        DOWNLOAD_STATUS STREQUAL &amp;quot;0;\\&amp;quot;No error\\&amp;quot;&amp;quot;)\n        FILE(REMOVE
        &amp;quot;${CMAKE_SOURCE_DIR}/input.txt&amp;quot;)\n        MESSAGE(FATAL_ERROR
        &amp;quot;Failed to download input: &amp;#39;${DOWNLOAD_STATUS}&amp;#39;&amp;quot;)\n    ENDIF()\nENDIF()\nFILE(STRINGS
        &amp;quot;${CMAKE_SOURCE_DIR}/input.txt&amp;quot; LINES)\nLIST(LENGTH LINES
        LINE_COUNT)\nMATH(EXPR LINE_COUNT &amp;quot;${LINE_COUNT} - 1&amp;quot;)\nSET(SUM
        0)\nSET(SUMS &amp;quot;&amp;quot;)\nFOREACH(INDEX RANGE 0 ${LINE_COUNT})\n    LIST(GET
        LINES ${INDEX} LINE)\n    IF(LINE)\n        MATH(EXPR SUM &amp;quot;${SUM}
        + ${LINE}&amp;quot;)\n    ELSE()\n        LIST(APPEND SUMS ${SUM})\n        SET(SUM
        0)\n    ENDIF()\nENDFOREACH()\nLIST(SORT SUMS COMPARE NATURAL ORDER DESCENDING)\nLIST(GET
        SUMS 0 PART_1)\nMESSAGE(&amp;quot;PART 1: ${PART_1}&amp;quot;)\nLIST(GET SUMS
        0 PART_2_0)\nLIST(GET SUMS 1 PART_2_1)\nLIST(GET SUMS 2 PART_2_2)\nMATH(EXPR
        PART_2 &amp;quot;${PART_2_0} + ${PART_2_1} + ${PART_2_2}&amp;quot;)\nMESSAGE(&amp;quot;PART
        2: ${PART_2}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh0630/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyh0630", "created": 1669886286.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 5, "name":
        "t1_iyh3fa6", "id": "iyh3fa6", "parent_id": "t1_iyh0630", "depth": 1, "children":
        ["iyh3fa6", "iyh1vyp", "iyh19fa"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 17,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggsko",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jonathan_paulson",
        "can_mod_post": false, "created_utc": 1669871402.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 17, "author_fullname": "t2_k7ou5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 49/28. [Video](https://youtu.be/XpkFsqqYi6A) of me solving. Final
        [Code](https://github.com/jonathanpaulson/AdventOfCode/blob/master/2022/1.py).  \n\n\nAnother
        year of Advent of Code! Thanks Eric! Good luck all.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python 49/28. &lt;a href=\"https://youtu.be/XpkFsqqYi6A\"&gt;Video&lt;/a&gt;
        of me solving. Final &lt;a href=\"https://github.com/jonathanpaulson/AdventOfCode/blob/master/2022/1.py\"&gt;Code&lt;/a&gt;.  &lt;/p&gt;\n\n&lt;p&gt;Another
        year of Advent of Code! Thanks Eric! Good luck all.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggsko/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggsko", "created":
        1669871402.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyghq81", "id": "iyghq81", "parent_id":
        "t1_iyggsko", "depth": 1, "children": ["iyghq81", "iyj217t", "iygi6if", "iygx5tc"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 16, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygmgvu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Boojum",
        "can_mod_post": false, "created_utc": 1669875040.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 16, "author_fullname": "t2_1q57", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Emacs Lisp**\n\nBecause why not?  (And I already posted my original \"for
        real\" Python solution.)\n\n    (with-temp-buffer\n      (insert-file-contents-literally
        \"input.txt\")\n      (goto-char (point-min))\n      (let ((cals ''(0)))\n        (while
        (not (eobp))\n          (if (eolp)\n              (setq cals (cons 0 cals))\n            (setcar
        cals (+ (car cals)\n                            (string-to-number\n                             (buffer-substring
        (point-at-bol)\n                                               (point-at-eol))))))\n          (forward-line
        1))\n        (message \"%s\" (apply ''+ (last (sort cals ''&lt;) 3)))))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Emacs
        Lisp&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Because why not?  (And I already
        posted my original &amp;quot;for real&amp;quot; Python solution.)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(with-temp-buffer\n  (insert-file-contents-literally
        &amp;quot;input.txt&amp;quot;)\n  (goto-char (point-min))\n  (let ((cals &amp;#39;(0)))\n    (while
        (not (eobp))\n      (if (eolp)\n          (setq cals (cons 0 cals))\n        (setcar
        cals (+ (car cals)\n                        (string-to-number\n                         (buffer-substring
        (point-at-bol)\n                                           (point-at-eol))))))\n      (forward-line
        1))\n    (message &amp;quot;%s&amp;quot; (apply &amp;#39;+ (last (sort cals
        &amp;#39;&amp;lt;) 3)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygmgvu/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygmgvu", "created": 1669875040.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyk2raj", "id": "iyk2raj", "parent_id": "t1_iygmgvu", "depth": 1, "children":
        ["iyk2raj"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669917092.0,
        "mod_reason_by": null, "banned_by": null, "ups": 14, "num_reports": null,
        "author_flair_type": "text", "total_awards_received": 0, "subreddit": "adventofcode",
        "author_flair_template_id": null, "likes": null, "replies": "", "user_reports":
        [], "saved": false, "id": "iyikfew", "banned_at_utc": null, "mod_reason_title":
        null, "gilded": 0, "archived": true, "collapsed_reason_code": null, "no_follow":
        false, "author": "PlayForA", "can_mod_post": false, "created_utc": 1669916815.0,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 14, "author_fullname":
        "t2_6o46b", "report_reasons": null, "approved_by": null, "all_awardings":
        [], "collapsed": false, "body": "Day 1 part 1 in rockstar\n\n&amp;#x200B;\n\n    Wasteland
        takes your sins\n    Your soul is inevitable \n    Calories are inevitable
        \n    Your heart is pure and true \n    Listen to your heart \n    While your
        heart ain''t nothing \n    Burn your heart into your soul \n    Put calories
        plus your soul into calories \n    Listen to your heart\n    \n    Give calories
        back\n    \n    The chains are strong \n    The answer is not \n    While
        the chains ain''t nothing \n    Put wasteland taking the answer into the chains
        \n    If the chains are stronger than the answer \n    Put the chains into
        the answer\n    \n    \n    Scream the answer", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Day 1 part 1 in rockstar&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Wasteland
        takes your sins\nYour soul is inevitable \nCalories are inevitable \nYour
        heart is pure and true \nListen to your heart \nWhile your heart ain&amp;#39;t
        nothing \nBurn your heart into your soul \nPut calories plus your soul into
        calories \nListen to your heart\n\nGive calories back\n\nThe chains are strong
        \nThe answer is not \nWhile the chains ain&amp;#39;t nothing \nPut wasteland
        taking the answer into the chains \nIf the chains are stronger than the answer
        \nPut the chains into the answer\n\n\nScream the answer\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyikfew/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyikfew", "created":
        1669916815.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_iyjlfaq", "id": "iyjlfaq", "parent_id":
        "t1_iyikfew", "depth": 1, "children": ["iyjlfaq", "iyj6uaa", "iyj8u02"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 13, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyghl2g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SadBunnyNL",
        "can_mod_post": false, "created_utc": 1669871881.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 13, "author_fullname": "t2_ly04c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash/awk:\n\n    awk ''{i+=$0; if (!$0){print i; i=0;}}'' &lt; input | sort
        -rn | head -1\n    \n    awk ''{i+=$0; if (!$0){print i; i=0;}}'' &lt; input
        | sort -rn | head -3 | awk ''{i+=$0} END{print i}''", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Bash/awk:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;awk
        &amp;#39;{i+=$0; if (!$0){print i; i=0;}}&amp;#39; &amp;lt; input | sort -rn
        | head -1\n\nawk &amp;#39;{i+=$0; if (!$0){print i; i=0;}}&amp;#39; &amp;lt;
        input | sort -rn | head -3 | awk &amp;#39;{i+=$0} END{print i}&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghl2g/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghl2g", "created":
        1669871881.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 12, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygi7c9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ProfONeill",
        "can_mod_post": false, "created_utc": 1669872253.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 12, "author_fullname": "t2_f1l4a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Perl \n\nObviously, it could be shorter and sweeter, but this got it done
        and is reasonably readable.  (3855/2944)\n\n    #!/usr/bin/perl -w\n    \n    use
        strict;\n    use List::Util qw(sum max);\n    our ($a, $b);\n    \n    # Read
        input in paragraph mode\n    $/ = '''';\n    \n    my @chunks = &lt;&gt;;\n    chomp
        @chunks;\n    \n    my @sums = map { sum(split /\\n/, $_) } @chunks;\n    \n    #
        Find the max sum\n    print max(@sums), \"\\n\";\n    \n    # Find the top
        three sums and add them up\n    my @top = sort { $b &lt;=&gt; $a } @sums;\n    print
        sum(@top[0..2]), \"\\n\";", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Perl&lt;/h2&gt;\n\n&lt;p&gt;Obviously,
        it could be shorter and sweeter, but this got it done and is reasonably readable.  (3855/2944)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/perl
        -w\n\nuse strict;\nuse List::Util qw(sum max);\nour ($a, $b);\n\n# Read input
        in paragraph mode\n$/ = &amp;#39;&amp;#39;;\n\nmy @chunks = &amp;lt;&amp;gt;;\nchomp
        @chunks;\n\nmy @sums = map { sum(split /\\n/, $_) } @chunks;\n\n# Find the
        max sum\nprint max(@sums), &amp;quot;\\n&amp;quot;;\n\n# Find the top three
        sums and add them up\nmy @top = sort { $b &amp;lt;=&amp;gt; $a } @sums;\nprint
        sum(@top[0..2]), &amp;quot;\\n&amp;quot;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygi7c9/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygi7c9", "created":
        1669872253.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iygv6ba", "id": "iygv6ba", "parent_id":
        "t1_iygi7c9", "depth": 1, "children": ["iygv6ba", "iyj3fnn", "iyglaev"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 14, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygmnpp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "occamatl",
        "can_mod_post": false, "created_utc": 1669875171.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 14, "author_fullname": "t2_lox7lpx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\n    use itertools::Itertools;\n    \n    fn main() {\n        let
        totals: Vec&lt;u64&gt; = include_str!(\"../input.txt\")\n            .split(\"\\n\\n\")\n            .map(|elf|
        {\n                elf.split(''\\n'')\n                    .map(|food| food.parse::&lt;u64&gt;().unwrap_or(0)).sum()\n            })\n            .sorted().rev().collect();\n    \n        println!(\"Part
        1: {}\", totals[0]);\n        println!(\"Part 2: {}\", totals.iter().take(3).sum::&lt;u64&gt;());\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        itertools::Itertools;\n\nfn main() {\n    let totals: Vec&amp;lt;u64&amp;gt;
        = include_str!(&amp;quot;../input.txt&amp;quot;)\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|elf|
        {\n            elf.split(&amp;#39;\\n&amp;#39;)\n                .map(|food|
        food.parse::&amp;lt;u64&amp;gt;().unwrap_or(0)).sum()\n        })\n        .sorted().rev().collect();\n\n    println!(&amp;quot;Part
        1: {}&amp;quot;, totals[0]);\n    println!(&amp;quot;Part 2: {}&amp;quot;,
        totals.iter().take(3).sum::&amp;lt;u64&amp;gt;());\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygmnpp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygmnpp", "created":
        1669875171.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyl7z12", "id": "iyl7z12", "parent_id":
        "t1_iygmnpp", "depth": 1, "children": ["iyl7z12", "iyjkoir"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 12, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjumwq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "skimmet",
        "can_mod_post": false, "created_utc": 1669934919.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 12, "author_fullname": "t2_nu5iu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution in HTML and CSS (who said HTML is not a programming language), by
        preprocessing the input a little so that it gets turned into divs that look
        like this:\n\n    &lt;div class=\"block\"&gt;\n      &lt;div class=\"num\"
        style=\"--hght: 7896px\"&gt;&lt;/div&gt;\n      &lt;div class=\"num\" style=\"--hght:
        4992px\"&gt;&lt;/div&gt;\n      &lt;!-- etc.. --&gt;\n    &lt;/div&gt;\n\nand
        applying some css to align things on top/next to each other:\n\n    &lt;style&gt;\n      body
        {\n        margin: 0px;\n        display: flex;\n        flex-direction: row;\n        height:
        fit-content;\n      }\n    \n      .block {\n        height: fit-content;\n      }\n    \n      .num
        {\n        width: 1px;\n        height: var(--hght);\n      }\n    &lt;/style&gt;\n\nand
        then finally inspect the height of the body in inspect element. Link to full
        file: [https://pastebin.com/2eLzPjqH](https://pastebin.com/2eLzPjqH)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Solution in HTML and CSS (who said HTML
        is not a programming language), by preprocessing the input a little so that
        it gets turned into divs that look like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;div
        class=&amp;quot;block&amp;quot;&amp;gt;\n  &amp;lt;div class=&amp;quot;num&amp;quot;
        style=&amp;quot;--hght: 7896px&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;\n  &amp;lt;div
        class=&amp;quot;num&amp;quot; style=&amp;quot;--hght: 4992px&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;\n  &amp;lt;!--
        etc.. --&amp;gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and
        applying some css to align things on top/next to each other:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;style&amp;gt;\n  body
        {\n    margin: 0px;\n    display: flex;\n    flex-direction: row;\n    height:
        fit-content;\n  }\n\n  .block {\n    height: fit-content;\n  }\n\n  .num {\n    width:
        1px;\n    height: var(--hght);\n  }\n&amp;lt;/style&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and
        then finally inspect the height of the body in inspect element. Link to full
        file: &lt;a href=\"https://pastebin.com/2eLzPjqH\"&gt;https://pastebin.com/2eLzPjqH&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjumwq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjumwq", "created":
        1669934919.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 12, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyghdyp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "leijurv",
        "can_mod_post": false, "created_utc": 1669871761.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 12, "author_fullname": "t2_f3wa1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3, 3rd place, 9th place\n\nScreen recording: https://youtu.be/thcRLm3j5bc\n\n    ll
        = [[int(y) for y in x.split(\"\\n\")] for x in open(inf).read().strip().split(''\\n\\n'')]\n    print(max([sum(x)
        for x in ll]))\n    print(sum(sorted([sum(x) for x in ll])[-3:]))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python3, 3rd place, 9th place&lt;/p&gt;\n\n&lt;p&gt;Screen
        recording: &lt;a href=\"https://youtu.be/thcRLm3j5bc\"&gt;https://youtu.be/thcRLm3j5bc&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ll
        = [[int(y) for y in x.split(&amp;quot;\\n&amp;quot;)] for x in open(inf).read().strip().split(&amp;#39;\\n\\n&amp;#39;)]\nprint(max([sum(x)
        for x in ll]))\nprint(sum(sorted([sum(x) for x in ll])[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghdyp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghdyp", "created":
        1669871761.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iygvuva", "id": "iygvuva", "parent_id":
        "t1_iyghdyp", "depth": 1, "children": ["iygvuva", "iyp3l9k"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 12, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygr848",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Smylers",
        "can_mod_post": false, "created_utc": 1669878556.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 12, "author_fullname": "t2_13cudg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Perl** one-liner for part\u00a01:\n\n    perl -MList::Util=sum,max -00
        -wE \"say max map { sum /\\d+/g } &lt;&gt;\" input\n\n(basically the same
        as /u/ProfONeill''s answer).\n\nI wrote it it debug my Vim keystrokes solution
        elsewhere (where initially a single-line paragraph was attaching itself to
        the following paragraph). And my Vim wasn''t buggy for part\u00a02, which
        is why the Perl only does part\u00a01!\n\n`-00` is Perl''s non-intuitive way
        of specifying to read in paragraphs at a time. `&lt;&gt;`, the input operator,
        then returns a list of such paragraphs. `/\\d+/g` finds all the numbers in
        each paragraph, and `sum`, `map`, and `max` do their thing", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Perl&lt;/strong&gt; one-liner
        for part\u00a01:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;perl -MList::Util=sum,max
        -00 -wE &amp;quot;say max map { sum /\\d+/g } &amp;lt;&amp;gt;&amp;quot; input\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(basically
        the same as &lt;a href=\"/u/ProfONeill\"&gt;/u/ProfONeill&lt;/a&gt;&amp;#39;s
        answer).&lt;/p&gt;\n\n&lt;p&gt;I wrote it it debug my Vim keystrokes solution
        elsewhere (where initially a single-line paragraph was attaching itself to
        the following paragraph). And my Vim wasn&amp;#39;t buggy for part\u00a02,
        which is why the Perl only does part\u00a01!&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;-00&lt;/code&gt;
        is Perl&amp;#39;s non-intuitive way of specifying to read in paragraphs at
        a time. &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, the input operator, then
        returns a list of such paragraphs. &lt;code&gt;/\\d+/g&lt;/code&gt; finds
        all the numbers in each paragraph, and &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;,
        and &lt;code&gt;max&lt;/code&gt; do their thing&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygr848/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygr848", "created":
        1669878556.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670275081.0, "mod_reason_by": null,
        "banned_by": null, "ups": 12, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygvtt2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "NiliusJulius",
        "can_mod_post": false, "created_utc": 1669882381.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 12, "author_fullname": "t2_8gyb2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Game Boy using C\n\nPart 1 https://github.com/NiliusJulius/advent-of-code-2022/blob/main/states/1a.c\n\nPart
        2 https://github.com/NiliusJulius/advent-of-code-2022/blob/main/states/1b.c\n\nWent
        for the quick and dirty approach for part 2 since I noticed that while the
        Game Boy Development Kit can use 32 bit integers, it cannot print those values.\nSo
        as a C newbie I had to quickly learn how to write a function which would just
        print out the hex value from memory\n\n    void print_32(char* p) {\n      p
        = p + 3;\n      for (uint8_t i = 4; i &gt; 0; i--) {\n        printf(\"%hx\",
        (void *)*p);\n        p--;\n      }\n    }\n\nAnyhow, although I didn''t expect
        to run into issues like this on day one, It is still a lot of fun, and we''ll
        have to see how far I can get on my trusted Game Boy :)\n\nEDIT: day 1 now
        outputs in decimal", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Game
        Boy using C&lt;/p&gt;\n\n&lt;p&gt;Part 1 &lt;a href=\"https://github.com/NiliusJulius/advent-of-code-2022/blob/main/states/1a.c\"&gt;https://github.com/NiliusJulius/advent-of-code-2022/blob/main/states/1a.c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2 &lt;a href=\"https://github.com/NiliusJulius/advent-of-code-2022/blob/main/states/1b.c\"&gt;https://github.com/NiliusJulius/advent-of-code-2022/blob/main/states/1b.c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Went
        for the quick and dirty approach for part 2 since I noticed that while the
        Game Boy Development Kit can use 32 bit integers, it cannot print those values.\nSo
        as a C newbie I had to quickly learn how to write a function which would just
        print out the hex value from memory&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;void
        print_32(char* p) {\n  p = p + 3;\n  for (uint8_t i = 4; i &amp;gt; 0; i--)
        {\n    printf(&amp;quot;%hx&amp;quot;, (void *)*p);\n    p--;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Anyhow,
        although I didn&amp;#39;t expect to run into issues like this on day one,
        It is still a lot of fun, and we&amp;#39;ll have to see how far I can get
        on my trusted Game Boy :)&lt;/p&gt;\n\n&lt;p&gt;EDIT: day 1 now outputs in
        decimal&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygvtt2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygvtt2", "created":
        1669882381.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyugwqc", "id": "iyugwqc", "parent_id":
        "t1_iygvtt2", "depth": 1, "children": ["iyugwqc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 11, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh4dcw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "NeilNjae",
        "can_mod_post": false, "created_utc": 1669890156.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 11, "author_fullname": "t2_6836y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### Haskell\n\nI spent more time looking at the `Data.List.Split` library
        than writing code on this one!\n\n    main :: IO ()\n    main = \n      do  dataFileName
        &lt;- getDataFileName\n          numStrs &lt;- readFile dataFileName\n          let
        calories = fmap (fmap (read @Int)) $ splitWhen null $ lines numStrs\n          print
        $ part1 calories\n          print $ part2 calories\n\n    part1 :: [[Int]]
        -&gt; Int\n    part1 = maximum . fmap sum\n\n    part2 :: [[Int]] -&gt; Int\n    part2
        = sum . take 3 . reverse . sort . fmap sum\n\n[Full writeup on my blog](https://work.njae.me.uk/2022/12/01/advent-of-code-2022-day-1/)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;Haskell&lt;/h3&gt;\n\n&lt;p&gt;I
        spent more time looking at the &lt;code&gt;Data.List.Split&lt;/code&gt; library
        than writing code on this one!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main ::
        IO ()\nmain = \n  do  dataFileName &amp;lt;- getDataFileName\n      numStrs
        &amp;lt;- readFile dataFileName\n      let calories = fmap (fmap (read @Int))
        $ splitWhen null $ lines numStrs\n      print $ part1 calories\n      print
        $ part2 calories\n\npart1 :: [[Int]] -&amp;gt; Int\npart1 = maximum . fmap
        sum\n\npart2 :: [[Int]] -&amp;gt; Int\npart2 = sum . take 3 . reverse . sort
        . fmap sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://work.njae.me.uk/2022/12/01/advent-of-code-2022-day-1/\"&gt;Full
        writeup on my blog&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh4dcw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh4dcw", "created":
        1669890156.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyhpk7n", "id": "iyhpk7n", "parent_id":
        "t1_iyh4dcw", "depth": 1, "children": ["iyhpk7n"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669918360.0, "mod_reason_by": null,
        "banned_by": null, "ups": 12, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi4dk8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "FredTheDane",
        "can_mod_post": false, "created_utc": 1669910522.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 12, "author_fullname": "t2_ivzlf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I don''t see many C# submissions! :D Here''s mine!\n\n    var elfs = File.ReadAllText(\"day1.txt\")\n        .Split(\"\\n\\n\")\n        .Select(elf
        =&gt; elf.Split(\"\\n\", StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).Sum())\n        .OrderDescending();\n    Console.WriteLine($\"Biggest
        boi: {elfs.Max()}, Top 3 kek sum: {elfs.Take(3).Sum()}\");\n\nEdit: revised
        with help of u/CyberCatCopy", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        don&amp;#39;t see many C# submissions! :D Here&amp;#39;s mine!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        elfs = File.ReadAllText(&amp;quot;day1.txt&amp;quot;)\n    .Split(&amp;quot;\\n\\n&amp;quot;)\n    .Select(elf
        =&amp;gt; elf.Split(&amp;quot;\\n&amp;quot;, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).Sum())\n    .OrderDescending();\nConsole.WriteLine($&amp;quot;Biggest
        boi: {elfs.Max()}, Top 3 kek sum: {elfs.Take(3).Sum()}&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit:
        revised with help of &lt;a href=\"/u/CyberCatCopy\"&gt;u/CyberCatCopy&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi4dk8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi4dk8", "created":
        1669910522.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_iyizyy4", "id": "iyizyy4", "parent_id":
        "t1_iyi4dk8", "depth": 1, "children": ["iyizyy4", "iyihb1m", "iyiejc1"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 11, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygoqj0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jayfoad",
        "can_mod_post": false, "created_utc": 1669876669.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 11, "author_fullname": "t2_2vxcy8d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[**Dyalog APL**](https://github.com/jayfoad/aoc2022apl/blob/main/p1.dyalog)\n\n    p\u2190+/\u00a8\u234e\u00a8\u00a8(\u00d7\u2262\u00a8p)\u2286p\u2190\u2283\u2395NGET''p1.txt''1\n    \u2308/p
        \u235d part 1\n    +/3\u2191{\u2375[\u2352\u2375]}p \u235d part 2", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/jayfoad/aoc2022apl/blob/main/p1.dyalog\"&gt;&lt;strong&gt;Dyalog
        APL&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p\u2190+/\u00a8\u234e\u00a8\u00a8(\u00d7\u2262\u00a8p)\u2286p\u2190\u2283\u2395NGET&amp;#39;p1.txt&amp;#39;1\n\u2308/p
        \u235d part 1\n+/3\u2191{\u2375[\u2352\u2375]}p \u235d part 2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygoqj0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygoqj0", "created":
        1669876669.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_iyikff7", "id": "iyikff7", "parent_id":
        "t1_iygoqj0", "depth": 1, "children": ["iyikff7", "iygr6d1", "iygpaf8", "iyo8fc4"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 10, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyghfwr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "polettix",
        "can_mod_post": false, "created_utc": 1669871795.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 10, "author_fullname": "t2_109ciy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Raku](https://www.raku.org)-time!\n\nReading everything in the right way
        (one array per elf), [Raku](https://www.raku.org) has all the battieries we
        need:\n\n    sub part1 ($inputs) { $inputs\u00bb.sum.max }\n    sub part2
        ($inputs) { $inputs\u00bb.sum.sort.reverse[0..2].sum }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.raku.org\"&gt;Raku&lt;/a&gt;-time!&lt;/p&gt;\n\n&lt;p&gt;Reading
        everything in the right way (one array per elf), &lt;a href=\"https://www.raku.org\"&gt;Raku&lt;/a&gt;
        has all the battieries we need:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sub part1
        ($inputs) { $inputs\u00bb.sum.max }\nsub part2 ($inputs) { $inputs\u00bb.sum.sort.reverse[0..2].sum
        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghfwr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghfwr", "created":
        1669871795.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyjp2xi", "id": "iyjp2xi", "parent_id":
        "t1_iyghfwr", "depth": 1, "children": ["iyjp2xi"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669904565.0, "mod_reason_by": null,
        "banned_by": null, "ups": 11, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhk8ik", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "TheCommieDuck",
        "can_mod_post": false, "created_utc": 1669901414.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 11, "author_fullname": "t2_52eu3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Doing each day in a different letter of the alphabet. Day 1 was Awk.\n\n    BEGIN{a=3;b=2;c=1;x=0;}  \n    $0==\"\"&amp;&amp;a&lt;x{c=b;b=a;a=x;}  \n    $0==\"\"&amp;&amp;a&gt;x&amp;&amp;b&lt;x{c=b;b=x;}  \n    $0==\"\"&amp;&amp;b&gt;x&amp;&amp;c&lt;x{c=x;}  \n    $0==\"\"{x=0;}  \n    {x+=$0;}  \n    END{print
        a+b+c;print a;}\n\nOr I can try to golf it a little:\n\n    a&lt;x{c=b;b=a;a=x;}a&gt;x&amp;&amp;b&lt;x{c=b;b=x;}b&gt;x&amp;&amp;c&lt;x{c=x;}!$0{x=0;}{x+=$0;}END{print
        a+b+c;print a;}\n\nOr if intermediate output is allowed, 73 characters\n\n    x&gt;c{c=x;}c&gt;b{c=b;b=x;}b&gt;a{c=b;b=a;a=x;}!$0{x=0;}{x+=$0;}{print(a+b+c,a);}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Doing each day in a
        different letter of the alphabet. Day 1 was Awk.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;BEGIN{a=3;b=2;c=1;x=0;}  \n$0==&amp;quot;&amp;quot;&amp;amp;&amp;amp;a&amp;lt;x{c=b;b=a;a=x;}  \n$0==&amp;quot;&amp;quot;&amp;amp;&amp;amp;a&amp;gt;x&amp;amp;&amp;amp;b&amp;lt;x{c=b;b=x;}  \n$0==&amp;quot;&amp;quot;&amp;amp;&amp;amp;b&amp;gt;x&amp;amp;&amp;amp;c&amp;lt;x{c=x;}  \n$0==&amp;quot;&amp;quot;{x=0;}  \n{x+=$0;}  \nEND{print
        a+b+c;print a;}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or I can try to golf
        it a little:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a&amp;lt;x{c=b;b=a;a=x;}a&amp;gt;x&amp;amp;&amp;amp;b&amp;lt;x{c=b;b=x;}b&amp;gt;x&amp;amp;&amp;amp;c&amp;lt;x{c=x;}!$0{x=0;}{x+=$0;}END{print
        a+b+c;print a;}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or if intermediate
        output is allowed, 73 characters&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;x&amp;gt;c{c=x;}c&amp;gt;b{c=b;b=x;}b&amp;gt;a{c=b;b=a;a=x;}!$0{x=0;}{x+=$0;}{print(a+b+c,a);}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhk8ik/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhk8ik", "created":
        1669901414.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyhx4g7", "id": "iyhx4g7", "parent_id":
        "t1_iyhk8ik", "depth": 1, "children": ["iyhx4g7"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygi8pa", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        10, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygi8pa", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygi8pa/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669872275.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669872275.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygibzp", "id": "iygibzp", "parent_id":
        "t1_iygi8pa", "depth": 1, "children": ["iygibzp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygjf6u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rabuf",
        "can_mod_post": false, "created_utc": 1669873019.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 9, "author_fullname": "t2_38xc9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### [Common Lisp](https://github.com/rabuf/advent-of-code/blob/master/2022/2022.01.org)\n\nThe
        actual functions were easy enough, wasted some time on the text processing
        bit:\n\n    (defun most-calories (elves)\n      (apply #''max (mapcar (lambda
        (elf) (apply #''+ elf)) elves)))\n    (defun top-three-calories (elves)\n      (apply
        #''+ (subseq (sort (mapcar (lambda (elf) (apply #''+ elf)) elves) #''&gt;)
        0 3)))\n\nI should have summed the inputs immediately (instead of collecting
        each elf''s calorie list), would have been less code for the core functions
        but I''m not changing it at this point.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h3&gt;&lt;a href=\"https://github.com/rabuf/advent-of-code/blob/master/2022/2022.01.org\"&gt;Common
        Lisp&lt;/a&gt;&lt;/h3&gt;\n\n&lt;p&gt;The actual functions were easy enough,
        wasted some time on the text processing bit:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        most-calories (elves)\n  (apply #&amp;#39;max (mapcar (lambda (elf) (apply
        #&amp;#39;+ elf)) elves)))\n(defun top-three-calories (elves)\n  (apply #&amp;#39;+
        (subseq (sort (mapcar (lambda (elf) (apply #&amp;#39;+ elf)) elves) #&amp;#39;&amp;gt;)
        0 3)))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I should have summed the inputs
        immediately (instead of collecting each elf&amp;#39;s calorie list), would
        have been less code for the core functions but I&amp;#39;m not changing it
        at this point.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjf6u/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjf6u", "created":
        1669873019.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iygllyz", "id": "iygllyz", "parent_id":
        "t1_iygjf6u", "depth": 1, "children": ["iygllyz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 8, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygjifz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Toanuvo",
        "can_mod_post": false, "created_utc": 1669873078.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 8, "author_fullname": "t2_l2f45", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "J solution. [https://github.com/Toanuvo/Advent-of-code](https://github.com/Toanuvo/Advent-of-code)
        \n\n    a =. +/;._2 \".;._2 ] 22 getin 1 \n    p1 =. &gt;./ a\n    p2 =. +/
        3 {. \\:~ a\n    p1;p2", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;J
        solution. &lt;a href=\"https://github.com/Toanuvo/Advent-of-code\"&gt;https://github.com/Toanuvo/Advent-of-code&lt;/a&gt;
        &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a =. +/;._2 &amp;quot;.;._2 ] 22 getin
        1 \np1 =. &amp;gt;./ a\np2 =. +/ 3 {. \\:~ a\np1;p2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjifz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjifz", "created":
        1669873078.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyoh9dq", "id": "iyoh9dq", "parent_id":
        "t1_iygjifz", "depth": 1, "children": ["iyoh9dq"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygmlvs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        10, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Common Lisp, source on [Gitlab](https://gitlab.com/McModknower/advent-of-code-lisp).\n\n    (defun
        y22d1 ()\n      (aoc-open 2022 1\n        (loop\n           with curr = 0\n           for
        x = (read-line *standard-input* nil)\n           while x\n           if (string=
        x \"\")\n           maximize curr into one\n           and collect curr into
        all\n           and do (setf curr 0)\n           else\n           do (incf
        curr (parse-integer x))\n           end\n           finally (let ((sorted
        (sort all #''&gt;)))\n    \t\t (return (values one (+ (car sorted) (cadr sorted)
        (caddr sorted))))))))", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygmlvs", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Common Lisp, source on &lt;a href=\"https://gitlab.com/McModknower/advent-of-code-lisp\"&gt;Gitlab&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        y22d1 ()\n  (aoc-open 2022 1\n    (loop\n       with curr = 0\n       for
        x = (read-line *standard-input* nil)\n       while x\n       if (string= x
        &amp;quot;&amp;quot;)\n       maximize curr into one\n       and collect curr
        into all\n       and do (setf curr 0)\n       else\n       do (incf curr (parse-integer
        x))\n       end\n       finally (let ((sorted (sort all #&amp;#39;&amp;gt;)))\n         (return
        (values one (+ (car sorted) (cadr sorted) (caddr sorted))))))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygmlvs/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669875135.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669875135.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 10}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 10, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhs2br",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "probablyfine",
        "can_mod_post": false, "created_utc": 1669905295.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 10, "author_fullname": "t2_a5a66", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "SQL\n\n    -- Append a dummy null to the end of the table\n    -- to avoid
        special-casing the final elf\n    insert into input VALUES(NULL);\n    \n    --
        Identify the boundaries between each elf\n    with breaks(line) as (\n      select
        rowid from input where column0 is null\n    ),\n    \n    -- Turn boundaries
        into pairs of (top, bottom)\n    -- indices in the table\n    bounds(top,
        bottom) as (\n      select line, lag(line, 1, 0) over () from breaks\n    ),\n    \n    --
        Join and sum over the pairs of (top, bottom)\n    -- to find total calories
        per elf\n    elves(top, calories) as (\n      select\n        bounds.top,
        sum(column0)\n      from\n        bounds\n      join\n        input\n      on\n        input.rowid
        between bounds.bottom and bounds.top\n      group by 1\n    )\n    \n    --
        What''s the most calories held by a single elf?\n    select ''part 1'', max(calories)
        from elves\n    \n    union all\n    \n    -- What''s the total calories held
        by the elves with\n    -- the top 3 most calories?\n    select ''part 2'',
        sum(calories) from (\n      select calories from elves order by calories desc
        limit 3\n    );", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;SQL&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;--
        Append a dummy null to the end of the table\n-- to avoid special-casing the
        final elf\ninsert into input VALUES(NULL);\n\n-- Identify the boundaries between
        each elf\nwith breaks(line) as (\n  select rowid from input where column0
        is null\n),\n\n-- Turn boundaries into pairs of (top, bottom)\n-- indices
        in the table\nbounds(top, bottom) as (\n  select line, lag(line, 1, 0) over
        () from breaks\n),\n\n-- Join and sum over the pairs of (top, bottom)\n--
        to find total calories per elf\nelves(top, calories) as (\n  select\n    bounds.top,
        sum(column0)\n  from\n    bounds\n  join\n    input\n  on\n    input.rowid
        between bounds.bottom and bounds.top\n  group by 1\n)\n\n-- What&amp;#39;s
        the most calories held by a single elf?\nselect &amp;#39;part 1&amp;#39;,
        max(calories) from elves\n\nunion all\n\n-- What&amp;#39;s the total calories
        held by the elves with\n-- the top 3 most calories?\nselect &amp;#39;part
        2&amp;#39;, sum(calories) from (\n  select calories from elves order by calories
        desc limit 3\n);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhs2br/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhs2br", "created": 1669905295.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_iyif1k0", "id": "iyif1k0", "parent_id": "t1_iyhs2br", "depth": 1, "children":
        ["iyif1k0"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 9, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyiile1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "DrunkenQuetzalcoatl",
        "can_mod_post": false, "created_utc": 1669916107.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 9, "author_fullname": "t2_7jarw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash\n\n    awk ''/[0-9]/{sum+=$1}/^$/{print sum;sum=0}END{print sum}'' input_1_1.txt
        | sort -n | tail -3 | awk ''{sum+=$1}END{print sum}''", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Bash&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;awk &amp;#39;/[0-9]/{sum+=$1}/^$/{print
        sum;sum=0}END{print sum}&amp;#39; input_1_1.txt | sort -n | tail -3 | awk
        &amp;#39;{sum+=$1}END{print sum}&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiile1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiile1", "created":
        1669916107.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669901580.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyglkya", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mingmingrr",
        "can_mod_post": false, "created_utc": 1669874434.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 8, "author_fullname": "t2_fmphn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Haskell (rank 50/38)\n\n    part1, part2 :: [Int] -&gt; Int\n    part1
        = head\n    part2 = sum . take 3\n    main = readFile (replaceExtension __FILE__
        \".in\") &gt;&gt;=\n      print . part2 . sortOn Down . map (sum . map (read
        @Int)) . paragraphs\n\nhttps://github.com/mingmingrr/advent-of-code/blob/master/src/Year2022/Day1.hs\n\n#
        Turing Complete\n\nPart 1: https://imgur.com/xWxS7yn\n\nPart 2: https://imgur.com/wjV2OCZ",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Haskell (rank 50/38)&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;part1,
        part2 :: [Int] -&amp;gt; Int\npart1 = head\npart2 = sum . take 3\nmain = readFile
        (replaceExtension __FILE__ &amp;quot;.in&amp;quot;) &amp;gt;&amp;gt;=\n  print
        . part2 . sortOn Down . map (sum . map (read @Int)) . paragraphs\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mingmingrr/advent-of-code/blob/master/src/Year2022/Day1.hs\"&gt;https://github.com/mingmingrr/advent-of-code/blob/master/src/Year2022/Day1.hs&lt;/a&gt;&lt;/p&gt;\n\n&lt;h1&gt;Turing
        Complete&lt;/h1&gt;\n\n&lt;p&gt;Part 1: &lt;a href=\"https://imgur.com/xWxS7yn\"&gt;https://imgur.com/xWxS7yn&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2: &lt;a href=\"https://imgur.com/wjV2OCZ\"&gt;https://imgur.com/wjV2OCZ&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglkya/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyglkya", "created":
        1669874434.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyiz29h", "id": "iyiz29h", "parent_id":
        "t1_iyglkya", "depth": 1, "children": ["iyiz29h"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669876264.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygmo7x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "0rac1e",
        "can_mod_post": false, "created_utc": 1669875181.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 8, "author_fullname": "t2_jqvvy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Raku\n\nSimple enough one-liner in Raku\n\n    put ''input''.IO.split(\"\\n\\n\").map(*.words.sum).sort(-*)[0,
        ^3]\u00bb.sum\n\n  1. Read file and split on paragraphs (\"\\n\\n\")\n  2.
        Split each paragraph into words, and (coerce to Int''s and) sum\n  3. Reverse
        sort, grab the 0th &amp; up-to the 3rd elems, and sum each", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Raku&lt;/h1&gt;\n\n&lt;p&gt;Simple enough
        one-liner in Raku&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;put &amp;#39;input&amp;#39;.IO.split(&amp;quot;\\n\\n&amp;quot;).map(*.words.sum).sort(-*)[0,
        ^3]\u00bb.sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Read file
        and split on paragraphs (&amp;quot;\\n\\n&amp;quot;)&lt;/li&gt;\n&lt;li&gt;Split
        each paragraph into words, and (coerce to Int&amp;#39;s and) sum&lt;/li&gt;\n&lt;li&gt;Reverse
        sort, grab the 0th &amp;amp; up-to the 3rd elems, and sum each&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygmo7x/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygmo7x", "created":
        1669875181.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iygtf2j", "id": "iygtf2j", "parent_id":
        "t1_iygmo7x", "depth": 1, "children": ["iygtf2j"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669878639.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygqs57", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "atgreen",
        "can_mod_post": false, "created_utc": 1669878212.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_36rtk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Common Lisp...\n\n    (ql:quickload :split-sequence)\n    \n    (let ((cals
        (sort (mapcar (lambda (nums) (reduce #''+ (mapcar #''parse-integer nums)))\n                              (split-sequence:split-sequence
        \"\" (uiop:read-file-lines \"01.input\") :test #''equal))\n                      #''&gt;)))\n      (print
        (apply #''max cals))\n      (print (+ (car cals) (cadr cals) (caddr cals))))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Common Lisp...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ql:quickload
        :split-sequence)\n\n(let ((cals (sort (mapcar (lambda (nums) (reduce #&amp;#39;+
        (mapcar #&amp;#39;parse-integer nums)))\n                          (split-sequence:split-sequence
        &amp;quot;&amp;quot; (uiop:read-file-lines &amp;quot;01.input&amp;quot;) :test
        #&amp;#39;equal))\n                  #&amp;#39;&amp;gt;)))\n  (print (apply
        #&amp;#39;max cals))\n  (print (+ (car cals) (cadr cals) (caddr cals))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygqs57/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygqs57", "created":
        1669878212.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_iygsb1j", "id": "iygsb1j", "parent_id":
        "t1_iygqs57", "depth": 1, "children": ["iygsb1j", "iygrrk7"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669884531.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygslyw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1669879664.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 8, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Dyalog APL\n\nOut of practise; it took me about 30 minutes of DOMAIN ERRORS
        and typing things which gave silent no results to partition the input into
        groups. Then 30 seconds to sum and sort.\n\n          lines\u2190\u2283\u2395nget
        ''input1.txt'' 1\n          \u2308/+/\u2191\u234e\u00a8\u00a8{\u2375\u2286\u2368(\u2282'''')\u2262\u00a8\u2375}lines\n    12345
        \u235d P1\n          +/3\u2191{\u2375[\u2352\u2375]}+/\u2191\u234e\u00a8\u00a8{\u2375\u2286\u2368(\u2282'''')\u2262\u00a8\u2375}lines\n    12345
        \u235d P2\n\nReading the three lines of code from right to left:\n\n- \u2395NGET
        reads a text file, with a 1 on the end it reads as lines\n- {} is a lambda/anonymous
        function with \u2375 omega as the variables for its argument\n- (\u2282'''')\u2262\u00a8\u2375  compares
        each line with an empty string, making a boolean array of 0 0 1 0 0 0 1 marking
        the empty lines\n- (bool array)\u2286\u2375  partitions (splits) the array
        into groups using the 1s as group delimiters, one group for each elf''s numbers\n-
        \u234e is eval() and turns the text of the numbers into integers, for each
        \u00a8 line in each \u00a8 group (nested loop, each each \u00a8\u00a8)\n-
        \u2191 turns the nested ((1 2 3 4) (1 2 3)) style array into a rectangular
        grid, each group is a row, padding missing data from the shorter groups with
        0s\n\nE.g.\n\n    1 2 3 4\n    1 2 3 0\n\n- +/ sums (\"reduce\") across all
        the rows to give a flat array of each elf''s totals\n- \u2308/ is max-reduce
        which finds the largest value\n\nfor part 2, slap onto the front:\n\n- {\u2375[\u2352\u2375]}
        which is a lambda that sorts an array descending\n- 3\u2191  \"three take\"
        takes the first three (in this case the three largest values)\n- +/ sums those\n\nrun
        in a REPL so no output printing.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h2&gt;Dyalog APL&lt;/h2&gt;\n\n&lt;p&gt;Out of practise;
        it took me about 30 minutes of DOMAIN ERRORS and typing things which gave
        silent no results to partition the input into groups. Then 30 seconds to sum
        and sort.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;      lines\u2190\u2283\u2395nget
        &amp;#39;input1.txt&amp;#39; 1\n      \u2308/+/\u2191\u234e\u00a8\u00a8{\u2375\u2286\u2368(\u2282&amp;#39;&amp;#39;)\u2262\u00a8\u2375}lines\n12345
        \u235d P1\n      +/3\u2191{\u2375[\u2352\u2375]}+/\u2191\u234e\u00a8\u00a8{\u2375\u2286\u2368(\u2282&amp;#39;&amp;#39;)\u2262\u00a8\u2375}lines\n12345
        \u235d P2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Reading the three lines of
        code from right to left:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;\u2395NGET reads
        a text file, with a 1 on the end it reads as lines&lt;/li&gt;\n&lt;li&gt;{}
        is a lambda/anonymous function with \u2375 omega as the variables for its
        argument&lt;/li&gt;\n&lt;li&gt;(\u2282&amp;#39;&amp;#39;)\u2262\u00a8\u2375  compares
        each line with an empty string, making a boolean array of 0 0 1 0 0 0 1 marking
        the empty lines&lt;/li&gt;\n&lt;li&gt;(bool array)\u2286\u2375  partitions
        (splits) the array into groups using the 1s as group delimiters, one group
        for each elf&amp;#39;s numbers&lt;/li&gt;\n&lt;li&gt;\u234e is eval() and
        turns the text of the numbers into integers, for each \u00a8 line in each
        \u00a8 group (nested loop, each each \u00a8\u00a8)&lt;/li&gt;\n&lt;li&gt;\u2191
        turns the nested ((1 2 3 4) (1 2 3)) style array into a rectangular grid,
        each group is a row, padding missing data from the shorter groups with 0s&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;E.g.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;1
        2 3 4\n1 2 3 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;+/ sums
        (&amp;quot;reduce&amp;quot;) across all the rows to give a flat array of each
        elf&amp;#39;s totals&lt;/li&gt;\n&lt;li&gt;\u2308/ is max-reduce which finds
        the largest value&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;for part 2, slap onto
        the front:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;{\u2375[\u2352\u2375]} which
        is a lambda that sorts an array descending&lt;/li&gt;\n&lt;li&gt;3\u2191  &amp;quot;three
        take&amp;quot; takes the first three (in this case the three largest values)&lt;/li&gt;\n&lt;li&gt;+/
        sums those&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;run in a REPL so no output
        printing.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygslyw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygslyw", "created":
        1669879664.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iylths2", "id": "iylths2", "parent_id":
        "t1_iygslyw", "depth": 1, "children": ["iylths2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygtai7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "MuumiJumala",
        "can_mod_post": false, "created_utc": 1669880228.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 9, "author_fullname": "t2_9hygu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "54 byte golf solution in Ruby (reads input from stdin):\n\n    $/*=2\n    x=$&lt;.map{_1.split.sum
        &amp;:to_i}.max 3\n    p x[0],x.sum", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;54 byte golf solution in Ruby (reads input from stdin):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$/*=2\nx=$&amp;lt;.map{_1.split.sum
        &amp;amp;:to_i}.max 3\np x[0],x.sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtai7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygtai7", "created":
        1669880228.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iygyaku", "id": "iygyaku", "parent_id":
        "t1_iygtai7", "depth": 1, "children": ["iygyaku"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669902762.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhm1al", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "0rac1e",
        "can_mod_post": false, "created_utc": 1669902364.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 8, "author_fullname": "t2_jqvvy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# APL\n\n    (+\u2340 (\u2282\u2218\u2352\u2337\u22a2) (+\u233f\u234e\u00a8)\u00a8
        (\u2262\u00a8\u2286\u22a2) \u2283 \u2395NGET ''input'' 1)[1 3]\n\nEssentially
        doing the same thing as my [J solution](https://www.reddit.com/r/adventofcode/comments/z9ezjb/comment/iygo26j).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;APL&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;(+\u2340
        (\u2282\u2218\u2352\u2337\u22a2) (+\u233f\u234e\u00a8)\u00a8 (\u2262\u00a8\u2286\u22a2)
        \u2283 \u2395NGET &amp;#39;input&amp;#39; 1)[1 3]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Essentially
        doing the same thing as my &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/z9ezjb/comment/iygo26j\"&gt;J
        solution&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhm1al/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhm1al", "created":
        1669902364.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyi52ig", "id": "iyi52ig", "parent_id":
        "t1_iyhm1al", "depth": 1, "children": ["iyi52ig"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670066478.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjq8cq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jcbbjjttt",
        "can_mod_post": false, "created_utc": 1669933046.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_6c1sw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Happy December!\n\nI teach computer science and programmer courses for elementary
        through high school and am having my students tackle the Advent of Code. To
        help out my beginner students, I''m planning to create videos to help guide
        them through the thinking process. The video is designed to allow watchers
        to pause and work on the problem step by step before seeing spoilers. Although
        I used C#, the video tries to talk through a solution in a language agnostic
        way.\n\nI hope someone finds them useful.\n\nHere is the video from Day 1:
        [https://youtu.be/eQSO1Ov4k8g](https://youtu.be/eQSO1Ov4k8g)\n\nHere is the
        final solution: https://github.com/jcollard/AdventOfCode2022/blob/jcollard/day1/Day1-FatElves/Program.cs\n\nHappy
        Coding!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Happy
        December!&lt;/p&gt;\n\n&lt;p&gt;I teach computer science and programmer courses
        for elementary through high school and am having my students tackle the Advent
        of Code. To help out my beginner students, I&amp;#39;m planning to create
        videos to help guide them through the thinking process. The video is designed
        to allow watchers to pause and work on the problem step by step before seeing
        spoilers. Although I used C#, the video tries to talk through a solution in
        a language agnostic way.&lt;/p&gt;\n\n&lt;p&gt;I hope someone finds them useful.&lt;/p&gt;\n\n&lt;p&gt;Here
        is the video from Day 1: &lt;a href=\"https://youtu.be/eQSO1Ov4k8g\"&gt;https://youtu.be/eQSO1Ov4k8g&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here
        is the final solution: &lt;a href=\"https://github.com/jcollard/AdventOfCode2022/blob/jcollard/day1/Day1-FatElves/Program.cs\"&gt;https://github.com/jcollard/AdventOfCode2022/blob/jcollard/day1/Day1-FatElves/Program.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Happy
        Coding!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjq8cq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjq8cq", "created":
        1669933046.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iykovih", "id": "iykovih", "parent_id":
        "t1_iyjq8cq", "depth": 1, "children": ["iykovih", "iyq2kr4"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669873467.0, "mod_reason_by": null,
        "banned_by": null, "ups": 8, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygh9b7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SuperSmurfen",
        "can_mod_post": false, "created_utc": 1669871682.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 8, "author_fullname": "t2_5nvuo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust (240/204)**\n\n[Link to solution](https://github.com/AxlLind/AdventOfCode2022/blob/main/src/bin/01.rs)\n\nNice
        to be back! Fouth year in a row I''m doing these in Rust. Tip for parsing
        input like today is to first split on double newline, `\"\\n\\n\"`. Just some
        use of iterators to get the sorted list of calorie intakes which you can reuse
        for both parts:\n\n    let xs = input.split(\"\\n\\n\")\n      .map(|s| s.lines().map(|l|
        l.parse::&lt;usize&gt;().unwrap()).sum::&lt;usize&gt;())\n      .sorted()\n      .rev()\n      .collect::&lt;Vec&lt;_&gt;&gt;();\n    let
        p1 = xs[0];\n    let p2 = xs[0..3].iter().sum();", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust (240/204)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/AxlLind/AdventOfCode2022/blob/main/src/bin/01.rs\"&gt;Link
        to solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nice to be back! Fouth year in
        a row I&amp;#39;m doing these in Rust. Tip for parsing input like today is
        to first split on double newline, &lt;code&gt;&amp;quot;\\n\\n&amp;quot;&lt;/code&gt;.
        Just some use of iterators to get the sorted list of calorie intakes which
        you can reuse for both parts:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let xs =
        input.split(&amp;quot;\\n\\n&amp;quot;)\n  .map(|s| s.lines().map(|l| l.parse::&amp;lt;usize&amp;gt;().unwrap()).sum::&amp;lt;usize&amp;gt;())\n  .sorted()\n  .rev()\n  .collect::&amp;lt;Vec&amp;lt;_&amp;gt;&amp;gt;();\nlet
        p1 = xs[0];\nlet p2 = xs[0..3].iter().sum();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygh9b7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygh9b7", "created":
        1669871682.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669921778.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh8dn4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "9_11_did_bush",
        "can_mod_post": false, "created_utc": 1669893622.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_4p0249k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "APL (Dyalog):\n\n`raw\u2190\u2283\u2395NGET''../input.txt''1`\r  \n`v\u2190(+\u233f\u234e\u00a8)\u00a8(\u2262\u00a8\u2286\u22a2)raw`\r  \n`p1_ans\u2190\u2395\u2190\u2308/v`\r  \n`p2_ans\u2190\u2395\u2190+/(3\u2191\u2352v)\u2337\u00a8\u2282v`\n\n\nEdit:
        simplified the second line a bit for readability, still the same idea", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;APL (Dyalog):&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;raw\u2190\u2283\u2395NGET&amp;#39;../input.txt&amp;#39;1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;v\u2190(+\u233f\u234e\u00a8)\u00a8(\u2262\u00a8\u2286\u22a2)raw&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;p1_ans\u2190\u2395\u2190\u2308/v&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;p2_ans\u2190\u2395\u2190+/(3\u2191\u2352v)\u2337\u00a8\u2282v&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit:
        simplified the second line a bit for readability, still the same idea&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh8dn4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh8dn4", "created":
        1669893622.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyltr75", "id": "iyltr75", "parent_id":
        "t1_iyh8dn4", "depth": 1, "children": ["iyltr75", "iyhxpa6"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhoclc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Noizla",
        "can_mod_post": false, "created_utc": 1669903532.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_7gyk8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Haskell**\n\nPracticing my Haskell, feeding input through stdin.\n\nPart
        1\n\n`main = interact $ show . maximum . map (sum . map read) . splitOn [\"\"]
        . lines`\n\nPart 2\n\n`main = interact $ show . sum . take 3 . reverse . sort
        . map (sum . map read) . splitOn [\"\"] . lines`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Haskell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Practicing
        my Haskell, feeding input through stdin.&lt;/p&gt;\n\n&lt;p&gt;Part 1&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;main
        = interact $ show . maximum . map (sum . map read) . splitOn [&amp;quot;&amp;quot;]
        . lines&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part 2&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;main
        = interact $ show . sum . take 3 . reverse . sort . map (sum . map read) .
        splitOn [&amp;quot;&amp;quot;] . lines&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhoclc/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhoclc", "created":
        1669903532.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi0efs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        7, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyi0efs", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi0efs/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669908903.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669908903.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyizlpw", "id": "iyizlpw", "parent_id":
        "t1_iyi0efs", "depth": 1, "children": ["iyizlpw", "iyi2lra"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjh7lh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "e_blake",
        "can_mod_post": false, "created_utc": 1669929439.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_4tezwlii", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Highly-constrained C**\n\nHere''s my golfed solution in C using only one
        control flow keyword, and 0 ternary or short-circuiting operators, requiring
        just 323 bytes (3 of them removable newlines).  On modern hardware, an optimizing
        compiler can produce straight-line code for comparisons like a&gt;b, which
        theoretically means my entire solution needs only one jump instruction besides
        the two calls into stdio.  Takes puzzle input on stdin.\n\n    #include&lt;stdio.h&gt;\n    #define
        r(s,t,u) t=t*!(s)+(u)*(s);\n    #define w(x,y,z) h=0;r(x,h,z&gt;y)z^=y*h;y^=z*h;z^=y*h;\n    int
        a,b,c,d,e,f,g,h;int main(void){while(!g+(d=getchar())){r(g==d,d,g-1)\n    r(d&gt;=48,e,e*10+d-48)r(d==10,f,f+e)r(d==10,e,0)r(d==10,g,d)w(d&lt;10,a,f)\n    w(d&lt;10,b,f)w(d&lt;10,c,f)r(d&lt;10,f,0)r(d!=10,g,0)}printf(\"%d
        %d\\n\",a,a+b+c);}\n\nIt is a rather interesting challenge to write a loop
        body that executes EVERY statement for EVERY input byte.  I was so tempted
        to use an ''if'' just to make things more compact.  However, I can also state
        that the program will reformat quite nicely into ASCII-art, since there are
        so many points where whitespace can be added.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Highly-constrained C&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s
        my golfed solution in C using only one control flow keyword, and 0 ternary
        or short-circuiting operators, requiring just 323 bytes (3 of them removable
        newlines).  On modern hardware, an optimizing compiler can produce straight-line
        code for comparisons like a&amp;gt;b, which theoretically means my entire
        solution needs only one jump instruction besides the two calls into stdio.  Takes
        puzzle input on stdin.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;\n#define
        r(s,t,u) t=t*!(s)+(u)*(s);\n#define w(x,y,z) h=0;r(x,h,z&amp;gt;y)z^=y*h;y^=z*h;z^=y*h;\nint
        a,b,c,d,e,f,g,h;int main(void){while(!g+(d=getchar())){r(g==d,d,g-1)\nr(d&amp;gt;=48,e,e*10+d-48)r(d==10,f,f+e)r(d==10,e,0)r(d==10,g,d)w(d&amp;lt;10,a,f)\nw(d&amp;lt;10,b,f)w(d&amp;lt;10,c,f)r(d&amp;lt;10,f,0)r(d!=10,g,0)}printf(&amp;quot;%d
        %d\\n&amp;quot;,a,a+b+c);}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It is a
        rather interesting challenge to write a loop body that executes EVERY statement
        for EVERY input byte.  I was so tempted to use an &amp;#39;if&amp;#39; just
        to make things more compact.  However, I can also state that the program will
        reformat quite nicely into ASCII-art, since there are so many points where
        whitespace can be added.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjh7lh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjh7lh", "created":
        1669929439.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_iyjj01r", "id": "iyjj01r", "parent_id":
        "t1_iyjh7lh", "depth": 1, "children": ["iyjj01r", "iyjnffr", "iyjpyl4", "iyjl8v4",
        "iyjtj9n"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669935312.0,
        "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id":
        "t3_z9ezjb", "author_flair_template_id": null, "likes": null, "replies": "",
        "user_reports": [], "saved": false, "id": "iyjutdf", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t3_z9ezjb", "score": 7, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "#Apple Shortcuts
        Solution\n\nhttps://www.icloud.com/shortcuts/1a2e4da142bb4a0b8736ab3c71fc42d0\n\nAnd\u2026no,
        I won\u2019t be doing that again.", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyjutdf", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Apple Shortcuts Solution&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.icloud.com/shortcuts/1a2e4da142bb4a0b8736ab3c71fc42d0\"&gt;https://www.icloud.com/shortcuts/1a2e4da142bb4a0b8736ab3c71fc42d0&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And\u2026no,
        I won\u2019t be doing that again.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjutdf/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669934995.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669934995.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iykr5qh", "id": "iykr5qh", "parent_id":
        "t1_iyjutdf", "depth": 1, "children": ["iykr5qh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669871507.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygg7oy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "hugh_tc",
        "can_mod_post": false, "created_utc": 1669871060.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_945c23t8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3**, 20/13.\n\nAnother December, another Advent of Code!\n\n[paste](https://topaz.github.io/paste/#XQAAAQCBAAAAAAAAAAAkk4AC0B10Sj1GyWZB2EtOMR/UFxxHYal/zt0+yLnLIFiQg5Me/De+mHrIA1r4tbe/87wzUS2BIOmtR8s4/M80yt1PTzxFcuRWgHVwa71K+PMYdnSzRhzxWEcpfv4apyoquy1DvzASZvYR/n3/zMRwAA==),
        [cleaned-up](https://github.com/hughcoleman/advent-of-code/blob/main/2022/01.py)\n\nNow...
        time to go back and read the prose. (Sorry, Eric!)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python 3&lt;/strong&gt;, 20/13.&lt;/p&gt;\n\n&lt;p&gt;Another
        December, another Advent of Code!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCBAAAAAAAAAAAkk4AC0B10Sj1GyWZB2EtOMR/UFxxHYal/zt0+yLnLIFiQg5Me/De+mHrIA1r4tbe/87wzUS2BIOmtR8s4/M80yt1PTzxFcuRWgHVwa71K+PMYdnSzRhzxWEcpfv4apyoquy1DvzASZvYR/n3/zMRwAA==\"&gt;paste&lt;/a&gt;,
        &lt;a href=\"https://github.com/hughcoleman/advent-of-code/blob/main/2022/01.py\"&gt;cleaned-up&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Now...
        time to go back and read the prose. (Sorry, Eric!)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygg7oy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygg7oy", "created":
        1669871060.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyghtr2", "id": "iyghtr2", "parent_id":
        "t1_iygg7oy", "depth": 1, "children": ["iyghtr2"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyggld4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        7, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyggld4", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggld4/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669871283.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669871283.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 7}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyhknrg", "id": "iyhknrg", "parent_id":
        "t1_iyggld4", "depth": 1, "children": ["iyhknrg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669871964.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyggrwr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "nthistle",
        "can_mod_post": false, "created_utc": 1669871392.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_310ezr4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3**, 2/8.\n\nBy far my best performance on a day 1! In the past
        I''ve had pretty bad luck with the first day, so nice to finally break that.\n\n[paste](https://topaz.github.io/paste/#XQAAAQAGAQAAAAAAAAAzHIoib6pMX4ickc1Mep93pgqtuV6rGB3/4+U1dzhRJgQiSqfbX13dPuDzSP7zTpRdmd1CsIvCONqc5K99AwVY+Yh+50Uo5RmbYYrmb7/tBQDGXXOpfLy4nRDiEMEJGIMaTCtXMpfmnrGyRugjxlWhkp+8OFbNRUxFm39MF9YS22eweWpwNwQbQfpzNX1fR1i8SQdd3uL8eP7WWLvjtKdAjvInzbzItVK+EmoZZN536l4dbv3NxnJhawf0e8E6V85WHv68xkA=)\n\n[Solve
        video](https://youtu.be/RDodGjtGIv4)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python 3&lt;/strong&gt;, 2/8.&lt;/p&gt;\n\n&lt;p&gt;By
        far my best performance on a day 1! In the past I&amp;#39;ve had pretty bad
        luck with the first day, so nice to finally break that.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAGAQAAAAAAAAAzHIoib6pMX4ickc1Mep93pgqtuV6rGB3/4+U1dzhRJgQiSqfbX13dPuDzSP7zTpRdmd1CsIvCONqc5K99AwVY+Yh+50Uo5RmbYYrmb7/tBQDGXXOpfLy4nRDiEMEJGIMaTCtXMpfmnrGyRugjxlWhkp+8OFbNRUxFm39MF9YS22eweWpwNwQbQfpzNX1fR1i8SQdd3uL8eP7WWLvjtKdAjvInzbzItVK+EmoZZN536l4dbv3NxnJhawf0e8E6V85WHv68xkA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://youtu.be/RDodGjtGIv4\"&gt;Solve video&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggrwr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggrwr", "created":
        1669871392.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygljfg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "WhipsAndMarkovChains",
        "can_mod_post": false, "created_utc": 1669874406.0, "send_replies": true,
        "parent_id": "t1_iyggrwr", "score": 6, "author_fullname": "t2_4vbfm8gy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "It\u2019s 2022, you can probably leave off the \u201c3\u201d in \u201cPython
        3\u201d. \ud83d\ude1b", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It\u2019s
        2022, you can probably leave off the \u201c3\u201d in \u201cPython 3\u201d.
        \ud83d\ude1b&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygljfg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygljfg", "created":
        1669874406.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygo5y2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rio-bevol",
        "can_mod_post": false, "created_utc": 1669876252.0, "send_replies": true,
        "parent_id": "t1_iygljfg", "score": 7, "author_fullname": "t2_4vz2nmz0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Forwards compatibility? Haha. If someone''s reading this twenty years later
        and by then we''re on Python 4, they probably don''t want to have to guess
        if it''s v2 or v3 :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Forwards
        compatibility? Haha. If someone&amp;#39;s reading this twenty years later
        and by then we&amp;#39;re on Python 4, they probably don&amp;#39;t want to
        have to guess if it&amp;#39;s v2 or v3 :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygo5y2/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygo5y2", "created": 1669876252.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 2, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyiqmnr", "id": "iyiqmnr", "parent_id": "t1_iygo5y2", "depth": 3, "children":
        ["iyiqmnr"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyghaz9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        6, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyghaz9", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghaz9/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669871710.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669871710.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyj4b10", "id": "iyj4b10", "parent_id":
        "t1_iyghaz9", "depth": 1, "children": ["iyj4b10", "iygqwm2"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670380323.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygilpw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "chrispsn_ok",
        "can_mod_post": false, "created_utc": 1669872498.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_7tpvnvx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[ngn/k](https://codeberg.org/ngn/k); [my answers repo](https://github.com/chrispsn/aoc2022/blob/main/answers.ngnk).\n\n    x@:&gt;x:+/''0^(&amp;^x)_x:0N,`I$0:`input\n    *x\n    +/3#x",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://codeberg.org/ngn/k\"&gt;ngn/k&lt;/a&gt;;
        &lt;a href=\"https://github.com/chrispsn/aoc2022/blob/main/answers.ngnk\"&gt;my
        answers repo&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;x@:&amp;gt;x:+/&amp;#39;0^(&amp;amp;^x)_x:0N,`I$0:`input\n*x\n+/3#x\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygilpw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygilpw", "created":
        1669872498.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669874443.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygk31x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "DFreiberg",
        "can_mod_post": false, "created_utc": 1669873445.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_87ozx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**[Mathematica](https://github.com/HiggstonRainbird/AoC-2022/blob/master/Day%2001/AoC%20Day%2001.m/),  686
        / 306**\n----\n\nI was not at all prepared for the table split by double newlines;
        just when you think you''ve handled everything in your imports, something
        new comes along.  Which is what makes Advent of Code so much fun.\n\n**Import
        &amp; Setup:**\n\n    toExpression[inputText_] :=\n      Map[\n       If[!
        IntegerQ[#] \\[And] \n          StringMatchQ[#, \n           Alternatives[\"+\",
        \"-\", \"\"] ~~ DigitCharacter ..], \n         ToExpression[#], #] &amp;,\n       inputText,\n       {Depth[inputText]
        - 1, Depth[inputText]}];\n     \n    input=StringSplit[Import[inputPath],\"\\n\\n\"];\n    input=toExpression[StringSplit[#,\"\\n\"]&amp;/@input];\n\n**Part
        1:**\n\n    Max[Total /@ formattedInput]\n\n**Part 2:**\n        \n    Total[Sort[Total
        /@ formattedInput][[-3 ;;]]]\n\n**[POEM]: Where''s The Wild Things'' Star?**\n----\n\nWe''re
        now setting up camp  \nIn the dew and the damp,  \nOn the hunt for the star-spangled
        berry,  \n\nAnd the jungle is thick,  \nBut we have every trick  \nThat will
        make the dark forest less scary,  \n\nSo we''ll head to the grove  \nAnd its
        heavenly trove  \n(It''s a Dijkstra-type maze, so be wary)  \n\nThen the stars
        will appear,  \nAnd when fifty are here,  \nWe will eat and we''ll drink and
        be merry.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/HiggstonRainbird/AoC-2022/blob/master/Day%2001/AoC%20Day%2001.m/\"&gt;Mathematica&lt;/a&gt;,  686
        / 306&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;I was not at all prepared for
        the table split by double newlines; just when you think you&amp;#39;ve handled
        everything in your imports, something new comes along.  Which is what makes
        Advent of Code so much fun.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Import &amp;amp;
        Setup:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;toExpression[inputText_]
        :=\n  Map[\n   If[! IntegerQ[#] \\[And] \n      StringMatchQ[#, \n       Alternatives[&amp;quot;+&amp;quot;,
        &amp;quot;-&amp;quot;, &amp;quot;&amp;quot;] ~~ DigitCharacter ..], \n     ToExpression[#],
        #] &amp;amp;,\n   inputText,\n   {Depth[inputText] - 1, Depth[inputText]}];\n\ninput=StringSplit[Import[inputPath],&amp;quot;\\n\\n&amp;quot;];\ninput=toExpression[StringSplit[#,&amp;quot;\\n&amp;quot;]&amp;amp;/@input];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Max[Total /@ formattedInput]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        2:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Total[Sort[Total /@
        formattedInput][[-3 ;;]]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;&lt;strong&gt;[POEM]:
        Where&amp;#39;s The Wild Things&amp;#39; Star?&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;p&gt;We&amp;#39;re
        now setting up camp&lt;br/&gt;\nIn the dew and the damp,&lt;br/&gt;\nOn the
        hunt for the star-spangled berry,  &lt;/p&gt;\n\n&lt;p&gt;And the jungle is
        thick,&lt;br/&gt;\nBut we have every trick&lt;br/&gt;\nThat will make the
        dark forest less scary,  &lt;/p&gt;\n\n&lt;p&gt;So we&amp;#39;ll head to the
        grove&lt;br/&gt;\nAnd its heavenly trove&lt;br/&gt;\n(It&amp;#39;s a Dijkstra-type
        maze, so be wary)  &lt;/p&gt;\n\n&lt;p&gt;Then the stars will appear,&lt;br/&gt;\nAnd
        when fifty are here,&lt;br/&gt;\nWe will eat and we&amp;#39;ll drink and be
        merry.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygk31x/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygk31x", "created":
        1669873445.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygx1bw", "id": "iygx1bw", "parent_id":
        "t1_iygk31x", "depth": 1, "children": ["iygx1bw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyglq7r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rooinflames",
        "can_mod_post": false, "created_utc": 1669874533.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_2yh6bfep", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Excel for Mac (ew) \n\nData pasted into column A, Column B formula filled
        down\nhttps://imgur.com/a/OjGE2iQ\n\nData then pivot tabled, and sorted by
        sum\nhttps://imgur.com/a/16ZMfjb", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Excel for Mac (ew) &lt;/p&gt;\n\n&lt;p&gt;Data pasted
        into column A, Column B formula filled down\n&lt;a href=\"https://imgur.com/a/OjGE2iQ\"&gt;https://imgur.com/a/OjGE2iQ&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Data
        then pivot tabled, and sorted by sum\n&lt;a href=\"https://imgur.com/a/16ZMfjb\"&gt;https://imgur.com/a/16ZMfjb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglq7r/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyglq7r", "created":
        1669874533.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669875052.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygm01k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "sr66",
        "can_mod_post": false, "created_utc": 1669874718.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_xlsl7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "##**J**\n\n    day1=: {{ ({. ; +/)3{.\\:~+/\"1\".@&gt;''  '' splitstring
        (LF;'' '') charsub fread y }}", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h2&gt;&lt;strong&gt;J&lt;/strong&gt;&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;day1=:
        {{ ({. ; +/)3{.\\:~+/&amp;quot;1&amp;quot;.@&amp;gt;&amp;#39;  &amp;#39; splitstring
        (LF;&amp;#39; &amp;#39;) charsub fread y }}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygm01k/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygm01k", "created":
        1669874718.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iygoh69", "id": "iygoh69", "parent_id":
        "t1_iygm01k", "depth": 1, "children": ["iygoh69"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygm8qt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "_rabbitfarm_",
        "can_mod_post": false, "created_utc": 1669874882.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_9igejt8n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Both parts done in Prolog. Most effort was put into fiddling with the data
        file handling to get the inputs right. Once that was done Part 1 was straightforward
        and Part 2 was a matter of adding a few extra lines. \n\nPart 1 https://adamcrussell.livejournal.com/37837.html  \nPart
        2 https://adamcrussell.livejournal.com/38010.html  \nTypical of Prolog! More
        effort to get going but then rock solid.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Both parts done in Prolog. Most effort was put into
        fiddling with the data file handling to get the inputs right. Once that was
        done Part 1 was straightforward and Part 2 was a matter of adding a few extra
        lines. &lt;/p&gt;\n\n&lt;p&gt;Part 1 &lt;a href=\"https://adamcrussell.livejournal.com/37837.html\"&gt;https://adamcrussell.livejournal.com/37837.html&lt;/a&gt;&lt;br/&gt;\nPart
        2 &lt;a href=\"https://adamcrussell.livejournal.com/38010.html\"&gt;https://adamcrussell.livejournal.com/38010.html&lt;/a&gt;&lt;br/&gt;\nTypical
        of Prolog! More effort to get going but then rock solid.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygm8qt/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygm8qt", "created":
        1669874882.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygnqgl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "dm13450",
        "can_mod_post": false, "created_utc": 1669875939.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_8gwx7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "q\n \n    a: \"I\"$read0 `$\"input1\";\n    ml: where a = 0N;\n    f: {sum
        x[y _til z]};\n    res: {[i] f[a; 0^ml[i-1]; ml[i]]} each til count ml;\n    (1#desc
        res), (sum 3#desc res)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;q&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a:
        &amp;quot;I&amp;quot;$read0 `$&amp;quot;input1&amp;quot;;\nml: where a = 0N;\nf:
        {sum x[y _til z]};\nres: {[i] f[a; 0^ml[i-1]; ml[i]]} each til count ml;\n(1#desc
        res), (sum 3#desc res)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnqgl/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygnqgl", "created": 1669875939.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 5, "name":
        "t1_iyhouaw", "id": "iyhouaw", "parent_id": "t1_iygnqgl", "depth": 1, "children":
        ["iyhouaw", "iygv1gx"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1671963708.0, "mod_reason_by": null, "banned_by": null, "ups": 6,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygo26j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "0rac1e",
        "can_mod_post": false, "created_utc": 1669876177.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_jqvvy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [J](https://www.jsoftware.com)\n\n    0 2 { +/\\ \\:~ +/@\".@}:@&gt; cutpara
        fread ''input''\n\n1. Read file and cut into paragraphs\n2. Each paragraph
        is converted to integers and sum''d.\n3. Sort descending and do a \"plus-scan\"\n4.
        Grab the 1st and 3rd elems (indices 0 and 2)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://www.jsoftware.com\"&gt;J&lt;/a&gt;&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;0
        2 { +/\\ \\:~ +/@&amp;quot;.@}:@&amp;gt; cutpara fread &amp;#39;input&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Read
        file and cut into paragraphs&lt;/li&gt;\n&lt;li&gt;Each paragraph is converted
        to integers and sum&amp;#39;d.&lt;/li&gt;\n&lt;li&gt;Sort descending and do
        a &amp;quot;plus-scan&amp;quot;&lt;/li&gt;\n&lt;li&gt;Grab the 1st and 3rd
        elems (indices 0 and 2)&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygo26j/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygo26j", "created": 1669876177.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iyij3j3", "id": "iyij3j3", "parent_id": "t1_iygo26j", "depth": 1, "children":
        ["iyij3j3", "iyhrhc8"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669935079.0, "mod_reason_by": null, "banned_by": null, "ups": 6,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygo9uo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "allinde",
        "can_mod_post": false, "created_utc": 1669876332.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_jp565", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Dart** - will map/reduce my way trough this year.\n\n    final perElf =
        File(''day1.input'')\n          .readAsStringSync()\n          .split(''\\n\\n'')\n          .map((block)
        =&gt; block.split(''\\n'').map((cal) =&gt; int.parse(cal)))\n          .map((elf)
        =&gt; elf.reduce((value, element) =&gt; value + element))\n          .toList();\n      perElf.sort();\n      print(perElf.last);\n      print(perElf.reversed.take(3).reduce((value,
        element) =&gt; value + element));", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Dart&lt;/strong&gt; - will map/reduce
        my way trough this year.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;final perElf
        = File(&amp;#39;day1.input&amp;#39;)\n      .readAsStringSync()\n      .split(&amp;#39;\\n\\n&amp;#39;)\n      .map((block)
        =&amp;gt; block.split(&amp;#39;\\n&amp;#39;).map((cal) =&amp;gt; int.parse(cal)))\n      .map((elf)
        =&amp;gt; elf.reduce((value, element) =&amp;gt; value + element))\n      .toList();\n  perElf.sort();\n  print(perElf.last);\n  print(perElf.reversed.take(3).reduce((value,
        element) =&amp;gt; value + element));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygo9uo/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygo9uo", "created":
        1669876332.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iygr7p4", "id": "iygr7p4", "parent_id":
        "t1_iygo9uo", "depth": 1, "children": ["iygr7p4", "iyjg2xp"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669911021.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygorni", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        6, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygorni", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygorni/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669876692.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669876692.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind":
        "more", "data": {"count": 10, "name": "t1_iygpctb", "id": "iygpctb", "parent_id":
        "t1_iygorni", "depth": 1, "children": ["iygpctb", "iygqyhh", "iyho95s"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1669879303.0,
        "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygrvl3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "_jstanley",
        "can_mod_post": false, "created_utc": 1669879074.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_ddrjw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# SLANG\n\nI''m doing Advent of Code on my homemade 16-bit CPU again this
        year (writing the solutions on the CPU, not just running them).\n\nI had grand
        plans of writing a template program to read the input, because for the last
        few years problem 1 has just been a list of integers, 1 per line. Of course,
        this year that didn''t work, so I had to throw it away. I was also surprised
        that problem 1 required use of bigints already, and the input file was particularly
        long as well. Maybe this year is going to be a tough Advent of Code!\n\nI
        struggled a lot on part 2, mostly for bigint-related reasons. It took me a
        while to notice that a few of the numbers were larger than 32767, so then
        I added a special bodge to properly handle full 16-bit unsigned inputs (if
        the number is &gt; 32767, add 32767 to the bigint, subtract 32767 from the
        number, and then add the number itself), but I still couldn''t get the right
        answer. Eventually I discovered that there was 1 (solitary!) line of input
        too large to fit in a 16-bit int. I added a final bodge to handle values up
        to 99,999 (check if the line of input is 5 digits long and the first digit
        is a character greater than ''5'': if so, add 50000 to the sum and subtract
        5 from the first character, and then handle it as normal) and then it passed.\n\nIt
        seems mildly surprising that there was just 1 line of input too big for 16
        bits :) - most people will presumably be using ints that are at least 32 bits
        wide, so they won''t notice, and those of us using 16-bit systems will eyeball
        the input to see if it looks larger than 16-bits, and presume that it''s not.
        It just makes it extra hard for those of us who have it hard already! Doesn''t
        matter, that''s life.\n\nMy solution: https://github.com/jes/aoc2022/tree/master/day1\n\nVideo:
        https://www.youtube.com/watch?v=VLmiqzFJQRI\n\nThe computer: https://github.com/jes/scamp-cpu/",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;SLANG&lt;/h1&gt;\n\n&lt;p&gt;I&amp;#39;m
        doing Advent of Code on my homemade 16-bit CPU again this year (writing the
        solutions on the CPU, not just running them).&lt;/p&gt;\n\n&lt;p&gt;I had
        grand plans of writing a template program to read the input, because for the
        last few years problem 1 has just been a list of integers, 1 per line. Of
        course, this year that didn&amp;#39;t work, so I had to throw it away. I was
        also surprised that problem 1 required use of bigints already, and the input
        file was particularly long as well. Maybe this year is going to be a tough
        Advent of Code!&lt;/p&gt;\n\n&lt;p&gt;I struggled a lot on part 2, mostly
        for bigint-related reasons. It took me a while to notice that a few of the
        numbers were larger than 32767, so then I added a special bodge to properly
        handle full 16-bit unsigned inputs (if the number is &amp;gt; 32767, add 32767
        to the bigint, subtract 32767 from the number, and then add the number itself),
        but I still couldn&amp;#39;t get the right answer. Eventually I discovered
        that there was 1 (solitary!) line of input too large to fit in a 16-bit int.
        I added a final bodge to handle values up to 99,999 (check if the line of
        input is 5 digits long and the first digit is a character greater than &amp;#39;5&amp;#39;:
        if so, add 50000 to the sum and subtract 5 from the first character, and then
        handle it as normal) and then it passed.&lt;/p&gt;\n\n&lt;p&gt;It seems mildly
        surprising that there was just 1 line of input too big for 16 bits :) - most
        people will presumably be using ints that are at least 32 bits wide, so they
        won&amp;#39;t notice, and those of us using 16-bit systems will eyeball the
        input to see if it looks larger than 16-bits, and presume that it&amp;#39;s
        not. It just makes it extra hard for those of us who have it hard already!
        Doesn&amp;#39;t matter, that&amp;#39;s life.&lt;/p&gt;\n\n&lt;p&gt;My solution:
        &lt;a href=\"https://github.com/jes/aoc2022/tree/master/day1\"&gt;https://github.com/jes/aoc2022/tree/master/day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Video:
        &lt;a href=\"https://www.youtube.com/watch?v=VLmiqzFJQRI\"&gt;https://www.youtube.com/watch?v=VLmiqzFJQRI&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The
        computer: &lt;a href=\"https://github.com/jes/scamp-cpu/\"&gt;https://github.com/jes/scamp-cpu/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygrvl3/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygrvl3", "created":
        1669879074.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669882579.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyguahj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Spr3eZ",
        "can_mod_post": false, "created_utc": 1669881063.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_57rctr8r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Neat little python solution\n\n    if __name__ == ''__main__'':\n    with
        open(\"input.txt\", \"r\") as f:\n        weights = [sum([int(i) for i in
        nums.split(\"\\n\")]) for nums in f.read().split(\"\\n\\n\")]\n    \n    print(f\"Solution
        1: {max(weights)}\")\n    print(f\"Solution 2: {sum(sorted(weights)[-3:])}\")",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Neat little python solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if
        __name__ == &amp;#39;__main__&amp;#39;:\nwith open(&amp;quot;input.txt&amp;quot;,
        &amp;quot;r&amp;quot;) as f:\n    weights = [sum([int(i) for i in nums.split(&amp;quot;\\n&amp;quot;)])
        for nums in f.read().split(&amp;quot;\\n\\n&amp;quot;)]\n\nprint(f&amp;quot;Solution
        1: {max(weights)}&amp;quot;)\nprint(f&amp;quot;Solution 2: {sum(sorted(weights)[-3:])}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyguahj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyguahj", "created":
        1669881063.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygvuo0", "id": "iygvuo0", "parent_id":
        "t1_iyguahj", "depth": 1, "children": ["iygvuo0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyguic4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "musifter",
        "can_mod_post": false, "created_utc": 1669881246.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Gnu Smalltalk\n\nAnd I''m back doing smalltalk again this year.  With the
        very out-of-date and imperfect gst as before.  Little tasks like this are
        fine, though.\n\nSource: https://pastebin.com/2LHbR6FT", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Gnu Smalltalk&lt;/h1&gt;\n\n&lt;p&gt;And I&amp;#39;m
        back doing smalltalk again this year.  With the very out-of-date and imperfect
        gst as before.  Little tasks like this are fine, though.&lt;/p&gt;\n\n&lt;p&gt;Source:
        &lt;a href=\"https://pastebin.com/2LHbR6FT\"&gt;https://pastebin.com/2LHbR6FT&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyguic4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyguic4", "created":
        1669881246.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygy509",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rmbolger",
        "can_mod_post": false, "created_utc": 1669884419.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_1sxtdamr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**PowerShell** with puzzle input in a file called ''p''. Golfed to 86 chars
        because why not. Could lose the `.Trim()` if the puzzle input is modified
        to remove the final newline char.\n\n    ($s=gc p -del \"`n`n\"|%{$_.Trim()-replace\"`n\",''+''|iex}|sort)[-1];$s[-3..-1]-join''+''|iex",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PowerShell&lt;/strong&gt;
        with puzzle input in a file called &amp;#39;p&amp;#39;. Golfed to 86 chars
        because why not. Could lose the &lt;code&gt;.Trim()&lt;/code&gt; if the puzzle
        input is modified to remove the final newline char.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;($s=gc
        p -del &amp;quot;`n`n&amp;quot;|%{$_.Trim()-replace&amp;quot;`n&amp;quot;,&amp;#39;+&amp;#39;|iex}|sort)[-1];$s[-3..-1]-join&amp;#39;+&amp;#39;|iex\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygy509/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygy509", "created":
        1669884419.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygzowu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ramuuns-u",
        "can_mod_post": false, "created_utc": 1669885841.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_9aj9nnjy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Tail-recursive perl\n\nhttps://github.com/ramuuns/aoc/blob/master/2022/Day01.pm",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Tail-recursive perl&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ramuuns/aoc/blob/master/2022/Day01.pm\"&gt;https://github.com/ramuuns/aoc/blob/master/2022/Day01.pm&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygzowu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygzowu", "created":
        1669885841.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh572v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "timvisee",
        "can_mod_post": false, "created_utc": 1669890912.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_7afar", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust** Quick and simple.\n\n[Part 1](https://github.com/timvisee/advent-of-code-2022/blob/master/day01a/src/main.rs)
        0.027ms (27 \u03bcs)\n\n[Part 2](https://github.com/timvisee/advent-of-code-2022/blob/master/day01b/src/main.rs)
        0.031ms (31 \u03bcs)\n\nday01 total: 0.058 ms (58 \u03bcs)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt; Quick
        and simple.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/timvisee/advent-of-code-2022/blob/master/day01a/src/main.rs\"&gt;Part
        1&lt;/a&gt; 0.027ms (27 \u03bcs)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/timvisee/advent-of-code-2022/blob/master/day01b/src/main.rs\"&gt;Part
        2&lt;/a&gt; 0.031ms (31 \u03bcs)&lt;/p&gt;\n\n&lt;p&gt;day01 total: 0.058
        ms (58 \u03bcs)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh572v/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh572v", "created":
        1669890912.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 10, "name": "t1_iyhe08v", "id": "iyhe08v", "parent_id":
        "t1_iyh572v", "depth": 1, "children": ["iyhe08v", "iyhrguj", "iyhxe3u", "iyhdo9b"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1669891272.0,
        "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh58he", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "qelery",
        "can_mod_post": false, "created_utc": 1669890947.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_1huusuep", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My java solution\n\n    public long part1() {\n        return getTopCalories(1);\n    }\n\n    public
        long part1() {\n        return getTopCalories(3);\n    }\n\n    private long
        getTopCalories(int top) {\n        return aggregateCalorieTotals().limit(top).sum();\n    }\n\n    private
        LongStream aggregateCalorieTotals() {\n        return Arrays.stream(puzzleInputReader.readInput().split(\"\\n\\n\"))\n                .map(a
        -&gt; Arrays.stream(a.split(\"\\n\"))\n            \t         .mapToLong(Long::parseLong)\n                         .sum())\n                .sorted(Comparator.reverseOrder())\n                .mapToLong(Long::longValue);\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My java solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        long part1() {\n    return getTopCalories(1);\n}\n\npublic long part1() {\n    return
        getTopCalories(3);\n}\n\nprivate long getTopCalories(int top) {\n    return
        aggregateCalorieTotals().limit(top).sum();\n}\n\nprivate LongStream aggregateCalorieTotals()
        {\n    return Arrays.stream(puzzleInputReader.readInput().split(&amp;quot;\\n\\n&amp;quot;))\n            .map(a
        -&amp;gt; Arrays.stream(a.split(&amp;quot;\\n&amp;quot;))\n                     .mapToLong(Long::parseLong)\n                     .sum())\n            .sorted(Comparator.reverseOrder())\n            .mapToLong(Long::longValue);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh58he/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh58he", "created":
        1669890947.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyipl5p", "id": "iyipl5p", "parent_id":
        "t1_iyh58he", "depth": 1, "children": ["iyipl5p"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh9nu7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Zweedeend",
        "can_mod_post": false, "created_utc": 1669894629.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_d2j5c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python\n\n    elves = open(\"day1.txt\").read().split(\"\\n\\n\")\n    calories
        = [sum(map(int, elf.split())) for elf in elves]\n    print(max(calories),
        sum(sorted(calories)[-3:]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;elves
        = open(&amp;quot;day1.txt&amp;quot;).read().split(&amp;quot;\\n\\n&amp;quot;)\ncalories
        = [sum(map(int, elf.split())) for elf in elves]\nprint(max(calories), sum(sorted(calories)[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh9nu7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh9nu7", "created":
        1669894629.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670138384.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhb9y8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Dryctas",
        "can_mod_post": false, "created_utc": 1669895830.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_8dfpll7t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash one-liner for both parts\n\n    input=$1\n    (sed ''s?^$?x?g'' input
        | tr ''\\nx'' ''+\\n'' | \\\n      sed -r ''s?^\\+|\\+$??g''; echo '''') |
        bc | sort -n | \\\n      tail -n 3 | tr ''\\n'' '' '' | awk ''{print $3; print
        $1+$2+$3}''", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash
        one-liner for both parts&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input=$1\n(sed
        &amp;#39;s?^$?x?g&amp;#39; input | tr &amp;#39;\\nx&amp;#39; &amp;#39;+\\n&amp;#39;
        | \\\n  sed -r &amp;#39;s?^\\+|\\+$??g&amp;#39;; echo &amp;#39;&amp;#39;)
        | bc | sort -n | \\\n  tail -n 3 | tr &amp;#39;\\n&amp;#39; &amp;#39; &amp;#39;
        | awk &amp;#39;{print $3; print $1+$2+$3}&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhb9y8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhb9y8", "created":
        1669895830.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyj3891", "id": "iyj3891", "parent_id":
        "t1_iyhb9y8", "depth": 1, "children": ["iyj3891", "iyug2x9"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhdo8q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "1b51a8e59cd66a32961f",
        "can_mod_post": false, "created_utc": 1669897497.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_jla92dzc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Both parts in ~50 lines of x86-64 assembly. I put `-1` in place of newlines
        in the input and it is stored in an external data file that is linked. Runtime
        is 1 microsecond.\n\n    .data\n    ans:\n    .long 0\n    .long 0\n    .long
        0\n\n    .text\n    .global part1\n    part1:\n        movl $0, %ecx\n    .ResetAndAdd:\n        movl
        $0, %edx\n    .AddNext:\n        leaq nums(%rip), %rax\n        addq %rcx,  %rax
        \n        movl (%rax), %eax\n        addl $4, %ecx\n        cmpl $-1, %eax\n        je
        .NextElf\n        addl %eax, %edx\n        jmp .AddNext\n    .NextElf:\n        cmpl
        $8948, %ecx\n        jge .Finish\n        movl ans(%rip), %ebx\n        cmpl
        %ebx, %edx \n        jle .Ans1\n        movl %edx, ans(%rip)\n        jmp
        .ResetAndAdd\n        .Ans1:\n        movl 4+ans(%rip), %ebx\n        cmpl
        %ebx, %edx \n        jle .Ans2\n        movl %edx, 4+ans(%rip)\n        jmp
        .ResetAndAdd\n        .Ans2:\n        movl 8+ans(%rip), %ebx\n        cmpl
        %ebx, %edx \n        jle .ResetAndAdd\n        movl %edx, 8+ans(%rip)\n        jmp
        .ResetAndAdd\n    .Finish:\n        movl ans(%rip), %eax\n        ret\n\n    .global
        part2\n    part2:\n        movl ans(%rip), %eax\n        addl 4+ans(%rip),
        %eax\n        addl 8+ans(%rip), %eax\n        ret", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Both parts in ~50 lines of x86-64 assembly. I put
        &lt;code&gt;-1&lt;/code&gt; in place of newlines in the input and it is stored
        in an external data file that is linked. Runtime is 1 microsecond.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.data\nans:\n.long
        0\n.long 0\n.long 0\n\n.text\n.global part1\npart1:\n    movl $0, %ecx\n.ResetAndAdd:\n    movl
        $0, %edx\n.AddNext:\n    leaq nums(%rip), %rax\n    addq %rcx,  %rax \n    movl
        (%rax), %eax\n    addl $4, %ecx\n    cmpl $-1, %eax\n    je .NextElf\n    addl
        %eax, %edx\n    jmp .AddNext\n.NextElf:\n    cmpl $8948, %ecx\n    jge .Finish\n    movl
        ans(%rip), %ebx\n    cmpl %ebx, %edx \n    jle .Ans1\n    movl %edx, ans(%rip)\n    jmp
        .ResetAndAdd\n    .Ans1:\n    movl 4+ans(%rip), %ebx\n    cmpl %ebx, %edx
        \n    jle .Ans2\n    movl %edx, 4+ans(%rip)\n    jmp .ResetAndAdd\n    .Ans2:\n    movl
        8+ans(%rip), %ebx\n    cmpl %ebx, %edx \n    jle .ResetAndAdd\n    movl %edx,
        8+ans(%rip)\n    jmp .ResetAndAdd\n.Finish:\n    movl ans(%rip), %eax\n    ret\n\n.global
        part2\npart2:\n    movl ans(%rip), %eax\n    addl 4+ans(%rip), %eax\n    addl
        8+ans(%rip), %eax\n    ret\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhdo8q/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhdo8q", "created": 1669897497.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_iyjfmrf", "id": "iyjfmrf", "parent_id": "t1_iyhdo8q", "depth": 1, "children":
        ["iyjfmrf"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhmkiz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        6, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyhmkiz", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhmkiz/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669902637.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669902637.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 6}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_iyjbfwq", "id": "iyjbfwq", "parent_id":
        "t1_iyhmkiz", "depth": 1, "children": ["iyjbfwq", "iyixgu3"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669917893.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhogu7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RogueAstral",
        "can_mod_post": false, "created_utc": 1669903591.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_4lgt7ury", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Google Sheets - [82 Characters](https://docs.google.com/spreadsheets/d/1Z1I1MmSA1d2UEIeGS0jS0RiNWsulbpVymLlmxhXB7qg/edit)\n\n~~=index(sum(large(if({A2:A;\"\"}=\"\",scan(,A:A,lambda(a,c,if(c=\"\",,a+c))),),{1,2,3})))~~\n\nEDIT:
        One formula, two parts. 108 characters.\n\n~~=index(lambda(x,{index(x,1),sum(x)})(large(if({A2:A;\"\"}=\"\",scan(,A:A,lambda(a,c,if(c=\"\",,a+c))),),{1,2,3})))~~\n\nEDIT
        2: Down to 95 characters with u/ztiaa\u2019s help!\n\n=sort(lambda(x,{max(x),sum(x)})(large(if({A2:A;0},,scan(,A:A,lambda(a,c,if(c,a+c)))),{1,2,3})))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Google Sheets - &lt;a
        href=\"https://docs.google.com/spreadsheets/d/1Z1I1MmSA1d2UEIeGS0jS0RiNWsulbpVymLlmxhXB7qg/edit\"&gt;82
        Characters&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;=index(sum(large(if({A2:A;&amp;quot;&amp;quot;}=&amp;quot;&amp;quot;,scan(,A:A,lambda(a,c,if(c=&amp;quot;&amp;quot;,,a+c))),),{1,2,3})))&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;EDIT:
        One formula, two parts. 108 characters.&lt;/p&gt;\n\n&lt;p&gt;&lt;del&gt;=index(lambda(x,{index(x,1),sum(x)})(large(if({A2:A;&amp;quot;&amp;quot;}=&amp;quot;&amp;quot;,scan(,A:A,lambda(a,c,if(c=&amp;quot;&amp;quot;,,a+c))),),{1,2,3})))&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;EDIT
        2: Down to 95 characters with &lt;a href=\"/u/ztiaa\"&gt;u/ztiaa&lt;/a&gt;\u2019s
        help!&lt;/p&gt;\n\n&lt;p&gt;=sort(lambda(x,{max(x),sum(x)})(large(if({A2:A;0},,scan(,A:A,lambda(a,c,if(c,a+c)))),{1,2,3})))&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhogu7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhogu7", "created":
        1669903591.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhp9mw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mmguero",
        "can_mod_post": false, "created_utc": 1669903980.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_4oauu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\n    import sys\n    \n    with open(sys.argv[1], ''r'') as f:\n        elves
        = [x.split(''\\n'') for x in f.read().split(\"\\n\\n\")]\n    \n    cals =
        sorted([sum([int(x) for x in y if x.isdigit()]) for y in elves])\n    \n    print(max(cals))\n    print(sum(cals[-3:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        sys\n\nwith open(sys.argv[1], &amp;#39;r&amp;#39;) as f:\n    elves = [x.split(&amp;#39;\\n&amp;#39;)
        for x in f.read().split(&amp;quot;\\n\\n&amp;quot;)]\n\ncals = sorted([sum([int(x)
        for x in y if x.isdigit()]) for y in elves])\n\nprint(max(cals))\nprint(sum(cals[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhp9mw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhp9mw", "created":
        1669903980.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyhpjk8", "id": "iyhpjk8", "parent_id":
        "t1_iyhp9mw", "depth": 1, "children": ["iyhpjk8", "iyie1pq"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669912636.0, "mod_reason_by": null,
        "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhru9e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "oantolin",
        "can_mod_post": false, "created_utc": 1669905193.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_3fxjo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution in J:\n\n    parse =: &lt;@:(\".@&gt;);._2 @ (,&amp;a:) @ (&lt;;._2)
        @ toJ @ fread\n    part1 =: [: &gt;./ +/@&gt;\n    part2 =: [: +/@:({~ 3&amp;{.@\\:)
        +/@&gt;", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution
        in J:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;parse =: &amp;lt;@:(&amp;quot;.@&amp;gt;);._2
        @ (,&amp;amp;a:) @ (&amp;lt;;._2) @ toJ @ fread\npart1 =: [: &amp;gt;./ +/@&amp;gt;\npart2
        =: [: +/@:({~ 3&amp;amp;{.@\\:) +/@&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhru9e/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhru9e", "created":
        1669905193.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyihx90", "id": "iyihx90", "parent_id":
        "t1_iyhru9e", "depth": 1, "children": ["iyihx90"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 7, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi66d2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "TiagoPaolini",
        "can_mod_post": false, "created_utc": 1669911258.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_aw5up", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C Language (only standard library)\n\nLast year I used Python, this time
        I am upping the challenge by using C. This is an opportunity for coding myself
        the data structures and algorithms, as base language do not have too many
        out of the box.\n\nThe basic logic of this solution is not difficult:\n\n*
        read the file line by line\n* convert the text to an integer and sum it to
        the current value\n* switch to the next value when an empty line is found\n*
        compare all values at the end\n\nWhat I did was to keep track of the current
        top 3 values. I think that it would be faster if I stored all values, then
        sorted them only at the end. But the current solution already works fast enough
        and I find it simpler, as it is not necessary to deal with dynamic arrays
        or count beforehand the amount of elves.\n\n**Solution:** https://github.com/tbpaolini/Advent-of-Code/blob/master/2022/Day%201/day_01.c",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C Language (only standard
        library)&lt;/h1&gt;\n\n&lt;p&gt;Last year I used Python, this time I am upping
        the challenge by using C. This is an opportunity for coding myself the data
        structures and algorithms, as base language do not have too many out of the
        box.&lt;/p&gt;\n\n&lt;p&gt;The basic logic of this solution is not difficult:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;read
        the file line by line&lt;/li&gt;\n&lt;li&gt;convert the text to an integer
        and sum it to the current value&lt;/li&gt;\n&lt;li&gt;switch to the next value
        when an empty line is found&lt;/li&gt;\n&lt;li&gt;compare all values at the
        end&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;What I did was to keep track of the
        current top 3 values. I think that it would be faster if I stored all values,
        then sorted them only at the end. But the current solution already works fast
        enough and I find it simpler, as it is not necessary to deal with dynamic
        arrays or count beforehand the amount of elves.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;
        &lt;a href=\"https://github.com/tbpaolini/Advent-of-Code/blob/master/2022/Day%201/day_01.c\"&gt;https://github.com/tbpaolini/Advent-of-Code/blob/master/2022/Day%201/day_01.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi66d2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi66d2", "created":
        1669911258.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyibg18",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "nixnullarch",
        "can_mod_post": false, "created_utc": 1669913366.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_tbs47fzz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my python solutions: https://github.com/nixnull/AoC2022/blob/main/day%201/answers.py\n\nI
        know Python fairly well, so my goal this year is to use python features I''m
        not comfortable with, like comprehensions.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my python solutions: &lt;a href=\"https://github.com/nixnull/AoC2022/blob/main/day%201/answers.py\"&gt;https://github.com/nixnull/AoC2022/blob/main/day%201/answers.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        know Python fairly well, so my goal this year is to use python features I&amp;#39;m
        not comfortable with, like comprehensions.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyibg18/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyibg18", "created": 1669913366.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 3, "name":
        "t1_iyidb1u", "id": "iyidb1u", "parent_id": "t1_iyibg18", "depth": 1, "children":
        ["iyidb1u"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669920297.0,
        "mod_reason_by": null, "banned_by": null, "ups": 7, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyimdcj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ContainedBlargh",
        "can_mod_post": false, "created_utc": 1669917560.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 7, "author_fullname": "t2_lv7cu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Running my modified version of Shenzen IO''s MCxxxx programming language
        on [my own ''interpreter''](https://github.com/ContainedBlargh/sio) (it''s
        still ~~under heavy development~~ buggy as hell, I wrote it exactly for solving
        AoC).\n\nPart 1:\n    \n    # Declare ''registers'' with ''$''\n    $max\n    $dat\n    \n    mov
        -1 clk # clk controls execution speed.\n    @mov 0 acc # lines prefixed with
        @ only execute once.\n    \n    mov \"\\n\" stdin # read everything up until
        \"\\n\"\n    mov stdin dat\n    \n    teq dat \"\\n\"\n    + mov max stdout\n    +
        mov \"\\n\" stdout\n    + end\n    \n    # If empty string, then there was
        two newlines in a row\n    teq dat \"\"\n    + mov 0 acc\n    \n    # There
        was a number, add it up\n    swp dat acc\n    cst 0\n    add dat\n    mov
        \"\" dat\n    \n    # Check if new max reached\n    tgt acc max\n    + mov
        acc max\n    \n    mov 1 stdin\n    mov stdin null    \n\nPart 2 was a lot
        harder and I had to implement some sort of sorting to solve it. I picked bubble
        sort. Luckily, I only need to sort the top 3 counts, so it still runs. The
        rest of the code quickly degenerated into a mess of jumping around.\n\nAt
        82 lines, I felt that it was too long to post here, so [I''ve put it on github](https://raw.githubusercontent.com/ContainedBlargh/aoc-2022/master/day1/day1-2.sio)\n\nI
        am fairly sure that the implementation is not optimal and could be shorter
        and more readable.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Running
        my modified version of Shenzen IO&amp;#39;s MCxxxx programming language on
        &lt;a href=\"https://github.com/ContainedBlargh/sio\"&gt;my own &amp;#39;interpreter&amp;#39;&lt;/a&gt;
        (it&amp;#39;s still &lt;del&gt;under heavy development&lt;/del&gt; buggy as
        hell, I wrote it exactly for solving AoC).&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Declare &amp;#39;registers&amp;#39; with &amp;#39;$&amp;#39;\n$max\n$dat\n\nmov
        -1 clk # clk controls execution speed.\n@mov 0 acc # lines prefixed with @
        only execute once.\n\nmov &amp;quot;\\n&amp;quot; stdin # read everything
        up until &amp;quot;\\n&amp;quot;\nmov stdin dat\n\nteq dat &amp;quot;\\n&amp;quot;\n+
        mov max stdout\n+ mov &amp;quot;\\n&amp;quot; stdout\n+ end\n\n# If empty
        string, then there was two newlines in a row\nteq dat &amp;quot;&amp;quot;\n+
        mov 0 acc\n\n# There was a number, add it up\nswp dat acc\ncst 0\nadd dat\nmov
        &amp;quot;&amp;quot; dat\n\n# Check if new max reached\ntgt acc max\n+ mov
        acc max\n\nmov 1 stdin\nmov stdin null    \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2 was a lot harder and I had to implement some sort of sorting to solve it.
        I picked bubble sort. Luckily, I only need to sort the top 3 counts, so it
        still runs. The rest of the code quickly degenerated into a mess of jumping
        around.&lt;/p&gt;\n\n&lt;p&gt;At 82 lines, I felt that it was too long to
        post here, so &lt;a href=\"https://raw.githubusercontent.com/ContainedBlargh/aoc-2022/master/day1/day1-2.sio\"&gt;I&amp;#39;ve
        put it on github&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I am fairly sure that the
        implementation is not optimal and could be shorter and more readable.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyimdcj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyimdcj", "created":
        1669917560.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyio3gx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Vanerac",
        "can_mod_post": false, "created_utc": 1669918243.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_rgavy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby minimal characters:  \n\n\n`i = File.open(\"input1.txt\").read`\r  \n\r  \n`e
        = i.split(\"\\n\\n\").map{ |l| l.split(\"\\n\").map(&amp;:to_i).sum }.sort`\r  \n`[e[-1],e[-3..-1].sum]`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby minimal characters:  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;i
        = File.open(&amp;quot;input1.txt&amp;quot;).read&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;e
        = i.split(&amp;quot;\\n\\n&amp;quot;).map{ |l| l.split(&amp;quot;\\n&amp;quot;).map(&amp;amp;:to_i).sum
        }.sort&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;[e[-1],e[-3..-1].sum]&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyio3gx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyio3gx", "created":
        1669918243.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyjw7pk", "id": "iyjw7pk", "parent_id":
        "t1_iyio3gx", "depth": 1, "children": ["iyjw7pk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiuabl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "yawnick",
        "can_mod_post": false, "created_utc": 1669920636.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_8ucr0w9x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Monkey C** (Language for developing for Garmin devices)\n\nI made my Garmin
        Forerunner 235 watch solve Day 1.\n\n[Video](https://www.youtube.com/watch?v=eVbKbCVcKPA)
        (I''ve since improved the solve time from 1m15s to 45s, also don''t mind me
        getting a text mid-solve)\n\nCode: [Repo](https://github.com/YAWNICK/MonkeyAOC),
        [The part that solves the challenge](https://github.com/YAWNICK/MonkeyAOC/blob/main/source/Solvers/Solver01.mc)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Monkey
        C&lt;/strong&gt; (Language for developing for Garmin devices)&lt;/p&gt;\n\n&lt;p&gt;I
        made my Garmin Forerunner 235 watch solve Day 1.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.youtube.com/watch?v=eVbKbCVcKPA\"&gt;Video&lt;/a&gt; (I&amp;#39;ve
        since improved the solve time from 1m15s to 45s, also don&amp;#39;t mind me
        getting a text mid-solve)&lt;/p&gt;\n\n&lt;p&gt;Code: &lt;a href=\"https://github.com/YAWNICK/MonkeyAOC\"&gt;Repo&lt;/a&gt;,
        &lt;a href=\"https://github.com/YAWNICK/MonkeyAOC/blob/main/source/Solvers/Solver01.mc\"&gt;The
        part that solves the challenge&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiuabl/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyiuabl", "created": 1669920636.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1688068090.0, "mod_reason_by": null, "banned_by": null, "ups": 5,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj8eyl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mykdavies",
        "can_mod_post": false, "created_utc": 1669926129.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_2osp3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\n#!&gt; iyj8eyl   \n## API FAILURE", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;!&amp;gt; iyj8eyl&lt;/h1&gt;\n\n&lt;h2&gt;API FAILURE&lt;/h2&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj8eyl/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj8eyl", "created":
        1669926129.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk5arh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "silentclowd",
        "can_mod_post": false, "created_utc": 1669939611.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_7l7bc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Done in Befunge. Specifically Funge-98.\n\n    v ;Pre-sanitize input:        ;\n      ;Replace
        blank lines with 0 ;\n      ;Add 1 to denote end of file;\n                                  \n        v    &lt;                     \n    &gt;110&gt;&amp;:1-|      v     +&lt;       \n            $           &gt;:|       \n            &gt;011p  &gt;\\:1-|
        $       \n                    ^          &lt;   \n    ;read output ;   v     &lt;       \n    ;on
        the stack; @&amp;   g&lt; &gt;11p^   \n    ;printing    ;   &gt;:11g`|       \n    ;ints
        is hard;         &gt;$  ^   \n\nI have a video of the script running in BeQunge
        as well, which I plan on posting.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Done in Befunge. Specifically Funge-98.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;v
        ;Pre-sanitize input:        ;\n  ;Replace blank lines with 0 ;\n  ;Add 1 to
        denote end of file;\n\n    v    &amp;lt;                     \n&amp;gt;110&amp;gt;&amp;amp;:1-|      v     +&amp;lt;       \n        $           &amp;gt;:|       \n        &amp;gt;011p  &amp;gt;\\:1-|
        $       \n                ^          &amp;lt;   \n;read output ;   v     &amp;lt;       \n;on
        the stack; @&amp;amp;   g&amp;lt; &amp;gt;11p^   \n;printing    ;   &amp;gt;:11g`|       \n;ints
        is hard;         &amp;gt;$  ^   \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        have a video of the script running in BeQunge as well, which I plan on posting.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk5arh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk5arh", "created":
        1669939611.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygjmnl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        5, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Ruby:\n\nhttps://github.com/sreedevk/advent-of-code/blob/main/ruby/2022/day1/main.rb\n\n    class
        CalorieCounting\n      def initialize(data)\n        @data = data\n      end\n    \n      def
        solve1\n        @data\n          .strip\n          .split(\"\\n\\n\")\n          .map
        { |elf| elf.split(\"\\n\").map(&amp;:strip).map(&amp;:to_i).sum }\n          .max\n      end\n    \n      def
        solve2\n        @data\n          .strip\n          .split(\"\\n\\n\")\n          .map
        { |elf| elf.split(\"\\n\").map(&amp;:strip).map(&amp;:to_i).sum }\n          .sort\n          .reverse\n          .take(3)\n          .sum\n      end\n    end\n    \n    solver
        = CalorieCounting.new(ARGF.read)\n    pp \"PART1: #{solver.solve1}\"\n    pp
        \"PART2: #{solver.solve2}\"", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygjmnl", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sreedevk/advent-of-code/blob/main/ruby/2022/day1/main.rb\"&gt;https://github.com/sreedevk/advent-of-code/blob/main/ruby/2022/day1/main.rb&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        CalorieCounting\n  def initialize(data)\n    @data = data\n  end\n\n  def
        solve1\n    @data\n      .strip\n      .split(&amp;quot;\\n\\n&amp;quot;)\n      .map
        { |elf| elf.split(&amp;quot;\\n&amp;quot;).map(&amp;amp;:strip).map(&amp;amp;:to_i).sum
        }\n      .max\n  end\n\n  def solve2\n    @data\n      .strip\n      .split(&amp;quot;\\n\\n&amp;quot;)\n      .map
        { |elf| elf.split(&amp;quot;\\n&amp;quot;).map(&amp;amp;:strip).map(&amp;amp;:to_i).sum
        }\n      .sort\n      .reverse\n      .take(3)\n      .sum\n  end\nend\n\nsolver
        = CalorieCounting.new(ARGF.read)\npp &amp;quot;PART1: #{solver.solve1}&amp;quot;\npp
        &amp;quot;PART2: #{solver.solve2}&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjmnl/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669873152.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669873152.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygjqps",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jeroenheijmans",
        "can_mod_post": false, "created_utc": 1669873224.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_2aynbuw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript, *after* some rewriting:\n\n    const sum = (prev, curr) =&gt;
        prev + curr;\n    let data = input.trim().split(/\\r?\\n\\r?\\n/)\n      .map(elf
        =&gt; elf.split(/\\r?\\n/).map(x =&gt; parseInt(x)).reduce(sum, 0))\n      .sort((a,b)
        =&gt; a-b);\n    let part1 = data.at(-1);\n    let part2 = data.slice(-3).reduce(sum,
        0);", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript,
        &lt;em&gt;after&lt;/em&gt; some rewriting:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        sum = (prev, curr) =&amp;gt; prev + curr;\nlet data = input.trim().split(/\\r?\\n\\r?\\n/)\n  .map(elf
        =&amp;gt; elf.split(/\\r?\\n/).map(x =&amp;gt; parseInt(x)).reduce(sum, 0))\n  .sort((a,b)
        =&amp;gt; a-b);\nlet part1 = data.at(-1);\nlet part2 = data.slice(-3).reduce(sum,
        0);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjqps/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjqps", "created":
        1669873224.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669922270.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygkwuf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "French__Canadian",
        "can_mod_post": false, "created_utc": 1669873983.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_kst0k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Last year I was using Q, this year [ngn''s k](https://codeberg.org/ngn/k)
        implementation (and hopefully some Nim).\n\n\n    / i is a list of calories
        per elf\n    i:+/''{a:&amp;(0N=x);1_''a_x}`I$(,\"\"),0:\"i/01\"\n\n    / part
        1\n    |/i \n\n    / part 2\n    +/3#i[&gt;i]\n\nedit:\nAfter reading a comment
        about AOC on hacker news, I learned I could just read as bytes and split on
        \"\\n\\n\" instead of my complicated parsing logic... Much cleaner and shorter\n\n    /
        i is a list of calories per elf\n    i:+/''`I$\"\\n\"\\''\"\\n\\n\"\\1:\"i/01\"\n\n    /part
        1\n    |/i \n\n    /part 2\n    +/3#i[&gt;i]\n\nedit2: sorting a whole array
        of elves is way two expensive at O(nlog n). Why not find the max 3 times instead
        for a O(n) alg?\n\n    / a b and c are the 3 elves with the most calories\n    a:|/i\n    b:|/i^a\n    c:|/i^a,b\n    +/a,b,c\n\nedit3:
        I see people golfing it, so here''s my one line version that solves both \n\n    {(*x),+/3#x}{x[&gt;x]}@+/''`I$\"\\n\"\\''\"\\n\\n\"\\1:\"i/01\"",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Last year I was using
        Q, this year &lt;a href=\"https://codeberg.org/ngn/k\"&gt;ngn&amp;#39;s k&lt;/a&gt;
        implementation (and hopefully some Nim).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/
        i is a list of calories per elf\ni:+/&amp;#39;{a:&amp;amp;(0N=x);1_&amp;#39;a_x}`I$(,&amp;quot;&amp;quot;),0:&amp;quot;i/01&amp;quot;\n\n/
        part 1\n|/i \n\n/ part 2\n+/3#i[&amp;gt;i]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit:\nAfter
        reading a comment about AOC on hacker news, I learned I could just read as
        bytes and split on &amp;quot;\\n\\n&amp;quot; instead of my complicated parsing
        logic... Much cleaner and shorter&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/ i
        is a list of calories per elf\ni:+/&amp;#39;`I$&amp;quot;\\n&amp;quot;\\&amp;#39;&amp;quot;\\n\\n&amp;quot;\\1:&amp;quot;i/01&amp;quot;\n\n/part
        1\n|/i \n\n/part 2\n+/3#i[&amp;gt;i]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit2:
        sorting a whole array of elves is way two expensive at O(nlog n). Why not
        find the max 3 times instead for a O(n) alg?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/
        a b and c are the 3 elves with the most calories\na:|/i\nb:|/i^a\nc:|/i^a,b\n+/a,b,c\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;edit3:
        I see people golfing it, so here&amp;#39;s my one line version that solves
        both &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{(*x),+/3#x}{x[&amp;gt;x]}@+/&amp;#39;`I$&amp;quot;\\n&amp;quot;\\&amp;#39;&amp;quot;\\n\\n&amp;quot;\\1:&amp;quot;i/01&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygkwuf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygkwuf", "created":
        1669873983.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygvfq0", "id": "iygvfq0", "parent_id":
        "t1_iygkwuf", "depth": 1, "children": ["iygvfq0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygml7d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Pyr0Byt3",
        "can_mod_post": false, "created_utc": 1669875122.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_b4y19", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [Go/Golang](https://github.com/mnml/aoc/blob/main/2022/01/1.go)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://github.com/mnml/aoc/blob/main/2022/01/1.go\"&gt;Go/Golang&lt;/a&gt;&lt;/h1&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygml7d/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygml7d", "created":
        1669875122.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyhuodh", "id": "iyhuodh", "parent_id":
        "t1_iygml7d", "depth": 1, "children": ["iyhuodh", "iyi3r1e"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669879261.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygr6q7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "WilkoTom",
        "can_mod_post": false, "created_utc": 1669878526.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_90ypf105", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\nUsed a `BinaryHeap` rather than putting all the values into a
        `Vec` and then sorting it. For this data set, it''s probably irrelevant.\n\n    fn
        main() -&gt; Result&lt;(), Error&gt; {\n        let data = std::fs::read_to_string(\"./day01/input.txt\")?;\n        let
        mut elves = data.split(\"\\n\\n\")\n            .map(|e| e.split(''\\n'')\n                    .map(|x|
        x.parse::&lt;i32&gt;()\n                    .unwrap_or(0)).sum())\n            .collect::&lt;BinaryHeap&lt;_&gt;&gt;();\n        println!(\"Part
        1: {:?}\", elves.peek().unwrap_or(&amp;0));\n        println!(\"Part 2: {:?}\",
        elves.pop().unwrap_or(0) + elves.pop().unwrap_or(0) + elves.pop().unwrap_or(0));\n        Ok(())\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Used
        a &lt;code&gt;BinaryHeap&lt;/code&gt; rather than putting all the values into
        a &lt;code&gt;Vec&lt;/code&gt; and then sorting it. For this data set, it&amp;#39;s
        probably irrelevant.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn main() -&amp;gt;
        Result&amp;lt;(), Error&amp;gt; {\n    let data = std::fs::read_to_string(&amp;quot;./day01/input.txt&amp;quot;)?;\n    let
        mut elves = data.split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|e| e.split(&amp;#39;\\n&amp;#39;)\n                .map(|x|
        x.parse::&amp;lt;i32&amp;gt;()\n                .unwrap_or(0)).sum())\n        .collect::&amp;lt;BinaryHeap&amp;lt;_&amp;gt;&amp;gt;();\n    println!(&amp;quot;Part
        1: {:?}&amp;quot;, elves.peek().unwrap_or(&amp;amp;0));\n    println!(&amp;quot;Part
        2: {:?}&amp;quot;, elves.pop().unwrap_or(0) + elves.pop().unwrap_or(0) + elves.pop().unwrap_or(0));\n    Ok(())\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygr6q7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygr6q7", "created":
        1669878526.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyjd2d2", "id": "iyjd2d2", "parent_id":
        "t1_iygr6q7", "depth": 1, "children": ["iyjd2d2"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1687053119.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygspbg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygspbg", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygspbg/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669879742.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669879742.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygu0ms", "id": "iygu0ms", "parent_id":
        "t1_iygspbg", "depth": 1, "children": ["iygu0ms"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669899836.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygtnyj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "azzal07",
        "can_mod_post": false, "created_utc": 1669880537.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_3v7c4gll", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Awk**... sorting functions are overrated, but snacs are good etc.\n\n    END{print
        S\"\\n\"A+C+S}$1{O+=$0;next}\n    C&lt;O{C=O}A&lt;O{C=A;A=O}O&gt;S{A=S;S=O}O=0\n\n\nEdit.
        noticed a ~~bug~~ feature: this doesn''t count the last elf. Oh well, works
        on my input.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Awk&lt;/strong&gt;...
        sorting functions are overrated, but snacs are good etc.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;END{print
        S&amp;quot;\\n&amp;quot;A+C+S}$1{O+=$0;next}\nC&amp;lt;O{C=O}A&amp;lt;O{C=A;A=O}O&amp;gt;S{A=S;S=O}O=0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edit.
        noticed a &lt;del&gt;bug&lt;/del&gt; feature: this doesn&amp;#39;t count the
        last elf. Oh well, works on my input.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtnyj/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygtnyj", "created": 1669880537.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyhyj7f", "id": "iyhyj7f", "parent_id": "t1_iygtnyj", "depth": 1, "children":
        ["iyhyj7f"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygu5jv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        5, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "# lisp\n\nhttps://gitlab.com/Elmosfire/aoc2022lisp/-/blob/main/day1.lisp",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iygu5jv",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;lisp&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gitlab.com/Elmosfire/aoc2022lisp/-/blob/main/day1.lisp\"&gt;https://gitlab.com/Elmosfire/aoc2022lisp/-/blob/main/day1.lisp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygu5jv/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669880949.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669880949.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygukmc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Thecakeisalie25",
        "can_mod_post": false, "created_utc": 1669881300.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_guvqy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Neovim Macro\n\nImage - [https://imgur.com/fWujc0C](https://imgur.com/fWujc0C)
        (Image is needed because the github preview mangles certain characters.)\n\nFile
        - [https://github.com/typecasto/aoc2022/blob/main/day\\_1.nvmacro](https://github.com/typecasto/aoc2022/blob/main/day_1.nvmacro)
        (in case you actually want to run it)\n\nGave myself the following constraints:\n\n*
        No use of :norm\n* One macro per problem\n* Input must be verbatim, no external
        pre-processing\n* Output stored in system clipboard ready to submit\n\n# Explanation\n\nProblem
        1: **The entire input file is turned into one giant macro, and then executed.**
        For every line with numbers, append \"&lt;ctrl-a&gt;\", which, when executed,
        increments the number your cursor is on by the number before &lt;ctrl-a&gt;
        (or 1). Then replace every blank line with \"o0&lt;esc&gt;\", which, when
        executed, opens a new line below the cursor, writes \"0\", and exits insert
        mode. A copy of the o0&lt;esc&gt; line is also placed before line 1, to handle
        the first group. All the lines are then joined together, and then \":sort!
        n&lt;enter&gt;gg\"+yyI-&gt; \" is appended, which, when executed, sorts the
        input, copies the highest one to the clipboard, and inserts an arrow. **At
        this point we''ve turned the input into a giant macro that makes a line with
        \"0\" for every elf, and increments it for the number of calories in each
        food item.** Then just cut this line into the anonymous register, and then
        execute said anonymous register.\n\nProblem 2: Instead of copying the top
        line, join it to the next line and replace the space in between with \"+\",
        then do that again. Copy this new line to the anonymous register, open a new
        line above it, and paste from the expression register, using the expression
        stored in the anonymous register (which holds something like 30+40+50). This
        evaluates the addition.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Neovim
        Macro&lt;/h1&gt;\n\n&lt;p&gt;Image - &lt;a href=\"https://imgur.com/fWujc0C\"&gt;https://imgur.com/fWujc0C&lt;/a&gt;
        (Image is needed because the github preview mangles certain characters.)&lt;/p&gt;\n\n&lt;p&gt;File
        - &lt;a href=\"https://github.com/typecasto/aoc2022/blob/main/day_1.nvmacro\"&gt;https://github.com/typecasto/aoc2022/blob/main/day_1.nvmacro&lt;/a&gt;
        (in case you actually want to run it)&lt;/p&gt;\n\n&lt;p&gt;Gave myself the
        following constraints:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;No use of :norm&lt;/li&gt;\n&lt;li&gt;One
        macro per problem&lt;/li&gt;\n&lt;li&gt;Input must be verbatim, no external
        pre-processing&lt;/li&gt;\n&lt;li&gt;Output stored in system clipboard ready
        to submit&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h1&gt;Explanation&lt;/h1&gt;\n\n&lt;p&gt;Problem
        1: &lt;strong&gt;The entire input file is turned into one giant macro, and
        then executed.&lt;/strong&gt; For every line with numbers, append &amp;quot;&amp;lt;ctrl-a&amp;gt;&amp;quot;,
        which, when executed, increments the number your cursor is on by the number
        before &amp;lt;ctrl-a&amp;gt; (or 1). Then replace every blank line with &amp;quot;o0&amp;lt;esc&amp;gt;&amp;quot;,
        which, when executed, opens a new line below the cursor, writes &amp;quot;0&amp;quot;,
        and exits insert mode. A copy of the o0&amp;lt;esc&amp;gt; line is also placed
        before line 1, to handle the first group. All the lines are then joined together,
        and then &amp;quot;:sort! n&amp;lt;enter&amp;gt;gg&amp;quot;+yyI-&amp;gt;
        &amp;quot; is appended, which, when executed, sorts the input, copies the
        highest one to the clipboard, and inserts an arrow. &lt;strong&gt;At this
        point we&amp;#39;ve turned the input into a giant macro that makes a line
        with &amp;quot;0&amp;quot; for every elf, and increments it for the number
        of calories in each food item.&lt;/strong&gt; Then just cut this line into
        the anonymous register, and then execute said anonymous register.&lt;/p&gt;\n\n&lt;p&gt;Problem
        2: Instead of copying the top line, join it to the next line and replace the
        space in between with &amp;quot;+&amp;quot;, then do that again. Copy this
        new line to the anonymous register, open a new line above it, and paste from
        the expression register, using the expression stored in the anonymous register
        (which holds something like 30+40+50). This evaluates the addition.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygukmc/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygukmc", "created":
        1669881300.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyh977d", "id": "iyh977d", "parent_id":
        "t1_iygukmc", "depth": 1, "children": ["iyh977d"]}}, {"kind": "more", "data":
        {"count": 1296, "name": "t1_iygwh92", "id": "iygwh92", "parent_id": "t3_z9ezjb",
        "depth": 0, "children": ["iygwh92", "iygz25b", "iygxxwx", "iyhggf4", "iyh5nde",
        "iyhlys6", "iyhwfqd", "iyhths8", "iyhh2tg", "iyh8iil", "iyh92tp", "iyjg3qu",
        "iyi4egb", "iyi41x5", "iyghhwb", "iyi4ypd", "iyglilp", "iykbxca", "iyhnct3",
        "iyh8rkb", "iyhhmuf", "iyi4gnr", "iyijcur", "iyjglih", "iyjpreq", "iyjnnkz",
        "iyhq2wq", "iyihj07", "iyj3ots", "iygix60", "iyhsqac", "iyjhoro", "iygjbqv",
        "iygigso", "iyh2y8f", "iyimw2r", "iyh24ub", "iyi8o4g", "iygxxq2", "iyk5mru",
        "iymaugp", "iyhno87", "iyi2jlu", "iygibnn", "iygiges", "iygpogb", "iygsj3n",
        "iygvva1", "iyh2nsp", "iyhde68", "iygwq3y", "iygz1v6", "iyggs37", "iyig963",
        "iyha8g1", "iyknwo6", "iygm5ma", "iygywj5", "iyjq27f", "iygst2e", "iyjs61z",
        "iyj5mny", "iyh1ocu", "iygtexq", "iygnv45", "iyhoehu", "iygixyt", "iyh6avq",
        "iyihdaz", "iyi6v95", "iyktzod", "iygin6x", "iygje2d", "iygqj28", "iygm78r",
        "iyggugi", "iyi92dh", "iyhqhyf", "iyjmjti", "iygvgm6", "iyjdde5", "iyh2pvn",
        "iyie245", "iyhfum8", "iyiglmf", "iyj33ns", "iygnbrd", "iygxthu", "iygtcbe",
        "iygxk18", "iyhbs19", "iyh3w62", "iyi8t6h", "iygw4pj", "iygmaml", "iyhchgs",
        "iyienel", "iyi8rpl", "iygrl7g", "iyi03l0", "iyhh6i8", "iyh3qk1", "iyi5mb6",
        "iygs8y7", "iyhckmi", "iyjzlv2", "iygvd37", "iygzx33", "iyghtgr", "iyggs40",
        "iyj9hb0", "iyi25hy", "iyicsds", "iygocru", "iygkuux", "iyhenrh", "iyj01y1",
        "iyh7vgw", "iykw82v", "iyigqnw", "iygpvr6", "iyh5gmk", "iyj9zcg", "iygxiqu",
        "iyid8ah", "iyhnuwt", "iyh4u5o", "iyjqn57", "iyj2an6", "iyjmfg2", "iyguelm",
        "iygoshr", "iyi73mk", "iyh7938", "iyhoas8", "iyiyt15", "iyids34", "iyi5lfb",
        "iyikovq", "iyh4j50", "iygqjmn", "iygs99u", "iygzbp2", "iygka65", "iygtgn9",
        "iyh3pws", "iygpwy8", "iyjkilt", "iygm2io", "iyij19r", "iyjqu6s", "iyihtt5",
        "iyjr1gr", "iyjlqwe", "iygn1c3", "iyhwb6s", "iyi8it6", "iyhnlpb", "iygxx9k",
        "iygzohd", "iyibyuw", "iyghhlf", "iyjdd5h", "iyj7qvx", "iyhmu7g", "iygtt5s",
        "iym0xxj", "iygkxlq", "iyiuo14", "iykcpbh", "iynmvck", "iygpi5x", "iyijpue",
        "iygpln4", "iyhjx47", "iyjamqj", "iygs1yo", "iyggs0n", "iyggmu0", "iyk78oy",
        "iyh9sz6", "iyghinf", "iyi8c85", "iyha6dn", "iygzbos", "iyhmy8u", "iyhdtk6",
        "iyhwkbu", "iyhkpo5", "iyhdmga", "iyghhpq", "iykgq29", "iyin5hd", "iygw0eo",
        "iyh47kb", "iyh70zr", "iyggs2n", "iyjuwbr", "iyl2era", "iyilp2v", "iykeihg",
        "iykba6a", "iygvepx", "iyloqpg", "iyglg0j", "iylkrc2", "iyifepj", "iylv8l4",
        "iyhkd91", "iyk8tpt", "iyjuk4z", "iyki2hv", "iyi9xmp", "iyh9cuj", "iyhihj8",
        "iyhhmdv", "iygwx9e", "iyh7kil", "iyhcntx", "iylt0c2", "iynanji", "iyglyla",
        "iyhu377", "iyghyk7", "iyhviwa", "iykr360", "iyj4jvs", "iyio5ot", "iyhhp2z",
        "iyggvrp", "iygksew", "iyj8urz", "iym1oim", "iymfr3k", "iyjufhy", "iyivmd4",
        "iyhg8mm", "iyh1z60", "iyjfcnq", "iygx5l6", "iyizv63", "iyi3voe", "iyk33x5",
        "iygzep7", "iygii8u", "iykjqu5", "iyj1jqy", "iyjg18i", "iyh6ipy", "iyhx7im",
        "iyibwag", "iyhtniy", "iyh2jzk", "iyityzs", "iyh01nr", "iyhawrr", "iyhe9x7",
        "iyhj14i", "iygv06u", "iyixwn5", "iymnxs4", "iyk8vik", "iygr5ot", "iyhly7i",
        "iyi61u1", "iyggvx5", "iygortf", "iyjhii0", "iyh9uw5", "iygkf3o", "iyiptcs",
        "iyjyxup", "iyiu5e2", "iyjhb6d", "iyig2js", "iyig3lr", "iyi43qa", "iygw4nv",
        "iygt7fy", "iyj68z1", "iyhd2b7", "iyji2ik", "iyhjfge", "iyhp7bp", "iyktjwk",
        "iyggemo", "iyjk5c5", "iykiwgh", "iyjfti2", "iylsfbg", "iygul2m", "iygg75r",
        "iyk6f5r", "iygpwyd", "iyiz95o", "iygzh5i", "iyjll1x", "iyitfmg", "iygls4b",
        "iyh9v1e", "iykty7b", "iyj0pbg", "iygk5ym", "iyk5zef", "iykih4i", "iyjxqbh",
        "iyhm9bd", "iyizg5x", "iyiva1l", "iyiuhlp", "iyh1sbe", "iyl3nhm", "iyk964p",
        "iyhqtzi", "iyhzopl", "iykhrv4", "iyh5meo", "iyj2fnp", "iyk5rz1", "iyh8y4t",
        "iyi42bx", "iylvz2d", "iygvg47", "iyh27hi", "iyjh0by", "iyjhev8", "iyjqo0n",
        "iyjz08s", "iygul8j", "iyh903q", "iyjlma8", "iygu8w6", "iyh1cly", "iyhfj16",
        "iyh3ipx", "iygwf7e", "iyllxtz", "iyggtxq", "iyiq59r", "iygwwax", "iyhud6h",
        "iygs4zx", "iygibn4", "iyhae6e", "iykt1ij", "iyh8acg", "iygiboc", "iyiyv19",
        "iyiev6x", "iykxc31", "iyhjhbv", "iyhbekg", "iygrfdj", "iygwtge", "iyhk1w1",
        "iyi58dz", "iygsgdd", "iylvnvr", "iyhucho", "iyghbx9", "iyh5ex1", "iyj2rpc",
        "iyjmzei", "iyhg6wl", "iygq3eu", "iyhjkjw", "iygnnpp", "iyjsr7s", "iykukm3",
        "iygiahl", "iygh5ur", "iyjgbn4", "iyigmi0", "iyhn1tj", "iyhtfc5", "iyjjx19",
        "iykuhvk", "iygihhd", "iyh4bg4", "iyhi0hs", "iyjmyoj", "iyjt0r4", "iyi7wuv",
        "iygizh5", "iygj0gb", "iyjmlnl", "iygk71s", "iyjqs6b", "iylofbp", "iyi2ubt",
        "iyh23v3", "iygq9ex", "iyglca6", "iylruwg", "iykl2k8", "iyh2xk0", "iygojh4",
        "iyhnl8j", "iyioig2", "iygnjv0", "iyjsuh9", "iyh94pi", "iyi5ph1", "iyjjlwa",
        "iyn5own", "iyhp9bc", "iyit8hi", "iyjes91", "iylyrfw", "iyiijcf", "iykca4b",
        "iygnie1", "iyhd6hi", "iylbsbk", "iygnrsm", "iyjqdky", "iyj82ao", "iymtg1y",
        "iyjo0p4", "iygqbgt", "iyhta1w", "iygrr0v", "iykopsr", "iykqjpw", "iyh5f37",
        "iyjk8d1", "iyj6m98", "iygk7ty", "iygpb55", "iyglepl", "iyh4d67", "iyh40eu",
        "iyjmvn5", "iyhu7hi", "iygjsuh", "iyiew8r", "iygl9gz", "iyjrlwy", "iygl6mf",
        "iylrykp", "iyh6v07", "iygipfe", "iyjs7bn", "iyhqehc", "iygtqba", "iygkieb",
        "iygxrp3", "iyhmipo", "iyj5tvu", "iyghgsh", "iyl7t9c", "iyjca4f", "iyilrwd",
        "iyht2wb", "iylrvts", "iykhf2b", "iyjq2ke", "iyj9nk4", "iyggef3", "iyjn0xs",
        "iyhwmf9", "iyh83ef", "iyhr51u", "iyjr2fv", "iyk589m", "iygrb24", "iyk1xr7",
        "iyiuahb", "iyhqtl8", "iyl6d5z", "iyhwp80", "iyirrcf", "iyj1e8h", "iyhhlqt",
        "iyh0jn5", "iygjyh0", "iygot51", "iyhrqsb", "iyml7p5", "iygty01", "iyih8nf",
        "iyghnsf", "iygi1lg", "iyi1l73", "iyi6v6k", "iyghrha", "iyh3qkb", "iyj8sit",
        "iylrdmd", "iyh7ecp", "iygwcfb", "iygi5po", "iygikhh", "iyh4msz", "iyls2ng",
        "iyjd08l", "iylrzr2", "iyhncoa", "iyj0l1g", "iygk2q0", "iygi2zb", "iyk38p6",
        "iyhfatq", "iyjpndh", "iyjon13", "iyidtjc", "iyglvip", "iygk3a4", "iygnov1",
        "iygtn82", "iygllw5", "iyjt0id", "iyid3mu", "iyhg2qj", "iykcmen", "iygzzzp",
        "iylenyb", "iyjrsrt", "iyjjbuu", "iyiwnvn", "iyjtc5m", "iygld5k", "iygsprw",
        "iylrl58", "iyjo6pc", "iyk30jj", "iylpn1h", "iykjata", "iyjbqi4", "iyjj4z7",
        "iyiuevh", "iyhfzli", "iyifjlg", "iygmznb", "iyisc1l", "iyi4yrd", "iygh4ev",
        "iyjfjcb", "iyjttql", "iygyccj", "iygidqj", "iyi0vt0", "iygk841", "iyib1g3",
        "iygu9im", "iygu4na", "iylbokf", "iygh7jy", "iylvtwj", "iygonqk", "iyi42o2",
        "iyj05dc", "iylr8nj", "iyju5na", "iyh55x1", "iyjqxua", "iyghlbt", "iyhhx5j",
        "iyjrdd3", "iygihp4", "iylbtc9", "iygumyg", "iykqwil", "iyicmdx", "iyna5us",
        "iyll509", "iykp93u", "iyhnrc6", "iyijotf", "iyjo9dr", "iyghdgp", "iyj12wv",
        "iygvdkc", "iyj8hzx", "iyglpww", "iyhaofh", "iykh5as", "iyj6eg1", "iygire9",
        "iyh7ico", "iygi5xr", "iylahzo", "iygiuk8", "iyhf4pi", "iykkyaf", "iyghk2v",
        "iyh87eq", "iyj4wrk", "iyigaiq", "iyh4jvk", "iygqxbs", "iykv833", "iyiuj74",
        "iyjcn65", "iyhbnku", "iyhap4o", "iyjfvg4", "iygtz22", "iygjuhs", "iyhzbnm",
        "iyjuml8", "iyip2ky", "iyippe0", "iyizzou", "iygj91q", "iyijtn7", "iygtowk",
        "iygifh5", "iyghf4q", "iyifpzv", "iyilg4g", "iyk142r", "iyk3370", "iygiar9",
        "iykr6rb", "iylmebf", "iyjp7up", "iyl15he", "iyhwhv8", "iyjxybu", "iygnqq5",
        "iyik00f", "iyk2rga", "iyifqq9", "iyhpim5", "iyk42v2", "iymoetz", "iygnnt2",
        "iyjphct", "iymrn28", "iygj0fa", "iyh134y", "iykbd6u", "iyk2sbf", "iyjtywa",
        "iyhdm18", "iyk0fpn", "iygogzm", "iyhc157", "iyh9nau", "iylldan", "iyja14o",
        "iyl783x", "iyndflq", "iyh85kz", "iygjpdu", "iyggqcs", "iygq8yp", "iylw4iq",
        "iyhlomk", "iyjosmn", "iygikbe", "iygnsdd", "iygiuff", "iygnqw6", "iykxscx",
        "iykhd3j", "iyixtuz", "iygits6", "iyh254k", "iyh48zd", "iygilxa", "iylhx8m",
        "iyhjxcg", "iykr4j2", "iykillk", "iyhx6dw", "iyhwkux", "iyhcc5a", "iyhazll",
        "iyik796", "iygjzud", "iymm9y8", "iyjdyny", "iyh37cn", "iyi9lor", "iyjkm2g",
        "iyghs29", "iykf2rh", "iygh1vn", "iyk2b5l", "iyirah1", "iyghijn", "iyhej8p",
        "iyndnm7", "iylsah5", "iygjmjd", "iyhdc65", "iygu7yp", "iyh9s69", "iygsonm",
        "iygretv", "iyhs4pw", "iyh9vm9", "iyjoviq", "iyjpq76", "iyh2ga8", "iymeok0",
        "iygifp2", "iyk2msm", "iyjjk6w", "iygo7is", "iyhepar", "iyhclqb", "iyh53if",
        "iyizsac", "iygvchv", "iyjoxe5"]}}], true]], [0, 12, "attr", "things"], [12,
        13, "call", ["t1_iyghuum"]], [13, 14, "attr", "focus"], [14, 15, "call", []],
        [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr", "filter"],
        [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"], [20, 21,
        "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:34 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:34 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=TtpddnPGKEP5RH8s7O; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:34 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iygwh92,iygz25b,iygxxwx,iyhggf4,iyh5nde,iyhlys6,iyhwfqd,iyhths8,iyhh2tg,iyh8iil,iyh92tp,iyjg3qu,iyi4egb,iyi41x5,iyghhwb,iyi4ypd,iyglilp,iykbxca,iyhnct3,iyh8rkb,iyhhmuf,iyi4gnr,iyijcur,iyjglih,iyjpreq,iyjnnkz,iyhq2wq,iyihj07,iyj3ots,iygix60,iyhsqac,iyjhoro,iygjbqv,iygigso,iyh2y8f,iyimw2r,iyh24ub,iyi8o4g,iygxxq2,iyk5mru,iymaugp,iyhno87,iyi2jlu,iygibnn,iygiges,iygpogb,iygsj3n,iygvva1,iyh2nsp,iyhde68,iygwq3y,iygz1v6,iyggs37,iyig963,iyha8g1,iyknwo6,iygm5ma,iygywj5,iyjq27f,iygst2e,iyjs61z,iyj5mny,iyh1ocu,iygtexq,iygnv45,iyhoehu,iygixyt,iyh6avq,iyihdaz,iyi6v95,iyktzod,iygin6x,iygje2d,iygqj28,iygm78r,iyggugi,iyi92dh,iyhqhyf,iyjmjti,iygvgm6,iyjdde5,iyh2pvn,iyie245,iyhfum8,iyiglmf,iyj33ns,iygnbrd,iygxthu,iygtcbe,iygxk18,iyhbs19,iyh3w62,iyi8t6h,iygw4pj,iygmaml,iyhchgs,iyienel,iyi8rpl,iygrl7g,iyi03l0,iyhh6i8,iyh3qk1,iyi5mb6,iygs8y7,iyhckmi,iyjzlv2,iygvd37,iygzx33,iyghtgr,iyggs40,iyj9hb0,iyi25hy,iyicsds,iygocru,iygkuux,iyhenrh,iyj01y1,iyh7vgw,iykw82v,iyigqnw,iygpvr6,iyh5gmk,iyj9zcg,iygxiqu,iyid8ah,iyhnuwt,iyh4u5o,iyjqn57,iyj2an6,iyjmfg2,iyguelm,iygoshr,iyi73mk,iyh7938,iyhoas8,iyiyt15,iyids34,iyi5lfb,iyikovq,iyh4j50,iygqjmn,iygs99u,iygzbp2,iygka65,iygtgn9,iyh3pws,iygpwy8,iyjkilt,iygm2io,iyij19r,iyjqu6s,iyihtt5,iyjr1gr,iyjlqwe,iygn1c3,iyhwb6s,iyi8it6,iyhnlpb,iygxx9k,iygzohd,iyibyuw,iyghhlf,iyjdd5h,iyj7qvx,iyhmu7g,iygtt5s,iym0xxj,iygkxlq,iyiuo14,iykcpbh,iynmvck,iygpi5x,iyijpue,iygpln4,iyhjx47,iyjamqj,iygs1yo,iyggs0n,iyggmu0,iyk78oy,iyh9sz6,iyghinf,iyi8c85,iyha6dn,iygzbos,iyhmy8u,iyhdtk6,iyhwkbu,iyhkpo5,iyhdmga,iyghhpq,iykgq29,iyin5hd,iygw0eo,iyh47kb,iyh70zr,iyggs2n,iyjuwbr,iyl2era,iyilp2v,iykeihg,iykba6a,iygvepx,iyloqpg,iyglg0j,iylkrc2,iyifepj,iylv8l4,iyhkd91,iyk8tpt,iyjuk4z,iyki2hv,iyi9xmp,iyh9cuj,iyhihj8,iyhhmdv,iygwx9e,iyh7kil,iyhcntx,iylt0c2,iynanji,iyglyla,iyhu377,iyghyk7,iyhviwa,iykr360,iyj4jvs,iyio5ot,iyhhp2z,iyggvrp,iygksew,iyj8urz,iym1oim,iymfr3k,iyjufhy,iyivmd4,iyhg8mm,iyh1z60,iyjfcnq,iygx5l6,iyizv63,iyi3voe,iyk33x5,iygzep7,iygii8u,iykjqu5,iyj1jqy,iyjg18i,iyh6ipy,iyhx7im,iyibwag,iyhtniy,iyh2jzk,iyityzs,iyh01nr,iyhawrr,iyhe9x7,iyhj14i,iygv06u,iyixwn5,iymnxs4,iyk8vik,iygr5ot,iyhly7i,iyi61u1,iyggvx5,iygortf,iyjhii0,iyh9uw5,iygkf3o,iyiptcs,iyjyxup,iyiu5e2,iyjhb6d,iyig2js,iyig3lr,iyi43qa,iygw4nv,iygt7fy,iyj68z1,iyhd2b7,iyji2ik,iyhjfge,iyhp7bp,iyktjwk,iyggemo,iyjk5c5,iykiwgh,iyjfti2,iylsfbg,iygul2m,iygg75r,iyk6f5r,iygpwyd,iyiz95o,iygzh5i,iyjll1x,iyitfmg,iygls4b,iyh9v1e,iykty7b,iyj0pbg,iygk5ym,iyk5zef,iykih4i,iyjxqbh,iyhm9bd,iyizg5x,iyiva1l,iyiuhlp,iyh1sbe,iyl3nhm,iyk964p,iyhqtzi,iyhzopl,iykhrv4,iyh5meo,iyj2fnp,iyk5rz1,iyh8y4t,iyi42bx,iylvz2d,iygvg47,iyh27hi,iyjh0by,iyjhev8,iyjqo0n,iyjz08s,iygul8j,iyh903q,iyjlma8,iygu8w6,iyh1cly,iyhfj16,iyh3ipx,iygwf7e,iyllxtz,iyggtxq,iyiq59r,iygwwax,iyhud6h,iygs4zx,iygibn4,iyhae6e,iykt1ij,iyh8acg,iygiboc,iyiyv19,iyiev6x,iykxc31,iyhjhbv,iyhbekg,iygrfdj,iygwtge,iyhk1w1,iyi58dz,iygsgdd,iylvnvr,iyhucho,iyghbx9,iyh5ex1,iyj2rpc,iyjmzei,iyhg6wl,iygq3eu,iyhjkjw,iygnnpp,iyjsr7s,iykukm3,iygiahl,iygh5ur,iyjgbn4,iyigmi0,iyhn1tj,iyhtfc5,iyjjx19,iykuhvk,iygihhd,iyh4bg4,iyhi0hs,iyjmyoj,iyjt0r4,iyi7wuv,iygizh5,iygj0gb,iyjmlnl,iygk71s,iyjqs6b,iylofbp,iyi2ubt,iyh23v3,iygq9ex,iyglca6,iylruwg,iykl2k8,iyh2xk0,iygojh4,iyhnl8j,iyioig2,iygnjv0,iyjsuh9,iyh94pi,iyi5ph1,iyjjlwa,iyn5own,iyhp9bc,iyit8hi,iyjes91,iylyrfw,iyiijcf,iykca4b,iygnie1,iyhd6hi,iylbsbk,iygnrsm,iyjqdky,iyj82ao,iymtg1y,iyjo0p4,iygqbgt,iyhta1w,iygrr0v,iykopsr,iykqjpw,iyh5f37,iyjk8d1,iyj6m98,iygk7ty,iygpb55,iyglepl,iyh4d67,iyh40eu,iyjmvn5,iyhu7hi,iygjsuh,iyiew8r,iygl9gz,iyjrlwy,iygl6mf,iylrykp,iyh6v07,iygipfe,iyjs7bn,iyhqehc,iygtqba,iygkieb,iygxrp3,iyhmipo,iyj5tvu,iyghgsh,iyl7t9c,iyjca4f,iyilrwd,iyht2wb,iylrvts,iykhf2b,iyjq2ke,iyj9nk4,iyggef3,iyjn0xs,iyhwmf9,iyh83ef,iyhr51u,iyjr2fv,iyk589m,iygrb24,iyk1xr7,iyiuahb,iyhqtl8,iyl6d5z,iyhwp80,iyirrcf,iyj1e8h,iyhhlqt,iyh0jn5,iygjyh0,iygot51,iyhrqsb,iyml7p5,iygty01,iyih8nf,iyghnsf,iygi1lg,iyi1l73,iyi6v6k,iyghrha,iyh3qkb,iyj8sit,iylrdmd,iyh7ecp,iygwcfb,iygi5po,iygikhh,iyh4msz,iyls2ng,iyjd08l,iylrzr2,iyhncoa,iyj0l1g,iygk2q0,iygi2zb,iyk38p6,iyhfatq,iyjpndh,iyjon13,iyidtjc,iyglvip,iygk3a4,iygnov1,iygtn82,iygllw5,iyjt0id,iyid3mu,iyhg2qj,iykcmen,iygzzzp,iylenyb,iyjrsrt,iyjjbuu,iyiwnvn,iyjtc5m,iygld5k,iygsprw,iylrl58,iyjo6pc,iyk30jj,iylpn1h,iykjata,iyjbqi4,iyjj4z7,iyiuevh,iyhfzli,iyifjlg,iygmznb,iyisc1l,iyi4yrd,iygh4ev,iyjfjcb,iyjttql,iygyccj,iygidqj,iyi0vt0,iygk841,iyib1g3,iygu9im,iygu4na,iylbokf,iygh7jy,iylvtwj,iygonqk,iyi42o2,iyj05dc,iylr8nj,iyju5na,iyh55x1,iyjqxua,iyghlbt,iyhhx5j,iyjrdd3,iygihp4,iylbtc9,iygumyg,iykqwil,iyicmdx,iyna5us,iyll509,iykp93u,iyhnrc6,iyijotf,iyjo9dr,iyghdgp,iyj12wv,iygvdkc,iyj8hzx,iyglpww,iyhaofh,iykh5as,iyj6eg1,iygire9,iyh7ico,iygi5xr,iylahzo,iygiuk8,iyhf4pi,iykkyaf,iyghk2v,iyh87eq,iyj4wrk,iyigaiq,iyh4jvk,iygqxbs,iykv833,iyiuj74,iyjcn65,iyhbnku,iyhap4o,iyjfvg4,iygtz22,iygjuhs,iyhzbnm,iyjuml8,iyip2ky,iyippe0,iyizzou,iygj91q,iyijtn7,iygtowk,iygifh5,iyghf4q,iyifpzv,iyilg4g,iyk142r,iyk3370,iygiar9,iykr6rb,iylmebf,iyjp7up,iyl15he,iyhwhv8,iyjxybu,iygnqq5,iyik00f,iyk2rga,iyifqq9,iyhpim5,iyk42v2,iymoetz,iygnnt2,iyjphct,iymrn28,iygj0fa,iyh134y,iykbd6u,iyk2sbf,iyjtywa,iyhdm18,iyk0fpn,iygogzm,iyhc157,iyh9nau,iylldan,iyja14o,iyl783x,iyndflq,iyh85kz,iygjpdu,iyggqcs,iygq8yp,iylw4iq,iyhlomk,iyjosmn,iygikbe,iygnsdd,iygiuff,iygnqw6,iykxscx,iykhd3j,iyixtuz,iygits6,iyh254k,iyh48zd,iygilxa,iylhx8m,iyhjxcg,iykr4j2,iykillk,iyhx6dw,iyhwkux,iyhcc5a,iyhazll,iyik796,iygjzud,iymm9y8,iyjdyny,iyh37cn,iyi9lor,iyjkm2g,iyghs29,iykf2rh,iygh1vn,iyk2b5l,iyirah1,iyghijn,iyhej8p,iyndnm7,iylsah5,iygjmjd,iyhdc65,iygu7yp,iyh9s69,iygsonm,iygretv,iyhs4pw,iyh9vm9,iyjoviq,iyjpq76,iyh2ga8,iymeok0,iygifp2,iyk2msm,iyjjk6w,iygo7is,iyhepar,iyhclqb,iyh53if,iyizsac,iygvchv,iyjoxe5
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '49862'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv33xc0.2.1741472674448.Z0FBQUFBQm56TU9pX3pMQ3EyV0J6bHJkWHhxZ0JhYXR1MHcxX1l0eEFOcFMweks3S2l1emx1SERnRE10aWRUVjZpeWk1bzBPblBvZDZrWVNGU2F6V1BmRU03QjZxcXlFaVZZVENrZms1eDk5NURWMWVRLXJ6M2V4bmJPcnlpMFhSSWZMTTZEMGZnM0I;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:34
        GMT; secure, session_tracker=jcijakhomgagllnokd.0.1741472674460.Z0FBQUFBQm56TU9pU3dCc1FrYkYyaHEybU1GVTVOM082Yk5jLTd4ZUM0QmtGUmhXanZYUTVkRlhrbC1tSHlDbFJBMkp6cGx6UHpTY1ZjMmF3TkNoa2Q4NkJITXZrWjZPSDhkR0N5RzNRYloyZnZMbXRWNFl5dzRqVHJaOTFWQTJWZnpnd2xMZFY5WWo;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:34
        GMT; secure, edgebucket=aRpJLkiRQ4IWDtXwX7; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '33'
      x-ratelimit-remaining:
      - '67.0'
      x-ratelimit-reset:
      - '325'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:35 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669930126.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygwh92", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mathsaey",
        "can_mod_post": false, "created_utc": 1669882939.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_58311axp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n\nhttps://github.com/mathsaey/adventofcode/blob/master/lib/2022/1.ex\n\n    import
        AOC\n    \n    aoc 2022, 1 do\n      def p1(input), do: input |&gt; parse()
        |&gt; Enum.max()\n      def p2(input), do: input |&gt; parse() |&gt; Enum.sort(:desc)
        |&gt; Enum.take(3) |&gt; Enum.sum()\n    \n      def parse(string) do\n        string\n        |&gt;
        String.split(\"\\n\")\n        |&gt; Stream.chunk_by(&amp;(&amp;1 != \"\"))\n        |&gt;
        Stream.reject(&amp;(&amp;1 == [\"\"]))\n        |&gt; Stream.map(fn lst -&gt;
        Enum.map(lst, &amp;String.to_integer/1) end)\n        |&gt; Stream.map(&amp;Enum.sum/1)\n      end\n    end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mathsaey/adventofcode/blob/master/lib/2022/1.ex\"&gt;https://github.com/mathsaey/adventofcode/blob/master/lib/2022/1.ex&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        AOC\n\naoc 2022, 1 do\n  def p1(input), do: input |&amp;gt; parse() |&amp;gt;
        Enum.max()\n  def p2(input), do: input |&amp;gt; parse() |&amp;gt; Enum.sort(:desc)
        |&amp;gt; Enum.take(3) |&amp;gt; Enum.sum()\n\n  def parse(string) do\n    string\n    |&amp;gt;
        String.split(&amp;quot;\\n&amp;quot;)\n    |&amp;gt; Stream.chunk_by(&amp;amp;(&amp;amp;1
        != &amp;quot;&amp;quot;))\n    |&amp;gt; Stream.reject(&amp;amp;(&amp;amp;1
        == [&amp;quot;&amp;quot;]))\n    |&amp;gt; Stream.map(fn lst -&amp;gt; Enum.map(lst,
        &amp;amp;String.to_integer/1) end)\n    |&amp;gt; Stream.map(&amp;amp;Enum.sum/1)\n  end\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygwh92/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygwh92", "created":
        1669882939.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669884609.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygxxwx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "spr00ge",
        "can_mod_post": false, "created_utc": 1669884242.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_dj57v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n\n    \n    defmodule AdventOfCode.Day01 do\n      @spec part1(String.t())
        :: integer\n      def part1(args) do\n        convertTextToSummed(args)\n        |&gt;
        Enum.max()\n      end\n    \n      @spec part2(String.t()) :: integer\n      def
        part2(args) do\n        convertTextToSummed(args)\n        |&gt; Enum.sort()\n        |&gt;
        Enum.reverse()\n        |&gt; Enum.take(3)\n        |&gt; Enum.sum()\n      end\n    \n      defp
        convertTextToSummed(str),\n        do:\n          str\n          |&gt; String.trim()\n          |&gt;
        String.split(\"\\n\\n\")\n          |&gt; Enum.map(&amp;String.split(&amp;1,
        \"\\n\"))\n          |&gt; Enum.map(&amp;Enum.map(&amp;1, fn i -&gt; String.to_integer(i)
        end))\n          |&gt; Enum.map(&amp;Enum.sum(&amp;1))\n    end\n\n## Thoughs\nI
        forgot almost all of the Elixir techniques and it did not quite behave like
        Haskell. So I was frustrated with how to pipe functions and declare anonymous
        functions. I remember that there were some tricks to make it less ugly, I
        am sure I find some of the solutions over here.\n\nI mean, look at my code.
        It works, but it sucks\n\nOn workflow: When I used Clojure, it was a breeze
        to see the current output in each line while typing. Calva is such an impressive
        tool. Currently, I have iex running to code, but it has no autocomplete. Non
        yet optimal.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        AdventOfCode.Day01 do\n  @spec part1(String.t()) :: integer\n  def part1(args)
        do\n    convertTextToSummed(args)\n    |&amp;gt; Enum.max()\n  end\n\n  @spec
        part2(String.t()) :: integer\n  def part2(args) do\n    convertTextToSummed(args)\n    |&amp;gt;
        Enum.sort()\n    |&amp;gt; Enum.reverse()\n    |&amp;gt; Enum.take(3)\n    |&amp;gt;
        Enum.sum()\n  end\n\n  defp convertTextToSummed(str),\n    do:\n      str\n      |&amp;gt;
        String.trim()\n      |&amp;gt; String.split(&amp;quot;\\n\\n&amp;quot;)\n      |&amp;gt;
        Enum.map(&amp;amp;String.split(&amp;amp;1, &amp;quot;\\n&amp;quot;))\n      |&amp;gt;
        Enum.map(&amp;amp;Enum.map(&amp;amp;1, fn i -&amp;gt; String.to_integer(i)
        end))\n      |&amp;gt; Enum.map(&amp;amp;Enum.sum(&amp;amp;1))\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Thoughs&lt;/h2&gt;\n\n&lt;p&gt;I
        forgot almost all of the Elixir techniques and it did not quite behave like
        Haskell. So I was frustrated with how to pipe functions and declare anonymous
        functions. I remember that there were some tricks to make it less ugly, I
        am sure I find some of the solutions over here.&lt;/p&gt;\n\n&lt;p&gt;I mean,
        look at my code. It works, but it sucks&lt;/p&gt;\n\n&lt;p&gt;On workflow:
        When I used Clojure, it was a breeze to see the current output in each line
        while typing. Calva is such an impressive tool. Currently, I have iex running
        to code, but it has no autocomplete. Non yet optimal.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygxxwx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygxxwx", "created":
        1669884242.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyh9vhz", "id": "iyh9vhz", "parent_id":
        "t1_iygxxwx", "depth": 1, "children": ["iyh9vhz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygz25b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "musifter",
        "can_mod_post": false, "created_utc": 1669885260.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Perl\n\nBack doing Perl again.\n\nFull source: https://pastebin.com/skQj03Wh",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Perl&lt;/h1&gt;\n\n&lt;p&gt;Back
        doing Perl again.&lt;/p&gt;\n\n&lt;p&gt;Full source: &lt;a href=\"https://pastebin.com/skQj03Wh\"&gt;https://pastebin.com/skQj03Wh&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygz25b/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygz25b", "created":
        1669885260.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669891993.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh5nde", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "__Abigail__",
        "can_mod_post": false, "created_utc": 1669891313.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_13exmr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Perl\n\nBasically, a one liner, after importing `sum` from `List::Util`:\n\n    my
        @calories = sort {$b &lt;=&gt; $a} map {sum split} do {local $/ = \"\\n\\n\";
        &lt;&gt;};\n\nNow the answer to part one is in `$calories [0]`, and the answer
        to part two is the sum of the first three elements of `@calories`.\n\nTo explain
        the workings, we have to go from left to right:\n\n* `do {local $/ = \"\\n\\n\";
        &lt;&gt;}`: this reads in the entire input, and returns it as a list, split
        on blank lines. `$/` is the separator to split the input on, this is a newline
        by default. By setting it to `\\n\\n`, it splits on blank lines. Effectively,
        this is chopping up the input into sections, where each section has the calories
        of a single elf.\n* `map {sum split}`: this takes one set of calories, splits
        it on whitespace (the newline separating the calories of each snack) and sums
        them. So the output of this `map` is a list of the total amount of calories
        for each snack.\n* `sort {$b &lt;=&gt; $a}` this takes a list of items (the
        calories of each elf), and sorts them numerically descending.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Perl&lt;/h1&gt;\n\n&lt;p&gt;Basically,
        a one liner, after importing &lt;code&gt;sum&lt;/code&gt; from &lt;code&gt;List::Util&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my
        @calories = sort {$b &amp;lt;=&amp;gt; $a} map {sum split} do {local $/ =
        &amp;quot;\\n\\n&amp;quot;; &amp;lt;&amp;gt;};\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now
        the answer to part one is in &lt;code&gt;$calories [0]&lt;/code&gt;, and the
        answer to part two is the sum of the first three elements of &lt;code&gt;@calories&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;To
        explain the workings, we have to go from left to right:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;code&gt;do
        {local $/ = &amp;quot;\\n\\n&amp;quot;; &amp;lt;&amp;gt;}&lt;/code&gt;: this
        reads in the entire input, and returns it as a list, split on blank lines.
        &lt;code&gt;$/&lt;/code&gt; is the separator to split the input on, this is
        a newline by default. By setting it to &lt;code&gt;\\n\\n&lt;/code&gt;, it
        splits on blank lines. Effectively, this is chopping up the input into sections,
        where each section has the calories of a single elf.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;map
        {sum split}&lt;/code&gt;: this takes one set of calories, splits it on whitespace
        (the newline separating the calories of each snack) and sums them. So the
        output of this &lt;code&gt;map&lt;/code&gt; is a list of the total amount
        of calories for each snack.&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;sort {$b &amp;lt;=&amp;gt;
        $a}&lt;/code&gt; this takes a list of items (the calories of each elf), and
        sorts them numerically descending.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh5nde/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh5nde", "created":
        1669891313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669907698.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh8iil", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "royvanrijn",
        "can_mod_post": false, "created_utc": 1669893729.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_ggtaf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Java\n\nFirst I make a giant string joined by \",\". Next I split by \",,\"
        to get lists of numbers per elf. Finally I sum each elf and get the two answers.\n\n        List&lt;Integer&gt;
        elfs = Arrays.stream(\n                        Files.readAllLines(Path.of(\"src/main/resources/input.txt\"))\n                                .stream()\n                                .collect(Collectors.joining(\",\"))\n                                .split(\",,\"))\n                .map(e
        -&gt; Arrays.stream(e.split(\",\"))\n                        .mapToInt(Integer::parseInt).sum())\n                .sorted(Comparator.reverseOrder())\n                .collect(Collectors.toList());\n    \n        //Part
        1:\n        System.out.println(elfs.get(0));\n        //Part 2:\n        System.out.println(elfs.get(0)
        + elfs.get(1) + elfs.get(2));\n\n\\[UPDATE\\]: This would have been even better:\n\n        List&lt;Integer&gt;
        elfs = Arrays.stream(Files.readString(Path.of(\"day1.txt\")).split(\"\\\\n\\\\n\"))\n                .map(s
        -&gt; Arrays.stream(s.split(\"\\\\n\")).mapToInt(Integer::parseInt).sum())\n                .sorted(Comparator.reverseOrder())\n                .collect(Collectors.toList());\n        System.out.println(\"Part
        1:\" + elfs.get(0));\n        System.out.println(\"Part 2:\" + (elfs.get(0)
        + elfs.get(1) + elfs.get(2)));", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Java&lt;/h1&gt;\n\n&lt;p&gt;First I make a giant
        string joined by &amp;quot;,&amp;quot;. Next I split by &amp;quot;,,&amp;quot;
        to get lists of numbers per elf. Finally I sum each elf and get the two answers.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    List&amp;lt;Integer&amp;gt;
        elfs = Arrays.stream(\n                    Files.readAllLines(Path.of(&amp;quot;src/main/resources/input.txt&amp;quot;))\n                            .stream()\n                            .collect(Collectors.joining(&amp;quot;,&amp;quot;))\n                            .split(&amp;quot;,,&amp;quot;))\n            .map(e
        -&amp;gt; Arrays.stream(e.split(&amp;quot;,&amp;quot;))\n                    .mapToInt(Integer::parseInt).sum())\n            .sorted(Comparator.reverseOrder())\n            .collect(Collectors.toList());\n\n    //Part
        1:\n    System.out.println(elfs.get(0));\n    //Part 2:\n    System.out.println(elfs.get(0)
        + elfs.get(1) + elfs.get(2));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;[UPDATE]:
        This would have been even better:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    List&amp;lt;Integer&amp;gt;
        elfs = Arrays.stream(Files.readString(Path.of(&amp;quot;day1.txt&amp;quot;)).split(&amp;quot;\\\\n\\\\n&amp;quot;))\n            .map(s
        -&amp;gt; Arrays.stream(s.split(&amp;quot;\\\\n&amp;quot;)).mapToInt(Integer::parseInt).sum())\n            .sorted(Comparator.reverseOrder())\n            .collect(Collectors.toList());\n    System.out.println(&amp;quot;Part
        1:&amp;quot; + elfs.get(0));\n    System.out.println(&amp;quot;Part 2:&amp;quot;
        + (elfs.get(0) + elfs.get(1) + elfs.get(2)));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh8iil/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh8iil", "created":
        1669893729.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyhu3e5", "id": "iyhu3e5", "parent_id":
        "t1_iyh8iil", "depth": 1, "children": ["iyhu3e5"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh8rkb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tomflumery",
        "can_mod_post": false, "created_utc": 1669893929.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_1n1f8ga0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "05ab1e (note needs this branch that adds a new parsing command [https://github.com/monkeygroover/05AB1E/tree/add-readtoeof](https://github.com/monkeygroover/05AB1E/tree/add-readtoeof))\n\nPart
        1\n\n    .|\u00f5\u00a1O\u00e0\n\nPart 2\n\n    .|\u00f5\u00a1O{3.\u00a3O\n\nExplanation\n\n    .|
        -&gt; split file by lines into an array\n    \u00f5\u00a1 -&gt; split array
        by empty strings\n    O -&gt; Sum (vectorised, i.e. each split list)\n    \n    \u00e0
        -&gt; largest\n    \n    {3.\u00a3O -&gt; sort, take last 3, sum", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;05ab1e (note needs this branch that adds
        a new parsing command &lt;a href=\"https://github.com/monkeygroover/05AB1E/tree/add-readtoeof\"&gt;https://github.com/monkeygroover/05AB1E/tree/add-readtoeof&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.|\u00f5\u00a1O\u00e0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.|\u00f5\u00a1O{3.\u00a3O\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Explanation&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.|
        -&amp;gt; split file by lines into an array\n\u00f5\u00a1 -&amp;gt; split
        array by empty strings\nO -&amp;gt; Sum (vectorised, i.e. each split list)\n\n\u00e0
        -&amp;gt; largest\n\n{3.\u00a3O -&amp;gt; sort, take last 3, sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh8rkb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh8rkb", "created":
        1669893929.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyi22sp", "id": "iyi22sp", "parent_id":
        "t1_iyh8rkb", "depth": 1, "children": ["iyi22sp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669894359.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh92tp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "aurele",
        "can_mod_post": false, "created_utc": 1669894177.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_1w2b", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[**Rust**](https://gist.github.com/samueltardieu/4c05cc87c6c428c25b78553a5bdfb8ae),
        taking advantage of the fact that `.sum()` works over `Result&lt;_, _&gt;`
        as well", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://gist.github.com/samueltardieu/4c05cc87c6c428c25b78553a5bdfb8ae\"&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/a&gt;,
        taking advantage of the fact that &lt;code&gt;.sum()&lt;/code&gt; works over
        &lt;code&gt;Result&amp;lt;_, _&amp;gt;&lt;/code&gt; as well&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh92tp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh92tp", "created":
        1669894177.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyhcjlu", "id": "iyhcjlu", "parent_id":
        "t1_iyh92tp", "depth": 1, "children": ["iyhcjlu", "iyhxdt5", "iyhv01j"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhggf4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Quirky-Seesaw8394",
        "can_mod_post": false, "created_utc": 1669899261.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_2ttemca8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**G Sheets**\n\nFinal consolidated solution  \n`=ARRAYFORMULA( SUM( QUERY(
        BYROW( REGEXREPLACE( TRANSPOSE( SPLIT( TEXTJOIN( \",\", , IF( LEN(A3:A2272),
        A3:A, CHAR(9876) ) ), CHAR(9876) ) ), \"^,|,$\",), LAMBDA( calories, SUM(
        SPLIT( calories, \",\") ) ) ), \"select * order by Col1 desc limit 3\", 0)
        ) )`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;G
        Sheets&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Final consolidated solution&lt;br/&gt;\n&lt;code&gt;=ARRAYFORMULA(
        SUM( QUERY( BYROW( REGEXREPLACE( TRANSPOSE( SPLIT( TEXTJOIN( &amp;quot;,&amp;quot;,
        , IF( LEN(A3:A2272), A3:A, CHAR(9876) ) ), CHAR(9876) ) ), &amp;quot;^,|,$&amp;quot;,),
        LAMBDA( calories, SUM( SPLIT( calories, &amp;quot;,&amp;quot;) ) ) ), &amp;quot;select
        * order by Col1 desc limit 3&amp;quot;, 0) ) )&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhggf4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhggf4", "created":
        1669899261.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyufr70", "id": "iyufr70", "parent_id":
        "t1_iyhggf4", "depth": 1, "children": ["iyufr70"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669899839.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhh2tg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "jeroenmaniac",
        "can_mod_post": false, "created_utc": 1669899635.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_4dztobcf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python one-liner:\n\n`print(max(sum(map(int,i.split())) for i in open(''1.in'').read().split(''\\n\\n'')))`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python one-liner:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(max(sum(map(int,i.split()))
        for i in open(&amp;#39;1.in&amp;#39;).read().split(&amp;#39;\\n\\n&amp;#39;)))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhh2tg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhh2tg", "created":
        1669899635.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyhkdnd", "id": "iyhkdnd", "parent_id":
        "t1_iyhh2tg", "depth": 1, "children": ["iyhkdnd", "iyibvel"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhhmuf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "GassaFM",
        "can_mod_post": false, "created_utc": 1669899960.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_ffvdb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution in **D** (**dlang**), functional style.\n\nPart 1:\n\n    import
        std;\n    void main () {\n        stdin\n            .byLineCopy\n            .array\n            .split
        (\"\")\n            .map !(t =&gt; t.map !(to !(int)).sum)\n            .maxElement\n            .writeln;\n    }\n\nPart
        2:\n\n    import std;\n    void main () {\n        stdin\n            .byLineCopy\n            .array\n            .split
        (\"\")\n            .map !(t =&gt; t.map !(to !(int)).sum)\n            .array\n            .sort
        !(q{a &gt; b})\n            .take (3)\n            .sum\n            .writeln;\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution in &lt;strong&gt;D&lt;/strong&gt;
        (&lt;strong&gt;dlang&lt;/strong&gt;), functional style.&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import std;\nvoid main () {\n    stdin\n        .byLineCopy\n        .array\n        .split
        (&amp;quot;&amp;quot;)\n        .map !(t =&amp;gt; t.map !(to !(int)).sum)\n        .maxElement\n        .writeln;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import std;\nvoid main () {\n    stdin\n        .byLineCopy\n        .array\n        .split
        (&amp;quot;&amp;quot;)\n        .map !(t =&amp;gt; t.map !(to !(int)).sum)\n        .array\n        .sort
        !(q{a &amp;gt; b})\n        .take (3)\n        .sum\n        .writeln;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhhmuf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhhmuf", "created":
        1669899960.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhlys6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tomribbens",
        "can_mod_post": false, "created_utc": 1669902327.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_qookn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Python solution can be found [here](https://github.com/tomribbens/advent-of-code-tribbe/blob/master/aoc_tribbe/aoc2022/d01.py).\n\nBasically,
        in pseudocode, I''m doing this:\n\n    loop over lines:\n        if line is
        blank:\n            increment index\n        else:\n            add value
        of line to dictionary at current index\n\nThis gives me a dictionary of each
        elf''s calorie count, which then can be easily sorted and gotten the max from.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Python solution can
        be found &lt;a href=\"https://github.com/tomribbens/advent-of-code-tribbe/blob/master/aoc_tribbe/aoc2022/d01.py\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Basically,
        in pseudocode, I&amp;#39;m doing this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;loop
        over lines:\n    if line is blank:\n        increment index\n    else:\n        add
        value of line to dictionary at current index\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This
        gives me a dictionary of each elf&amp;#39;s calorie count, which then can
        be easily sorted and gotten the max from.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhlys6/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhlys6", "created": 1669902327.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iyidd2y", "id": "iyidd2y", "parent_id": "t1_iyhlys6", "depth": 1, "children":
        ["iyidd2y", "iyij4xx"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyhnct3", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Excellent_Station_84", "can_mod_post":
        false, "created_utc": 1669903029.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 4, "author_fullname": "t2_i0w6zqhh", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Python3 one-liners\n\n    print(max(sum(map(int,x.split()))for
        x in open(''input.txt'').read().split(''\\n\\n'')))\n    \n    print(sum(sorted(sum(map(int,x.split()))for
        x in open(''input.txt'').read().split(''\\n\\n''))[-3:]))", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python3 one-liners&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(max(sum(map(int,x.split()))for
        x in open(&amp;#39;input.txt&amp;#39;).read().split(&amp;#39;\\n\\n&amp;#39;)))\n\nprint(sum(sorted(sum(map(int,x.split()))for
        x in open(&amp;#39;input.txt&amp;#39;).read().split(&amp;#39;\\n\\n&amp;#39;))[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhnct3/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhnct3", "created":
        1669903029.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhths8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "sergiosgc",
        "can_mod_post": false, "created_utc": 1669905941.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_adshw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\nThis year I''ll go for Rust until Christmas, having picked up the
        language in 2022 as the result of the language sampling in Advent of Code
        2021.\n\nFirst day is always easy, not much explaining to do. Repo [at github](https://github.com/sergiosgc/AdventOfCode).
        Tweet [here](https://twitter.com/sergiocarvalho/status/1598323769562603521).\n\nThe
        input has to be padded with an extra newline at the end.\n\nPart 1:\n\n    use
        std::io::BufRead;\n    pub fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt;
        {\n        println!(\"{:#?}\", std::io::BufReader::new(std::io::stdin())\n            .lines()\n            .filter_map(std::io::Result::ok)\n            .fold((0,0),
        |(max, current), line| {\n                if line.len() == 0 {\n                    (max.max(current),
        0)\n                } else {\n                    (max, current + line.parse::&lt;i64&gt;().unwrap())\n                }\n            }).0\n        );\n        Ok(())\n    }\n\nPart
        2:\n\n    use std::io::BufRead;\n    pub fn main() -&gt; Result&lt;(), Box&lt;dyn
        std::error::Error&gt;&gt; {\n        let mut elfs = std::io::BufReader::new(std::io::stdin())\n            .lines()\n            .filter_map(std::io::Result::ok)\n            .collect::&lt;Vec&lt;String&gt;&gt;()\n            .split(|line|
        line.len() == 0)\n            .map(|slice| slice.to_vec())\n            .map(|elf_calories|
        elf_calories\n                .into_iter()\n                .fold(0, |result,
        calorie| result + calorie.parse::&lt;i64&gt;().unwrap() ))\n            .collect::&lt;Vec&lt;i64&gt;&gt;();\n        elfs.sort();\n        elfs.reverse();\n        println!(\"{:#?}\",
        elfs[0..3].into_iter().sum::&lt;i64&gt;());\n        Ok(())\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;This year I&amp;#39;ll
        go for Rust until Christmas, having picked up the language in 2022 as the
        result of the language sampling in Advent of Code 2021.&lt;/p&gt;\n\n&lt;p&gt;First
        day is always easy, not much explaining to do. Repo &lt;a href=\"https://github.com/sergiosgc/AdventOfCode\"&gt;at
        github&lt;/a&gt;. Tweet &lt;a href=\"https://twitter.com/sergiocarvalho/status/1598323769562603521\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The
        input has to be padded with an extra newline at the end.&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::io::BufRead;\npub fn main()
        -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt;
        {\n    println!(&amp;quot;{:#?}&amp;quot;, std::io::BufReader::new(std::io::stdin())\n        .lines()\n        .filter_map(std::io::Result::ok)\n        .fold((0,0),
        |(max, current), line| {\n            if line.len() == 0 {\n                (max.max(current),
        0)\n            } else {\n                (max, current + line.parse::&amp;lt;i64&amp;gt;().unwrap())\n            }\n        }).0\n    );\n    Ok(())\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::io::BufRead;\npub fn main()
        -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt;
        {\n    let mut elfs = std::io::BufReader::new(std::io::stdin())\n        .lines()\n        .filter_map(std::io::Result::ok)\n        .collect::&amp;lt;Vec&amp;lt;String&amp;gt;&amp;gt;()\n        .split(|line|
        line.len() == 0)\n        .map(|slice| slice.to_vec())\n        .map(|elf_calories|
        elf_calories\n            .into_iter()\n            .fold(0, |result, calorie|
        result + calorie.parse::&amp;lt;i64&amp;gt;().unwrap() ))\n        .collect::&amp;lt;Vec&amp;lt;i64&amp;gt;&amp;gt;();\n    elfs.sort();\n    elfs.reverse();\n    println!(&amp;quot;{:#?}&amp;quot;,
        elfs[0..3].into_iter().sum::&amp;lt;i64&amp;gt;());\n    Ok(())\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhths8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhths8", "created":
        1669905941.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyhz19a", "id": "iyhz19a", "parent_id":
        "t1_iyhths8", "depth": 1, "children": ["iyhz19a"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhwfqd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "euidzero",
        "can_mod_post": false, "created_utc": 1669907243.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_b50hb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Perl.\n\n    #!/usr/bin/perl\n    @x = (0,0,0,0);\n    while(&lt;&gt;) {\n            chomp;\n            if($_)
        {\n                    $t += $_;\n            } else {\n                    @x[0]
        = $t;\n                    @x = sort { $a &lt;=&gt; $b } @x;\n                    $t
        = 0;\n            }\n    }\n    printf(\"%d\\n%d\\n\",$x[3],$x[1]+$x[2]+$x[3]);",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perl.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/perl\n@x
        = (0,0,0,0);\nwhile(&amp;lt;&amp;gt;) {\n        chomp;\n        if($_) {\n                $t
        += $_;\n        } else {\n                @x[0] = $t;\n                @x
        = sort { $a &amp;lt;=&amp;gt; $b } @x;\n                $t = 0;\n        }\n}\nprintf(&amp;quot;%d\\n%d\\n&amp;quot;,$x[3],$x[1]+$x[2]+$x[3]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhwfqd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhwfqd", "created":
        1669907243.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyihxbp", "id": "iyihxbp", "parent_id":
        "t1_iyhwfqd", "depth": 1, "children": ["iyihxbp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi2jlu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rckymtnskier",
        "can_mod_post": false, "created_utc": 1669909782.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_o9vgm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python beginner solution\n\n&amp;#x200B;\n\nJust have to say WOW! You all
        are impressive. I was happy with my solutions being such a beginner, but now
        I am seeing what I need to work towards. Here are my humble and noob solutions.
        Dont laugh too hard.\n\n[Solution #1](https://github.com/Rckymtnskier/codespaces-jupyter/blob/94edc842cd4ccf322d882325ee84ec44bd3f1e4b/Advent%20of%20Code/Dec%2001/reindeer_food.py)\n\n[Solution
        #2](https://github.com/Rckymtnskier/codespaces-jupyter/blob/94edc842cd4ccf322d882325ee84ec44bd3f1e4b/Advent%20of%20Code/Dec%2001%20Part%202/elf_pantry.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python beginner solution&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Just
        have to say WOW! You all are impressive. I was happy with my solutions being
        such a beginner, but now I am seeing what I need to work towards. Here are
        my humble and noob solutions. Dont laugh too hard.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Rckymtnskier/codespaces-jupyter/blob/94edc842cd4ccf322d882325ee84ec44bd3f1e4b/Advent%20of%20Code/Dec%2001/reindeer_food.py\"&gt;Solution
        #1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Rckymtnskier/codespaces-jupyter/blob/94edc842cd4ccf322d882325ee84ec44bd3f1e4b/Advent%20of%20Code/Dec%2001%20Part%202/elf_pantry.py\"&gt;Solution
        #2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi2jlu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi2jlu", "created":
        1669909782.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyiki0v", "id": "iyiki0v", "parent_id":
        "t1_iyi2jlu", "depth": 1, "children": ["iyiki0v"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669911818.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi41x5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Unfair-Ruin9448",
        "can_mod_post": false, "created_utc": 1669910390.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_fmmg3r0w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript (golfed \u26f3\ufe0f):\n\n    d=input.split(\"\\n\").map(Number);\n    s={},e=0;for(i=0;i&lt;d.length;i++)!d[i]?(e+=1):((s[e]=s[e]??0),(s[e]+=d[i]));\n    //
        Part1:\n    Math.max(Object.values(s))\n    // Part2:\n    Object.values(s).sort((a,b)=&gt;(b-a)).slice(0,3).reduce((a,n)=&gt;a+n,0)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript (golfed \u26f3\ufe0f):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d=input.split(&amp;quot;\\n&amp;quot;).map(Number);\ns={},e=0;for(i=0;i&amp;lt;d.length;i++)!d[i]?(e+=1):((s[e]=s[e]??0),(s[e]+=d[i]));\n//
        Part1:\nMath.max(Object.values(s))\n// Part2:\nObject.values(s).sort((a,b)=&amp;gt;(b-a)).slice(0,3).reduce((a,n)=&amp;gt;a+n,0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi41x5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi41x5", "created":
        1669910390.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi4egb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "DeepHorse",
        "can_mod_post": false, "created_utc": 1669910533.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_75bvl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Typescript using Copilot for fun\n\n    // import fs\n    import * as fs
        from ''fs'';\n    \n    export const x = \"\";\n    \n    // read in day1input.txt
        using readFileSync\n    const results = fs.readFileSync(\"day1input.txt\",
        \"utf8\").replace(/\\r\\n/g, \" \").trim().split(\" \");\n    \n    // loop
        through results and add to total until we reach an empty string, then update
        max\n    // let total = 0;\n    // let max = 0;\n    // for (let i = 0; i
        &lt; results.length; i++) {\n    //     if (results[i] === \"\") {\n    //         if
        (total &gt; max) {\n    //             max = total;\n    //         }\n    //         total
        = 0;\n    //     } else {\n    //         total += parseInt(results[i]);\n    //     }\n    //
        }\n    \n    // console.log(max);\n    // 70698\n    \n    // create an array
        of numbers that we can append to\n    const numbers: number[] = [];\n    let
        total = 0;\n    for (let i = 0; i &lt; results.length; i++) {\n        if
        (results[i] === \"\") {\n            numbers.push(total);\n            total
        = 0;\n        } else {\n            total += parseInt(results[i]);\n        }\n    }\n    \n    //
        sort numbers in descending order\n    numbers.sort((a, b) =&gt; b - a);\n    \n    //
        sum the first 3 numbers and print it out\n    console.log(numbers[0] + numbers[1]
        + numbers[2]);", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript
        using Copilot for fun&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// import fs\nimport
        * as fs from &amp;#39;fs&amp;#39;;\n\nexport const x = &amp;quot;&amp;quot;;\n\n//
        read in day1input.txt using readFileSync\nconst results = fs.readFileSync(&amp;quot;day1input.txt&amp;quot;,
        &amp;quot;utf8&amp;quot;).replace(/\\r\\n/g, &amp;quot; &amp;quot;).trim().split(&amp;quot;
        &amp;quot;);\n\n// loop through results and add to total until we reach an
        empty string, then update max\n// let total = 0;\n// let max = 0;\n// for
        (let i = 0; i &amp;lt; results.length; i++) {\n//     if (results[i] === &amp;quot;&amp;quot;)
        {\n//         if (total &amp;gt; max) {\n//             max = total;\n//         }\n//         total
        = 0;\n//     } else {\n//         total += parseInt(results[i]);\n//     }\n//
        }\n\n// console.log(max);\n// 70698\n\n// create an array of numbers that
        we can append to\nconst numbers: number[] = [];\nlet total = 0;\nfor (let
        i = 0; i &amp;lt; results.length; i++) {\n    if (results[i] === &amp;quot;&amp;quot;)
        {\n        numbers.push(total);\n        total = 0;\n    } else {\n        total
        += parseInt(results[i]);\n    }\n}\n\n// sort numbers in descending order\nnumbers.sort((a,
        b) =&amp;gt; b - a);\n\n// sum the first 3 numbers and print it out\nconsole.log(numbers[0]
        + numbers[1] + numbers[2]);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi4egb/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyi4egb", "created": 1669910533.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_z9ezjb", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "iyi4gnr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 4, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[removed]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_iyi4gnr", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi4gnr/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669910558.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669910558.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyjtumh", "id": "iyjtumh", "parent_id":
        "t1_iyi4gnr", "depth": 1, "children": ["iyjtumh", "iyl1m7e", "iyi8uet"]}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi4ypd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Kotlin maintaining a min heap of size 3.\n\n    fun topThree(args:
        Array&lt;String&gt;): Int {\n    var curCals = 0\n    val heap = PriorityQueue&lt;Int&gt;()\n    File(\"filepath\")\n        .forEachLine
        { cals -&gt;\n        if (cals.isEmpty()) {\n            if (heap.size &gt;=
        3) {\n                if (curCals &gt; heap.peek()) {\n                    heap.poll()\n                    heap.add(curCals)\n                }\n            }
        else {\n                heap.add(curCals)\n            }\n            curCals
        = 0\n        } else {\n            curCals += cals.toInt()\n        }\n    }\n    return
        heap.sum()\n}", "awarders": [], "downs": 0, "author_flair_css_class": null,
        "name": "t1_iyi4ypd", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin maintaining a min heap of size 3.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        topThree(args: Array&amp;lt;String&amp;gt;): Int {\nvar curCals = 0\nval heap
        = PriorityQueue&amp;lt;Int&amp;gt;()\nFile(&amp;quot;filepath&amp;quot;)\n    .forEachLine
        { cals -&amp;gt;\n    if (cals.isEmpty()) {\n        if (heap.size &amp;gt;=
        3) {\n            if (curCals &amp;gt; heap.peek()) {\n                heap.poll()\n                heap.add(curCals)\n            }\n        }
        else {\n            heap.add(curCals)\n        }\n        curCals = 0\n    }
        else {\n        curCals += cals.toInt()\n    }\n}\nreturn heap.sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi4ypd/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669910760.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669910760.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi8o4g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "euidzero",
        "can_mod_post": false, "created_utc": 1669912270.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_b50hb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash.\n\n    #!/bin/bash\n    while read L; do\n            if [[ \"$L\"
        ]]; then\n                    ((T += L ))\n            else\n                    if
        [[ $T -gt $C ]]; then\n                            A=$B\n                            B=$C\n                            C=$T\n                    elif
        [[ $T -gt $B ]]; then\n                            A=$B\n                            B=$T\n                    elif
        [[ $T -gt $A ]]; then\n                            A=$T\n                    fi\n                    T=0\n            fi\n    done\n    echo
        \"$C $((A+B+C))\"", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/bin/bash\nwhile
        read L; do\n        if [[ &amp;quot;$L&amp;quot; ]]; then\n                ((T
        += L ))\n        else\n                if [[ $T -gt $C ]]; then\n                        A=$B\n                        B=$C\n                        C=$T\n                elif
        [[ $T -gt $B ]]; then\n                        A=$B\n                        B=$T\n                elif
        [[ $T -gt $A ]]; then\n                        A=$T\n                fi\n                T=0\n        fi\ndone\necho
        &amp;quot;$C $((A+B+C))&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi8o4g/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi8o4g", "created":
        1669912270.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyieu70", "id": "iyieu70", "parent_id":
        "t1_iyi8o4g", "depth": 1, "children": ["iyieu70"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669971336.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyihj07", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Spare-Bumblebee8376",
        "can_mod_post": false, "created_utc": 1669915692.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_c55zclon", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Devtools Javascript solution.\n\n    const topThree = document.getElementsByTagName(''pre'')[0]\n    .innerText.split(''\\n\\n'')\n    .reduce((maxArr,
        curr, index) =&gt; {\n         return [...maxArr, eval(curr.trim().replaceAll(''\\n'',
        ''+''))].sort((a, b) =&gt; a - b).slice(-3)\n     }, [])\n\n    topThree.reduce((a,
        b) =&gt; a + b, 0)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Devtools
        Javascript solution.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const topThree =
        document.getElementsByTagName(&amp;#39;pre&amp;#39;)[0]\n.innerText.split(&amp;#39;\\n\\n&amp;#39;)\n.reduce((maxArr,
        curr, index) =&amp;gt; {\n     return [...maxArr, eval(curr.trim().replaceAll(&amp;#39;\\n&amp;#39;,
        &amp;#39;+&amp;#39;))].sort((a, b) =&amp;gt; a - b).slice(-3)\n }, [])\n\ntopThree.reduce((a,
        b) =&amp;gt; a + b, 0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyihj07/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyihj07", "created": 1669915692.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_z9ezjb", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "iyijcur", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": false, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 5, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_iyijcur", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyijcur/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669916399.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669916399.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyiygej", "id": "iyiygej", "parent_id":
        "t1_iyijcur", "depth": 1, "children": ["iyiygej"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj3ots",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ReasonableCause",
        "can_mod_post": false, "created_utc": 1669924335.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_3gkm6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell:\n\n    module Day01\n    (day01_1, day01_2)\n    where\n    \n    import
        Data.List.Extra (split, sort)\n    \n    parse::String-&gt;[[Int]]\n    parse
        = map (map read) . split null . lines\n    \n    day01_1::String-&gt;String\n    day01_1
        = show . maximum . map sum . parse\n    \n    day01_2::String-&gt;String\n    day01_2
        = show . sum . take 3 . reverse . sort . map sum . parse", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Day01\n(day01_1, day01_2)\nwhere\n\nimport Data.List.Extra (split, sort)\n\nparse::String-&amp;gt;[[Int]]\nparse
        = map (map read) . split null . lines\n\nday01_1::String-&amp;gt;String\nday01_1
        = show . maximum . map sum . parse\n\nday01_2::String-&amp;gt;String\nday01_2
        = show . sum . take 3 . reverse . sort . map sum . parse\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj3ots/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj3ots", "created":
        1669924335.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670831689.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjg3qu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "reckter",
        "can_mod_post": false, "created_utc": 1669929015.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_97xjz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "`intcode`!\n\nBecause somebody had to!\n\n    109, 125, 203, 1, 1201, 1,
        0, 113, 1101, 0, 0, 114, 1101, 0, 0, 115,\n    1101, 0, 0, 116, 1101, 0, 0,
        117, 1101, 0, 0, 118, 7, 114, 113, 119, \n    1006, 119, 107, 203, 1, 1201,
        1, 0, 120, 1008, 120, 10, 119, 1006, \n    119, 84, 1008, 115, 0, 121, 1006,
        121, 73, 7, 118, 117, 122, 1006, \n    122, 66, 1001, 117, 0, 118, 1101, 0,
        0, 117, 1106, 0, 77, 1, 117, \n    115, 117, 1101, 0, 0, 115, 1106, 0, 96,
        1002, 115, 10, 123, 1001,    \n    120, -48, 124, 1, 123, 124, 115, 1001,
        114, 1, 114, 7, 114, 113, 119, \n    1005, 119, 35, 4, 118, 99, 104, -99000,
        \n    99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n\nOk I cheated. a while ago
        I wrote a compiler, that compiles the following:\n\n                val length
        = input()\n                \n                val i = 0\n                val
        current = 0\n                val result = 0\n                val currentTroll
        = 0\n                val max = 0\n                while(i &lt; length) {\n                    val
        in = input()\n                    if (in == 10) { // line break\n                        if
        (current == 0) {\n                            if (max &lt; currentTroll) {\n                                max
        = currentTroll\n                            }\n                            currentTroll
        = 0\n                        } else {\n                            currentTroll
        = currentTroll + current\n                        }\n                        current
        = 0\n                    } else {\n                        current = current
        * 10 + (in - 48) // char to int\n                    }\n                    i
        = i + 1\n                }\n                output(max)\n\nInto an assembler
        language, and that then into the intcode above. For input, it just reads my
        input file character for character", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;code&gt;intcode&lt;/code&gt;!&lt;/p&gt;\n\n&lt;p&gt;Because
        somebody had to!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;109, 125, 203, 1, 1201,
        1, 0, 113, 1101, 0, 0, 114, 1101, 0, 0, 115,\n1101, 0, 0, 116, 1101, 0, 0,
        117, 1101, 0, 0, 118, 7, 114, 113, 119, \n1006, 119, 107, 203, 1, 1201, 1,
        0, 120, 1008, 120, 10, 119, 1006, \n119, 84, 1008, 115, 0, 121, 1006, 121,
        73, 7, 118, 117, 122, 1006, \n122, 66, 1001, 117, 0, 118, 1101, 0, 0, 117,
        1106, 0, 77, 1, 117, \n115, 117, 1101, 0, 0, 115, 1106, 0, 96, 1002, 115,
        10, 123, 1001,    \n120, -48, 124, 1, 123, 124, 115, 1001, 114, 1, 114, 7,
        114, 113, 119, \n1005, 119, 35, 4, 118, 99, 104, -99000, \n99, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Ok I cheated.
        a while ago I wrote a compiler, that compiles the following:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;            val
        length = input()\n\n            val i = 0\n            val current = 0\n            val
        result = 0\n            val currentTroll = 0\n            val max = 0\n            while(i
        &amp;lt; length) {\n                val in = input()\n                if (in
        == 10) { // line break\n                    if (current == 0) {\n                        if
        (max &amp;lt; currentTroll) {\n                            max = currentTroll\n                        }\n                        currentTroll
        = 0\n                    } else {\n                        currentTroll =
        currentTroll + current\n                    }\n                    current
        = 0\n                } else {\n                    current = current * 10
        + (in - 48) // char to int\n                }\n                i = i + 1\n            }\n            output(max)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Into
        an assembler language, and that then into the intcode above. For input, it
        just reads my input file character for character&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjg3qu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjg3qu", "created":
        1669929015.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyk33f5", "id": "iyk33f5", "parent_id":
        "t1_iyjg3qu", "depth": 1, "children": ["iyk33f5", "iyq3o9z"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669929617.0, "mod_reason_by": null,
        "banned_by": null, "ups": 6, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjglih", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "OptimusSupernova",
        "can_mod_post": false, "created_utc": 1669929203.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 6, "author_fullname": "t2_nhcdqc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# with Linq\n\n    public static int Solve(string input, int elfCount)\n    {\n        return
        input.Split(\"\\r\\n\\r\\n\")\n            .Select(x =&gt; x.Split(\"\\r\\n\"))\n            .Select(x
        =&gt; x.Select(y =&gt; Convert.ToInt32(y)).Sum())\n            .OrderByDescending(x
        =&gt; x)\n            .Take(elfCount)\n            .Sum();\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;C# with Linq&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        static int Solve(string input, int elfCount)\n{\n    return input.Split(&amp;quot;\\r\\n\\r\\n&amp;quot;)\n        .Select(x
        =&amp;gt; x.Split(&amp;quot;\\r\\n&amp;quot;))\n        .Select(x =&amp;gt;
        x.Select(y =&amp;gt; Convert.ToInt32(y)).Sum())\n        .OrderByDescending(x
        =&amp;gt; x)\n        .Take(elfCount)\n        .Sum();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjglih/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjglih", "created":
        1669929203.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjhoro",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "bofstein",
        "can_mod_post": false, "created_utc": 1669929623.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_du257", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Google Sheets**\n\nAs a non-programmer working with a lot of software engineers
        participating (I''m a Technical Product Manager), I thought it would be fun
        to use Google Sheets formulas.  I made sure it worked more like code in that
        the goal was that it can auto-update without manual intervention with new
        inputs, e.g. no hand-dividing columns or using the menus.  Only catch is you
        do need to (manually) make sure the B and C column formulas are copied down
        at least as long as the number of items in the list.\n\n&amp;#x200B;\n\nHere
        is the sheet with formulas.  Input just needs to be pasted into Column A:
        [https://docs.google.com/spreadsheets/d/1GvncohBzffewfwOCIfpHutI4VKVUIBazIH1XoBFWpXw/edit?usp=sharing](https://docs.google.com/spreadsheets/d/1GvncohBzffewfwOCIfpHutI4VKVUIBazIH1XoBFWpXw/edit?usp=sharing)\n\n&amp;#x200B;\n\nColumn
        B: `=COUNTIF($A$1:A1,\"\")`\n\nThis column counts how many blank rows there
        have been so far so that it groups the items together into a single number,
        starting at 0, of what number elf that is.\n\nColumn C: `=SUMIF(B:B,ROW(B1)-1,A:A)`\n\nThis
        row gets the sum of each unique elf.  It takes the row number minus one so
        that it''s just a list in order from 0 to the number of elves (will start
        to output 0 after the number of elves is finished) and returns the sum of
        column A values matching that number.\n\nCell D1: `=MAX(C:C)` \n\nThis returns
        the first part solution, the highest number from Column C.\n\nCell D2: `=LARGE(C:C,1)+LARGE(C:C,2)+LARGE(C:C,3)`\n\nThis
        returns the second part solution, the top 3 values from Column C summed. Learned
        a new function to do this, LARGE returns the nth highest value from an array
        instead of just the highest like MAX.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Google Sheets&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;As
        a non-programmer working with a lot of software engineers participating (I&amp;#39;m
        a Technical Product Manager), I thought it would be fun to use Google Sheets
        formulas.  I made sure it worked more like code in that the goal was that
        it can auto-update without manual intervention with new inputs, e.g. no hand-dividing
        columns or using the menus.  Only catch is you do need to (manually) make
        sure the B and C column formulas are copied down at least as long as the number
        of items in the list.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Here
        is the sheet with formulas.  Input just needs to be pasted into Column A:
        &lt;a href=\"https://docs.google.com/spreadsheets/d/1GvncohBzffewfwOCIfpHutI4VKVUIBazIH1XoBFWpXw/edit?usp=sharing\"&gt;https://docs.google.com/spreadsheets/d/1GvncohBzffewfwOCIfpHutI4VKVUIBazIH1XoBFWpXw/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Column
        B: &lt;code&gt;=COUNTIF($A$1:A1,&amp;quot;&amp;quot;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        column counts how many blank rows there have been so far so that it groups
        the items together into a single number, starting at 0, of what number elf
        that is.&lt;/p&gt;\n\n&lt;p&gt;Column C: &lt;code&gt;=SUMIF(B:B,ROW(B1)-1,A:A)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        row gets the sum of each unique elf.  It takes the row number minus one so
        that it&amp;#39;s just a list in order from 0 to the number of elves (will
        start to output 0 after the number of elves is finished) and returns the sum
        of column A values matching that number.&lt;/p&gt;\n\n&lt;p&gt;Cell D1: &lt;code&gt;=MAX(C:C)&lt;/code&gt;
        &lt;/p&gt;\n\n&lt;p&gt;This returns the first part solution, the highest number
        from Column C.&lt;/p&gt;\n\n&lt;p&gt;Cell D2: &lt;code&gt;=LARGE(C:C,1)+LARGE(C:C,2)+LARGE(C:C,3)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        returns the second part solution, the top 3 values from Column C summed. Learned
        a new function to do this, LARGE returns the nth highest value from an array
        instead of just the highest like MAX.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjhoro/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyjhoro", "created": 1669929623.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 5, "name":
        "t1_iyq3jcm", "id": "iyq3jcm", "parent_id": "t1_iyjhoro", "depth": 1, "children":
        ["iyq3jcm", "iyjkwbd", "iyjrlr2"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjnnkz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "TanteiKody",
        "can_mod_post": false, "created_utc": 1669931969.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_1i2diz1e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        ".NET LINQ (C#) Solution. It feels like cheating:\n\n    var rawValueList
        = File.ReadAllText(\"./inputs/day_one.txt\");\n    \n    var parsedElves =
        rawValueList\n        .Split(\"\\n\\n\")\n        .Select(e =&gt; \n            e.Split(\"\\n\")\n                .Select(int.Parse)\n                .Sum())\n        .Order()\n        .TakeLast(3)\n        .ToList();\n    \n    parsedElves\n        .Max()\n        .Display(\"Elf
        with most calories\");\n    \n    parsedElves\n        .Sum()\n        .Display(\"Sum
        of top three elves with most calories\");\n    \n    \n    \n    internal
        static class Utils\n    {\n        public static void Display(this object
        finalValue, string title) \n            =&gt; Console.WriteLine($\"{title}:
        {finalValue}\");\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;.NET
        LINQ (C#) Solution. It feels like cheating:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        rawValueList = File.ReadAllText(&amp;quot;./inputs/day_one.txt&amp;quot;);\n\nvar
        parsedElves = rawValueList\n    .Split(&amp;quot;\\n\\n&amp;quot;)\n    .Select(e
        =&amp;gt; \n        e.Split(&amp;quot;\\n&amp;quot;)\n            .Select(int.Parse)\n            .Sum())\n    .Order()\n    .TakeLast(3)\n    .ToList();\n\nparsedElves\n    .Max()\n    .Display(&amp;quot;Elf
        with most calories&amp;quot;);\n\nparsedElves\n    .Sum()\n    .Display(&amp;quot;Sum
        of top three elves with most calories&amp;quot;);\n\n\n\ninternal static class
        Utils\n{\n    public static void Display(this object finalValue, string title)
        \n        =&amp;gt; Console.WriteLine($&amp;quot;{title}: {finalValue}&amp;quot;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjnnkz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjnnkz", "created":
        1669931969.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyjqykc", "id": "iyjqykc", "parent_id":
        "t1_iyjnnkz", "depth": 1, "children": ["iyjqykc", "iyk2q6x"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670974218.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjpreq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Ily3s_",
        "can_mod_post": false, "created_utc": 1669932849.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_h6v9v420", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C](https://github.com/Ily3s/AoC2022/blob/master/src/days/d01/day1.c) (nothing
        special there)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/Ily3s/AoC2022/blob/master/src/days/d01/day1.c\"&gt;C&lt;/a&gt;
        (nothing special there)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjpreq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjpreq", "created":
        1669932849.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyk8plu", "id": "iyk8plu", "parent_id":
        "t1_iyjpreq", "depth": 1, "children": ["iyk8plu"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk5mru",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SwampThingTom",
        "can_mod_post": false, "created_utc": 1669939761.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_zy2vn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m solving each of this year''s puzzles in a different language, roughly
        in the order that I learned them. First up, BASIC.\n\nhttps://github.com/SwampThingTom/AoC2022/tree/main/01-CalorieCounting",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m solving
        each of this year&amp;#39;s puzzles in a different language, roughly in the
        order that I learned them. First up, BASIC.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/SwampThingTom/AoC2022/tree/main/01-CalorieCounting\"&gt;https://github.com/SwampThingTom/AoC2022/tree/main/01-CalorieCounting&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk5mru/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk5mru", "created":
        1669939761.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iykbfku", "id": "iykbfku", "parent_id":
        "t1_iyk5mru", "depth": 1, "children": ["iykbfku"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykbxca",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gonengazit",
        "can_mod_post": false, "created_utc": 1669942675.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_isz7t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# brainfuck\n\n[copy.sh link](https://copy.sh/brainfuck/?c=Pis8IHNldCBjdXJyZW50IG1heGltdW0gdG8gMSAoaGFjayBiZWNhdXNlIG1heCgpIGRvZXNuJ3QgaGFuZGxlIDAgY29ycmVjdGx5KQorWwpbLV0KPj4-Pj4-Pj4KdGhlIGZvbGxvd2luZyB3aWxsIGNhbGN1bGF0ZSB0aGUgdmFsdWUgZm9yIGEgc2luZ2xlIGVsZgp0aGUgdmFsdWUgd2lsbCBiZSAxIGNlbGwgcmlnaHQgb2YgdGhlIHBvaW50ZXIKb25lX2VsZl9jb2RleworIG91dGVyX2xvb3BfZmxhZz0xClsKLT4-PiBvdXRlcl9sb29wX2ZsYWc9MAoKaGFuZGxlIGZpcnN0IGNoYXJhY3RlciBzZXBlcmF0ZWx5OyBiYXNpY2FsbHkgYWxyZWFkeSBsb2FkaW5nIGl0IGludG8gdGhlIGZpcnN0IGRpZ2l0OyBpZiBpdCdzIG5vdCBhIG5ld2xpbmUKPj4-LCBpbnB1dAotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQppZiB0aGUgaW5wdXQgaXNuJ3QgbmV3bGluZSAKWyAKPDw8PDw8PDw8PDw8PDwrPj4-Pj4-Pj4-Pj4-Pj4gb3V0ZXN0X2xvb3BfZmxhZz0xCi0tLS0tLS0tLS0tLS0tLS0KCjw8PCs-Pj4gc2V0IHRoZSBuZXh0IGxvb3AncyBmbGFnCm1vdmUgZGlnaXQgdG8gY29ycmVjdCBwbGFjZSAoY2VsbCA2KQpbPCs-LV0KCjw8PDw8PCs-Pj4-Pj4gb3V0ZXJfbG9vcF9mbGFnPTEKCl0KPDw8ClsKLSBsb29wX2ZsYWc9MAo-Pj4sIGlucHV0Ci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmlmIHRoZSBpbnB1dCBpc24ndCBuZXdsaW5lIApbLS0tLS0tLS0tLS0tLS0tLQpub3JtYWxpemUgCk11bHRpcGx5IGN1cnIgYnkgMTAKPApbLTwrKysrKysrKysrPl0KPFstPis8XT4KPlstPCs-XQoKPDw8Kz4-PiBsb29wX2ZsYWc9MQoKXQoKPDw8CgpdCgphZGQgdGhlIGlucHV0IHZhbHVlIHRvIHRoZSBjdXJyZW50IHN1bQo-PgpbLTw8PDwrPj4-Pl0KPDw8PDwKXQo-Cn0KY29weSBjdXJyZW50IHZhbCBuZXh0IHRvIG1heGltdW0KWy08PDw8PDw8Kz4-Pj4-Pj5dCjw8PDw8PDw8CgoKdXBkYXRlIHRoZSBtYXhpbXVtOgoKY2FsY3VsYXRlcyBtYXhpbXVtCmEgaXMgY2VsbCAwCmIgaXMgY2VsbCAxCmNlbGxzIDAgdG8gNSBzaG91bGQgYmUgZW1wdHkKCm1heHsKbW92ZSBhIHRvIGNlbGwgMSBhbmQgYiB0byBjZWxsIDQKPlstPj4-Kzw8PF0KPApbLT4rPF0KPgoKWwoKc3VidHJhY3QgMSBmcm9tIGIgaWYgaXQgaXMgbm9uIDAKPj4-ClstWz4rPC1dXQo-Wy08Kz5dPAo8PDwKCjwrPi0gCj4rPFs-LV0-Wz5dCnN1YnRyYWN0IDEgZnJvbSBhCnNldCBmbGFnIHRvIDEgaWZmIGEgaXMgMAoKaWYgZmxhZyBpcyAxIG1vdmUgYiB0byBhCjxbPj5bLTw8PCs-Pj5dPDwtXQoKPApdCjwKfQo8Cl0KPg$$)\n\nminified:\n\n    &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;----------------&lt;&lt;&lt;+&gt;&gt;&gt;[&lt;+&gt;-]&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;[-&gt;&gt;&gt;,--------------------\n        ------------[----------------&lt;[-&lt;++++++++++&gt;]&lt;[-&gt;+&lt;]&gt;&gt;[-&lt;+&gt;]&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;&lt;]&gt;&gt;[-&lt;&lt;&lt;&lt;\n        +&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;]&gt;[-&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;+&lt;&lt;&lt;]&lt;[-&gt;+&lt;]&gt;[&gt;&gt;&gt;[-[&gt;+&lt;-]]&gt;[-&lt;+&gt;]&lt;&lt;&lt;&lt;\n        &lt;+&gt;-&gt;+&lt;[&gt;-]&gt;[&gt;]&lt;[&gt;&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;-]&lt;]&lt;&lt;]&gt;\n\nInput
        replaces newlines with spaces, and ends on 3 spaces. the solution will be
        in cell 1 (tomorrow i''ll work on printing it). make sure to run in 32-bit
        mode, i didn''t want to bother with any big-integer\n\nthis was a pain to
        do, but i''m glad i did it", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;brainfuck&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://copy.sh/brainfuck/?c=Pis8IHNldCBjdXJyZW50IG1heGltdW0gdG8gMSAoaGFjayBiZWNhdXNlIG1heCgpIGRvZXNuJ3QgaGFuZGxlIDAgY29ycmVjdGx5KQorWwpbLV0KPj4-Pj4-Pj4KdGhlIGZvbGxvd2luZyB3aWxsIGNhbGN1bGF0ZSB0aGUgdmFsdWUgZm9yIGEgc2luZ2xlIGVsZgp0aGUgdmFsdWUgd2lsbCBiZSAxIGNlbGwgcmlnaHQgb2YgdGhlIHBvaW50ZXIKb25lX2VsZl9jb2RleworIG91dGVyX2xvb3BfZmxhZz0xClsKLT4-PiBvdXRlcl9sb29wX2ZsYWc9MAoKaGFuZGxlIGZpcnN0IGNoYXJhY3RlciBzZXBlcmF0ZWx5OyBiYXNpY2FsbHkgYWxyZWFkeSBsb2FkaW5nIGl0IGludG8gdGhlIGZpcnN0IGRpZ2l0OyBpZiBpdCdzIG5vdCBhIG5ld2xpbmUKPj4-LCBpbnB1dAotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQppZiB0aGUgaW5wdXQgaXNuJ3QgbmV3bGluZSAKWyAKPDw8PDw8PDw8PDw8PDwrPj4-Pj4-Pj4-Pj4-Pj4gb3V0ZXN0X2xvb3BfZmxhZz0xCi0tLS0tLS0tLS0tLS0tLS0KCjw8PCs-Pj4gc2V0IHRoZSBuZXh0IGxvb3AncyBmbGFnCm1vdmUgZGlnaXQgdG8gY29ycmVjdCBwbGFjZSAoY2VsbCA2KQpbPCs-LV0KCjw8PDw8PCs-Pj4-Pj4gb3V0ZXJfbG9vcF9mbGFnPTEKCl0KPDw8ClsKLSBsb29wX2ZsYWc9MAo-Pj4sIGlucHV0Ci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmlmIHRoZSBpbnB1dCBpc24ndCBuZXdsaW5lIApbLS0tLS0tLS0tLS0tLS0tLQpub3JtYWxpemUgCk11bHRpcGx5IGN1cnIgYnkgMTAKPApbLTwrKysrKysrKysrPl0KPFstPis8XT4KPlstPCs-XQoKPDw8Kz4-PiBsb29wX2ZsYWc9MQoKXQoKPDw8CgpdCgphZGQgdGhlIGlucHV0IHZhbHVlIHRvIHRoZSBjdXJyZW50IHN1bQo-PgpbLTw8PDwrPj4-Pl0KPDw8PDwKXQo-Cn0KY29weSBjdXJyZW50IHZhbCBuZXh0IHRvIG1heGltdW0KWy08PDw8PDw8Kz4-Pj4-Pj5dCjw8PDw8PDw8CgoKdXBkYXRlIHRoZSBtYXhpbXVtOgoKY2FsY3VsYXRlcyBtYXhpbXVtCmEgaXMgY2VsbCAwCmIgaXMgY2VsbCAxCmNlbGxzIDAgdG8gNSBzaG91bGQgYmUgZW1wdHkKCm1heHsKbW92ZSBhIHRvIGNlbGwgMSBhbmQgYiB0byBjZWxsIDQKPlstPj4-Kzw8PF0KPApbLT4rPF0KPgoKWwoKc3VidHJhY3QgMSBmcm9tIGIgaWYgaXQgaXMgbm9uIDAKPj4-ClstWz4rPC1dXQo-Wy08Kz5dPAo8PDwKCjwrPi0gCj4rPFs-LV0-Wz5dCnN1YnRyYWN0IDEgZnJvbSBhCnNldCBmbGFnIHRvIDEgaWZmIGEgaXMgMAoKaWYgZmxhZyBpcyAxIG1vdmUgYiB0byBhCjxbPj5bLTw8PCs-Pj5dPDwtXQoKPApdCjwKfQo8Cl0KPg$$\"&gt;copy.sh
        link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;minified:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;----------------&amp;lt;&amp;lt;&amp;lt;+&amp;gt;&amp;gt;&amp;gt;[&amp;lt;+&amp;gt;-]&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;+&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;]&amp;lt;&amp;lt;&amp;lt;[-&amp;gt;&amp;gt;&amp;gt;,--------------------\n    ------------[----------------&amp;lt;[-&amp;lt;++++++++++&amp;gt;]&amp;lt;[-&amp;gt;+&amp;lt;]&amp;gt;&amp;gt;[-&amp;lt;+&amp;gt;]&amp;lt;&amp;lt;&amp;lt;+&amp;gt;&amp;gt;&amp;gt;]&amp;lt;&amp;lt;&amp;lt;]&amp;gt;&amp;gt;[-&amp;lt;&amp;lt;&amp;lt;&amp;lt;\n    +&amp;gt;&amp;gt;&amp;gt;&amp;gt;]&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;]&amp;gt;[-&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;+&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;]&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;[-&amp;gt;&amp;gt;&amp;gt;+&amp;lt;&amp;lt;&amp;lt;]&amp;lt;[-&amp;gt;+&amp;lt;]&amp;gt;[&amp;gt;&amp;gt;&amp;gt;[-[&amp;gt;+&amp;lt;-]]&amp;gt;[-&amp;lt;+&amp;gt;]&amp;lt;&amp;lt;&amp;lt;&amp;lt;\n    &amp;lt;+&amp;gt;-&amp;gt;+&amp;lt;[&amp;gt;-]&amp;gt;[&amp;gt;]&amp;lt;[&amp;gt;&amp;gt;[-&amp;lt;&amp;lt;&amp;lt;+&amp;gt;&amp;gt;&amp;gt;]&amp;lt;&amp;lt;-]&amp;lt;]&amp;lt;&amp;lt;]&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Input
        replaces newlines with spaces, and ends on 3 spaces. the solution will be
        in cell 1 (tomorrow i&amp;#39;ll work on printing it). make sure to run in
        32-bit mode, i didn&amp;#39;t want to bother with any big-integer&lt;/p&gt;\n\n&lt;p&gt;this
        was a pain to do, but i&amp;#39;m glad i did it&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykbxca/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykbxca", "created":
        1669942675.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iypyn3j", "id": "iypyn3j", "parent_id":
        "t1_iykbxca", "depth": 1, "children": ["iypyn3j"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyknwo6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "0rac1e",
        "can_mod_post": false, "created_utc": 1669948272.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_jqvvy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# BQN\n\n    \u27e8lf,Split,ToNats\u27e9 \u2190 \u2022Import \"strings.bqn\"\n    \u2022Show
        0\u203f2\u22b8\u228f +` \u2228 +\u00b4\u2218ToNats\u00a8 lf\u203flf Split
        \u2022Fchars \"input\"\n\nOne more array language solution to go with my [J](https://www.reddit.com/r/adventofcode/comments/z9ezjb/comment/iygo26j)
        and [APL](https://www.reddit.com/r/adventofcode/comments/z9ezjb/comment/iyhm1al)
        solutions.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;BQN&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;\u27e8lf,Split,ToNats\u27e9
        \u2190 \u2022Import &amp;quot;strings.bqn&amp;quot;\n\u2022Show 0\u203f2\u22b8\u228f
        +` \u2228 +\u00b4\u2218ToNats\u00a8 lf\u203flf Split \u2022Fchars &amp;quot;input&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;One
        more array language solution to go with my &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/z9ezjb/comment/iygo26j\"&gt;J&lt;/a&gt;
        and &lt;a href=\"https://www.reddit.com/r/adventofcode/comments/z9ezjb/comment/iyhm1al\"&gt;APL&lt;/a&gt;
        solutions.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyknwo6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyknwo6", "created":
        1669948272.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iymaugp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "johan1a",
        "can_mod_post": false, "created_utc": 1669987958.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_unj0ve88", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rockstar (part 1 only)\n\n\n    Rock the Reindeer\n\n    Your elf is an xmas
        rocker!\n    Listen to the snowman\n    Until Your elf is mysterious\n    If
        the snowman is silent\n    Listen to the snowman\n\n    If the snowman is
        silent\n    Your elf is mysterious\n\n    Our gingerbread is celebrated\n    Until
        the snowman is mysterious\n    Burn the snowman\n    Put the snowman plus
        our gingerbread into our gingerbread\n    Rock the reindeer with our gingerbread\n    Listen
        to the snowman\n\n    The snowball is christmastide without ice\n\n    Until
        the Reindeer is bountiful with blessedness\n    Let the sugarcane be roll
        the Reindeer\n    If the sugarcane is stronger than the snowball\n    Put
        the sugarcane into the snowball\n\n\n    Put the snowball into Christmas\n\n    Shout
        Christmas!\n\n[https://github.com/johan1a/advent-of-code-2022-rockstar](https://github.com/johan1a/advent-of-code-2022-rockstar)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rockstar (part 1 only)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Rock
        the Reindeer\n\nYour elf is an xmas rocker!\nListen to the snowman\nUntil
        Your elf is mysterious\nIf the snowman is silent\nListen to the snowman\n\nIf
        the snowman is silent\nYour elf is mysterious\n\nOur gingerbread is celebrated\nUntil
        the snowman is mysterious\nBurn the snowman\nPut the snowman plus our gingerbread
        into our gingerbread\nRock the reindeer with our gingerbread\nListen to the
        snowman\n\nThe snowball is christmastide without ice\n\nUntil the Reindeer
        is bountiful with blessedness\nLet the sugarcane be roll the Reindeer\nIf
        the sugarcane is stronger than the snowball\nPut the sugarcane into the snowball\n\n\nPut
        the snowball into Christmas\n\nShout Christmas!\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/johan1a/advent-of-code-2022-rockstar\"&gt;https://github.com/johan1a/advent-of-code-2022-rockstar&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymaugp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iymaugp", "created":
        1669987958.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyqmrnp", "id": "iyqmrnp", "parent_id":
        "t1_iymaugp", "depth": 1, "children": ["iyqmrnp"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 9, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyglilp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "wjholden",
        "can_mod_post": false, "created_utc": 1669874390.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 9, "author_fullname": "t2_pbiewcp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m learning Go this year in preparation for a class next semester where
        we will use it. Unfortunately, my Golang textbook still hasn''t arrived. I
        did this completely cold and had to Google everything (\"go dynamic array\",
        \"go sort array\", \"go sum array\", and so on). \n\nHaving used high-level
        languages like Python, Julia, Mathematica, and even Java 8+ in the past few
        years, Go feels painfully low-level right now.\n\nhttps://github.com/wjholden/Advent-of-Code-2022/blob/main/01/01.go\n\nI
        would greatly value any feedback from those of you who actually know Go!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m learning
        Go this year in preparation for a class next semester where we will use it.
        Unfortunately, my Golang textbook still hasn&amp;#39;t arrived. I did this
        completely cold and had to Google everything (&amp;quot;go dynamic array&amp;quot;,
        &amp;quot;go sort array&amp;quot;, &amp;quot;go sum array&amp;quot;, and so
        on). &lt;/p&gt;\n\n&lt;p&gt;Having used high-level languages like Python,
        Julia, Mathematica, and even Java 8+ in the past few years, Go feels painfully
        low-level right now.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/wjholden/Advent-of-Code-2022/blob/main/01/01.go\"&gt;https://github.com/wjholden/Advent-of-Code-2022/blob/main/01/01.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        would greatly value any feedback from those of you who actually know Go!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglilp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyglilp", "created":
        1669874390.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyglqhz", "id": "iyglqhz", "parent_id":
        "t1_iyglilp", "depth": 1, "children": ["iyglqhz", "iygnmtm", "iyhdixm", "iygmpop"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyggugi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "aliceif",
        "can_mod_post": false, "created_utc": 1669871433.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_m4w9f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#, 190/118\nNever could have hoped to get a rank this low on a busy day\n\n[repo
        link](https://dev.azure.com/aliceif/AdventOfCodes/_git/AdventOfCodes?path=/advent2022/day01cs)\n\nThanks
        to my Helpers class I''ve built in my 3 years of participation containing
        tools for extracting line separated blocks and number conversion!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;C#, 190/118\nNever could have hoped to get
        a rank this low on a busy day&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://dev.azure.com/aliceif/AdventOfCodes/_git/AdventOfCodes?path=/advent2022/day01cs\"&gt;repo
        link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Thanks to my Helpers class I&amp;#39;ve
        built in my 3 years of participation containing tools for extracting line
        separated blocks and number conversion!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggugi/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyggugi", "created": 1669871433.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyghhwb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Tipa16384", "can_mod_post": false, "created_utc":
        1669871828.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_fw2ff", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**Python**\n\n# okay let''s-a
        go\n\n    with open(\"puzzle1.dat\", \"r\") as f:\n        data = [sum(int(x)
        for x in line.split()) for line in f.read().split(\"\\n\\n\")]\n\n    print
        (\"Part 1:\", max(data))\n    print (\"Part 2:\", sum(sorted(data, reverse=True)[:3]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;h1&gt;okay
        let&amp;#39;s-a go&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;with open(&amp;quot;puzzle1.dat&amp;quot;,
        &amp;quot;r&amp;quot;) as f:\n    data = [sum(int(x) for x in line.split())
        for line in f.read().split(&amp;quot;\\n\\n&amp;quot;)]\n\nprint (&amp;quot;Part
        1:&amp;quot;, max(data))\nprint (&amp;quot;Part 2:&amp;quot;, sum(sorted(data,
        reverse=True)[:3]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghhwb/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyghhwb", "created": 1669871828.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyghtgr", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Imaginary_Age_4072", "can_mod_post":
        false, "created_utc": 1669872019.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 4, "author_fullname": "t2_3dl4j1cb", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "[Common Lisp](https://github.com/blake-watkins/advent-of-code-2022/blob/main/day1.lisp)
        2468/2489\n\n&amp;#x200B;\n\nYay, it''s AoC time again :)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/blake-watkins/advent-of-code-2022/blob/main/day1.lisp\"&gt;Common
        Lisp&lt;/a&gt; 2468/2489&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Yay,
        it&amp;#39;s AoC time again :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghtgr/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyghtgr", "created": 1669872019.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygibnn", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "ccQpein", "can_mod_post": false, "created_utc":
        1669872326.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 4,
        "author_fullname": "t2_mgz32", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "common lisp: \n\n```lisp\n;;;;
        tools\n(ql:quickload \"str\")\n(defun read-file-by-line (filepath)\n  \"read
        file line by line, return a list of file\"\n  (uiop:read-file-lines filepath)\n  )\n;;;;;\n\n(defun
        common-part (input)\n  (let ((cache ''())\n\t\t(elves ''()))\n\t(dolist (line
        input elves)\n\t  (if (string= \"\" line)\n\t\t  (progn (push cache elves)\n\t\t\t\t
        (setf cache nil))\n\t\t  (push (str::parse-integer line) cache)))))\n\n(defun
        day1 ()\n  (let* ((input (read-file-by-line \"../inputs/day1.input\"))\n\t\t
        (elves (common-part input)))\n\t(car (sort (mapcar (lambda (a) (apply #''+
        a)) elves) #''&gt;))\n\t))\n\n(defun day1-part2 ()\n  (let* ((input (read-file-by-line
        \"../inputs/day1.input\"))\n\t\t (elves (common-part input)))\n\t(apply #''+
        (subseq (sort (mapcar (lambda (a) (apply #''+ a)) elves) #''&gt;) 0 3))\n\t))\n\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;common lisp: &lt;/p&gt;\n\n&lt;p&gt;```lisp\n;;;;
        tools\n(ql:quickload &amp;quot;str&amp;quot;)\n(defun read-file-by-line (filepath)\n  &amp;quot;read
        file line by line, return a list of file&amp;quot;\n  (uiop:read-file-lines
        filepath)\n  )\n;;;;;&lt;/p&gt;\n\n&lt;p&gt;(defun common-part (input)\n  (let
        ((cache &amp;#39;())\n        (elves &amp;#39;()))\n    (dolist (line input
        elves)\n      (if (string= &amp;quot;&amp;quot; line)\n          (progn (push
        cache elves)\n                 (setf cache nil))\n          (push (str::parse-integer
        line) cache)))))&lt;/p&gt;\n\n&lt;p&gt;(defun day1 ()\n  (let* ((input (read-file-by-line
        &amp;quot;../inputs/day1.input&amp;quot;))\n         (elves (common-part input)))\n    (car
        (sort (mapcar (lambda (a) (apply #&amp;#39;+ a)) elves) #&amp;#39;&amp;gt;))\n    ))&lt;/p&gt;\n\n&lt;p&gt;(defun
        day1-part2 ()\n  (let* ((input (read-file-by-line &amp;quot;../inputs/day1.input&amp;quot;))\n         (elves
        (common-part input)))\n    (apply #&amp;#39;+ (subseq (sort (mapcar (lambda
        (a) (apply #&amp;#39;+ a)) elves) #&amp;#39;&amp;gt;) 0 3))\n    ))&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygibnn/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygibnn", "created":
        1669872326.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygiges", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Rust:[https://github.com/sreedevk/advent-of-code/blob/main/rust/solutions-2022/src/day1/mod.rs](https://github.com/sreedevk/advent-of-code/blob/main/rust/solutions-2022/src/day1/mod.rs)\n\n    use
        itertools::Itertools;\n\n    fn solve1() -&gt; String {\n        let data
        = std::fs::read_to_string(\"data/main/2022/day1.txt\").unwrap();\n        let
        solution = data\n            .trim()\n            .split(\"\\n\\n\")\n            .map(|elf|
        { \n                elf\n                    .split(\"\\n\")\n                    .map(|meal|
        usize::from_str_radix(meal.trim(), 10).unwrap())\n                    .fold(0,
        |count, item| count + item)\n            })\n            .max();\n    \n        String::from(format!(\"{:?}\",
        solution.unwrap()))\n    }\n    \n    fn solve2() -&gt; String {\n        let
        data = std::fs::read_to_string(\"data/main/2022/day1.txt\").unwrap();\n        let
        solution = data.trim().split(\"\\n\\n\").map(|elf| { \n            elf\n                .split(\"\\n\")\n                .map(|meal|
        usize::from_str_radix(meal.trim(), 10).unwrap())\n                .fold(0,
        |count, item| count + item)\n        })\n        .sorted()\n        .rev()\n        .take(3)\n        .sum::&lt;usize&gt;();\n    \n        String::from(format!(\"{:?}\",
        solution))\n    }", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygiges", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust:&lt;a href=\"https://github.com/sreedevk/advent-of-code/blob/main/rust/solutions-2022/src/day1/mod.rs\"&gt;https://github.com/sreedevk/advent-of-code/blob/main/rust/solutions-2022/src/day1/mod.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        itertools::Itertools;\n\nfn solve1() -&amp;gt; String {\n    let data = std::fs::read_to_string(&amp;quot;data/main/2022/day1.txt&amp;quot;).unwrap();\n    let
        solution = data\n        .trim()\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|elf|
        { \n            elf\n                .split(&amp;quot;\\n&amp;quot;)\n                .map(|meal|
        usize::from_str_radix(meal.trim(), 10).unwrap())\n                .fold(0,
        |count, item| count + item)\n        })\n        .max();\n\n    String::from(format!(&amp;quot;{:?}&amp;quot;,
        solution.unwrap()))\n}\n\nfn solve2() -&amp;gt; String {\n    let data = std::fs::read_to_string(&amp;quot;data/main/2022/day1.txt&amp;quot;).unwrap();\n    let
        solution = data.trim().split(&amp;quot;\\n\\n&amp;quot;).map(|elf| { \n        elf\n            .split(&amp;quot;\\n&amp;quot;)\n            .map(|meal|
        usize::from_str_radix(meal.trim(), 10).unwrap())\n            .fold(0, |count,
        item| count + item)\n    })\n    .sorted()\n    .rev()\n    .take(3)\n    .sum::&amp;lt;usize&amp;gt;();\n\n    String::from(format!(&amp;quot;{:?}&amp;quot;,
        solution))\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygiges/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1669872408.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1669872408.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygigso",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mcmillhj",
        "can_mod_post": false, "created_utc": 1669872414.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_nyxfu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Raku:  \n\n```\nmy @calorie-groups = ''input''.IO.slurp.split(\"\\n\\n\");\n\n#
        part1 \n# 1. compute calorie count for each subgroup \n# 2. find the maximum
        calorie count\nsay max @calorie-groups.map({ [+] .split(\"\\n\") });\n\n#
        part 2\n# 1. compute calorie count for each subgroup \n# 2. sort calorie counts
        numerically in descending order\n# 3. collect the first 3 elements (3 highest
        calorie counts)\n# 4. sum the 3 highest calorie counts\nsay [+] @calorie-groups.map({
        [+] .split(\"\\n\") }).sort({$^b &lt;=&gt; $^a})[0..2]\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Raku:  &lt;/p&gt;\n\n&lt;p&gt;```\nmy @calorie-groups
        = &amp;#39;input&amp;#39;.IO.slurp.split(&amp;quot;\\n\\n&amp;quot;);&lt;/p&gt;\n\n&lt;h1&gt;part1&lt;/h1&gt;\n\n&lt;h1&gt;1.
        compute calorie count for each subgroup&lt;/h1&gt;\n\n&lt;h1&gt;2. find the
        maximum calorie count&lt;/h1&gt;\n\n&lt;p&gt;say max @calorie-groups.map({
        [+] .split(&amp;quot;\\n&amp;quot;) });&lt;/p&gt;\n\n&lt;h1&gt;part 2&lt;/h1&gt;\n\n&lt;h1&gt;1.
        compute calorie count for each subgroup&lt;/h1&gt;\n\n&lt;h1&gt;2. sort calorie
        counts numerically in descending order&lt;/h1&gt;\n\n&lt;h1&gt;3. collect
        the first 3 elements (3 highest calorie counts)&lt;/h1&gt;\n\n&lt;h1&gt;4.
        sum the 3 highest calorie counts&lt;/h1&gt;\n\n&lt;p&gt;say [+] @calorie-groups.map({
        [+] .split(&amp;quot;\\n&amp;quot;) }).sort({$&lt;sup&gt;b&lt;/sup&gt; &amp;lt;=&amp;gt;
        $&lt;sup&gt;a})[0..2]&lt;/sup&gt;\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygigso/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygigso", "created": 1669872414.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iym4b7w", "id": "iym4b7w", "parent_id": "t1_iygigso", "depth": 1, "children":
        ["iym4b7w"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygix60", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "2013LIPK01",
        "can_mod_post": false, "created_utc": 1669872699.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_aijq5h1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# R\n\nSolution with thoughts here: https://adventofcode.guslipkin.me/2022/01/2022-01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;R&lt;/h1&gt;\n\n&lt;p&gt;Solution
        with thoughts here: &lt;a href=\"https://adventofcode.guslipkin.me/2022/01/2022-01\"&gt;https://adventofcode.guslipkin.me/2022/01/2022-01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygix60/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygix60", "created":
        1669872699.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygixyt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "e36freak92",
        "can_mod_post": false, "created_utc": 1669872713.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_i9lje", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "AWK (175/657)\n\nBoth parts:\n\n    BEGIN {\n        RS = \"\";\n    }\n    {\n        tot
        = 0;\n        for (f=1; f&lt;=NF; f++) tot += $f;\n        totals[NR] = tot;\n    }\n    END
        {\n        len = asort(totals);\n        for (i=len; i&gt;len-3; i--) p2 +=
        totals[i];\n        print totals[len], p2;\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;AWK (175/657)&lt;/p&gt;\n\n&lt;p&gt;Both parts:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;BEGIN
        {\n    RS = &amp;quot;&amp;quot;;\n}\n{\n    tot = 0;\n    for (f=1; f&amp;lt;=NF;
        f++) tot += $f;\n    totals[NR] = tot;\n}\nEND {\n    len = asort(totals);\n    for
        (i=len; i&amp;gt;len-3; i--) p2 += totals[i];\n    print totals[len], p2;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygixyt/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygixyt", "created":
        1669872713.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygjbqv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mendelmunkis",
        "can_mod_post": false, "created_utc": 1669872959.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_96rj7khp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [C](https://github.com/mendelmunkis/AoC/blob/master/2022/calories.c)\nSimple
        but effective.\n \n^(0.372/0.392 ms)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://github.com/mendelmunkis/AoC/blob/master/2022/calories.c\"&gt;C&lt;/a&gt;&lt;/h1&gt;\n\n&lt;p&gt;Simple
        but effective.&lt;/p&gt;\n\n&lt;p&gt;&lt;sup&gt;0.372/0.392 ms&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjbqv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjbqv", "created":
        1669872959.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyh73ln", "id": "iyh73ln", "parent_id":
        "t1_iygjbqv", "depth": 1, "children": ["iyh73ln"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygm2io",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "flwyd",
        "can_mod_post": false, "created_utc": 1669874764.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_4x5am2k0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "*Elixir*, [source on GitHub](https://github.com/flwyd/adventofcode/blob/main/2022/day1/day1.exs)\n\nI
        knew that having my code template take input as a list of strings (one per
        line) would be awkward when there was a separated-by-blank-lines input.  I
        didn''t expect that to come on Day 1, though.  So my first Elixir learning
        experience was how to use `Enum.chunk_while`.  The code cleanup exercise was
        also good practice for writing functions as argument matchers rather than
        a single function with if blocks, and also let me replace the separate `after_fn`
        with a curried blank line.\n\n    defmodule Day1 do\n      def part1(input)
        do\n        Enum.max(sum_chunks(input))\n      end\n\n      def part2(input)
        do\n        Enum.sort(sum_chunks(input), :desc) |&gt; Enum.take(3) |&gt; Enum.sum()\n      end\n\n      defp
        sum_chunks(input), do: Enum.chunk_while(input, [], &amp;chunk_lines/2, &amp;(chunk_lines(\"\",
        &amp;1)))\n\n      defp chunk_lines(\"\", []), do: {:cont, []} # ignore excess
        blanks, just in case\n      defp chunk_lines(\"\", acc), do: {:cont, Enum.sum(acc),
        []}\n      defp chunk_lines(number, acc), do: {:cont, [String.to_integer(number)
        | acc]}\n    end", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;Elixir&lt;/em&gt;,
        &lt;a href=\"https://github.com/flwyd/adventofcode/blob/main/2022/day1/day1.exs\"&gt;source
        on GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I knew that having my code template
        take input as a list of strings (one per line) would be awkward when there
        was a separated-by-blank-lines input.  I didn&amp;#39;t expect that to come
        on Day 1, though.  So my first Elixir learning experience was how to use &lt;code&gt;Enum.chunk_while&lt;/code&gt;.  The
        code cleanup exercise was also good practice for writing functions as argument
        matchers rather than a single function with if blocks, and also let me replace
        the separate &lt;code&gt;after_fn&lt;/code&gt; with a curried blank line.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        Day1 do\n  def part1(input) do\n    Enum.max(sum_chunks(input))\n  end\n\n  def
        part2(input) do\n    Enum.sort(sum_chunks(input), :desc) |&amp;gt; Enum.take(3)
        |&amp;gt; Enum.sum()\n  end\n\n  defp sum_chunks(input), do: Enum.chunk_while(input,
        [], &amp;amp;chunk_lines/2, &amp;amp;(chunk_lines(&amp;quot;&amp;quot;, &amp;amp;1)))\n\n  defp
        chunk_lines(&amp;quot;&amp;quot;, []), do: {:cont, []} # ignore excess blanks,
        just in case\n  defp chunk_lines(&amp;quot;&amp;quot;, acc), do: {:cont, Enum.sum(acc),
        []}\n  defp chunk_lines(number, acc), do: {:cont, [String.to_integer(number)
        | acc]}\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygm2io/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygm2io", "created": 1669874764.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iygqsmz", "id": "iygqsmz", "parent_id": "t1_iygm2io", "depth": 1, "children":
        ["iygqsmz"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygm5ma", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "CryptoNoobStruggles",
        "can_mod_post": false, "created_utc": 1669874824.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_c5qxry3r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First time doing Advent of Code! Imporving my [Python](https://github.com/Jordan1995-git/AdventOfCode2022/blob/main/2022_d1.py).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First time doing Advent
        of Code! Imporving my &lt;a href=\"https://github.com/Jordan1995-git/AdventOfCode2022/blob/main/2022_d1.py\"&gt;Python&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygm5ma/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygm5ma", "created":
        1669874824.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_iygm7vm", "id": "iygm7vm", "parent_id":
        "t1_iygm5ma", "depth": 1, "children": ["iygm7vm", "iygxtud"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygm78r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "kuqumi",
        "can_mod_post": false, "created_utc": 1669874855.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_1ujr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# JavaScript console golf\n\n    [a,b,c]=$(\"pre\").innerText.trim().split`n\\n`.map(x=&gt;x.split`\\n`.reduce((a,c)=&gt;a+(+c),0)).sort((a,b)=&gt;b-a);[a,a+b+c]",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;JavaScript console
        golf&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;[a,b,c]=$(&amp;quot;pre&amp;quot;).innerText.trim().split`n\\n`.map(x=&amp;gt;x.split`\\n`.reduce((a,c)=&amp;gt;a+(+c),0)).sort((a,b)=&amp;gt;b-a);[a,a+b+c]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygm78r/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygm78r", "created":
        1669874855.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyjbq5s", "id": "iyjbq5s", "parent_id":
        "t1_iygm78r", "depth": 1, "children": ["iyjbq5s"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygnbrd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "sim642",
        "can_mod_post": false, "created_utc": 1669875646.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_49npq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My **Scala** solution](https://github.com/sim642/adventofcode/blob/master/src/main/scala/eu/sim642/adventofcode2022/Day1.scala).\n\nStraightforward
        chained application of various functional list functions.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/sim642/adventofcode/blob/master/src/main/scala/eu/sim642/adventofcode2022/Day1.scala\"&gt;My
        &lt;strong&gt;Scala&lt;/strong&gt; solution&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Straightforward
        chained application of various functional list functions.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnbrd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygnbrd", "created":
        1669875646.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyh5hi8", "id": "iyh5hi8", "parent_id":
        "t1_iygnbrd", "depth": 1, "children": ["iyh5hi8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669876918.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygnv45", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "honest3d",
        "can_mod_post": false, "created_utc": 1669876033.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_3hepprdu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Swift:\n\n    public final class Day1: Day {\n    let input: [Int]\n\n    public
        init(input: String) {\n        self.input = input\n            .components(separatedBy:
        \"\\n\\n\")\n            .map{\n                $0\n                    .components(separatedBy:
        \"\\n\")\n                    .compactMap{Int($0)}.reduce(0,+)\n            }\n            .sorted(by:
        &gt;)\n    }\n\n    public func part1() -&gt; Int {\n        return self.input.first!\n    }\n\n    public
        func part2() -&gt; Int {\n        return self.input[..&lt;3].reduce(0,+)\n    }\n}\n\nedit:
        refactored", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Swift:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        final class Day1: Day {\nlet input: [Int]\n\npublic init(input: String) {\n    self.input
        = input\n        .components(separatedBy: &amp;quot;\\n\\n&amp;quot;)\n        .map{\n            $0\n                .components(separatedBy:
        &amp;quot;\\n&amp;quot;)\n                .compactMap{Int($0)}.reduce(0,+)\n        }\n        .sorted(by:
        &amp;gt;)\n}\n\npublic func part1() -&amp;gt; Int {\n    return self.input.first!\n}\n\npublic
        func part2() -&amp;gt; Int {\n    return self.input[..&amp;lt;3].reduce(0,+)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;edit:
        refactored&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnv45/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygnv45", "created":
        1669876033.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygpogb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sykner809",
        "can_mod_post": false, "created_utc": 1669877371.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_ojhfpusf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Desmos** \\- We''ll see how far I can get this year!\n\n[https://www.desmos.com/calculator/bffndksjps](https://www.desmos.com/calculator/bffndksjps)\n\n*
        Answers are computed at the bottom (scroll all the way down on the left pane)\n*
        Input has been processed through a text editor with find and replace, to replace
        empty newlines with zeros, since copy pasting the raw input into Desmos ignores
        the empty lines.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Desmos&lt;/strong&gt;
        - We&amp;#39;ll see how far I can get this year!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.desmos.com/calculator/bffndksjps\"&gt;https://www.desmos.com/calculator/bffndksjps&lt;/a&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Answers
        are computed at the bottom (scroll all the way down on the left pane)&lt;/li&gt;\n&lt;li&gt;Input
        has been processed through a text editor with find and replace, to replace
        empty newlines with zeros, since copy pasting the raw input into Desmos ignores
        the empty lines.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygpogb/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygpogb", "created": 1669877371.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygsj3n", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "Mats56", "can_mod_post": false, "created_utc":
        1669879599.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 4,
        "author_fullname": "t2_a7kz2", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Kotlin rank ~1000, was done
        in 4 minutes.\n\nPart1:\n\n```\nreturn lines\n    .splitBy { it == \"\" }\n    .map
        { strings -&gt; strings.sumOf { it.toInt() } }\n    .max()\n```\n\nPart2:\n\n```\nreturn
        lines\n    .splitBy { it == \"\" }\n    .map { strings -&gt; strings.sumOf
        { it.toInt() } }\n    .sortedDescending()\n    .take(3)\n    .sum()\n```\n\nsplitBy
        is a util function I have, an extension function that takes in a list and
        a predicate, and returns a list of lists split around that.\n\n```\nfun &lt;E&gt;
        List&lt;E&gt;.splitBy(predicate: (E) -&gt; Boolean): List&lt;List&lt;E&gt;&gt;
        =\n    this.fold(mutableListOf(mutableListOf&lt;E&gt;())) { acc, element -&gt;\n        if
        (predicate.invoke(element)) {\n            acc += mutableListOf&lt;E&gt;()\n        }
        else {\n            acc.last() += element\n        }\n        acc\n    }\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin rank ~1000, was
        done in 4 minutes.&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nreturn
        lines\n    .splitBy { it == &amp;quot;&amp;quot; }\n    .map { strings -&amp;gt;
        strings.sumOf { it.toInt() } }\n    .max()\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nreturn
        lines\n    .splitBy { it == &amp;quot;&amp;quot; }\n    .map { strings -&amp;gt;
        strings.sumOf { it.toInt() } }\n    .sortedDescending()\n    .take(3)\n    .sum()\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;splitBy
        is a util function I have, an extension function that takes in a list and
        a predicate, and returns a list of lists split around that.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nfun
        &amp;lt;E&amp;gt; List&amp;lt;E&amp;gt;.splitBy(predicate: (E) -&amp;gt; Boolean):
        List&amp;lt;List&amp;lt;E&amp;gt;&amp;gt; =\n    this.fold(mutableListOf(mutableListOf&amp;lt;E&amp;gt;()))
        { acc, element -&amp;gt;\n        if (predicate.invoke(element)) {\n            acc
        += mutableListOf&amp;lt;E&amp;gt;()\n        } else {\n            acc.last()
        += element\n        }\n        acc\n    }\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygsj3n/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygsj3n", "created":
        1669879599.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygv81u", "id": "iygv81u", "parent_id":
        "t1_iygsj3n", "depth": 1, "children": ["iygv81u"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669904868.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygst2e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "solareon",
        "can_mod_post": false, "created_utc": 1669879827.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_3czv5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Done in Excel on iPad. Traveling for a couple days so had to use what I got.
        Turns out that dynamic ranges on the iPad version don\u2019t work quite the
        same as desktop excel.\n\nPart 1 - ISBLANK() to look left and add above or
        put a zero. MAX() the whole column and done\nPart 2 - IF() zero then print
        above or put a zero. SORT() descending on the column, SUM(), done.\n\nEdit:\nWent
        back an optimized to utilize a single helper column and removal of the blank
        starter row with ISERROR and INDIRECT(ADDRESS()) to generate the answers in
        one cell each.\n\nSolutions are posted here on [GitHub](https://github.com/solareon/aoc-excel-2022)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Done in Excel on iPad.
        Traveling for a couple days so had to use what I got. Turns out that dynamic
        ranges on the iPad version don\u2019t work quite the same as desktop excel.&lt;/p&gt;\n\n&lt;p&gt;Part
        1 - ISBLANK() to look left and add above or put a zero. MAX() the whole column
        and done\nPart 2 - IF() zero then print above or put a zero. SORT() descending
        on the column, SUM(), done.&lt;/p&gt;\n\n&lt;p&gt;Edit:\nWent back an optimized
        to utilize a single helper column and removal of the blank starter row with
        ISERROR and INDIRECT(ADDRESS()) to generate the answers in one cell each.&lt;/p&gt;\n\n&lt;p&gt;Solutions
        are posted here on &lt;a href=\"https://github.com/solareon/aoc-excel-2022\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygst2e/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygst2e", "created":
        1669879827.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iytke9r", "id": "iytke9r", "parent_id":
        "t1_iygst2e", "depth": 1, "children": ["iytke9r"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygtexq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Red__Pixel",
        "can_mod_post": false, "created_utc": 1669880327.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_28rp8qsh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "5 lines of Python: https://gitlab.com/RedPixel/aoc2022/-/blob/main/day1/day1.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;5 lines of Python: &lt;a
        href=\"https://gitlab.com/RedPixel/aoc2022/-/blob/main/day1/day1.py\"&gt;https://gitlab.com/RedPixel/aoc2022/-/blob/main/day1/day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtexq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygtexq", "created":
        1669880327.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyh2nia", "id": "iyh2nia", "parent_id":
        "t1_iygtexq", "depth": 1, "children": ["iyh2nia"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygvgm6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "clouddjr",
        "can_mod_post": false, "created_utc": 1669882062.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_1505cu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### Kotlin\n\n    class Day01(input: String) {\n        private val elves
        = input.split(\"\\n\\n\").map { group -&gt; Elf(group.split(\"\\n\").map {
        it.toInt() }) }\n    \n        fun solvePart1() = elves.maxOf { it.calories.sum()
        }\n    \n        fun solvePart2() = elves.map { it.calories.sum() }.sortedDescending().take(3).sum()\n    \n        private
        data class Elf(val calories: List&lt;Int&gt;)\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h3&gt;Kotlin&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        Day01(input: String) {\n    private val elves = input.split(&amp;quot;\\n\\n&amp;quot;).map
        { group -&amp;gt; Elf(group.split(&amp;quot;\\n&amp;quot;).map { it.toInt()
        }) }\n\n    fun solvePart1() = elves.maxOf { it.calories.sum() }\n\n    fun
        solvePart2() = elves.map { it.calories.sum() }.sortedDescending().take(3).sum()\n\n    private
        data class Elf(val calories: List&amp;lt;Int&amp;gt;)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygvgm6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygvgm6", "created":
        1669882062.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669922028.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygvva1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "i_have_no_biscuits",
        "can_mod_post": false, "created_utc": 1669882416.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_qbkju5j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "GW-BASIC\n\n\n  \n    10 OPEN \"I\", 1, \"2022-01.txt\": A=B=C=CAL=0: WHILE
        NOT EOF(1)                    \n    20 LINE INPUT #1,S$: IF LEN(S$)&gt;0 THEN
        CAL=CAL+VAL(S$) ELSE GOSUB 40: CAL=0     \n    30 WEND: GOSUB 40: PRINT \"PART
        1:\", A, \"PART 2:\", A+B+C: END                    \n    40 IF CAL&gt;A THEN
        C=B: B=A: A=CAL: RETURN                                        \n    50 IF
        CAL&gt;B THEN C=B: B=CAL: RETURN                                             \n    60
        IF CAL&gt;C THEN C=CAL: RETURN ELSE RETURN \n  \n\n  \nI guess I''m back to
        doing this again... (haven''t posted for a year so I''ve forgotten how to
        format code!)\n\nEdit: Looks like I''ve figured it out and as a bonus I''ve
        reduced the code down to 6 lines. Now even more readable!", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;GW-BASIC&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;10
        OPEN &amp;quot;I&amp;quot;, 1, &amp;quot;2022-01.txt&amp;quot;: A=B=C=CAL=0:
        WHILE NOT EOF(1)                    \n20 LINE INPUT #1,S$: IF LEN(S$)&amp;gt;0
        THEN CAL=CAL+VAL(S$) ELSE GOSUB 40: CAL=0     \n30 WEND: GOSUB 40: PRINT &amp;quot;PART
        1:&amp;quot;, A, &amp;quot;PART 2:&amp;quot;, A+B+C: END                    \n40
        IF CAL&amp;gt;A THEN C=B: B=A: A=CAL: RETURN                                        \n50
        IF CAL&amp;gt;B THEN C=B: B=CAL: RETURN                                             \n60
        IF CAL&amp;gt;C THEN C=CAL: RETURN ELSE RETURN \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        guess I&amp;#39;m back to doing this again... (haven&amp;#39;t posted for
        a year so I&amp;#39;ve forgotten how to format code!)&lt;/p&gt;\n\n&lt;p&gt;Edit:
        Looks like I&amp;#39;ve figured it out and as a bonus I&amp;#39;ve reduced
        the code down to 6 lines. Now even more readable!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygvva1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygvva1", "created":
        1669882416.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygw0eo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "axr123",
        "can_mod_post": false, "created_utc": 1669882540.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_5cuakppd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Python\n\nWhat''s nice about those first problems is that you can typically
        do them in very little code:\n\n    cals = sorted([sum(map(int, elf.split(\"\\n\")))
        for elf in open(\"input\").read().strip().split(\"\\n\\n\")])\n    print(cals[-1])\n    print(sum(cals[-3:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Python&lt;/h2&gt;\n\n&lt;p&gt;What&amp;#39;s
        nice about those first problems is that you can typically do them in very
        little code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;cals = sorted([sum(map(int,
        elf.split(&amp;quot;\\n&amp;quot;))) for elf in open(&amp;quot;input&amp;quot;).read().strip().split(&amp;quot;\\n\\n&amp;quot;)])\nprint(cals[-1])\nprint(sum(cals[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygw0eo/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygw0eo", "created":
        1669882540.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iygwtfj", "id": "iygwtfj", "parent_id":
        "t1_iygw0eo", "depth": 1, "children": ["iygwtfj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygw4pj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "dholmes215",
        "can_mod_post": false, "created_utc": 1669882644.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_12pfni", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++ with Ranges (no loops)\n\nhttps://github.com/dholmes215/adventofcode-cpp/blob/main/src/2022/day01.cpp",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C++ with Ranges (no
        loops)&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/dholmes215/adventofcode-cpp/blob/main/src/2022/day01.cpp\"&gt;https://github.com/dholmes215/adventofcode-cpp/blob/main/src/2022/day01.cpp&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygw4pj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygw4pj", "created":
        1669882644.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669883483.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygwq3y", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jummit",
        "can_mod_post": false, "created_utc": 1669883151.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_np7ofsr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Custom language (OtomeScript)\n\n    function cals (read ''calories)\n    function
        elvcals (split{sep=\"\\n\\n\"} cals)\n    function addcal (+ (split $1))\n    function
        sumcal (sort (give !addcal elvcals))\n    sumcal\n    + (resize (reverse sumcal)
        3)\n\nI thought I''d do AOC in my custom language I started writing a few
        days ago to test how mature it is. I''m surprised how well it worked!\n\nInterestingly,
        it''s pretty similar to u/mstksg''s solution.\n\nIf anyone has questions regarding
        the language, I''m happy to explain the weird parts.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Custom language (OtomeScript)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        cals (read &amp;#39;calories)\nfunction elvcals (split{sep=&amp;quot;\\n\\n&amp;quot;}
        cals)\nfunction addcal (+ (split $1))\nfunction sumcal (sort (give !addcal
        elvcals))\nsumcal\n+ (resize (reverse sumcal) 3)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        thought I&amp;#39;d do AOC in my custom language I started writing a few days
        ago to test how mature it is. I&amp;#39;m surprised how well it worked!&lt;/p&gt;\n\n&lt;p&gt;Interestingly,
        it&amp;#39;s pretty similar to &lt;a href=\"/u/mstksg\"&gt;u/mstksg&lt;/a&gt;&amp;#39;s
        solution.&lt;/p&gt;\n\n&lt;p&gt;If anyone has questions regarding the language,
        I&amp;#39;m happy to explain the weird parts.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygwq3y/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygwq3y", "created": 1669883151.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 7, "name":
        "t1_iyh3pc9", "id": "iyh3pc9", "parent_id": "t1_iygwq3y", "depth": 1, "children":
        ["iyh3pc9", "iygxgah"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygxk18", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "synack", "can_mod_post": false, "created_utc":
        1669883891.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_304so", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Ada https://github.com/JeremyGrosser/advent/blob/master/2022/src/day1_2.adb",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ada &lt;a href=\"https://github.com/JeremyGrosser/advent/blob/master/2022/src/day1_2.adb\"&gt;https://github.com/JeremyGrosser/advent/blob/master/2022/src/day1_2.adb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygxk18/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygxk18", "created":
        1669883891.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669885013.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygxthu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Diderikdm",
        "can_mod_post": false, "created_utc": 1669884128.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_552bks37", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python:**\n\n    with open(\"Advent-of-Code-2022\\day01.txt\", \"r\") as
        file:\n        data = sorted(sum(int(y) for y in x.splitlines()) for x in
        file.read().split(\"\\n\\n\"))\n        print(data[-1])\n        print(sum(data[-3:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;Advent-of-Code-2022\\day01.txt&amp;quot;, &amp;quot;r&amp;quot;)
        as file:\n    data = sorted(sum(int(y) for y in x.splitlines()) for x in file.read().split(&amp;quot;\\n\\n&amp;quot;))\n    print(data[-1])\n    print(sum(data[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygxthu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygxthu", "created":
        1669884128.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygxxq2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "MyTinyHappyPlace",
        "can_mod_post": false, "created_utc": 1669884237.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4qv22pcy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C++**\n\nNo extra AoC speedrun-libraries, just plain C++.\n\n    #include
        &lt;iostream&gt;\n    #include &lt;string&gt;\n    #include &lt;algorithm&gt;\n    #include
        &lt;vector&gt;\n\n    using namespace std;\n\n    int main(){\n        vector&lt;int&gt;
        elfs;\n        int sum = 0;\n        for(string l; getline(cin,l);){\n                if(l.empty()){\n                        elfs.push_back(sum);\n                        sum
        = 0;\n                }\n                else\n                        sum
        += stoi(l);\n        }\n        sort(elfs.begin(), elfs.end());\n        cout
        &lt;&lt; *(elfs.end()-1) &lt;&lt; endl;\n        cout &lt;&lt; (*(elfs.end()-1))+(*(elfs.end()-2))+(*(elfs.end()-3))
        &lt;&lt; endl;\n        return 0;\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;No
        extra AoC speedrun-libraries, just plain C++.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;string&amp;gt;\n#include &amp;lt;algorithm&amp;gt;\n#include
        &amp;lt;vector&amp;gt;\n\nusing namespace std;\n\nint main(){\n    vector&amp;lt;int&amp;gt;
        elfs;\n    int sum = 0;\n    for(string l; getline(cin,l);){\n            if(l.empty()){\n                    elfs.push_back(sum);\n                    sum
        = 0;\n            }\n            else\n                    sum += stoi(l);\n    }\n    sort(elfs.begin(),
        elfs.end());\n    cout &amp;lt;&amp;lt; *(elfs.end()-1) &amp;lt;&amp;lt; endl;\n    cout
        &amp;lt;&amp;lt; (*(elfs.end()-1))+(*(elfs.end()-2))+(*(elfs.end()-3)) &amp;lt;&amp;lt;
        endl;\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygxxq2/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygxxq2", "created": 1669884237.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_iyh3kwa", "id": "iyh3kwa", "parent_id": "t1_iygxxq2", "depth": 1, "children":
        ["iyh3kwa"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygywj5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "soylentgreenistasty",
        "can_mod_post": false, "created_utc": 1669885116.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_4yghr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n    import re\n    \n    with open(''day1.txt'') as f:\n        A
        = [sum(map(int, re.findall(''\\d+'', block))) for block in f.read().split(''\\n\\n'')]\n    \n    p1
        = max(A)\n    p2 = sum(sorted(A, reverse=True)[:3])\n    print(p1)\n    print(p2)\n\nWonderful
        to see so many familiar names... :) Happy holidays and happy solving everyone.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        re\n\nwith open(&amp;#39;day1.txt&amp;#39;) as f:\n    A = [sum(map(int, re.findall(&amp;#39;\\d+&amp;#39;,
        block))) for block in f.read().split(&amp;#39;\\n\\n&amp;#39;)]\n\np1 = max(A)\np2
        = sum(sorted(A, reverse=True)[:3])\nprint(p1)\nprint(p2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Wonderful
        to see so many familiar names... :) Happy holidays and happy solving everyone.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygywj5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygywj5", "created":
        1669885116.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygz1v6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SneakyB4stardSword",
        "can_mod_post": false, "created_utc": 1669885252.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_ioxa8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution, in common lisp (using uiop for file i/o, and serapium for string
        splitting)\n\n    ;;;; Day 1: Calorie Counting\n    (in-package :AoC)\n    \n    (defparameter
        *day1-input* #P\"../inputs/01.txt\")\n    \n    (defun run-day1 ()\n      (let
        ((input (uiop:read-file-string *day1-input*)))\n        (format t \"Part 1:
        ~a~%\" (day1-part1 input))\n        (format t \"Part 2: ~a~%\" (day1-part2
        input))))\n    \n    (defun get-elves-list (input)\n      \"turn an input
        string into a list of each elf''s calorie sum\" \n      (let ((input-lines
        (serapium:lines input))\n            (elves ''(0)))\n        (map ''list\n          (lambda
        (sub)\n            (if (equal sub \"\")\n                (push 0 elves)\n                (setf
        (car elves)\n                      (+ (car elves)\n                         (parse-integer
        sub)))))\n          input-lines)\n        elves))\n    \n    (defun day1-part1
        (input)\n      (apply #''max (get-elves-list input)))\n    \n    (defun day1-part2
        (input)\n      (let* ((elves (get-elves-list input))\n             (elf-count
        (length elves)))\n        (apply #''+ (nbutlast (sort elves #''&gt;)\n                             (-
        elf-count 3)))))\n    \n    (run-day1)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My solution, in common lisp (using uiop for file
        i/o, and serapium for string splitting)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;;;;;
        Day 1: Calorie Counting\n(in-package :AoC)\n\n(defparameter *day1-input* #P&amp;quot;../inputs/01.txt&amp;quot;)\n\n(defun
        run-day1 ()\n  (let ((input (uiop:read-file-string *day1-input*)))\n    (format
        t &amp;quot;Part 1: ~a~%&amp;quot; (day1-part1 input))\n    (format t &amp;quot;Part
        2: ~a~%&amp;quot; (day1-part2 input))))\n\n(defun get-elves-list (input)\n  &amp;quot;turn
        an input string into a list of each elf&amp;#39;s calorie sum&amp;quot; \n  (let
        ((input-lines (serapium:lines input))\n        (elves &amp;#39;(0)))\n    (map
        &amp;#39;list\n      (lambda (sub)\n        (if (equal sub &amp;quot;&amp;quot;)\n            (push
        0 elves)\n            (setf (car elves)\n                  (+ (car elves)\n                     (parse-integer
        sub)))))\n      input-lines)\n    elves))\n\n(defun day1-part1 (input)\n  (apply
        #&amp;#39;max (get-elves-list input)))\n\n(defun day1-part2 (input)\n  (let*
        ((elves (get-elves-list input))\n         (elf-count (length elves)))\n    (apply
        #&amp;#39;+ (nbutlast (sort elves #&amp;#39;&amp;gt;)\n                         (-
        elf-count 3)))))\n\n(run-day1)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygz1v6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygz1v6", "created":
        1669885252.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh0j37",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Aminumbra",
        "can_mod_post": false, "created_utc": 1669886617.0, "send_replies": true,
        "parent_id": "t1_iygz1v6", "score": 6, "author_fullname": "t2_4kkhinrb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Small tips/good practice stuff that actually might be useful later, as input
        files get larger/problems become more complex:  \n\n- Don''t use `(apply #''max
        list)`, use `(reduce #''max list)` instead (same thing for `+ * min` etc)
        . Those functions can take a variable number of arguments, but there is a
        limit on the maximal nuber of arguments, which could be quite low (and it
        is slower anyway). On the other hand, `reduce` always calls the function with
        two arguments.\n\n- Using `reduce` and its optional parameters means that
        your solution for part 2 can be written as  \n\n```\n(reduce #''+ (sort elves
        #''&gt;) :end 3)\n```\nThis avoids uneeded traversal of the list (one needed
        for computing the length, another one for the `nbutlast`).", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Small tips/good practice stuff that actually
        might be useful later, as input files get larger/problems become more complex:  &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Don&amp;#39;t
        use &lt;code&gt;(apply #&amp;#39;max list)&lt;/code&gt;, use &lt;code&gt;(reduce
        #&amp;#39;max list)&lt;/code&gt; instead (same thing for &lt;code&gt;+ * min&lt;/code&gt;
        etc) . Those functions can take a variable number of arguments, but there
        is a limit on the maximal nuber of arguments, which could be quite low (and
        it is slower anyway). On the other hand, &lt;code&gt;reduce&lt;/code&gt; always
        calls the function with two arguments.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Using
        &lt;code&gt;reduce&lt;/code&gt; and its optional parameters means that your
        solution for part 2 can be written as  &lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;code&gt;\n(reduce
        #&amp;#39;+ (sort elves #&amp;#39;&amp;gt;) :end 3)\n&lt;/code&gt;\nThis avoids
        uneeded traversal of the list (one needed for computing the length, another
        one for the &lt;code&gt;nbutlast&lt;/code&gt;).&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh0j37/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh0j37", "created":
        1669886617.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyhwki8", "id": "iyhwki8", "parent_id":
        "t1_iyh0j37", "depth": 2, "children": ["iyhwki8", "iyixkvw"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670148098.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh1ocu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "CreativeTaste3040",
        "can_mod_post": false, "created_utc": 1669887678.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_j9awxujo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript:\n\n    const fs = require(''fs'')\n    \n    fs.readFile(''./day1.txt'',
        (err, data) =&gt; {\n      let [first, second, third] = String(data).replace(/(.*)(\\r\\n|\\n|\\r)/gm,
        ''$1,'').split('',,'').map(elf =&gt; {\n        return elf.split('','').reduce((prev,
        next) =&gt; prev + Number(next), 0)\n      }).sort((a,b) =&gt; b -a)\n    \n      console.log(first)\n      console.log(first
        + second + third)\n    })", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        fs = require(&amp;#39;fs&amp;#39;)\n\nfs.readFile(&amp;#39;./day1.txt&amp;#39;,
        (err, data) =&amp;gt; {\n  let [first, second, third] = String(data).replace(/(.*)(\\r\\n|\\n|\\r)/gm,
        &amp;#39;$1,&amp;#39;).split(&amp;#39;,,&amp;#39;).map(elf =&amp;gt; {\n    return
        elf.split(&amp;#39;,&amp;#39;).reduce((prev, next) =&amp;gt; prev + Number(next),
        0)\n  }).sort((a,b) =&amp;gt; b -a)\n\n  console.log(first)\n  console.log(first
        + second + third)\n})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh1ocu/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyh1ocu", "created": 1669887678.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyugob1", "id": "iyugob1", "parent_id": "t1_iyh1ocu", "depth": 1, "children":
        ["iyugob1"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh24ub", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Python oneliner (2 if you count the import)\n\n    from
        functools import reduce\n    reduce(lambda x,y: x + [x[-1] + y], sorted(map(lambda
        x: sum(map(int, x.split(\"\\n\"))), open(\"day1.txt\").read().strip().split(\"\\n\\n\")),
        reverse=True), [0])[1:5:2]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyh24ub", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python oneliner (2 if you count the import)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        functools import reduce\nreduce(lambda x,y: x + [x[-1] + y], sorted(map(lambda
        x: sum(map(int, x.split(&amp;quot;\\n&amp;quot;))), open(&amp;quot;day1.txt&amp;quot;).read().strip().split(&amp;quot;\\n\\n&amp;quot;)),
        reverse=True), [0])[1:5:2]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh24ub/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669888100.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669888100.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyh54xo", "id": "iyh54xo", "parent_id":
        "t1_iyh24ub", "depth": 1, "children": ["iyh54xo"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670142230.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh2nsp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "htrowii",
        "can_mod_post": false, "created_utc": 1669888591.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_2jy8rh0t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This was my first time participating in AOC2022 as a noob in Python.  \nMy
        solution:\n\n    listNum = []\n    sumNumber = 0\n    with open(\"day1input.txt\",''r'')
        as readfile:\n        for line in readfile:\n            if line.strip():\n                sumNumber
        += int(line)\n                listNum.append(sumNumber)\n            else:\n                listNum.append(sumNumber)\n                sumNumber
        = 0\n    \n    print(\"the highest number is \" + str(max(listNum)))\n    \n    #part
        2\n    #sort from largest to smallest\n    listNum.sort(reverse=True)\n    top3sum
        = listNum[0] + listNum[2] + listNum[4]\n    print(\"the sum of the three highest
        calories is \" + str(top3sum))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;This was my first time participating in AOC2022 as
        a noob in Python.&lt;br/&gt;\nMy solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;listNum
        = []\nsumNumber = 0\nwith open(&amp;quot;day1input.txt&amp;quot;,&amp;#39;r&amp;#39;)
        as readfile:\n    for line in readfile:\n        if line.strip():\n            sumNumber
        += int(line)\n            listNum.append(sumNumber)\n        else:\n            listNum.append(sumNumber)\n            sumNumber
        = 0\n\nprint(&amp;quot;the highest number is &amp;quot; + str(max(listNum)))\n\n#part
        2\n#sort from largest to smallest\nlistNum.sort(reverse=True)\ntop3sum = listNum[0]
        + listNum[2] + listNum[4]\nprint(&amp;quot;the sum of the three highest calories
        is &amp;quot; + str(top3sum))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh2nsp/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyh2nsp", "created": 1669888591.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iyugltk", "id": "iyugltk", "parent_id": "t1_iyh2nsp", "depth": 1, "children":
        ["iyugltk"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669889267.0,
        "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh2pvn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "AvshalomHeironymous",
        "can_mod_post": false, "created_utc": 1669888646.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_yiz5m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Ciao Prolog**\n\nThis year I''mma just gonna do them all in Ciao instead
        of trying to make sure they work in SWI/Scryer/Ciao/GNU. As usual I expect
        to get about a dozen days in before this stops feeling like a game and starts
        feeling like work but until then!\n\nThis is just the solution, pastebin below
        for something you could put in a file and run:\n\n    line([]) --&gt; (\"\\n\"|eos),
        !.\n    line([C|Cs]) --&gt; [C], line(Cs).\n    eos --&gt; call(eos_).\n    eos_([],
        []).\n    \n    %---------------------------------------------------%\n    %DAY
        1\n    day1_elf([]) --&gt; (\"\\n\"|eos),!.\n    day1_elf([C|CL]) --&gt; line(X),{number_codes(C,X)},
        day1_elf(CL).\n    day1_input([]) --&gt; [].\n    day1_input([E|EL]) --&gt;
        day1_elf(E), day1_input(EL).\n    day1 :-\n        file_to_string(''inputd1'',Id1),\n        day1_input(Elves,Id1,[]),\n        maplist(sum_list,Elves,E0),\n        sort(E0,ES),
        reverse(ES,ER),\n        [M1,M2,M3|_] = ER,\n        Top3 is M1 + M2 + M3,\n        format(\"Star
        1: Top Elf has ~d Calories ~n\",[M1]),\n        format(\"Star 2: Top 3 Elves
        have ~d Calories\", [Top3]).\n\n\n[Full code with imports and a few unused
        utilities](https://topaz.github.io/paste/#XQAAAQA8BAAAAAAAAAAdC0Anib5eTWFhgQ7lUiZ75ebEp8NCqq17dRcAi/1toZl3ZmRNPIgKYseVhdPRQQ+Q8F57EsUh6LovgaZXk3zZGHXV6kaOhEL/aFFF20FFWTnv7FCS7Eo7E3CjgU1MAPDZjZwXVCobBLBFfhH4wrbiowy2q0zt5SljdKJDQIxffvcN8o6IhfbxEwZYEYA8PC+nWAoDZ+pGPwoMxCFQOvugwFOQmRc1lQZFaX9R5eKnoEMtuqydeuyREjG/hKq1VmsNSyTW+dq4HFBCeb+KvI1AHxMOAsgKPbeZlkf9aRcGShuCuuycqt0Lku2cAzv4E8tXhmgpj+5tjHjPwn5mvW/uzl6YgrUJjsnPPOXs47PYPmMVsLuQqeb7iB6Cjl0K3h7XYQSDb4cYZr6MbMcS404CjmlsCNL7uviNtPYCnEQBcTV8WfYaY6rf7VRNYPFbQLtkWL+LM5jWdMZNYefENTlvdaGZDA9sfs+1z31i2ZmmHc1Od68LswAF714UyB+aqRE2dKP/c+fLQF6/Yl/HOFN9BjidwkOJR2D1c1aQkhbhPqF9VKWLMxIBXTQHH1xYJY6Mk9LhPpT7VGpU0fjDDI7IhC0e35ImgnRY45NX9KivFsj/pJILahVKSjHhJ2sp1Brt3XTRdWskJqsrT/9QX5oA)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Ciao Prolog&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        year I&amp;#39;mma just gonna do them all in Ciao instead of trying to make
        sure they work in SWI/Scryer/Ciao/GNU. As usual I expect to get about a dozen
        days in before this stops feeling like a game and starts feeling like work
        but until then!&lt;/p&gt;\n\n&lt;p&gt;This is just the solution, pastebin
        below for something you could put in a file and run:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;line([])
        --&amp;gt; (&amp;quot;\\n&amp;quot;|eos), !.\nline([C|Cs]) --&amp;gt; [C],
        line(Cs).\neos --&amp;gt; call(eos_).\neos_([], []).\n\n%---------------------------------------------------%\n%DAY
        1\nday1_elf([]) --&amp;gt; (&amp;quot;\\n&amp;quot;|eos),!.\nday1_elf([C|CL])
        --&amp;gt; line(X),{number_codes(C,X)}, day1_elf(CL).\nday1_input([]) --&amp;gt;
        [].\nday1_input([E|EL]) --&amp;gt; day1_elf(E), day1_input(EL).\nday1 :-\n    file_to_string(&amp;#39;inputd1&amp;#39;,Id1),\n    day1_input(Elves,Id1,[]),\n    maplist(sum_list,Elves,E0),\n    sort(E0,ES),
        reverse(ES,ER),\n    [M1,M2,M3|_] = ER,\n    Top3 is M1 + M2 + M3,\n    format(&amp;quot;Star
        1: Top Elf has ~d Calories ~n&amp;quot;,[M1]),\n    format(&amp;quot;Star
        2: Top 3 Elves have ~d Calories&amp;quot;, [Top3]).\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQA8BAAAAAAAAAAdC0Anib5eTWFhgQ7lUiZ75ebEp8NCqq17dRcAi/1toZl3ZmRNPIgKYseVhdPRQQ+Q8F57EsUh6LovgaZXk3zZGHXV6kaOhEL/aFFF20FFWTnv7FCS7Eo7E3CjgU1MAPDZjZwXVCobBLBFfhH4wrbiowy2q0zt5SljdKJDQIxffvcN8o6IhfbxEwZYEYA8PC+nWAoDZ+pGPwoMxCFQOvugwFOQmRc1lQZFaX9R5eKnoEMtuqydeuyREjG/hKq1VmsNSyTW+dq4HFBCeb+KvI1AHxMOAsgKPbeZlkf9aRcGShuCuuycqt0Lku2cAzv4E8tXhmgpj+5tjHjPwn5mvW/uzl6YgrUJjsnPPOXs47PYPmMVsLuQqeb7iB6Cjl0K3h7XYQSDb4cYZr6MbMcS404CjmlsCNL7uviNtPYCnEQBcTV8WfYaY6rf7VRNYPFbQLtkWL+LM5jWdMZNYefENTlvdaGZDA9sfs+1z31i2ZmmHc1Od68LswAF714UyB+aqRE2dKP/c+fLQF6/Yl/HOFN9BjidwkOJR2D1c1aQkhbhPqF9VKWLMxIBXTQHH1xYJY6Mk9LhPpT7VGpU0fjDDI7IhC0e35ImgnRY45NX9KivFsj/pJILahVKSjHhJ2sp1Brt3XTRdWskJqsrT/9QX5oA\"&gt;Full
        code with imports and a few unused utilities&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh2pvn/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh2pvn", "created":
        1669888646.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyj643r", "id": "iyj643r", "parent_id":
        "t1_iyh2pvn", "depth": 1, "children": ["iyj643r"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh2y8f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "levital",
        "can_mod_post": false, "created_utc": 1669888863.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_gcawu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Haskell](https://github.com/fapete/advent_of_code/blob/master/2022/day01/day01.hs)\n\nDecided
        to (re-)learn Haskell again, after generally enjoying it last year, but once
        again having had no reason to use it since.\n\nIn an effort to prevent last
        years frustrating burn-out experience from happening again, I''ll be setting
        myself a 2-hour timer every day this year, and stop working on the puzzle
        if I can''t finish it in this time. So, I expect that I''ll have missing stars
        fairly early on and won''t get frustrated when I again fail to get all 50
        on the later ones. :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/fapete/advent_of_code/blob/master/2022/day01/day01.hs\"&gt;Haskell&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Decided
        to (re-)learn Haskell again, after generally enjoying it last year, but once
        again having had no reason to use it since.&lt;/p&gt;\n\n&lt;p&gt;In an effort
        to prevent last years frustrating burn-out experience from happening again,
        I&amp;#39;ll be setting myself a 2-hour timer every day this year, and stop
        working on the puzzle if I can&amp;#39;t finish it in this time. So, I expect
        that I&amp;#39;ll have missing stars fairly early on and won&amp;#39;t get
        frustrated when I again fail to get all 50 on the later ones. :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh2y8f/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh2y8f", "created":
        1669888863.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyj9fpa", "id": "iyj9fpa", "parent_id":
        "t1_iyh2y8f", "depth": 1, "children": ["iyj9fpa"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh3w62",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "byParallax",
        "can_mod_post": false, "created_utc": 1669889729.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_cf76ck2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Google Sheets**\n\n[https://docs.google.com/spreadsheets/d/1pMB3iTTnBPIBfO7sJxHKyeQU9BCPS5G1DzAfl57Htxs/edit#gid=0](https://docs.google.com/spreadsheets/d/1pMB3iTTnBPIBfO7sJxHKyeQU9BCPS5G1DzAfl57Htxs/edit#gid=0)\n\nIt''s
        not super elegant but it works so yay? I tried to use as little manual input
        as possible but some of the formulas were \"dragged\". I''m sure someone with
        more experience could avoid doing that, perhaps by using some overly complicated
        query/filter formula? \n\nThe reason why there''s a variable cell on the left
        side is because some characters like \"/\" and \",\" kept breaking everything
        so I needed a solution to try things out quickly without editing every formula.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Google
        Sheets&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://docs.google.com/spreadsheets/d/1pMB3iTTnBPIBfO7sJxHKyeQU9BCPS5G1DzAfl57Htxs/edit#gid=0\"&gt;https://docs.google.com/spreadsheets/d/1pMB3iTTnBPIBfO7sJxHKyeQU9BCPS5G1DzAfl57Htxs/edit#gid=0&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s
        not super elegant but it works so yay? I tried to use as little manual input
        as possible but some of the formulas were &amp;quot;dragged&amp;quot;. I&amp;#39;m
        sure someone with more experience could avoid doing that, perhaps by using
        some overly complicated query/filter formula? &lt;/p&gt;\n\n&lt;p&gt;The reason
        why there&amp;#39;s a variable cell on the left side is because some characters
        like &amp;quot;/&amp;quot; and &amp;quot;,&amp;quot; kept breaking everything
        so I needed a solution to try things out quickly without editing every formula.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh3w62/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh3w62", "created":
        1669889729.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669973123.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh4u5o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "NickKusters",
        "can_mod_post": false, "created_utc": 1669890582.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_55f4iz02", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C#\n\n    // Part 1\n    var inventories = Input\n    \t.TrimEnd()\n    \t.SplitBy($\"\\n\\n\")\n    \t.Select(x
        =&gt; x.Split(''\\n'').AsInt32s())\n    \t.Select(x =&gt; (raw: x, sum: x.Sum()))\n    \t.ToList();\n    Console.WriteLine($\"We
        have {inventories.Count:N0} inventories\");\n    var biggest = inventories.OrderByDescending(x
        =&gt; x.sum).First();\n    Console.WriteLine($\"Most calories: {biggest.sum:N0},
        contents: {string.Join(\", \", biggest.raw)}\");\n    \n    // Part 2\n    \n    var
        top3 = inventories.OrderByDescending(x =&gt; x.sum).Take(3).ToList();\n    var
        sum = top3.Sum(x =&gt; x.sum);\n    Console.WriteLine($\"Most calories: {sum:N0},
        contents: {string.Join(\", \", top3[0].raw)}; {string.Join(\", \", top3[1].raw)};
        {string.Join(\", \", top3[2].raw)}\");\n\nLike the last 2 years, I''m trying
        to stream AoC because it''s just a lot of fun. Day 1, after a year of no AoC
        was a bit rusty, not trimming the end threw an exception, so half the time
        was just figuring out where an empty value came from \ud83d\ude05I assume
        it will be a bit smoother in the following days \ud83d\ude0a\n\nhttps://youtu.be/qUvb1w3Hz0c\n\n[Base
        &amp; Helper code I used](https://topaz.github.io/paste/#XQAAAQDRBwAAAAAAAAAX4HymbzRtMxCVVHqFFeYLOayOfOfonA1tiuZRb+54GszRsZ35ifww4DvAzYhGIsIYXYbtYXKrF4ITsPbg8P812yEZLQq2cpUuQvtQCZGIwppEhmNv2V5K3YcTMlzuBrJC0CCFL00i28vy/s5iPe2LOwV+PdxN92FxgSAK4a+hn1jZIgunU26X8v4L38KFBanOzyZ+zuBTybdmqO7hGN71os7GTMZKfNMnaH40ftLAOkRYhwi4AMEJ5YtAWEvwH9TRzxtgAWcpMCokXVKts62KtUWMo9X7EGTylaRXyH1lRPVHoPSXOOyewZ4wjYOugJZIgI0OHO4tKBhgOspwo4kM9UCPn0oo+AjLmKXBgaUnOdWsEEaiGvi117P+ldDOnU/vSUWgNsKIWki/UBSUJfjCWbEl4B6P3pqjHug5FOK6Z5/dp+IMaCSR6F+tNtJyBkavH0wmCrO+OipTcaZa5VxhFP81cW4RqpoQTMz4NPDB/wEoTnLrKXRJWkZtWLOD3U5sHGf7DxbrMT2uA7wAJrpiDS6WuR6cEvWo6e7tTAfJRCZtQZrPQV1ZMuSmtjOnhvK3X8oRsYDUw4Jb8e+puv2fAXqMIPP6i4GM11SabDz3fiua3xrvIYennF7xNUa9MbMjh+zPbk1g1BkMLhzz6aKFQUfvHvCABHsbMy8vSW2V0FSHe5A+TP1Pm8ItMXPN0ypvh29STXUcJRKgaHDewa4mMq0bYZ/oy/yUHcVNn6b63kZZHjRey3XiuEldLgdeGhCLEPwyVfIN7eDJbHAykSp9plLoN+ovgYEjb290IbXAnd6yAGBEAWo6DmtQ9M9UyYRAORPCCqLT859vuIM6Rk5PzL575jzE+HB1exY08z8VFPjyAUKm3GBXrwWmF3qYiDdIrf9FXlTFDIxbopJIVC3ZRFtNdBnZ2hIylTGzUV94W5rZcAGD9TzyNQWlge0C6tMs/Gf9HRtxZEMXjFDkixDi032eSpp7z4DB/j0oXPCOioRFLWDFvBDgT/PxWTpZJHWRywK3TnK+PXCKhi1ELYVbNbUTukLLp/y4lJA=)\n\nAfter
        posting this, I realised, I could have just added the `.OrderByDescending(x
        =&gt; x.sum)` before the `.ToList()` and then I don''t have to do it twice
        to get the part 1 and part 2 results. To be fair, in my solution, they are
        just 2 copies, so it doesn''t matter, but still, would have made sense to
        sort it right away.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        Part 1\nvar inventories = Input\n    .TrimEnd()\n    .SplitBy($&amp;quot;\\n\\n&amp;quot;)\n    .Select(x
        =&amp;gt; x.Split(&amp;#39;\\n&amp;#39;).AsInt32s())\n    .Select(x =&amp;gt;
        (raw: x, sum: x.Sum()))\n    .ToList();\nConsole.WriteLine($&amp;quot;We have
        {inventories.Count:N0} inventories&amp;quot;);\nvar biggest = inventories.OrderByDescending(x
        =&amp;gt; x.sum).First();\nConsole.WriteLine($&amp;quot;Most calories: {biggest.sum:N0},
        contents: {string.Join(&amp;quot;, &amp;quot;, biggest.raw)}&amp;quot;);\n\n//
        Part 2\n\nvar top3 = inventories.OrderByDescending(x =&amp;gt; x.sum).Take(3).ToList();\nvar
        sum = top3.Sum(x =&amp;gt; x.sum);\nConsole.WriteLine($&amp;quot;Most calories:
        {sum:N0}, contents: {string.Join(&amp;quot;, &amp;quot;, top3[0].raw)}; {string.Join(&amp;quot;,
        &amp;quot;, top3[1].raw)}; {string.Join(&amp;quot;, &amp;quot;, top3[2].raw)}&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Like
        the last 2 years, I&amp;#39;m trying to stream AoC because it&amp;#39;s just
        a lot of fun. Day 1, after a year of no AoC was a bit rusty, not trimming
        the end threw an exception, so half the time was just figuring out where an
        empty value came from \ud83d\ude05I assume it will be a bit smoother in the
        following days \ud83d\ude0a&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://youtu.be/qUvb1w3Hz0c\"&gt;https://youtu.be/qUvb1w3Hz0c&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDRBwAAAAAAAAAX4HymbzRtMxCVVHqFFeYLOayOfOfonA1tiuZRb+54GszRsZ35ifww4DvAzYhGIsIYXYbtYXKrF4ITsPbg8P812yEZLQq2cpUuQvtQCZGIwppEhmNv2V5K3YcTMlzuBrJC0CCFL00i28vy/s5iPe2LOwV+PdxN92FxgSAK4a+hn1jZIgunU26X8v4L38KFBanOzyZ+zuBTybdmqO7hGN71os7GTMZKfNMnaH40ftLAOkRYhwi4AMEJ5YtAWEvwH9TRzxtgAWcpMCokXVKts62KtUWMo9X7EGTylaRXyH1lRPVHoPSXOOyewZ4wjYOugJZIgI0OHO4tKBhgOspwo4kM9UCPn0oo+AjLmKXBgaUnOdWsEEaiGvi117P+ldDOnU/vSUWgNsKIWki/UBSUJfjCWbEl4B6P3pqjHug5FOK6Z5/dp+IMaCSR6F+tNtJyBkavH0wmCrO+OipTcaZa5VxhFP81cW4RqpoQTMz4NPDB/wEoTnLrKXRJWkZtWLOD3U5sHGf7DxbrMT2uA7wAJrpiDS6WuR6cEvWo6e7tTAfJRCZtQZrPQV1ZMuSmtjOnhvK3X8oRsYDUw4Jb8e+puv2fAXqMIPP6i4GM11SabDz3fiua3xrvIYennF7xNUa9MbMjh+zPbk1g1BkMLhzz6aKFQUfvHvCABHsbMy8vSW2V0FSHe5A+TP1Pm8ItMXPN0ypvh29STXUcJRKgaHDewa4mMq0bYZ/oy/yUHcVNn6b63kZZHjRey3XiuEldLgdeGhCLEPwyVfIN7eDJbHAykSp9plLoN+ovgYEjb290IbXAnd6yAGBEAWo6DmtQ9M9UyYRAORPCCqLT859vuIM6Rk5PzL575jzE+HB1exY08z8VFPjyAUKm3GBXrwWmF3qYiDdIrf9FXlTFDIxbopJIVC3ZRFtNdBnZ2hIylTGzUV94W5rZcAGD9TzyNQWlge0C6tMs/Gf9HRtxZEMXjFDkixDi032eSpp7z4DB/j0oXPCOioRFLWDFvBDgT/PxWTpZJHWRywK3TnK+PXCKhi1ELYVbNbUTukLLp/y4lJA=\"&gt;Base
        &amp;amp; Helper code I used&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;After posting
        this, I realised, I could have just added the &lt;code&gt;.OrderByDescending(x
        =&amp;gt; x.sum)&lt;/code&gt; before the &lt;code&gt;.ToList()&lt;/code&gt;
        and then I don&amp;#39;t have to do it twice to get the part 1 and part 2
        results. To be fair, in my solution, they are just 2 copies, so it doesn&amp;#39;t
        matter, but still, would have made sense to sort it right away.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh4u5o/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh4u5o", "created":
        1669890582.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh9cuj", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "google spreadsheets:  \n**https://docs.google.com/spreadsheets/d/1s4kiDcf2Ro1DzdP0JMnMIiWEBOurM76tYe5HelodMMo/edit?usp=sharing**",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iyh9cuj",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;google
        spreadsheets:&lt;br/&gt;\n&lt;strong&gt;&lt;a href=\"https://docs.google.com/spreadsheets/d/1s4kiDcf2Ro1DzdP0JMnMIiWEBOurM76tYe5HelodMMo/edit?usp=sharing\"&gt;https://docs.google.com/spreadsheets/d/1s4kiDcf2Ro1DzdP0JMnMIiWEBOurM76tYe5HelodMMo/edit?usp=sharing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh9cuj/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669894397.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669894397.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyjszdt", "id": "iyjszdt", "parent_id":
        "t1_iyh9cuj", "depth": 1, "children": ["iyjszdt"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyha6dn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "rawlexander",
        "can_mod_post": false, "created_utc": 1669895017.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_46jnzuqk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "R / Rstats\n\nMaybe a bit different :)\n\n    max_n_weight &lt;- function(.file,
        n = 1) {\n      calories &lt;- as.integer(readLines(.file))\n      calories[is.na(calories)]
        &lt;- 0\n      csums &lt;- cumsum(calories)\n      sums &lt;- diff(csums[duplicated(csums)])\n      if
        (n == 1) return(max(sums))\n      sort(sums, decreasing = TRUE)[seq_len(n)]
        |&gt;\n        sum()\n    }\n    \n    max_n_weight(\"data/1.txt\")\n    max_n_weight(\"data/1.txt\",
        3)", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;R / Rstats&lt;/p&gt;\n\n&lt;p&gt;Maybe
        a bit different :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;max_n_weight &amp;lt;-
        function(.file, n = 1) {\n  calories &amp;lt;- as.integer(readLines(.file))\n  calories[is.na(calories)]
        &amp;lt;- 0\n  csums &amp;lt;- cumsum(calories)\n  sums &amp;lt;- diff(csums[duplicated(csums)])\n  if
        (n == 1) return(max(sums))\n  sort(sums, decreasing = TRUE)[seq_len(n)] |&amp;gt;\n    sum()\n}\n\nmax_n_weight(&amp;quot;data/1.txt&amp;quot;)\nmax_n_weight(&amp;quot;data/1.txt&amp;quot;,
        3)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyha6dn/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyha6dn", "created":
        1669895017.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyhba07", "id": "iyhba07", "parent_id":
        "t1_iyha6dn", "depth": 1, "children": ["iyhba07"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyha8g1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "spersson88",
        "can_mod_post": false, "created_utc": 1669895061.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_icme9r6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Go\n\n[Day 1 on Github](https://github.com/markestedt/advent-of-code-2022/blob/master/day01/day01.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Go&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/markestedt/advent-of-code-2022/blob/master/day01/day01.go\"&gt;Day
        1 on Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyha8g1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyha8g1", "created":
        1669895061.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhbs19",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jycouet",
        "can_mod_post": false, "created_utc": 1669896192.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_3iube1hk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Excel version: [https://twitter.com/jycouet/status/1598283910634672128?s=20&amp;t=JIR4FgyEx9M5TTw8cwqmhw](https://twitter.com/jycouet/status/1598283910634672128?s=20&amp;t=JIR4FgyEx9M5TTw8cwqmhw)  \n\n\n\ud83e\udd73\ud83e\udd73\ud83e\udd73",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excel version: &lt;a
        href=\"https://twitter.com/jycouet/status/1598283910634672128?s=20&amp;amp;t=JIR4FgyEx9M5TTw8cwqmhw\"&gt;https://twitter.com/jycouet/status/1598283910634672128?s=20&amp;amp;t=JIR4FgyEx9M5TTw8cwqmhw&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;\ud83e\udd73\ud83e\udd73\ud83e\udd73&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhbs19/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhbs19", "created":
        1669896192.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iytrenu", "id": "iytrenu", "parent_id":
        "t1_iyhbs19", "depth": 1, "children": ["iytrenu"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhchgs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "FeerMonger",
        "can_mod_post": false, "created_utc": 1669896691.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_7h8wi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby guy who started learning Rust a week ago. If anybody with some Rust
        experience is pushing their solutions to github, I would be very interested
        in following along and comparing my solutions. \n\n    use std::fs;\n    use
        std::str::FromStr;\n    \n    fn parse_input(path: &amp;str) -&gt; Vec&lt;Vec&lt;i32&gt;&gt;{\n        let
        input: String = fs::read_to_string(path).expect(\"should read file\");\n        let
        mut elves: Vec&lt;Vec&lt;i32&gt;&gt; = vec![];\n        let raw_elves: Vec&lt;&amp;str&gt;
        = input.split(\"\\n\\n\").collect();\n        for elf in raw_elves {\n            let
        mut new_vec = vec![];\n            for load in elf.split(\"\\n\") {\n                let
        n: i32 = FromStr::from_str(load).unwrap();\n                new_vec.push(n)\n            }\n            elves.push(new_vec);\n        }\n        elves\n    }\n    \n    fn
        part_1(elves: Vec&lt;Vec&lt;i32&gt;&gt;) -&gt; i32 {\n        let mut max_sum
        = 0;\n        for elf in elves {\n            let sum = elf.iter().sum();\n            if
        sum &gt; max_sum {\n                max_sum = sum;\n            }\n        }\n        max_sum\n    }\n    \n    fn
        part_2(elves: Vec&lt;Vec&lt;i32&gt;&gt;) -&gt; i32 {\n        let mut sums:
        Vec&lt;i32&gt; = elves.iter().map(|x| x.iter().sum()).collect();\n        sums.sort();\n        sums.as_slice()[sums.len()-3..].to_vec().iter().sum()\n    }\n    \n    fn
        main() {\n        let elves = parse_input(\"data/input.txt\");\n        println!(\"Part
        1: {}\",part_1(elves.clone()));\n        println!(\"Part 2: {}\",part_2(elves.clone()));\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby guy who started
        learning Rust a week ago. If anybody with some Rust experience is pushing
        their solutions to github, I would be very interested in following along and
        comparing my solutions. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::fs;\nuse
        std::str::FromStr;\n\nfn parse_input(path: &amp;amp;str) -&amp;gt; Vec&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;{\n    let
        input: String = fs::read_to_string(path).expect(&amp;quot;should read file&amp;quot;);\n    let
        mut elves: Vec&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt; = vec![];\n    let raw_elves:
        Vec&amp;lt;&amp;amp;str&amp;gt; = input.split(&amp;quot;\\n\\n&amp;quot;).collect();\n    for
        elf in raw_elves {\n        let mut new_vec = vec![];\n        for load in
        elf.split(&amp;quot;\\n&amp;quot;) {\n            let n: i32 = FromStr::from_str(load).unwrap();\n            new_vec.push(n)\n        }\n        elves.push(new_vec);\n    }\n    elves\n}\n\nfn
        part_1(elves: Vec&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;) -&amp;gt; i32 {\n    let
        mut max_sum = 0;\n    for elf in elves {\n        let sum = elf.iter().sum();\n        if
        sum &amp;gt; max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum\n}\n\nfn
        part_2(elves: Vec&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;) -&amp;gt; i32 {\n    let
        mut sums: Vec&amp;lt;i32&amp;gt; = elves.iter().map(|x| x.iter().sum()).collect();\n    sums.sort();\n    sums.as_slice()[sums.len()-3..].to_vec().iter().sum()\n}\n\nfn
        main() {\n    let elves = parse_input(&amp;quot;data/input.txt&amp;quot;);\n    println!(&amp;quot;Part
        1: {}&amp;quot;,part_1(elves.clone()));\n    println!(&amp;quot;Part 2: {}&amp;quot;,part_2(elves.clone()));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhchgs/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhchgs", "created":
        1669896691.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyhkgs4", "id": "iyhkgs4", "parent_id":
        "t1_iyhchgs", "depth": 1, "children": ["iyhkgs4", "iyhrkz9", "iyhhp2d"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1669903603.0,
        "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhde68", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Pornthrowaway78",
        "can_mod_post": false, "created_utc": 1669897313.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_da21a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "perl -lp with\n\n `$\\=$;if($;=$;*/./+$_)&gt;$\\}{`\n\nPart 2 is double the
        length, and I''m sure it has a bug but it does give the right answer for my
        input.\n\n`@;=(sort{$b-$a}@;,$c=$c*/./+$_)[0..2]}{$_=map{(1)x$_}@`", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;perl -lp with&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;$\\=$;if($;=$;*/./+$_)&amp;gt;$\\}{&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2 is double the length, and I&amp;#39;m sure it has a bug but it does give
        the right answer for my input.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;@;=(sort{$b-$a}@;,$c=$c*/./+$_)[0..2]}{$_=map{(1)x$_}@&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhde68/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhde68", "created":
        1669897313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhh6i8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SomebodyFrom91",
        "can_mod_post": false, "created_utc": 1669899696.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_ilvz6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python:\n\n&amp;#x200B;\n\n    with open(\"./day01/data.txt\", \"r\") as
        f:\n        data = [row.strip() for row in f.readlines()]\n    \n    calories
        = [sum(map(int, row.split(\" \"))) for row in \" \".join(data).split(\"  \")]\n    print(max(calories))\n    print(sum(sorted(calories,
        reverse=True)[:3]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;./day01/data.txt&amp;quot;, &amp;quot;r&amp;quot;) as f:\n    data
        = [row.strip() for row in f.readlines()]\n\ncalories = [sum(map(int, row.split(&amp;quot;
        &amp;quot;))) for row in &amp;quot; &amp;quot;.join(data).split(&amp;quot;  &amp;quot;)]\nprint(max(calories))\nprint(sum(sorted(calories,
        reverse=True)[:3]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhh6i8/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhh6i8", "created": 1669899696.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyhno87", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "ywgdana", "can_mod_post": false, "created_utc":
        1669903190.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 3,
        "author_fullname": "t2_1oo4", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**F#**\n\nGet a load of
        my overly complicated input parsing code because it simply didn''t occur to
        me to split the file by \\n\\n and then \\n...\n\n    let elves = File.ReadAllLines(\"input_day01.txt\")\n            |&gt;
        Array.fold(fun arr c -&gt;\n                          match Int32.TryParse
        c with\n                          | true, n -&gt; match arr with\n                                       |
        [] -&gt; [[n]]\n                                       | h::t -&gt; (n::h)::t\n                          |
        _ -&gt; []::arr) []\n            |&gt; List.map(List.sum)\n            |&gt;
        List.sortDescending", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;F#&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Get
        a load of my overly complicated input parsing code because it simply didn&amp;#39;t
        occur to me to split the file by \\n\\n and then \\n...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        elves = File.ReadAllLines(&amp;quot;input_day01.txt&amp;quot;)\n        |&amp;gt;
        Array.fold(fun arr c -&amp;gt;\n                      match Int32.TryParse
        c with\n                      | true, n -&amp;gt; match arr with\n                                   |
        [] -&amp;gt; [[n]]\n                                   | h::t -&amp;gt; (n::h)::t\n                      |
        _ -&amp;gt; []::arr) []\n        |&amp;gt; List.map(List.sum)\n        |&amp;gt;
        List.sortDescending\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhno87/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhno87", "created": 1669903190.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyhoehu", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "madmax9186", "can_mod_post": false, "created_utc":
        1669903559.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 4,
        "author_fullname": "t2_llp8h", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "C++. `O(n)` time and `O(1)`
        memory.\n\n    #include &lt;algorithm&gt;\n    #include &lt;array&gt;\n    #include
        &lt;fstream&gt;\n    #include &lt;iostream&gt;\n    #include &lt;numeric&gt;\n    \n    using
        namespace std;\n    \n    int main() {\n      ifstream in(\"input.txt\");\n      array&lt;unsigned
        long, 3&gt; calories{0};\n      unsigned long current_calories = 0;\n      while
        (in) {\n        string line;\n        std::getline(in, line);\n        if
        (line.empty()) {\n          auto it = find_if(calories.begin(),\n                            calories.end(),\n                            [=](unsigned
        long val) {return val &lt; current_calories;});\n          if (it != calories.end())
        {\n            std::shift_right(it, calories.end(), 1);\n            *it =
        current_calories;\n          }\n          current_calories = 0;\n        }
        else {\n          current_calories += stoul(line);\n        }\n      }\n    \n      cout
        &lt;&lt; \"Part 1: \" &lt;&lt; calories[0] &lt;&lt; endl;\n      cout &lt;&lt;
        \"Part 2: \" &lt;&lt; accumulate(calories.begin(), calories.end(), 0) &lt;&lt;
        endl;  \n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++.
        &lt;code&gt;O(n)&lt;/code&gt; time and &lt;code&gt;O(1)&lt;/code&gt; memory.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;algorithm&amp;gt;\n#include &amp;lt;array&amp;gt;\n#include &amp;lt;fstream&amp;gt;\n#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;numeric&amp;gt;\n\nusing namespace
        std;\n\nint main() {\n  ifstream in(&amp;quot;input.txt&amp;quot;);\n  array&amp;lt;unsigned
        long, 3&amp;gt; calories{0};\n  unsigned long current_calories = 0;\n  while
        (in) {\n    string line;\n    std::getline(in, line);\n    if (line.empty())
        {\n      auto it = find_if(calories.begin(),\n                        calories.end(),\n                        [=](unsigned
        long val) {return val &amp;lt; current_calories;});\n      if (it != calories.end())
        {\n        std::shift_right(it, calories.end(), 1);\n        *it = current_calories;\n      }\n      current_calories
        = 0;\n    } else {\n      current_calories += stoul(line);\n    }\n  }\n\n  cout
        &amp;lt;&amp;lt; &amp;quot;Part 1: &amp;quot; &amp;lt;&amp;lt; calories[0]
        &amp;lt;&amp;lt; endl;\n  cout &amp;lt;&amp;lt; &amp;quot;Part 2: &amp;quot;
        &amp;lt;&amp;lt; accumulate(calories.begin(), calories.end(), 0) &amp;lt;&amp;lt;
        endl;  \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhoehu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhoehu", "created":
        1669903559.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670151955.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhq2wq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "kamicc",
        "can_mod_post": false, "created_utc": 1669904372.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_6covc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Straight-forward and cleaned-up Lua:\n\n\n    local sums = {0}\n\n    for
        line in io.lines(\"input.txt\") do\n        if line ~= \"\" then\n            sums[#sums]
        = sums[#sums] + tonumber(line)\n        else\n            table.insert(sums,
        0)\n        end\n    end\n\n    table.sort(sums)\n    print(sums[#sums])\n    print(sums[#sums]
        + sums[#sums-1] + sums[#sums-2])", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Straight-forward and cleaned-up Lua:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;local
        sums = {0}\n\nfor line in io.lines(&amp;quot;input.txt&amp;quot;) do\n    if
        line ~= &amp;quot;&amp;quot; then\n        sums[#sums] = sums[#sums] + tonumber(line)\n    else\n        table.insert(sums,
        0)\n    end\nend\n\ntable.sort(sums)\nprint(sums[#sums])\nprint(sums[#sums]
        + sums[#sums-1] + sums[#sums-2])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhq2wq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhq2wq", "created":
        1669904372.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyi6nry", "id": "iyi6nry", "parent_id":
        "t1_iyhq2wq", "depth": 1, "children": ["iyi6nry", "iyuf106"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhqhyf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "chicagocode",
        "can_mod_post": false, "created_utc": 1669904568.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_mtcx04l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Kotlin -&gt; [\\[Blog/Commentary\\]](https://todd.ginsberg.com/post/advent-of-code/2022/day1/)
        - [\\[Code\\]](https://github.com/tginsberg/advent-2022-kotlin/blob/main/src/main/kotlin/com/ginsberg/advent2022/Day01.kt)
        -  [\\[All 2022 Solutions\\]](https://github.com/tginsberg/advent-2022-kotlin)\n\nThis
        was a nice fun start. Looking forward to 24 more! :) \n\nFor the 6th year
        in a row I''ll solve the puzzles in Kotlin with idiomatic solutions and blog
        posts describing them.\n\nToday''s is short enough to fit here:\n\n    class
        Day01(input: String) {\n\n        private val calories = parseInput(input)\n\n        fun
        solvePart1(): Int =\n            calories.first()\n\n        fun solvePart2():
        Int =\n            calories.take(3).sum()\n\n        private fun parseInput(input:
        String): List&lt;Int&gt; =\n            input\n                .trim()\n                .split(\"\\n\\n\")\n                .map
        { it.lines().sumOf(String::toInt) }\n                .sortedDescending()\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Kotlin -&amp;gt; &lt;a
        href=\"https://todd.ginsberg.com/post/advent-of-code/2022/day1/\"&gt;[Blog/Commentary]&lt;/a&gt;
        - &lt;a href=\"https://github.com/tginsberg/advent-2022-kotlin/blob/main/src/main/kotlin/com/ginsberg/advent2022/Day01.kt\"&gt;[Code]&lt;/a&gt;
        -  &lt;a href=\"https://github.com/tginsberg/advent-2022-kotlin\"&gt;[All
        2022 Solutions]&lt;/a&gt;&lt;/h2&gt;\n\n&lt;p&gt;This was a nice fun start.
        Looking forward to 24 more! :) &lt;/p&gt;\n\n&lt;p&gt;For the 6th year in
        a row I&amp;#39;ll solve the puzzles in Kotlin with idiomatic solutions and
        blog posts describing them.&lt;/p&gt;\n\n&lt;p&gt;Today&amp;#39;s is short
        enough to fit here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Day01(input:
        String) {\n\n    private val calories = parseInput(input)\n\n    fun solvePart1():
        Int =\n        calories.first()\n\n    fun solvePart2(): Int =\n        calories.take(3).sum()\n\n    private
        fun parseInput(input: String): List&amp;lt;Int&amp;gt; =\n        input\n            .trim()\n            .split(&amp;quot;\\n\\n&amp;quot;)\n            .map
        { it.lines().sumOf(String::toInt) }\n            .sortedDescending()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhqhyf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhqhyf", "created":
        1669904568.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyidrlv", "id": "iyidrlv", "parent_id":
        "t1_iyhqhyf", "depth": 1, "children": ["iyidrlv"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhsqac",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "unclefritz",
        "can_mod_post": false, "created_utc": 1669905594.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_73234", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "my first time trying out q/kdb, man this feels so good\n\nhttps://github.com/sl0thentr0py/aoc2022/blob/main/q/01.q#L5-L7\n\n        \n    input:\"c\"
        $ read1 `:../files/01.input\n    calories:\"J\" $ (vs[\"\\n\"]'') \"\\n\\n\"
        vs input\n    p1:max (sum'') calories\n    p2:sum 3 # desc (sum'') calories",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;my first time trying
        out q/kdb, man this feels so good&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/sl0thentr0py/aoc2022/blob/main/q/01.q#L5-L7\"&gt;https://github.com/sl0thentr0py/aoc2022/blob/main/q/01.q#L5-L7&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input:&amp;quot;c&amp;quot;
        $ read1 `:../files/01.input\ncalories:&amp;quot;J&amp;quot; $ (vs[&amp;quot;\\n&amp;quot;]&amp;#39;)
        &amp;quot;\\n\\n&amp;quot; vs input\np1:max (sum&amp;#39;) calories\np2:sum
        3 # desc (sum&amp;#39;) calories\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhsqac/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhsqac", "created":
        1669905594.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyi25oj", "id": "iyi25oj", "parent_id":
        "t1_iyhsqac", "depth": 1, "children": ["iyi25oj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhwb6s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Scroph",
        "can_mod_post": false, "created_utc": 1669907188.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_6p6h0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Part 2 in dlang using a max heap :\n\n    import std;\n\n    void main()\n    {\n        auto
        heap = BinaryHeap!(int[], \"a &gt; b\")([], 0);\n        int currentSum =
        0;\n        foreach(line; stdin.byLine.map!strip)\n        {\n            if(line
        != \"\")\n            {\n                currentSum += line.to!int;\n                continue;\n            }\n\n            heap.insert(currentSum);\n            while(heap.length
        &gt; 3)\n            {\n                heap.removeFront();\n            }\n            currentSum
        = 0;\n        }\n        heap.sum.writeln();\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Part 2 in dlang using a max heap :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        std;\n\nvoid main()\n{\n    auto heap = BinaryHeap!(int[], &amp;quot;a &amp;gt;
        b&amp;quot;)([], 0);\n    int currentSum = 0;\n    foreach(line; stdin.byLine.map!strip)\n    {\n        if(line
        != &amp;quot;&amp;quot;)\n        {\n            currentSum += line.to!int;\n            continue;\n        }\n\n        heap.insert(currentSum);\n        while(heap.length
        &amp;gt; 3)\n        {\n            heap.removeFront();\n        }\n        currentSum
        = 0;\n    }\n    heap.sum.writeln();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhwb6s/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhwb6s", "created":
        1669907188.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhwkbu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "IlliterateJedi",
        "can_mod_post": false, "created_utc": 1669907297.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_2keby", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m trying to learn Rust this year with AoC.  [Here are my Day 1 functions](https://pastebin.com/QsUf5Xcu)\n\nIs
        there an idiomatic way to get the last three of a sorted Vec?  I just took
        the slice of [len-3..len] but that didn''t feel ''functional'' or whatever.
        \n\n\nAlso, for some reason my &amp;str ended up with `\\r\\n\\r\\n` instead
        of `\\n\\n` to split the lines.  I am using an AOC rust crate to manage the
        input reading which does a `fs::read_to_string(filepath)` call.  Could this
        have caused that?  It was strange to me to have these extraneous chars in
        there.  Probably added 10 minutes trying to work out what was going on in
        the debugger.\n\nEdit: Obligatory speeds for those curious\n\n\ud83c\udf84
        Part 1 \ud83c\udf84\n\n(elapsed: 124.50\u00b5s)\n\n\ud83c\udf84 Part 2 \ud83c\udf84\n\n(elapsed:
        124.90\u00b5s)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m
        trying to learn Rust this year with AoC.  &lt;a href=\"https://pastebin.com/QsUf5Xcu\"&gt;Here
        are my Day 1 functions&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Is there an idiomatic
        way to get the last three of a sorted Vec?  I just took the slice of [len-3..len]
        but that didn&amp;#39;t feel &amp;#39;functional&amp;#39; or whatever. &lt;/p&gt;\n\n&lt;p&gt;Also,
        for some reason my &amp;amp;str ended up with &lt;code&gt;\\r\\n\\r\\n&lt;/code&gt;
        instead of &lt;code&gt;\\n\\n&lt;/code&gt; to split the lines.  I am using
        an AOC rust crate to manage the input reading which does a &lt;code&gt;fs::read_to_string(filepath)&lt;/code&gt;
        call.  Could this have caused that?  It was strange to me to have these extraneous
        chars in there.  Probably added 10 minutes trying to work out what was going
        on in the debugger.&lt;/p&gt;\n\n&lt;p&gt;Edit: Obligatory speeds for those
        curious&lt;/p&gt;\n\n&lt;p&gt;\ud83c\udf84 Part 1 \ud83c\udf84&lt;/p&gt;\n\n&lt;p&gt;(elapsed:
        124.50\u00b5s)&lt;/p&gt;\n\n&lt;p&gt;\ud83c\udf84 Part 2 \ud83c\udf84&lt;/p&gt;\n\n&lt;p&gt;(elapsed:
        124.90\u00b5s)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhwkbu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhwkbu", "created":
        1669907297.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyhyzyx", "id": "iyhyzyx", "parent_id":
        "t1_iyhwkbu", "depth": 1, "children": ["iyhyzyx", "iyhy8b1", "iyj1js1"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1670448683.0,
        "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhx7im", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "e_blake",
        "can_mod_post": false, "created_utc": 1669907575.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_4tezwlii", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**golfed m4**\n\nHere''s my solution in [m4](https://www.reddit.com/r/adventofcode/comments/ryfm7e/2021_all_daysm4_my_m4_repo/?utm_source=share&amp;utm_medium=web2x&amp;context=3)
        with just 277 bytes (excluding the second newline) that solves both parts
        of the puzzle with just one use of `define` and `ifelse` apiece, and with
        an intentional mismatch in the number of ( vs. ).  Either place your input
        in a file named ''f'', or run ''m4 -Df=/path/to/your/input day01.m4''.\n\n    define(_,`ifelse($4,,`$1
        eval($1+$2+$3'',$5,,`_(eval(($4&gt;$1)*$4+($4&lt;=$1)*$1),eval(($4&gt;$1)*$1+($4&lt;=$1&amp;&amp;$4&gt;$2)*$4+($4&lt;=$2)*$2),eval(($4&gt;$2)*$2+($4&lt;=$2&amp;&amp;$4&gt;$3)*$4+($4&lt;=$3)*$3)'',`_($1,$2,$3,eval($5+$4)''),shift(shift(shift(shift(shift($@))))))'')_(0,0,0,translit(include(f),`\n    '',`,''))\n\nPart
        1 alone can be further golfed to 147 bytes:\n\n    define(_,`ifelse($2,,`eval($1'',$3,,`_(eval(($2&gt;$1)*$2+($2&lt;=$1)*$1)'',`_($1,eval($3+$2)''),shift(shift(shift($@))))'')_(0,translit(include(f),`\n    '',`,''))\n\nThe
        whole program makes a single pass over the input, but because of the way recursion
        in m4 works, this is O(n\\^2) in the length of the input file (processing
        n iterations with an average of n/2 arguments), for a runtime of 888ms on
        my machine.  I''ll come up with a much faster (but much longer) solution later
        today.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;golfed
        m4&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s my solution in &lt;a
        href=\"https://www.reddit.com/r/adventofcode/comments/ryfm7e/2021_all_daysm4_my_m4_repo/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3\"&gt;m4&lt;/a&gt;
        with just 277 bytes (excluding the second newline) that solves both parts
        of the puzzle with just one use of &lt;code&gt;define&lt;/code&gt; and &lt;code&gt;ifelse&lt;/code&gt;
        apiece, and with an intentional mismatch in the number of ( vs. ).  Either
        place your input in a file named &amp;#39;f&amp;#39;, or run &amp;#39;m4 -Df=/path/to/your/input
        day01.m4&amp;#39;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;define(_,`ifelse($4,,`$1
        eval($1+$2+$3&amp;#39;,$5,,`_(eval(($4&amp;gt;$1)*$4+($4&amp;lt;=$1)*$1),eval(($4&amp;gt;$1)*$1+($4&amp;lt;=$1&amp;amp;&amp;amp;$4&amp;gt;$2)*$4+($4&amp;lt;=$2)*$2),eval(($4&amp;gt;$2)*$2+($4&amp;lt;=$2&amp;amp;&amp;amp;$4&amp;gt;$3)*$4+($4&amp;lt;=$3)*$3)&amp;#39;,`_($1,$2,$3,eval($5+$4)&amp;#39;),shift(shift(shift(shift(shift($@))))))&amp;#39;)_(0,0,0,translit(include(f),`\n&amp;#39;,`,&amp;#39;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        1 alone can be further golfed to 147 bytes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;define(_,`ifelse($2,,`eval($1&amp;#39;,$3,,`_(eval(($2&amp;gt;$1)*$2+($2&amp;lt;=$1)*$1)&amp;#39;,`_($1,eval($3+$2)&amp;#39;),shift(shift(shift($@))))&amp;#39;)_(0,translit(include(f),`\n&amp;#39;,`,&amp;#39;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The
        whole program makes a single pass over the input, but because of the way recursion
        in m4 works, this is O(n^2) in the length of the input file (processing n
        iterations with an average of n/2 arguments), for a runtime of 888ms on my
        machine.  I&amp;#39;ll come up with a much faster (but much longer) solution
        later today.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhx7im/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhx7im", "created":
        1669907575.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iz6tdhn", "id": "iz6tdhn", "parent_id":
        "t1_iyhx7im", "depth": 1, "children": ["iz6tdhn", "iykquwt"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi03l0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "pikaryu07",
        "can_mod_post": false, "created_utc": 1669908780.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_2nwqsqkl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Finally, I decided to learn **Julia** with Advent of code. Here is my code
        for the Day 1 puzzle. Although it is not very well written, I would still
        like to post my solution here. Please feel free to provide your valuable suggestions.\n\n    using
        DelimitedFiles\n    function max_elf_calories(calories::Matrix, n::Int64)\n    \n    #
        initialization\n    elf_calories = 0 # stores calories for each elf\n    max_elf_calories
        = 0 # stores maximum calories\n    list_elf_calories = [] # A list to store
        each elf''s total calories \n    for l in calories\n    \tif !isempty(l)\n    \t\telf_calories
        +=  l\n    \telse\n    \t\tif elf_calories &gt; max_elf_calories\n    \t\t\tmax_elf_calories
        = elf_calories\n    \t\tend\n    \t\tlist_elf_calories = push!(list_elf_calories,
        elf_calories)\n    \t\telf_calories = 0\n    \tend\n    end\n    sort!(list_elf_calories,
        rev = true) # sorting in decending order\n    top_three_elf_Calories = sum(list_elf_calories[1:n])
        # adding top 3 \n    \n    return max_elf_calories, top_three_elf_Calories\n    end\n    \n    #
        read input file \n    calories = readdlm(\"data/input_day01.txt\", skipblanks=false)
        \n    max_cal, max_n_cal = max_elf_calories(calories, 3)\n    println(\"Part
        1: The total calories are: \", max_cal)\n    println(\"Part 2: The total calories
        carrying by the top three elfs are :\", max_n_cal)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Finally, I decided to learn &lt;strong&gt;Julia&lt;/strong&gt;
        with Advent of code. Here is my code for the Day 1 puzzle. Although it is
        not very well written, I would still like to post my solution here. Please
        feel free to provide your valuable suggestions.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;using
        DelimitedFiles\nfunction max_elf_calories(calories::Matrix, n::Int64)\n\n#
        initialization\nelf_calories = 0 # stores calories for each elf\nmax_elf_calories
        = 0 # stores maximum calories\nlist_elf_calories = [] # A list to store each
        elf&amp;#39;s total calories \nfor l in calories\n    if !isempty(l)\n        elf_calories
        +=  l\n    else\n        if elf_calories &amp;gt; max_elf_calories\n            max_elf_calories
        = elf_calories\n        end\n        list_elf_calories = push!(list_elf_calories,
        elf_calories)\n        elf_calories = 0\n    end\nend\nsort!(list_elf_calories,
        rev = true) # sorting in decending order\ntop_three_elf_Calories = sum(list_elf_calories[1:n])
        # adding top 3 \n\nreturn max_elf_calories, top_three_elf_Calories\nend\n\n#
        read input file \ncalories = readdlm(&amp;quot;data/input_day01.txt&amp;quot;,
        skipblanks=false) \nmax_cal, max_n_cal = max_elf_calories(calories, 3)\nprintln(&amp;quot;Part
        1: The total calories are: &amp;quot;, max_cal)\nprintln(&amp;quot;Part 2:
        The total calories carrying by the top three elfs are :&amp;quot;, max_n_cal)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi03l0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi03l0", "created":
        1669908780.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670054821.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi6v95", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "cbrnr",
        "can_mod_post": false, "created_utc": 1669911539.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_4udoumrm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Julia\n\n    include(\"utils.jl\")\n\n    cookie = \"\"  # use your session
        cookie here\n    input = get_aoc_input(1, cookie)\n\n    elves = split.(split(input,
        \"\\n\\n\"))  # split into elves then food per elf\n\n    calories = sort!([sum(parse.(Int,
        elf)) for elf in elves], rev=true)\n\n    # part 1\n    println(\"Maximum
        calories: \", calories[1])\n\n    # part 2\n    println(\"Sum of top three
        calories: \", sum(calories[1:3]))\n\nI wrote a short helper function `get_aoc_input()`
        to fetch the input with a valid session cookie:\n\n    using HTTP\n\n    \"\"\"\n        get_aoc_input(day,
        cookie)\n\n    Download Advent of Code 2022 input data for the given `day`.\n\n    A
        valid `cookie` must be provided, for example by logging into the\n    [Advent
        of Code website](https://adventofcode.com/2022) with a browser and\n    copying
        the session cookie (accessible in the browser preferences).\n    \"\"\"\n    function
        get_aoc_input(day::Integer, cookie::AbstractString)\n        cookies = Dict(\"session\"=&gt;cookie)\n        r
        = HTTP.get(\n            \"https://adventofcode.com/2022/day/$day/input\",\n            cookies=cookies\n        )\n        String(r.body)\n    end\n\nAll
        solutions are available [here](https://github.com/cbrnr/aoc2022).", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h2&gt;Julia&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;include(&amp;quot;utils.jl&amp;quot;)\n\ncookie
        = &amp;quot;&amp;quot;  # use your session cookie here\ninput = get_aoc_input(1,
        cookie)\n\nelves = split.(split(input, &amp;quot;\\n\\n&amp;quot;))  # split
        into elves then food per elf\n\ncalories = sort!([sum(parse.(Int, elf)) for
        elf in elves], rev=true)\n\n# part 1\nprintln(&amp;quot;Maximum calories:
        &amp;quot;, calories[1])\n\n# part 2\nprintln(&amp;quot;Sum of top three calories:
        &amp;quot;, sum(calories[1:3]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I wrote
        a short helper function &lt;code&gt;get_aoc_input()&lt;/code&gt; to fetch
        the input with a valid session cookie:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;using
        HTTP\n\n&amp;quot;&amp;quot;&amp;quot;\n    get_aoc_input(day, cookie)\n\nDownload
        Advent of Code 2022 input data for the given `day`.\n\nA valid `cookie` must
        be provided, for example by logging into the\n[Advent of Code website](https://adventofcode.com/2022)
        with a browser and\ncopying the session cookie (accessible in the browser
        preferences).\n&amp;quot;&amp;quot;&amp;quot;\nfunction get_aoc_input(day::Integer,
        cookie::AbstractString)\n    cookies = Dict(&amp;quot;session&amp;quot;=&amp;gt;cookie)\n    r
        = HTTP.get(\n        &amp;quot;https://adventofcode.com/2022/day/$day/input&amp;quot;,\n        cookies=cookies\n    )\n    String(r.body)\nend\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;All
        solutions are available &lt;a href=\"https://github.com/cbrnr/aoc2022\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi6v95/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi6v95", "created":
        1669911539.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyq5z3n", "id": "iyq5z3n", "parent_id":
        "t1_iyi6v95", "depth": 1, "children": ["iyq5z3n", "iylz9pw"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi8it6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "BaaBaaPinkSheep",
        "can_mod_post": false, "created_utc": 1669912209.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_ba7lz1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python using list comprehension\n\n[https://raw.githubusercontent.com/SnoozeySleepy/AdventOfCode2022/main/day1.py](https://raw.githubusercontent.com/SnoozeySleepy/AdventOfCode2022/main/day1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python using list comprehension&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://raw.githubusercontent.com/SnoozeySleepy/AdventOfCode2022/main/day1.py\"&gt;https://raw.githubusercontent.com/SnoozeySleepy/AdventOfCode2022/main/day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi8it6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi8it6", "created":
        1669912209.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi8rpl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "prendradjaja",
        "can_mod_post": false, "created_utc": 1669912311.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_4uw2bk4a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript:\n\nIMO method chaining is a really nice way to go here!\n\n    const
        part2Answer = readFileSync(''in'', ''utf-8'')\n      .trimEnd()\n      .split(''\\n\\n'')\n      .map(paragraph
        =&gt;\n        paragraph\n          .split(''\\n'')\n          .map(line =&gt;
        +line)\n          .reduce((a, b) =&gt; a + b) // sum\n      )\n      .sort((a,
        b) =&gt; b - a) // sort descending\n      .slice(0, 3)\n      .reduce((a,
        b) =&gt; a + b) // sum\n\nSee a.js and b.js here: https://github.com/prendradjaja/advent-of-code-2022/tree/main/01--calorie-counting",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript:&lt;/p&gt;\n\n&lt;p&gt;IMO
        method chaining is a really nice way to go here!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        part2Answer = readFileSync(&amp;#39;in&amp;#39;, &amp;#39;utf-8&amp;#39;)\n  .trimEnd()\n  .split(&amp;#39;\\n\\n&amp;#39;)\n  .map(paragraph
        =&amp;gt;\n    paragraph\n      .split(&amp;#39;\\n&amp;#39;)\n      .map(line
        =&amp;gt; +line)\n      .reduce((a, b) =&amp;gt; a + b) // sum\n  )\n  .sort((a,
        b) =&amp;gt; b - a) // sort descending\n  .slice(0, 3)\n  .reduce((a, b) =&amp;gt;
        a + b) // sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See a.js and b.js here:
        &lt;a href=\"https://github.com/prendradjaja/advent-of-code-2022/tree/main/01--calorie-counting\"&gt;https://github.com/prendradjaja/advent-of-code-2022/tree/main/01--calorie-counting&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi8rpl/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi8rpl", "created":
        1669912311.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670150220.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi8t6h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyi8t6h", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi8t6h/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669912328.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669912328.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyigjwl", "id": "iyigjwl", "parent_id":
        "t1_iyi8t6h", "depth": 1, "children": ["iyigjwl"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669968052.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi92dh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "markjenkinswpg",
        "can_mod_post": false, "created_utc": 1669912433.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_4ud54", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Santa has many elves (billions?) on the expedition, some of whom have many
        items. Santa gave the elves very little storage or memory to work with. Fortunately
        there is enough memory to run Python and this [solution](https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223#file-aoc2022_d01_const_mem-py)
        (GitHub gist) with constant memory size regardless of how many elves and how
        many items.\n\nThis uses the \"batteries included\" heap priority queue based
        heapq.nlargest function and generators.\n\nNo need for input storage, the
        elves line up and use stdin interactively.\n\nMalicious elves who try to enter
        zero also cause no problem.\n\n[Raw link](https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223/raw/19cfdab48fdd35c84c0928b445908cf0460d687e/aoc2022_day01_const_mem.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Santa has many elves
        (billions?) on the expedition, some of whom have many items. Santa gave the
        elves very little storage or memory to work with. Fortunately there is enough
        memory to run Python and this &lt;a href=\"https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223#file-aoc2022_d01_const_mem-py\"&gt;solution&lt;/a&gt;
        (GitHub gist) with constant memory size regardless of how many elves and how
        many items.&lt;/p&gt;\n\n&lt;p&gt;This uses the &amp;quot;batteries included&amp;quot;
        heap priority queue based heapq.nlargest function and generators.&lt;/p&gt;\n\n&lt;p&gt;No
        need for input storage, the elves line up and use stdin interactively.&lt;/p&gt;\n\n&lt;p&gt;Malicious
        elves who try to enter zero also cause no problem.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gist.github.com/markjenkins/89208994fdc78b102d8daae7703c5223/raw/19cfdab48fdd35c84c0928b445908cf0460d687e/aoc2022_day01_const_mem.py\"&gt;Raw
        link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi92dh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi92dh", "created":
        1669912433.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyjhfgd", "id": "iyjhfgd", "parent_id":
        "t1_iyi92dh", "depth": 1, "children": ["iyjhfgd", "iyigie9"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyibyuw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "CptBlacksheep",
        "can_mod_post": false, "created_utc": 1669913559.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_tcsck", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Kotlin day 1](https://github.com/CptBlacksheep/advent-of-code-2022/blob/main/src/main/kotlin/com/github/cptblacksheep/adventofcode2022/Day1.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/CptBlacksheep/advent-of-code-2022/blob/main/src/main/kotlin/com/github/cptblacksheep/adventofcode2022/Day1.kt\"&gt;Kotlin
        day 1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyibyuw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyibyuw", "created":
        1669913559.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyidbww", "id": "iyidbww", "parent_id":
        "t1_iyibyuw", "depth": 1, "children": ["iyidbww"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1707000637.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyicsds", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "heyitsmattwade",
        "can_mod_post": false, "created_utc": 1669913865.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_985du", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Javascript 1401/701\n\nI''m always amazed at the speed people have in solving
        these! Happy AoC to all who celebrate!\n\n[code paste](https://romellem.github.io/paste/#XQAAAQA5AgAAAAAAAAA9iImGVD/UQZfk+oJTfwg2/VsJ0DpNkr2zGUvTQlsh3wS86ErCiIs+8hruVNIFt25kOOZrzOGZxbRwHmJ5wrAVdOuA2kk0mNS0CwkIEqOmO95EhbRoIUTonrtGzVALDhyFMRO24/2oA0Lt4k+Q2E/wp4YaHUgbXZtC5amaE5MmewTUwYV3d2c08XNXkJSlcNdZoC0u7tg9I5cHLIy8xeQnWjOktbzSiYQDMUEkxiMhNy/jBJsAXuOw6fhT/JJLbHAvxJOMIJwA9xeOWuYgUZreP/p14eow3RJLUg5asp7xtgQlLDAZvLXNuvnwWdknx5kvJsSlgugwpXlX61j10K97sb5fSjCbPLsk0hX0qYmzKDaY5tqkSdHZuSOSRjyT6N0+T5iTFnGfYj0WgdwYo6x6NykNxskEtrQzJjoJXFUgp+xna25v7/wi/+nb/9Y=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Javascript 1401/701&lt;/h1&gt;\n\n&lt;p&gt;I&amp;#39;m
        always amazed at the speed people have in solving these! Happy AoC to all
        who celebrate!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://romellem.github.io/paste/#XQAAAQA5AgAAAAAAAAA9iImGVD/UQZfk+oJTfwg2/VsJ0DpNkr2zGUvTQlsh3wS86ErCiIs+8hruVNIFt25kOOZrzOGZxbRwHmJ5wrAVdOuA2kk0mNS0CwkIEqOmO95EhbRoIUTonrtGzVALDhyFMRO24/2oA0Lt4k+Q2E/wp4YaHUgbXZtC5amaE5MmewTUwYV3d2c08XNXkJSlcNdZoC0u7tg9I5cHLIy8xeQnWjOktbzSiYQDMUEkxiMhNy/jBJsAXuOw6fhT/JJLbHAvxJOMIJwA9xeOWuYgUZreP/p14eow3RJLUg5asp7xtgQlLDAZvLXNuvnwWdknx5kvJsSlgugwpXlX61j10K97sb5fSjCbPLsk0hX0qYmzKDaY5tqkSdHZuSOSRjyT6N0+T5iTFnGfYj0WgdwYo6x6NykNxskEtrQzJjoJXFUgp+xna25v7/wi/+nb/9Y=\"&gt;code
        paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyicsds/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyicsds", "created":
        1669913865.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyj5rzi", "id": "iyj5rzi", "parent_id":
        "t1_iyicsds", "depth": 1, "children": ["iyj5rzi"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669914788.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyie245", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Big_Mac1995",
        "can_mod_post": false, "created_utc": 1669914356.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_uhpbcqfe", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day one solution in C#. Tried to avoid the memory overhead of reading the
        entire input/ splitting/ parsing.\n\n    public static void Run(string inputPath)\n    {\n        var
        caloriesByElf = GetSortedCalories(inputPath);\n        Console.WriteLine($\"Most
        cals held by an elf: {caloriesByElf[0]}\");\n        Console.WriteLine($\"Total
        cals held by top 3 elves: {caloriesByElf.Take(3).Sum()}\");\n    }\n    \n    private
        static List&lt;int&gt; GetSortedCalories(string inputPath)\n    {\n        List&lt;int&gt;
        caloriesByElf = new List&lt;int&gt;();\n        using var sr = File.OpenText(inputPath);\n        string?
        line;\n        int currentElfTotal = 0;\n        while ((line = sr.ReadLine())
        != null)\n        {\n            if (string.IsNullOrWhiteSpace(line))\n            {\n                caloriesByElf.Add(currentElfTotal);\n                currentElfTotal
        = 0;\n            }\n            else\n            {\n                currentElfTotal
        += int.Parse(line);\n            }\n        }\n        caloriesByElf.Add(currentElfTotal);
        // Ensure final elf is counted.\n        caloriesByElf.Sort((a, b) =&gt; b.CompareTo(a));\n        return
        caloriesByElf;\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day
        one solution in C#. Tried to avoid the memory overhead of reading the entire
        input/ splitting/ parsing.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public static
        void Run(string inputPath)\n{\n    var caloriesByElf = GetSortedCalories(inputPath);\n    Console.WriteLine($&amp;quot;Most
        cals held by an elf: {caloriesByElf[0]}&amp;quot;);\n    Console.WriteLine($&amp;quot;Total
        cals held by top 3 elves: {caloriesByElf.Take(3).Sum()}&amp;quot;);\n}\n\nprivate
        static List&amp;lt;int&amp;gt; GetSortedCalories(string inputPath)\n{\n    List&amp;lt;int&amp;gt;
        caloriesByElf = new List&amp;lt;int&amp;gt;();\n    using var sr = File.OpenText(inputPath);\n    string?
        line;\n    int currentElfTotal = 0;\n    while ((line = sr.ReadLine()) !=
        null)\n    {\n        if (string.IsNullOrWhiteSpace(line))\n        {\n            caloriesByElf.Add(currentElfTotal);\n            currentElfTotal
        = 0;\n        }\n        else\n        {\n            currentElfTotal += int.Parse(line);\n        }\n    }\n    caloriesByElf.Add(currentElfTotal);
        // Ensure final elf is counted.\n    caloriesByElf.Sort((a, b) =&amp;gt; b.CompareTo(a));\n    return
        caloriesByElf;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyie245/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyie245", "created": 1669914356.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 5, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyienel", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": false, "author": "thibpat", "can_mod_post": false, "created_utc":
        1669914581.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 5,
        "author_fullname": "t2_j7bwx", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**JavaScript (+ video walkthrough)**\n\nI''ve
        recorded my solution explanation on [https://youtu.be/um\\_-T8patWs](https://youtu.be/um_-T8patWs)\n\nThe
        code is available on github: [https://github.com/tpatel/advent-of-code-2022/blob/main/day01.mjs](https://github.com/tpatel/advent-of-code-2022/blob/main/day01.mjs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;JavaScript
        (+ video walkthrough)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve recorded
        my solution explanation on &lt;a href=\"https://youtu.be/um_-T8patWs\"&gt;https://youtu.be/um_-T8patWs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The
        code is available on github: &lt;a href=\"https://github.com/tpatel/advent-of-code-2022/blob/main/day01.mjs\"&gt;https://github.com/tpatel/advent-of-code-2022/blob/main/day01.mjs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyienel/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyienel", "created":
        1669914581.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyig963",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dafer45",
        "can_mod_post": false, "created_utc": 1669915203.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_c4gyw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash day 1: [https://twitter.com/SecondTec/status/1598365783792488449](https://twitter.com/SecondTec/status/1598365783792488449)  \n\n\nawk
        -v RS= ''{$1=$1}1'' input | sed ''s/ /+/g'' | bc | sort -n | tail -n 1 | xargs
        -I {} echo \"The toughest elf carries\" {} \"calories.\"\n\nawk -v RS= ''{$1=$1}1''
        input | sed ''s/ /+/g'' | bc | sort -n | tail -n 3 | sed -z ''s/\\\\n/+/g''
        | rev | cut -c 2- | rev | bc | xargs -I {} echo \"The three toughest elves
        carries\" {} \"calories.\"", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash
        day 1: &lt;a href=\"https://twitter.com/SecondTec/status/1598365783792488449\"&gt;https://twitter.com/SecondTec/status/1598365783792488449&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;awk
        -v RS= &amp;#39;{$1=$1}1&amp;#39; input | sed &amp;#39;s/ /+/g&amp;#39; |
        bc | sort -n | tail -n 1 | xargs -I {} echo &amp;quot;The toughest elf carries&amp;quot;
        {} &amp;quot;calories.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;awk -v RS= &amp;#39;{$1=$1}1&amp;#39;
        input | sed &amp;#39;s/ /+/g&amp;#39; | bc | sort -n | tail -n 3 | sed -z
        &amp;#39;s/\\n/+/g&amp;#39; | rev | cut -c 2- | rev | bc | xargs -I {} echo
        &amp;quot;The three toughest elves carries&amp;quot; {} &amp;quot;calories.&amp;quot;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyig963/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyig963", "created":
        1669915203.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiglmf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "villiros",
        "can_mod_post": false, "created_utc": 1669915334.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_1om7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**OCaml**\n\nMy first program.jpg\n\n    (* Read from channel into a list
        of lists of integers (one list for each elf)*)\n    let read_data ic =\n      let
        rec reader cur acc =\n        match input_line ic with\n        | exception
        End_of_file -&gt; cur :: acc\n        | \"\" -&gt; reader [] (cur :: acc)\n        |
        cals -&gt; reader (int_of_string cals :: cur) acc\n      in\n      reader
        [] []\n    \n    (* Part A *)\n    let parta data =\n      let open List in\n      let
        summed = map (fold_left ( + ) 0) data in\n      hd (rev (sort ( - ) summed))\n    \n    (*
        Part B *)\n    let partb data =\n      let open List in\n      let summed
        = map (fold_left ( + ) 0) data in\n      match rev (sort ( - ) summed) with\n      |
        a :: b :: c :: _ -&gt; a + b + c\n      | _ -&gt; assert false\n    \n    let
        () =\n      Format.printf \"parta: %i\\n\" (parta (read_data (open_in \"../input/p01.txt\")));\n      Format.printf
        \"partab %i\\n\" (partb (read_data (open_in \"../input/p01.txt\")))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;OCaml&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        first program.jpg&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(* Read from channel
        into a list of lists of integers (one list for each elf)*)\nlet read_data
        ic =\n  let rec reader cur acc =\n    match input_line ic with\n    | exception
        End_of_file -&amp;gt; cur :: acc\n    | &amp;quot;&amp;quot; -&amp;gt; reader
        [] (cur :: acc)\n    | cals -&amp;gt; reader (int_of_string cals :: cur) acc\n  in\n  reader
        [] []\n\n(* Part A *)\nlet parta data =\n  let open List in\n  let summed
        = map (fold_left ( + ) 0) data in\n  hd (rev (sort ( - ) summed))\n\n(* Part
        B *)\nlet partb data =\n  let open List in\n  let summed = map (fold_left
        ( + ) 0) data in\n  match rev (sort ( - ) summed) with\n  | a :: b :: c ::
        _ -&amp;gt; a + b + c\n  | _ -&amp;gt; assert false\n\nlet () =\n  Format.printf
        &amp;quot;parta: %i\\n&amp;quot; (parta (read_data (open_in &amp;quot;../input/p01.txt&amp;quot;)));\n  Format.printf
        &amp;quot;partab %i\\n&amp;quot; (partb (read_data (open_in &amp;quot;../input/p01.txt&amp;quot;)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiglmf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiglmf", "created":
        1669915334.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyj578e", "id": "iyj578e", "parent_id":
        "t1_iyiglmf", "depth": 1, "children": ["iyj578e"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyigmi0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Crazytieguy",
        "can_mod_post": false, "created_utc": 1669915344.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_t7d1g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\n[github](https://github.com/Crazytieguy/advent-of-code/blob/master/2022/src/bin/day1/main.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Crazytieguy/advent-of-code/blob/master/2022/src/bin/day1/main.rs\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyigmi0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyigmi0", "created":
        1669915344.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyihdaz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "madisp",
        "can_mod_post": false, "created_utc": 1669915633.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_5o8tl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Fast Kotlin version, around 11x faster than the idiomatic functional one.\n\n    override
        fun part2(input: List&lt;IntArray&gt;): Int {\n      var smallest = 0\n      var
        r1 = 0\n      var r2 = 0\n    \n      input.forEach { calories -&gt;\n        val
        sum = calories.sum()\n        if (smallest &lt; sum) {\n          smallest
        = sum\n    \n          // rebalance smallest between r1 and r2\n          if
        (smallest &gt; r1) {\n            smallest = r1\n            r1 = sum\n          }\n          if
        (smallest &gt; r2) {\n            val r3 = r2\n            r2 = smallest\n            smallest
        = r3\n          }\n        }\n      }\n      return smallest + r1 + r2\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fast Kotlin version,
        around 11x faster than the idiomatic functional one.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;override
        fun part2(input: List&amp;lt;IntArray&amp;gt;): Int {\n  var smallest = 0\n  var
        r1 = 0\n  var r2 = 0\n\n  input.forEach { calories -&amp;gt;\n    val sum
        = calories.sum()\n    if (smallest &amp;lt; sum) {\n      smallest = sum\n\n      //
        rebalance smallest between r1 and r2\n      if (smallest &amp;gt; r1) {\n        smallest
        = r1\n        r1 = sum\n      }\n      if (smallest &amp;gt; r2) {\n        val
        r3 = r2\n        r2 = smallest\n        smallest = r3\n      }\n    }\n  }\n  return
        smallest + r1 + r2\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyihdaz/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyihdaz", "created": 1669915633.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyii9sh", "id": "iyii9sh", "parent_id": "t1_iyihdaz", "depth": 1, "children":
        ["iyii9sh"]}}, {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669917556.0,
        "mod_reason_by": null, "banned_by": null, "removal_reason": null, "link_id":
        "t3_z9ezjb", "author_flair_template_id": null, "likes": null, "replies": "",
        "user_reports": [], "saved": false, "id": "iyij19r", "banned_at_utc": null,
        "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": false, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 5, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_iyij19r", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyij19r/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669916276.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669916276.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyjl62k", "id": "iyjl62k", "parent_id":
        "t1_iyij19r", "depth": 1, "children": ["iyjl62k", "iyio8e4"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyijpue",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tcbrindle",
        "can_mod_post": false, "created_utc": 1669916539.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_r2bvf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C++**\n\n    template &lt;int N&gt;\n    auto solution = [](std::string_view
        input)\n    {\n        return flux::split_string(input, \"\\n\\n\")\n                    .map([](std::string_view
        group) {\n                        return flux::split_string(group, ''\\n'')\n                                .map(aoc::try_parse&lt;int&gt;)\n                                ._(filter_deref)\n                                .sum();\n                    })\n                    ._(max_n&lt;N&gt;)\n                    .sum();\n    };\n\n    auto
        part1 = solution&lt;1&gt;;\n    auto part2 = solution&lt;3&gt;;\n\nFull code
        on [Github](https://github.com/tcbrindle/advent_of_code_2022/blob/main/dec01/main.cpp)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;template
        &amp;lt;int N&amp;gt;\nauto solution = [](std::string_view input)\n{\n    return
        flux::split_string(input, &amp;quot;\\n\\n&amp;quot;)\n                .map([](std::string_view
        group) {\n                    return flux::split_string(group, &amp;#39;\\n&amp;#39;)\n                            .map(aoc::try_parse&amp;lt;int&amp;gt;)\n                            ._(filter_deref)\n                            .sum();\n                })\n                ._(max_n&amp;lt;N&amp;gt;)\n                .sum();\n};\n\nauto
        part1 = solution&amp;lt;1&amp;gt;;\nauto part2 = solution&amp;lt;3&amp;gt;;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full
        code on &lt;a href=\"https://github.com/tcbrindle/advent_of_code_2022/blob/main/dec01/main.cpp\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyijpue/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyijpue", "created":
        1669916539.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_iyiut70", "id": "iyiut70", "parent_id":
        "t1_iyijpue", "depth": 1, "children": ["iyiut70", "iyiuwr9", "iyjq8xp"]}},
        {"kind": "more", "data": {"count": 1064, "name": "t1_iyimw2r", "id": "iyimw2r",
        "parent_id": "t3_z9ezjb", "depth": 0, "children": ["iyimw2r", "iyin5hd", "iyiyt15",
        "iyiva1l", "iyjdde5", "iyj5mny", "iyj2an6", "iyiz95o", "iyjdd5h", "iyk78oy",
        "iyjmyoj", "iyjamqj", "iyjqn57", "iygka65", "iygqj28", "iyktzod", "iyj33ns",
        "iyghhlf", "iykcpbh", "iykxc31", "iyjuwbr", "iyggs37", "iyjs61z", "iyjq27f",
        "iyh3ipx", "iyjt0r4", "iyhnuwt", "iyh7938", "iyh4j50", "iygw4nv", "iygin6x",
        "iygul2m", "iyj9zcg", "iygn1c3", "iygrfdj", "iyh70zr", "iyggs0n", "iynmvck",
        "iygmaml", "iyggmu0", "iyh9sz6", "iygrl7g", "iyi5mb6", "iykba6a", "iygs8y7",
        "iyjzlv2", "iyggs40", "iyglyla", "iygkuux", "iyh6v07", "iyhg8mm", "iyh1z60",
        "iygpvr6", "iyji2ik", "iyid8ah", "iyh6ipy", "iyguelm", "iyixwn5", "iyh6avq",
        "iyi5lfb", "iygqjmn", "iygje2d", "iyktjwk", "iygzh5i", "iyjkilt", "iyjmjti",
        "iyjlqwe", "iyh5meo", "iyhnlpb", "iygwtge", "iyhzbnm", "iyj7qvx", "iyh3pws",
        "iyggtxq", "iygkxlq", "iyhud6h", "iyhae6e", "iyh8acg", "iyh5ex1", "iyghinf",
        "iylw4iq", "iyhjkjw", "iyghhpq", "iyhdtk6", "iyhkpo5", "iyh23v3", "iyh3qk1",
        "iygs4zx", "iyloqpg", "iyhwkux", "iyhhp2z", "iygzx33", "iyhihj8", "iygpi5x",
        "iyi9xmp", "iyhhmdv", "iyh7kil", "iyj4jvs", "iyh4d67", "iyhmipo", "iykhf2b",
        "iyhqehc", "iyj01y1", "iykw82v", "iyivmd4", "iyigqnw", "iyjn0xs", "iym0xxj",
        "iygxiqu", "iyjmfg2", "iygv06u", "iyibwag", "iyhe9x7", "iyhawrr", "iyhj14i",
        "iygortf", "iyk6f5r", "iyj9hb0", "iyhenrh", "iygg75r", "iyi73mk", "iyj8urz",
        "iyjk5c5", "iyi43qa", "iygtgn9", "iygpwy8", "iyhhx5j", "iyggemo", "iykr4j2",
        "iyihtt5", "iygls4b", "iygoshr", "iyjqu6s", "iyhzopl", "iykty7b", "iyk964p",
        "iyhqtzi", "iyhm9bd", "iyizg5x", "iygvg47", "iygxx9k", "iygzohd", "iyhncoa",
        "iyi42bx", "iyhpim5", "iyhdm18", "iyllxtz", "iygwwax", "iygs1yo", "iykt1ij",
        "iyhjxcg", "iygtcbe", "iyiuo14", "iyi8c85", "iygu9im", "iyjgbn4", "iyhazll",
        "iyhjx47", "iyj2rpc", "iyhjhbv", "iyhk1w1", "iyhn1tj", "iyh1sbe", "iyghbx9",
        "iyhg6wl", "iyh8y4t", "iygihhd", "iyh4bg4", "iyi7wuv", "iygojh4", "iyhwp80",
        "iykeihg", "iyhkd91", "iyl2era", "iyizsac", "iyi5ph1", "iygvepx", "iyifepj",
        "iyj82ao", "iyi9lor", "iylv8l4", "iylkrc2", "iyhckmi", "iyhs4pw", "iyhta1w",
        "iyiptcs", "iygwx9e", "iyixtuz", "iykqjpw", "iym1oim", "iyi25hy", "iygibn4",
        "iyhcntx", "iygk7ty", "iyhviwa", "iyityzs", "iyhu377", "iyml7p5", "iyjttql",
        "iykr360", "iylrykp", "iyj9nk4", "iyio5ot", "iyggvrp", "iygksew", "iygii8u",
        "iyizv63", "iyht2wb", "iymfr3k", "iykjqu5", "iyggef3", "iylt0c2", "iyjfcnq",
        "iyk589m", "iyhrqsb", "iyk1xr7", "iykcmen", "iygzep7", "iyj1jqy", "iyjg18i",
        "iylrdmd", "iylrzr2", "iyhtniy", "iyghrha", "iyhly7i", "iyidtjc", "iyi61u1",
        "iygtn82", "iyiu5e2", "iyig2js", "iyig3lr", "iyk8vik", "iygr5ot", "iyjyxup",
        "iyids34", "iyhoas8", "iyggvx5", "iygt7fy", "iyjo6pc", "iyid3mu", "iyl3nhm",
        "iyjufhy", "iyjtc5m", "iyjhb6d", "iyih8nf", "iygnqw6", "iyi0vt0", "iylpn1h",
        "iygzbos", "iygs99u", "iygpwyd", "iyjk8d1", "iylsfbg", "iyib1g3", "iyjfti2",
        "iylbokf", "iyjll1x", "iyjr1gr", "iyj0pbg", "iyhi0hs", "iylvz2d", "iykih4i",
        "iyi58dz", "iyicmdx", "iyi42o2", "iymm9y8", "iyghdgp", "iygvdkc", "iyglpww",
        "iyk5rz1", "iyjxqbh", "iygqxbs", "iygtt5s", "iyhf4pi", "iyj12wv", "iyiuhlp",
        "iygu8w6", "iygocru", "iyhfum8", "iyhap4o", "iyhwhv8", "iyj2fnp", "iygnnpp",
        "iyggqcs", "iyghf4q", "iyk142r", "iygpln4", "iyja14o", "iykr6rb", "iyjz08s",
        "iygul8j", "iyjxybu", "iyjlma8", "iyh1cly", "iyhfj16", "iyhwmf9", "iyh134y",
        "iyiyv19", "iyiq59r", "iyh9nau", "iygsgdd", "iyghgsh", "iyghijn", "iyhepar",
        "iygifp2", "iyjfjcb", "iyhucho", "iyjoviq", "iyh254k", "iygh1vn", "iyjjx19",
        "iyh37cn", "iygq3eu", "iyhx6dw", "iygi2zb", "iylvnvr", "iyh2ga8", "iygumyg",
        "iyk2msm", "iyirah1", "iyhdmga", "iyip2ky", "iylofbp", "iykgq29", "iyhmy8u",
        "iygq8yp", "iyggs2n", "iykuhvk", "iyghk2v", "iyh7vgw", "iygvd37", "iygo7is",
        "iyh40eu", "iygj0gb", "iygizh5", "iygq9ex", "iyjqs6b", "iylruwg", "iygihp4",
        "iyjjlwa", "iyilp2v", "iykl2k8", "iyh94pi", "iyjes91", "iyh2xk0", "iyhnl8j",
        "iyit8hi", "iylbsbk", "iygnjv0", "iyjsuh9", "iyki2hv", "iyglg0j", "iyn5own",
        "iyjr2fv", "iyhp9bc", "iyjqdky", "iyiijcf", "iyk8tpt", "iyjuk4z", "iygnrsm",
        "iyj6m98", "iymtg1y", "iyjo0p4", "iygqbgt", "iygj91q", "iyhp7bp", "iyglepl",
        "iyh5f37", "iyghyk7", "iyhu7hi", "iygpb55", "iyhdc65", "iynanji", "iygipfe",
        "iyjmvn5", "iygtqba", "iygxrp3", "iygjsuh", "iyiew8r", "iyilrwd", "iyjq2ke",
        "iygl6mf", "iyj5tvu", "iygk71s", "iyiuevh", "iyjca4f", "iygkieb", "iyilg4g",
        "iyh3qkb", "iygx5l6", "iyh5gmk", "iyhbnku", "iyl7t9c", "iyh83ef", "iyk33x5",
        "iyiuahb", "iyikovq", "iyhqtl8", "iygwf7e", "iyj1e8h", "iyh0jn5", "iygrb24",
        "iygot51", "iyhhlqt", "iygnie1", "iyi3voe", "iygjmjd", "iyj05dc", "iyghnsf",
        "iyh2jzk", "iyl6d5z", "iygty01", "iyirrcf", "iymnxs4", "iyjfvg4", "iyh01nr",
        "iygjyh0", "iyjrsrt", "iygwcfb", "iyls2ng", "iylldan", "iyi6v6k", "iygk2q0",
        "iyk38p6", "iykca4b", "iyj8sit", "iylsah5", "iyh7ecp", "iyglvip", "iygi5po",
        "iyh4msz", "iyjd08l", "iylr8nj", "iyjtywa", "iyjt0id", "iyj0l1g", "iyhg2qj",
        "iylrl58", "iyhfatq", "iymeok0", "iyglca6", "iyiwnvn", "iyjpndh", "iyjon13",
        "iygkf3o", "iygh7jy", "iygk3a4", "iygnov1", "iyjhii0", "iygsprw", "iyh9uw5",
        "iyjj4z7", "iymoetz", "iykjata", "iyhfzli", "iylenyb", "iyifjlg", "iyk30jj",
        "iyjjbuu", "iyi4yrd", "iygld5k", "iyjo9dr", "iykukm3", "iygyccj", "iyjpq76",
        "iykiwgh", "iygu4na", "iyk3370", "iyj68z1", "iyh87eq", "iyhd2b7", "iyjqxua",
        "iygzbp2", "iyhd6hi", "iygmznb", "iyjrdd3", "iyhjfge", "iygrr0v", "iygidqj",
        "iygk841", "iykqwil", "iyna5us", "iyhnrc6", "iyj8hzx", "iylvtwj", "iygonqk",
        "iyll509", "iygiahl", "iyhaofh", "iyh55x1", "iygk5ym", "iyghlbt", "iygire9",
        "iyj6eg1", "iylbtc9", "iygl9gz", "iyjkm2g", "iygiuk8", "iyitfmg", "iykp93u",
        "iyh9v1e", "iyjuml8", "iyijotf", "iyigaiq", "iyjhev8", "iyh7ico", "iykf2rh",
        "iyjcn65", "iyk5zef", "iykh5as", "iykhrv4", "iygllw5", "iyhr51u", "iygi5xr",
        "iylahzo", "iyizzou", "iygtowk", "iygnnt2", "iyifpzv", "iyh4jvk", "iyjbqi4",
        "iyh27hi", "iykv833", "iyiuj74", "iyh903q", "iyhmu7g", "iygj0fa", "iygtz22",
        "iygjuhs", "iyhc157", "iyippe0", "iyk2rga", "iyijtn7", "iyk42v2", "iygifh5",
        "iyl783x", "iylrvts", "iymrn28", "iyjjk6w", "iykbd6u", "iyioig2", "iyjh0by",
        "iygiar9", "iykxscx", "iylmebf", "iyk0fpn", "iyjp7up", "iyhlomk", "iyl15he",
        "iyi1l73", "iygnqq5", "iyik00f", "iylyrfw", "iyifqq9", "iyjs7bn", "iykillk",
        "iyjqo0n", "iyi2ubt", "iyjphct", "iyj4wrk", "iygiboc", "iyk2sbf", "iygzzzp",
        "iykopsr", "iyju5na", "iygits6", "iyjmlnl", "iyndflq", "iyghs29", "iygjpdu",
        "iyh85kz", "iyhej8p", "iyh9s69", "iyh9vm9", "iyjrlwy", "iyk2b5l", "iygikbe",
        "iyik796", "iygnsdd", "iyjosmn", "iygiuff", "iyjdyny", "iyiev6x", "iyh48zd",
        "iygjzud", "iygilxa", "iyhbekg", "iylhx8m", "iykkyaf", "iykhd3j", "iyjsr7s",
        "iygh4ev", "iygu7yp", "iygsonm", "iygretv", "iygi1lg", "iyisc1l", "iygh5ur",
        "iyhclqb", "iyh47kb", "iyhtfc5", "iyh53if", "iygikhh", "iygvchv", "iyjmzei",
        "iyjoxe5", "iyndnm7", "iyhcc5a", "iygogzm"]}}], true]], [0, 12, "attr", "things"],
        [12, 13, "call", ["t1_iygwh92"]], [13, 14, "attr", "focus"], [14, 15, "call",
        []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr",
        "filter"], [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"],
        [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:35 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:35 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=xnmvaeGw7BDLOre2iR; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:35 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyimw2r,iyin5hd,iyiyt15,iyiva1l,iyjdde5,iyj5mny,iyj2an6,iyiz95o,iyjdd5h,iyk78oy,iyjmyoj,iyjamqj,iyjqn57,iygka65,iygqj28,iyktzod,iyj33ns,iyghhlf,iykcpbh,iykxc31,iyjuwbr,iyggs37,iyjs61z,iyjq27f,iyh3ipx,iyjt0r4,iyhnuwt,iyh7938,iyh4j50,iygw4nv,iygin6x,iygul2m,iyj9zcg,iygn1c3,iygrfdj,iyh70zr,iyggs0n,iynmvck,iygmaml,iyggmu0,iyh9sz6,iygrl7g,iyi5mb6,iykba6a,iygs8y7,iyjzlv2,iyggs40,iyglyla,iygkuux,iyh6v07,iyhg8mm,iyh1z60,iygpvr6,iyji2ik,iyid8ah,iyh6ipy,iyguelm,iyixwn5,iyh6avq,iyi5lfb,iygqjmn,iygje2d,iyktjwk,iygzh5i,iyjkilt,iyjmjti,iyjlqwe,iyh5meo,iyhnlpb,iygwtge,iyhzbnm,iyj7qvx,iyh3pws,iyggtxq,iygkxlq,iyhud6h,iyhae6e,iyh8acg,iyh5ex1,iyghinf,iylw4iq,iyhjkjw,iyghhpq,iyhdtk6,iyhkpo5,iyh23v3,iyh3qk1,iygs4zx,iyloqpg,iyhwkux,iyhhp2z,iygzx33,iyhihj8,iygpi5x,iyi9xmp,iyhhmdv,iyh7kil,iyj4jvs,iyh4d67,iyhmipo,iykhf2b,iyhqehc,iyj01y1,iykw82v,iyivmd4,iyigqnw,iyjn0xs,iym0xxj,iygxiqu,iyjmfg2,iygv06u,iyibwag,iyhe9x7,iyhawrr,iyhj14i,iygortf,iyk6f5r,iyj9hb0,iyhenrh,iygg75r,iyi73mk,iyj8urz,iyjk5c5,iyi43qa,iygtgn9,iygpwy8,iyhhx5j,iyggemo,iykr4j2,iyihtt5,iygls4b,iygoshr,iyjqu6s,iyhzopl,iykty7b,iyk964p,iyhqtzi,iyhm9bd,iyizg5x,iygvg47,iygxx9k,iygzohd,iyhncoa,iyi42bx,iyhpim5,iyhdm18,iyllxtz,iygwwax,iygs1yo,iykt1ij,iyhjxcg,iygtcbe,iyiuo14,iyi8c85,iygu9im,iyjgbn4,iyhazll,iyhjx47,iyj2rpc,iyhjhbv,iyhk1w1,iyhn1tj,iyh1sbe,iyghbx9,iyhg6wl,iyh8y4t,iygihhd,iyh4bg4,iyi7wuv,iygojh4,iyhwp80,iykeihg,iyhkd91,iyl2era,iyizsac,iyi5ph1,iygvepx,iyifepj,iyj82ao,iyi9lor,iylv8l4,iylkrc2,iyhckmi,iyhs4pw,iyhta1w,iyiptcs,iygwx9e,iyixtuz,iykqjpw,iym1oim,iyi25hy,iygibn4,iyhcntx,iygk7ty,iyhviwa,iyityzs,iyhu377,iyml7p5,iyjttql,iykr360,iylrykp,iyj9nk4,iyio5ot,iyggvrp,iygksew,iygii8u,iyizv63,iyht2wb,iymfr3k,iykjqu5,iyggef3,iylt0c2,iyjfcnq,iyk589m,iyhrqsb,iyk1xr7,iykcmen,iygzep7,iyj1jqy,iyjg18i,iylrdmd,iylrzr2,iyhtniy,iyghrha,iyhly7i,iyidtjc,iyi61u1,iygtn82,iyiu5e2,iyig2js,iyig3lr,iyk8vik,iygr5ot,iyjyxup,iyids34,iyhoas8,iyggvx5,iygt7fy,iyjo6pc,iyid3mu,iyl3nhm,iyjufhy,iyjtc5m,iyjhb6d,iyih8nf,iygnqw6,iyi0vt0,iylpn1h,iygzbos,iygs99u,iygpwyd,iyjk8d1,iylsfbg,iyib1g3,iyjfti2,iylbokf,iyjll1x,iyjr1gr,iyj0pbg,iyhi0hs,iylvz2d,iykih4i,iyi58dz,iyicmdx,iyi42o2,iymm9y8,iyghdgp,iygvdkc,iyglpww,iyk5rz1,iyjxqbh,iygqxbs,iygtt5s,iyhf4pi,iyj12wv,iyiuhlp,iygu8w6,iygocru,iyhfum8,iyhap4o,iyhwhv8,iyj2fnp,iygnnpp,iyggqcs,iyghf4q,iyk142r,iygpln4,iyja14o,iykr6rb,iyjz08s,iygul8j,iyjxybu,iyjlma8,iyh1cly,iyhfj16,iyhwmf9,iyh134y,iyiyv19,iyiq59r,iyh9nau,iygsgdd,iyghgsh,iyghijn,iyhepar,iygifp2,iyjfjcb,iyhucho,iyjoviq,iyh254k,iygh1vn,iyjjx19,iyh37cn,iygq3eu,iyhx6dw,iygi2zb,iylvnvr,iyh2ga8,iygumyg,iyk2msm,iyirah1,iyhdmga,iyip2ky,iylofbp,iykgq29,iyhmy8u,iygq8yp,iyggs2n,iykuhvk,iyghk2v,iyh7vgw,iygvd37,iygo7is,iyh40eu,iygj0gb,iygizh5,iygq9ex,iyjqs6b,iylruwg,iygihp4,iyjjlwa,iyilp2v,iykl2k8,iyh94pi,iyjes91,iyh2xk0,iyhnl8j,iyit8hi,iylbsbk,iygnjv0,iyjsuh9,iyki2hv,iyglg0j,iyn5own,iyjr2fv,iyhp9bc,iyjqdky,iyiijcf,iyk8tpt,iyjuk4z,iygnrsm,iyj6m98,iymtg1y,iyjo0p4,iygqbgt,iygj91q,iyhp7bp,iyglepl,iyh5f37,iyghyk7,iyhu7hi,iygpb55,iyhdc65,iynanji,iygipfe,iyjmvn5,iygtqba,iygxrp3,iygjsuh,iyiew8r,iyilrwd,iyjq2ke,iygl6mf,iyj5tvu,iygk71s,iyiuevh,iyjca4f,iygkieb,iyilg4g,iyh3qkb,iygx5l6,iyh5gmk,iyhbnku,iyl7t9c,iyh83ef,iyk33x5,iyiuahb,iyikovq,iyhqtl8,iygwf7e,iyj1e8h,iyh0jn5,iygrb24,iygot51,iyhhlqt,iygnie1,iyi3voe,iygjmjd,iyj05dc,iyghnsf,iyh2jzk,iyl6d5z,iygty01,iyirrcf,iymnxs4,iyjfvg4,iyh01nr,iygjyh0,iyjrsrt,iygwcfb,iyls2ng,iylldan,iyi6v6k,iygk2q0,iyk38p6,iykca4b,iyj8sit,iylsah5,iyh7ecp,iyglvip,iygi5po,iyh4msz,iyjd08l,iylr8nj,iyjtywa,iyjt0id,iyj0l1g,iyhg2qj,iylrl58,iyhfatq,iymeok0,iyglca6,iyiwnvn,iyjpndh,iyjon13,iygkf3o,iygh7jy,iygk3a4,iygnov1,iyjhii0,iygsprw,iyh9uw5,iyjj4z7,iymoetz,iykjata,iyhfzli,iylenyb,iyifjlg,iyk30jj,iyjjbuu,iyi4yrd,iygld5k,iyjo9dr,iykukm3,iygyccj,iyjpq76,iykiwgh,iygu4na,iyk3370,iyj68z1,iyh87eq,iyhd2b7,iyjqxua,iygzbp2,iyhd6hi,iygmznb,iyjrdd3,iyhjfge,iygrr0v,iygidqj,iygk841,iykqwil,iyna5us,iyhnrc6,iyj8hzx,iylvtwj,iygonqk,iyll509,iygiahl,iyhaofh,iyh55x1,iygk5ym,iyghlbt,iygire9,iyj6eg1,iylbtc9,iygl9gz,iyjkm2g,iygiuk8,iyitfmg,iykp93u,iyh9v1e,iyjuml8,iyijotf,iyigaiq,iyjhev8,iyh7ico,iykf2rh,iyjcn65,iyk5zef,iykh5as,iykhrv4,iygllw5,iyhr51u,iygi5xr,iylahzo,iyizzou,iygtowk,iygnnt2,iyifpzv,iyh4jvk,iyjbqi4,iyh27hi,iykv833,iyiuj74,iyh903q,iyhmu7g,iygj0fa,iygtz22,iygjuhs,iyhc157,iyippe0,iyk2rga,iyijtn7,iyk42v2,iygifh5,iyl783x,iylrvts,iymrn28,iyjjk6w,iykbd6u,iyioig2,iyjh0by,iygiar9,iykxscx,iylmebf,iyk0fpn,iyjp7up,iyhlomk,iyl15he,iyi1l73,iygnqq5,iyik00f,iylyrfw,iyifqq9,iyjs7bn,iykillk,iyjqo0n,iyi2ubt,iyjphct,iyj4wrk,iygiboc,iyk2sbf,iygzzzp,iykopsr,iyju5na,iygits6,iyjmlnl,iyndflq,iyghs29,iygjpdu,iyh85kz,iyhej8p,iyh9s69,iyh9vm9,iyjrlwy,iyk2b5l,iygikbe,iyik796,iygnsdd,iyjosmn,iygiuff,iyjdyny,iyiev6x,iyh48zd,iygjzud,iygilxa,iyhbekg,iylhx8m,iykkyaf,iykhd3j,iyjsr7s,iygh4ev,iygu7yp,iygsonm,iygretv,iygi1lg,iyisc1l,iygh5ur,iyhclqb,iyh47kb,iyhtfc5,iyh53if,iygikhh,iygvchv,iyjmzei,iyjoxe5,iyndnm7,iyhcc5a,iygogzm
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '47364'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv3c64u.2.1741472675594.Z0FBQUFBQm56TU9rVk5BZk42MFhtNVUxZ0M1SUQ4Y24tUzRiVTZ2YkFqSFVmcmhuZHZOMXp0YnhMZk5JMU01U1ZmUnVPTXZTZElZRVJoalhJTXJYbzg1Vk1WZXNJUjd2VldjSS02Z1p2cWZvbF9rVV96SnQyWVJTUEV5bjB1X3BDc09uTjFoWTNNalA;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:36
        GMT; secure, session_tracker=kgjmhbknraqldpkaei.0.1741472675606.Z0FBQUFBQm56TU9rdC12MHMtN21xREd2d0lmaWZKMjlYVXpjcDRENWJ0YlFPN29zazZ5cXB0V1lEbVFkS1hhcFZWdTdCRFlMYUllU1JxcUhQS1lReGxaaU9QSzhaOFUzYUlfYUlFcEY0aXBaNGpSNWFUYkZsaWJxMjh6X2V5QTZURGN0N2Z3ME9sRGU;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:36
        GMT; secure, edgebucket=nUEiezBXJ2fb3tsWKK; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '34'
      x-ratelimit-remaining:
      - '66.0'
      x-ratelimit-reset:
      - '324'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:36 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyimw2r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "madogson",
        "can_mod_post": false, "created_utc": 1669917766.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_ir5nt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# COBOL (cobc on Ubuntu)\n\n[pastebin](https://pastebin.com/KjA7vsYD)  \n\n\n(Note:
        you have to manually trim the zeros. I''m too lazy to figure that out myself)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;COBOL (cobc on Ubuntu)&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/KjA7vsYD\"&gt;pastebin&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;(Note:
        you have to manually trim the zeros. I&amp;#39;m too lazy to figure that out
        myself)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyimw2r/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyimw2r", "created":
        1669917766.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyin5hd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "k-atwork",
        "can_mod_post": false, "created_utc": 1669917870.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_1joy3gz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Idris2\n\nhttps://github.com/KevinDuringWork/Advent-Of-Code-2022/blob/main/day1/main.idr",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Idris2&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/KevinDuringWork/Advent-Of-Code-2022/blob/main/day1/main.idr\"&gt;https://github.com/KevinDuringWork/Advent-Of-Code-2022/blob/main/day1/main.idr&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyin5hd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyin5hd", "created":
        1669917870.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1689032583.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyiva1l", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "TheCravin",
        "can_mod_post": false, "created_utc": 1669921018.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_nolmo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Comment has been removed because Spez killed Reddit :(", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Comment has been removed because Spez killed
        Reddit :(&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiva1l/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiva1l", "created":
        1669921018.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiyt15",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kittrin",
        "can_mod_post": false, "created_utc": 1669922405.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_ajzf2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my SQL solution for Part 2. I''m new to coding and literally only
        know SQL. :) I imported the data as a single column called \"calories\" into
        https://www.db-fiddle.com/ with the blank rows replaced with 0s.\n\n     WITH
        row_number AS (\n        SELECT \n            calories,\n            ROW_NUMBER()
        OVER (ORDER BY (SELECT 1)) AS row\n        FROM Table1\n     )\n    \n    ,
        elf_ids AS (\n        SELECT\n            SUM(CASE WHEN calories = 0 THEN
        1 ELSE 0 END) OVER (ORDER BY row) AS id,\n            calories\n        FROM
        row_number\n    )\n    \n    , calories_per_elf AS (\n        SELECT DISTINCT\n            id,\n            SUM(calories)
        OVER (PARTITION BY id) AS sum_calories\n        FROM elf_ids\n    )\n    \n    ,
        calorie_ranking AS (\n        SELECT\n            sum_calories,\n            DENSE
        RANK() OVER (ORDER BY sum_calories DESC) AS rank\n        FROM calories_per_elf\n    )\n    \n    SELECT\n        sum(sum_calories)\n    FROM
        calorie_ranking\n    WHERE rank &lt;4;", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my SQL solution for Part 2. I&amp;#39;m
        new to coding and literally only know SQL. :) I imported the data as a single
        column called &amp;quot;calories&amp;quot; into &lt;a href=\"https://www.db-fiddle.com/\"&gt;https://www.db-fiddle.com/&lt;/a&gt;
        with the blank rows replaced with 0s.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;
        WITH row_number AS (\n    SELECT \n        calories,\n        ROW_NUMBER()
        OVER (ORDER BY (SELECT 1)) AS row\n    FROM Table1\n )\n\n, elf_ids AS (\n    SELECT\n        SUM(CASE
        WHEN calories = 0 THEN 1 ELSE 0 END) OVER (ORDER BY row) AS id,\n        calories\n    FROM
        row_number\n)\n\n, calories_per_elf AS (\n    SELECT DISTINCT\n        id,\n        SUM(calories)
        OVER (PARTITION BY id) AS sum_calories\n    FROM elf_ids\n)\n\n, calorie_ranking
        AS (\n    SELECT\n        sum_calories,\n        DENSE RANK() OVER (ORDER
        BY sum_calories DESC) AS rank\n    FROM calories_per_elf\n)\n\nSELECT\n    sum(sum_calories)\nFROM
        calorie_ranking\nWHERE rank &amp;lt;4;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiyt15/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiyt15", "created":
        1669922405.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj1z6w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iyiyt15", "score":
        5, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Doing AOC in SQL is so baller IMO :)", "awarders": [],
        "downs": 0, "author_flair_css_class": null, "name": "t1_iyj1z6w", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Doing
        AOC in SQL is so baller IMO :)&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj1z6w/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1669923673.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1669923673.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq51gi", "id": "iyq51gi", "parent_id":
        "t1_iyiyt15", "depth": 1, "children": ["iyq51gi"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiz95o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "FeanorBlu",
        "can_mod_post": false, "created_utc": 1669922583.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_nminwy2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I have two solutions, one in Awk and the other in Perl. I used both languages
        because both are relevant to a class I''m taking.\nSolution in Awk:\n\n    #!/usr/bin/gawk
        -f\n    BEGIN { curr_cals = 0; count = 0; }\n    {\n        if ($1 == \"\")
        {\n            arr[count] = curr_cals;\n            curr_cals = 0;\n            count
        += 1;\n        }\n        curr_cals += $1;\n    }\n    END {\n        arr[count]
        = curr_cals;\n        n = asort(arr);\n        print \"Part 1:\", arr[n];\n        print
        \"Part 2:\", arr[n] + arr[n - 1] + arr[n - 2];\n    }\n\nThen the solution
        in Perl:\n\n    #!/usr/bin/perl\n    use strict;\n    use warnings;\n    use
        feature \"say\";\n    \n    my $curr_cals = 0;\n    my @arr = ();\n    open
        my $fh, \"&lt;\", \"input\" or die \"Cannot open file.\"\n    while (&lt;$fh&gt;)
        {\n        chomp $_;\n        if ($_ eq \"\") {\n            push @arr, $curr_cals;\n            $curr_cals
        = 0;\n        }\n        else {\n            $curr_cals += $_;\n        }\n    }\n    push
        @arr, $curr_cals;\n    @arr = sort { $b &lt;=&gt; $a } @arr;\n    say \"Part
        1: \", $arr[0];\n    say \"Part 2: \", $arr[0] + $arr[1] + $arr[2];\n    close
        $fh;\n\nHopefully you all like my solutions!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I have two solutions, one in Awk and the other in
        Perl. I used both languages because both are relevant to a class I&amp;#39;m
        taking.\nSolution in Awk:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/gawk
        -f\nBEGIN { curr_cals = 0; count = 0; }\n{\n    if ($1 == &amp;quot;&amp;quot;)
        {\n        arr[count] = curr_cals;\n        curr_cals = 0;\n        count
        += 1;\n    }\n    curr_cals += $1;\n}\nEND {\n    arr[count] = curr_cals;\n    n
        = asort(arr);\n    print &amp;quot;Part 1:&amp;quot;, arr[n];\n    print &amp;quot;Part
        2:&amp;quot;, arr[n] + arr[n - 1] + arr[n - 2];\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then
        the solution in Perl:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/perl\nuse
        strict;\nuse warnings;\nuse feature &amp;quot;say&amp;quot;;\n\nmy $curr_cals
        = 0;\nmy @arr = ();\nopen my $fh, &amp;quot;&amp;lt;&amp;quot;, &amp;quot;input&amp;quot;
        or die &amp;quot;Cannot open file.&amp;quot;\nwhile (&amp;lt;$fh&amp;gt;)
        {\n    chomp $_;\n    if ($_ eq &amp;quot;&amp;quot;) {\n        push @arr,
        $curr_cals;\n        $curr_cals = 0;\n    }\n    else {\n        $curr_cals
        += $_;\n    }\n}\npush @arr, $curr_cals;\n@arr = sort { $b &amp;lt;=&amp;gt;
        $a } @arr;\nsay &amp;quot;Part 1: &amp;quot;, $arr[0];\nsay &amp;quot;Part
        2: &amp;quot;, $arr[0] + $arr[1] + $arr[2];\nclose $fh;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hopefully
        you all like my solutions!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiz95o/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiz95o", "created":
        1669922583.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670055500.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj2an6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        5, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Second time participating using Python, but I''m trying
        to use NumPy (Math functions written in C) to make it hopefully faster. The
        main functionality of this solution is implemented in just about 20 lines
        of code. I''m pretty happy! ;-) I''m also trying to format the output in a
        pleasingful way:\n\n    import numpy as np\n    \n    \n    def get_total_calories_of_top_three_elves_carrying_most_calories(inventory_list:
        str) -&gt; list:\n        total_calories_of_all_elves = []\n    \n        for
        individual_calories_of_this_elf in inventory_list.split(\"\\n\\n\"):\n            total_calories_of_this_elf
        = np.fromstring(individual_calories_of_this_elf, dtype=np.int_, sep=\"\\n\").sum()\n            total_calories_of_all_elves.append(total_calories_of_this_elf)\n    \n        total_calories_of_all_elves.sort()\n        return
        total_calories_of_all_elves[-3:]\n    \n    \n    def get_input(file: str)
        -&gt; str:\n        with open(file, \"r\") as f:\n            return f.read()\n    \n    \n    if
        __name__ == ''__main__'':\n        print(\"\\n======================\")\n        content
        = get_input(\"day1/input.txt\")\n        calories_of_top_three_elves = get_total_calories_of_top_three_elves_carrying_most_calories(content)\n    \n        print(f\"\\nREAL
        INPUT\\n\")\n        print(f\"--&gt; Part 1: The N\u00b01 Elf is carrying
        {max(calories_of_top_three_elves)} Calories in total.\")\n        print(f\"--&gt;
        Part 2: The TOP 3 Elves are carrying {sum(calories_of_top_three_elves)} Calories
        in total.\")\n    \n        print(\"\\n======================\\n\")\n\nFull
        code is on [GitHub](https://github.com/guemax/AoC2022/blob/main/day1/__main__.py)",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iyj2an6",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Second
        time participating using Python, but I&amp;#39;m trying to use NumPy (Math
        functions written in C) to make it hopefully faster. The main functionality
        of this solution is implemented in just about 20 lines of code. I&amp;#39;m
        pretty happy! ;-) I&amp;#39;m also trying to format the output in a pleasingful
        way:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import numpy as np\n\n\ndef get_total_calories_of_top_three_elves_carrying_most_calories(inventory_list:
        str) -&amp;gt; list:\n    total_calories_of_all_elves = []\n\n    for individual_calories_of_this_elf
        in inventory_list.split(&amp;quot;\\n\\n&amp;quot;):\n        total_calories_of_this_elf
        = np.fromstring(individual_calories_of_this_elf, dtype=np.int_, sep=&amp;quot;\\n&amp;quot;).sum()\n        total_calories_of_all_elves.append(total_calories_of_this_elf)\n\n    total_calories_of_all_elves.sort()\n    return
        total_calories_of_all_elves[-3:]\n\n\ndef get_input(file: str) -&amp;gt; str:\n    with
        open(file, &amp;quot;r&amp;quot;) as f:\n        return f.read()\n\n\nif __name__
        == &amp;#39;__main__&amp;#39;:\n    print(&amp;quot;\\n======================&amp;quot;)\n    content
        = get_input(&amp;quot;day1/input.txt&amp;quot;)\n    calories_of_top_three_elves
        = get_total_calories_of_top_three_elves_carrying_most_calories(content)\n\n    print(f&amp;quot;\\nREAL
        INPUT\\n&amp;quot;)\n    print(f&amp;quot;--&amp;gt; Part 1: The N\u00b01
        Elf is carrying {max(calories_of_top_three_elves)} Calories in total.&amp;quot;)\n    print(f&amp;quot;--&amp;gt;
        Part 2: The TOP 3 Elves are carrying {sum(calories_of_top_three_elves)} Calories
        in total.&amp;quot;)\n\n    print(&amp;quot;\\n======================\\n&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full
        code is on &lt;a href=\"https://github.com/guemax/AoC2022/blob/main/day1/__main__.py\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj2an6/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669923799.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669923799.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 5}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyq4r1m", "id": "iyq4r1m", "parent_id":
        "t1_iyj2an6", "depth": 1, "children": ["iyq4r1m"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj33ns",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "sondr3_",
        "can_mod_post": false, "created_utc": 1669924110.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_2wvwqzt9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I solved it in Haskell earlier this morning: https://github.com/sondr3/aoc22/blob/main/src/Day/Day01.hs.
        Pretty straight forward after parsing the input.\n\nThen I spent the next
        ten hours trying to do it in Dyalog APL: https://github.com/sondr3/aoc22/blob/main/apl/day01.dyalog.
        The newline absolutely ruined my day, last year the solution was really straight
        forward. Now I literally had to do wizardry far outside my knowledge of the
        language :(\n\nI wanted to try BQN, but couldn''t find a way to install it
        on macOS easily so I gave up.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I solved it in Haskell earlier this morning: &lt;a
        href=\"https://github.com/sondr3/aoc22/blob/main/src/Day/Day01.hs\"&gt;https://github.com/sondr3/aoc22/blob/main/src/Day/Day01.hs&lt;/a&gt;.
        Pretty straight forward after parsing the input.&lt;/p&gt;\n\n&lt;p&gt;Then
        I spent the next ten hours trying to do it in Dyalog APL: &lt;a href=\"https://github.com/sondr3/aoc22/blob/main/apl/day01.dyalog\"&gt;https://github.com/sondr3/aoc22/blob/main/apl/day01.dyalog&lt;/a&gt;.
        The newline absolutely ruined my day, last year the solution was really straight
        forward. Now I literally had to do wizardry far outside my knowledge of the
        language :(&lt;/p&gt;\n\n&lt;p&gt;I wanted to try BQN, but couldn&amp;#39;t
        find a way to install it on macOS easily so I gave up.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj33ns/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj33ns", "created":
        1669924110.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669925361.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj5mny", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "INTeager",
        "can_mod_post": false, "created_utc": 1669925083.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_lc00b3k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n*Part 1*\n\n    import sys\n\n\n    biggest = 0\n    current
        = 0\n\n    for line in sys.stdin:\n        try:\n            current += int(line)\n        except
        ValueError:\n            biggest = current if current &gt; biggest else biggest\n            current
        = 0\n\n    print(biggest)\n\n*Part 2*\n\n    import sys\n    import collections\n\n\n    current
        = 0\n    deck = collections.deque((0, 0, 0), maxlen=3)\n\n    for line in
        sys.stdin:\n        try:\n            current += int(line)\n        except
        ValueError:\n            if current &gt; deck[0]:\n                deck.appendleft(current)\n            elif
        current &gt; deck[1]:\n                deck.pop()\n                last =
        deck.pop()\n                deck.append(current)\n                deck.append(last)\n            elif
        current &gt; deck[2]:\n                deck.pop()\n                deck.append(current)\n            current
        = 0\n\n    print(f\"{sum(deck)}\")", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Part
        1&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import sys\n\n\nbiggest =
        0\ncurrent = 0\n\nfor line in sys.stdin:\n    try:\n        current += int(line)\n    except
        ValueError:\n        biggest = current if current &amp;gt; biggest else biggest\n        current
        = 0\n\nprint(biggest)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;Part
        2&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import sys\nimport collections\n\n\ncurrent
        = 0\ndeck = collections.deque((0, 0, 0), maxlen=3)\n\nfor line in sys.stdin:\n    try:\n        current
        += int(line)\n    except ValueError:\n        if current &amp;gt; deck[0]:\n            deck.appendleft(current)\n        elif
        current &amp;gt; deck[1]:\n            deck.pop()\n            last = deck.pop()\n            deck.append(current)\n            deck.append(last)\n        elif
        current &amp;gt; deck[2]:\n            deck.pop()\n            deck.append(current)\n        current
        = 0\n\nprint(f&amp;quot;{sum(deck)}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj5mny/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj5mny", "created":
        1669925083.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669926926.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj9zcg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "-WorstWizard-",
        "can_mod_post": false, "created_utc": 1669926698.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_8hnk3zf7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust one-liner\nSo I solved both parts early in Rust in a normal relaxed
        and sane way. This evening I was wondering if I could solve today''s problem
        in a single line (only using std)  by using the power of chained iterators.
        The answer is yes, although sorting required some clever thinking, as the
        regular sort function has no return value, hence ending the chain.\n\nMy self-imposed
        rules to define a one-liner was to make only a single statement (therefore
        needing no semicolons at all in Rust), and while I could''ve used the println!
        macro to copy-paste another argument with a solution to part 1, I felt this
        was against the spirit and settled for just completing the second harder part.\n\n    use
        std::str::FromStr;\n    use std::collections::BinaryHeap;\n    \n    fn main()
        {\n        println!(\"{}\",\n            BinaryHeap::from(\n                include_str!(\"input.txt\")\n                .split(\"\\n\\n\")\n                .map(|elf|\n                    elf.lines()\n                    .map(|cal|\n                        i32::from_str(cal).unwrap()\n                    ).sum::&lt;i32&gt;()\n                ).collect::&lt;Vec&lt;i32&gt;&gt;()\n            ).into_sorted_vec()\n            .into_iter()\n            .rev()\n            .collect::&lt;Vec&lt;i32&gt;&gt;()\n            [0..3].iter().sum::&lt;i32&gt;()\n        )\n    }\n\nFun
        challenge, if your language of choice permits it.\n\nFor completion''s sake,
        here''s the one-liner expanded to include both solutions anyway:\n\n    use
        std::str::FromStr;\n    use std::collections::BinaryHeap;\n    \n    fn main()
        {\n        println!(\"Part 1: {}, Part 2: {}\",\n            include_str!(\"input.txt\")\n            .split(\"\\n\\n\")\n            .map(|elf|\n                elf.lines()\n                .map(|cal|\n                    i32::from_str(cal).unwrap()\n                ).sum::&lt;i32&gt;()\n            ).max().unwrap(),\n            BinaryHeap::from(\n                include_str!(\"input.txt\")\n                .split(\"\\n\\n\")\n                .map(|elf|\n                    elf.lines()\n                    .map(|cal|\n                        i32::from_str(cal).unwrap()\n                    ).sum::&lt;i32&gt;()\n                ).collect::&lt;Vec&lt;i32&gt;&gt;()\n            ).into_sorted_vec()\n            .into_iter()\n            .rev()\n            .collect::&lt;Vec&lt;i32&gt;&gt;()\n            [0..3].iter().sum::&lt;i32&gt;()\n        )\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust one-liner&lt;/h1&gt;\n\n&lt;p&gt;So
        I solved both parts early in Rust in a normal relaxed and sane way. This evening
        I was wondering if I could solve today&amp;#39;s problem in a single line
        (only using std)  by using the power of chained iterators. The answer is yes,
        although sorting required some clever thinking, as the regular sort function
        has no return value, hence ending the chain.&lt;/p&gt;\n\n&lt;p&gt;My self-imposed
        rules to define a one-liner was to make only a single statement (therefore
        needing no semicolons at all in Rust), and while I could&amp;#39;ve used the
        println! macro to copy-paste another argument with a solution to part 1, I
        felt this was against the spirit and settled for just completing the second
        harder part.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::str::FromStr;\nuse
        std::collections::BinaryHeap;\n\nfn main() {\n    println!(&amp;quot;{}&amp;quot;,\n        BinaryHeap::from(\n            include_str!(&amp;quot;input.txt&amp;quot;)\n            .split(&amp;quot;\\n\\n&amp;quot;)\n            .map(|elf|\n                elf.lines()\n                .map(|cal|\n                    i32::from_str(cal).unwrap()\n                ).sum::&amp;lt;i32&amp;gt;()\n            ).collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;()\n        ).into_sorted_vec()\n        .into_iter()\n        .rev()\n        .collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;()\n        [0..3].iter().sum::&amp;lt;i32&amp;gt;()\n    )\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Fun
        challenge, if your language of choice permits it.&lt;/p&gt;\n\n&lt;p&gt;For
        completion&amp;#39;s sake, here&amp;#39;s the one-liner expanded to include
        both solutions anyway:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::str::FromStr;\nuse
        std::collections::BinaryHeap;\n\nfn main() {\n    println!(&amp;quot;Part
        1: {}, Part 2: {}&amp;quot;,\n        include_str!(&amp;quot;input.txt&amp;quot;)\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|elf|\n            elf.lines()\n            .map(|cal|\n                i32::from_str(cal).unwrap()\n            ).sum::&amp;lt;i32&amp;gt;()\n        ).max().unwrap(),\n        BinaryHeap::from(\n            include_str!(&amp;quot;input.txt&amp;quot;)\n            .split(&amp;quot;\\n\\n&amp;quot;)\n            .map(|elf|\n                elf.lines()\n                .map(|cal|\n                    i32::from_str(cal).unwrap()\n                ).sum::&amp;lt;i32&amp;gt;()\n            ).collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;()\n        ).into_sorted_vec()\n        .into_iter()\n        .rev()\n        .collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;()\n        [0..3].iter().sum::&amp;lt;i32&amp;gt;()\n    )\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj9zcg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj9zcg", "created":
        1669926698.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjamqj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "xaBBSks",
        "can_mod_post": false, "created_utc": 1669926950.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_uozmwyq9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**PYTHON**\n\nMy solution: https://pastebin.com/ixREWNtc\n\n(I''m a beginner)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PYTHON&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        solution: &lt;a href=\"https://pastebin.com/ixREWNtc\"&gt;https://pastebin.com/ixREWNtc&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(I&amp;#39;m
        a beginner)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjamqj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjamqj", "created":
        1669926950.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iym9y6o", "id": "iym9y6o", "parent_id":
        "t1_iyjamqj", "depth": 1, "children": ["iym9y6o", "iyjct56"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670072946.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjdd5h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tpfkahj",
        "can_mod_post": false, "created_utc": 1669928003.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_10sfmv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ended up with this python solution\n\n    vals = sorted((sum(int(l) for l
        in group.split(''\\n'')) for group in dat), reverse=True)\n    print(vals[0])
        # Part 1 \n    print(sum(vals[:3])) # Part 2", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Ended up with this python solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;vals
        = sorted((sum(int(l) for l in group.split(&amp;#39;\\n&amp;#39;)) for group
        in dat), reverse=True)\nprint(vals[0]) # Part 1 \nprint(sum(vals[:3])) # Part
        2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjdd5h/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjdd5h", "created":
        1669928003.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyq4ddf", "id": "iyq4ddf", "parent_id":
        "t1_iyjdd5h", "depth": 1, "children": ["iyq4ddf", "iyjwjam"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669955543.0, "mod_reason_by": null,
        "banned_by": null, "ups": 5, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjdde5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "AstronautNew8452",
        "can_mod_post": false, "created_utc": 1669928006.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_sbvdhelo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Originally I solved with text find/replace and plain Excel formulas. Then
        in the middle of the night, I came up with a relatively easy way to do it
        in VBA/Excel:\n\n    Sub aoc22d1()\n        [A1].Select\n        ActiveSheet.Paste\n        For
        Each a In [A:A].SpecialCells(xlCellTypeConstants).Areas\n            [C999].End(xlUp).Offset(1)
        = WorksheetFunction.Sum(a)\n        Next a\n        Set sums = [C2].CurrentRegion\n        With
        WorksheetFunction\n            [E1] = .Max(sums)\n            [E2] = .Sum([E1],
        .Large(sums, 2), .Large(sums, 3))\n        End With\n    End Sub\n\nEDIT:
        Just for the hell of it, I solved the puzzle with a SINGLE Excel formula:\n\n    =LET(blankrows,FILTER(ROW(A1:A2238),ISBLANK(A1:A2238)),\n        lengths,TAKE(blankrows-VSTACK({0},blankrows),COUNT(blankrows))-1,\n        offsets,blankrows-lengths-1,\n        sums,BYROW(HSTACK(offsets,lengths),LAMBDA(rw,SUM(OFFSET(A1,INDEX(rw,1),,INDEX(rw,2))))),\n        VSTACK(MAX(sums),SUM(LARGE(sums,{3,2,1}))))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Originally I solved
        with text find/replace and plain Excel formulas. Then in the middle of the
        night, I came up with a relatively easy way to do it in VBA/Excel:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Sub
        aoc22d1()\n    [A1].Select\n    ActiveSheet.Paste\n    For Each a In [A:A].SpecialCells(xlCellTypeConstants).Areas\n        [C999].End(xlUp).Offset(1)
        = WorksheetFunction.Sum(a)\n    Next a\n    Set sums = [C2].CurrentRegion\n    With
        WorksheetFunction\n        [E1] = .Max(sums)\n        [E2] = .Sum([E1], .Large(sums,
        2), .Large(sums, 3))\n    End With\nEnd Sub\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:
        Just for the hell of it, I solved the puzzle with a SINGLE Excel formula:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;=LET(blankrows,FILTER(ROW(A1:A2238),ISBLANK(A1:A2238)),\n    lengths,TAKE(blankrows-VSTACK({0},blankrows),COUNT(blankrows))-1,\n    offsets,blankrows-lengths-1,\n    sums,BYROW(HSTACK(offsets,lengths),LAMBDA(rw,SUM(OFFSET(A1,INDEX(rw,1),,INDEX(rw,2))))),\n    VSTACK(MAX(sums),SUM(LARGE(sums,{3,2,1}))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjdde5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjdde5", "created":
        1669928006.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyjonwx", "id": "iyjonwx", "parent_id":
        "t1_iyjdde5", "depth": 1, "children": ["iyjonwx", "iytomws"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjkilt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "pietroppeter",
        "can_mod_post": false, "created_utc": 1669930722.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_2bv71fdp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nim\n\n\\#adventofp5nim \ud83c\udf84\ud83c\udf38\ud83d\udc51\n\n[https://pietroppeter.github.io/adventofnim/2022/day01.html#viz](https://pietroppeter.github.io/adventofnim/2022/day01.html#viz)\n\nblogpost
        with solution and animation with #nim bindings to #p5js", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Nim&lt;/p&gt;\n\n&lt;p&gt;#adventofp5nim
        \ud83c\udf84\ud83c\udf38\ud83d\udc51&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pietroppeter.github.io/adventofnim/2022/day01.html#viz\"&gt;https://pietroppeter.github.io/adventofnim/2022/day01.html#viz&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;blogpost
        with solution and animation with #nim bindings to #p5js&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjkilt/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjkilt", "created":
        1669930722.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjmjti",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "alexw02",
        "can_mod_post": false, "created_utc": 1669931527.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_9i24y4fq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "UXN Forth\n\nhttps://git.alexwennerberg.com/aoc-forth/file/2022/01.fs.html",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;UXN Forth&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://git.alexwennerberg.com/aoc-forth/file/2022/01.fs.html\"&gt;https://git.alexwennerberg.com/aoc-forth/file/2022/01.fs.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjmjti/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjmjti", "created":
        1669931527.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjmyoj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "ulrichvachon",
        "can_mod_post": false, "created_utc": 1669931692.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_psxtc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my simple **Java** solution :\n\n    public void part1() {\n        try
        (RandomAccessFile file = new RandomAccessFile(\"/home/ulrich/projects/aoc/2022/java/src/day1/input\",
        \"r\")) {\n            String str;\n\n            int max = 0;\n            int
        sum = 0;\n\n            while ((str = file.readLine()) != null) {\n                if
        (str.isEmpty()) {\n                    if (sum &gt; max) {\n                        max
        = sum;\n                    }\n                    sum = 0;\n                }
        else {\n                    sum += Integer.parseInt(str);\n                }\n            }\n            System.out.println(max);\n        }
        catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my simple
        &lt;strong&gt;Java&lt;/strong&gt; solution :&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        void part1() {\n    try (RandomAccessFile file = new RandomAccessFile(&amp;quot;/home/ulrich/projects/aoc/2022/java/src/day1/input&amp;quot;,
        &amp;quot;r&amp;quot;)) {\n        String str;\n\n        int max = 0;\n        int
        sum = 0;\n\n        while ((str = file.readLine()) != null) {\n            if
        (str.isEmpty()) {\n                if (sum &amp;gt; max) {\n                    max
        = sum;\n                }\n                sum = 0;\n            } else {\n                sum
        += Integer.parseInt(str);\n            }\n        }\n        System.out.println(max);\n    }
        catch (IOException e) {\n        throw new RuntimeException(e);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjmyoj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjmyoj", "created":
        1669931692.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjq27f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "gedhrel",
        "can_mod_post": false, "created_utc": 1669932974.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_2so983w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "jq, part 2:\n\n    &lt; data/day1/input jq -cR  ''\n      def sum: reduce
        .[] as $i (0; . + $i);\n      def splitOn($s):\n        def loop($acc; $x):\n          $x
        | index($s) as $i |\n          if $i then loop($acc + [$x[:$i]]; $x[$i + 1:])\n          else
        $acc end;\n        loop([]; .);\n\n    [inputs] | splitOn(\"\") | map(map(tonumber)
        | sum) | sort | .[-3:] | sum''", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;jq, part 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;
        data/day1/input jq -cR  &amp;#39;\n  def sum: reduce .[] as $i (0; . + $i);\n  def
        splitOn($s):\n    def loop($acc; $x):\n      $x | index($s) as $i |\n      if
        $i then loop($acc + [$x[:$i]]; $x[$i + 1:])\n      else $acc end;\n    loop([];
        .);\n\n[inputs] | splitOn(&amp;quot;&amp;quot;) | map(map(tonumber) | sum)
        | sort | .[-3:] | sum&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjq27f/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjq27f", "created":
        1669932974.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjqn57",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "bornobob",
        "can_mod_post": false, "created_utc": 1669933218.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_583ws7rs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python golf attempt**\n\n```\nprint(sum(sorted(eval(''[''+open(''in'').read().replace(''\\n'',''+'').replace(''++'','','')+'']''))[-3:]))\n```\n\nCould
        shorten by at least one more character by renaming the input file to something
        like \"i\".", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        golf attempt&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nprint(sum(sorted(eval(&amp;#39;[&amp;#39;+open(&amp;#39;in&amp;#39;).read().replace(&amp;#39;\\n&amp;#39;,&amp;#39;+&amp;#39;).replace(&amp;#39;++&amp;#39;,&amp;#39;,&amp;#39;)+&amp;#39;]&amp;#39;))[-3:]))\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Could
        shorten by at least one more character by renaming the input file to something
        like &amp;quot;i&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjqn57/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjqn57", "created":
        1669933218.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iykgbhj", "id": "iykgbhj", "parent_id":
        "t1_iyjqn57", "depth": 1, "children": ["iykgbhj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjqu6s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "bwcadev",
        "can_mod_post": false, "created_utc": 1669933301.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_p76kmmaw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript solution that can be run in the browser console.\n\n    (() =&gt;
        {\n        let x = []\n        $(\"pre\").innerText.split(\"\\n\\n\").forEach((v)
        =&gt; {\n            let t = v.split(\"\\n\");\n            if(t[t.length-1]
        == \"\") t.pop();\n            x.push(t.reduce((a, b) =&gt; parseInt(a) +
        parseInt(b), 0));\n        })\n        x.sort(function(a, b){return b - a});\n        return
        [x[0], (x[0] + x[1] + x[2])]\n    })()\n    \n\nI''m new to writing small
        code, pleased with this first attempt", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;JavaScript solution that can be run in the browser
        console.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(() =&amp;gt; {\n    let x =
        []\n    $(&amp;quot;pre&amp;quot;).innerText.split(&amp;quot;\\n\\n&amp;quot;).forEach((v)
        =&amp;gt; {\n        let t = v.split(&amp;quot;\\n&amp;quot;);\n        if(t[t.length-1]
        == &amp;quot;&amp;quot;) t.pop();\n        x.push(t.reduce((a, b) =&amp;gt;
        parseInt(a) + parseInt(b), 0));\n    })\n    x.sort(function(a, b){return
        b - a});\n    return [x[0], (x[0] + x[1] + x[2])]\n})()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m
        new to writing small code, pleased with this first attempt&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjqu6s/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjqu6s", "created":
        1669933301.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669934708.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjs61z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "errop_",
        "can_mod_post": false, "created_utc": 1669933861.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_efm4ng1x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using python3\n\nBig fan of itertools here\n\n    from itertools import groupby\n    \n    if
        __name__ == \"__main__\": \n        with open(__file__.replace(\".py\", \"_data\"))
        as f: \n            data = f.readlines()\n        \n        calories_per_elf
        = sorted(sum(map(int, g)) for k, g in groupby(data, key=lambda x: x != \"\\n\")
        if k)\n    \n        # PART 1\n        print(calories_per_elf[-1])\n    \n        #
        PART 2\n        print(sum(calories_per_elf[-3:]))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Using python3&lt;/p&gt;\n\n&lt;p&gt;Big fan of itertools
        here&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from itertools import groupby\n\nif
        __name__ == &amp;quot;__main__&amp;quot;: \n    with open(__file__.replace(&amp;quot;.py&amp;quot;,
        &amp;quot;_data&amp;quot;)) as f: \n        data = f.readlines()\n\n    calories_per_elf
        = sorted(sum(map(int, g)) for k, g in groupby(data, key=lambda x: x != &amp;quot;\\n&amp;quot;)
        if k)\n\n    # PART 1\n    print(calories_per_elf[-1])\n\n    # PART 2\n    print(sum(calories_per_elf[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjs61z/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjs61z", "created":
        1669933861.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669934661.0, "mod_reason_by": null,
        "banned_by": null, "ups": 4, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjt0r4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Scharrels",
        "can_mod_post": false, "created_utc": 1669934226.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_bu903", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Another Rust solution: https://github.com/Scharrels/advent_of_code_2022/blob/master/src/day1_calorie_counting.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Another Rust solution:
        &lt;a href=\"https://github.com/Scharrels/advent_of_code_2022/blob/master/src/day1_calorie_counting.rs\"&gt;https://github.com/Scharrels/advent_of_code_2022/blob/master/src/day1_calorie_counting.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjt0r4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjt0r4", "created":
        1669934226.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyjvqks", "id": "iyjvqks", "parent_id":
        "t1_iyjt0r4", "depth": 1, "children": ["iyjvqks"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjuwbr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "Rakicy",
        "can_mod_post": false, "created_utc": 1669935029.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_1iav06tf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python Solution: [Day 1](https://github.com/Rakicy/AOC2022/blob/main/day01.py)
        \n\nThoughts/suggestions welcome!", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python Solution: &lt;a href=\"https://github.com/Rakicy/AOC2022/blob/main/day01.py\"&gt;Day
        1&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;Thoughts/suggestions welcome!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjuwbr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjuwbr", "created":
        1669935029.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyjwfp5", "id": "iyjwfp5", "parent_id":
        "t1_iyjuwbr", "depth": 1, "children": ["iyjwfp5", "iyk0tdd"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjzlv2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "MartinSch64",
        "can_mod_post": false, "created_utc": 1669937072.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_1k1ptn3o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Ruby:\n\n    input_lines = File.readlines(\"input/day_01.txt\")\n    calories_per_elf
        = input_lines.map(&amp;:to_i).slice_before(&amp;:zero?).map(&amp;:sum)\n    \n    #
        part 1\n    puts calories_per_elf.max\n    \n    # part 2\n    calories_per_elf.sort.last(3).sum",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in Ruby:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input_lines
        = File.readlines(&amp;quot;input/day_01.txt&amp;quot;)\ncalories_per_elf =
        input_lines.map(&amp;amp;:to_i).slice_before(&amp;amp;:zero?).map(&amp;amp;:sum)\n\n#
        part 1\nputs calories_per_elf.max\n\n# part 2\ncalories_per_elf.sort.last(3).sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjzlv2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjzlv2", "created":
        1669937072.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyk21bw", "id": "iyk21bw", "parent_id":
        "t1_iyjzlv2", "depth": 1, "children": ["iyk21bw"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk78oy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "tassleoff",
        "can_mod_post": false, "created_utc": 1669940487.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_jx43054q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "* Common Lisp Solution \\*\n\n&amp;#8203;\n\n    \n    (defun read-sum-group
        (stream val)\n      (let ((n (read-line stream nil)))\n        (if (or (null
        n) (string-equal \"\" n))\n    \tval\n    \t(read-sum-group stream (+ (parse-integer
        n) val)))))\n    \n    (defun list-from-stream (stream)\n      (let ((cal_list))\n        (loop
        for n = (read stream nil)\n              while n do \n    \t    (push (read-sum-group
        stream n) cal_list))\n    \t\t   cal_list))\n    \n    ;; first part\n    (with-open-file
        (stream \"~/quicklisp/local-projects/advent2022/advent2022_day1_1_input\")\n      (format
        t \"The maximum number of calories carried by an elve is ~a~%\"\n    \t  (reduce
        #''max (sort (list-from-stream stream) #''&gt;))))\n    \n    ;; second part\n    (with-open-file
        (stream \"~/quicklisp/local-projects/advent2022/advent2022_day1_1_input\")\n      (format
        t \"The three elves that carry more, carry ~a calories~%\"\n    \t  (reduce
        #''+ (subseq (sort (list-from-stream stream) #''&gt;) 0 3))))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;Common Lisp Solution *&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#8203;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(defun
        read-sum-group (stream val)\n  (let ((n (read-line stream nil)))\n    (if
        (or (null n) (string-equal &amp;quot;&amp;quot; n))\n    val\n    (read-sum-group
        stream (+ (parse-integer n) val)))))\n\n(defun list-from-stream (stream)\n  (let
        ((cal_list))\n    (loop for n = (read stream nil)\n          while n do \n        (push
        (read-sum-group stream n) cal_list))\n           cal_list))\n\n;; first part\n(with-open-file
        (stream &amp;quot;~/quicklisp/local-projects/advent2022/advent2022_day1_1_input&amp;quot;)\n  (format
        t &amp;quot;The maximum number of calories carried by an elve is ~a~%&amp;quot;\n      (reduce
        #&amp;#39;max (sort (list-from-stream stream) #&amp;#39;&amp;gt;))))\n\n;;
        second part\n(with-open-file (stream &amp;quot;~/quicklisp/local-projects/advent2022/advent2022_day1_1_input&amp;quot;)\n  (format
        t &amp;quot;The three elves that carry more, carry ~a calories~%&amp;quot;\n      (reduce
        #&amp;#39;+ (subseq (sort (list-from-stream stream) #&amp;#39;&amp;gt;) 0
        3))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk78oy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk78oy", "created":
        1669940487.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykcpbh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Zig\n\n    const std = @import(\"std\");\n    const input
        = @embedFile(\"data/day1.txt\");\n    \n    pub fn main() !void {\n        var
        cals: u32 = 0;\n        var tops = [3]u32{ 0, 0, 0 };\n        var iter =
        std.mem.split(u8, input, \"\\n\");\n        while (iter.next()) |line| {\n            if
        (line.len &gt; 0) {\n                cals += try std.fmt.parseUnsigned(u32,
        line, 10); // base 10\n            } else {\n                if (cals &gt;
        tops[0]) {\n                    tops[1] = tops[0];\n                    tops[0]
        = cals;\n                } else if (cals &gt; tops[1]) {\n                    tops[2]
        = tops[1];\n                    tops[1] = cals;\n                } else if
        (cals &gt; tops[2]) {\n                    tops[2] = cals;\n                }\n                cals
        = 0;\n            }\n        }\n        std.debug.print(\"Part 1: {d}\\n\",
        .{tops[0]});\n        std.debug.print(\"Part 2: {d}\\n\", .{tops[0] + tops[1]
        + tops[2]});\n    }", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iykcpbh", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Zig&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        std = @import(&amp;quot;std&amp;quot;);\nconst input = @embedFile(&amp;quot;data/day1.txt&amp;quot;);\n\npub
        fn main() !void {\n    var cals: u32 = 0;\n    var tops = [3]u32{ 0, 0, 0
        };\n    var iter = std.mem.split(u8, input, &amp;quot;\\n&amp;quot;);\n    while
        (iter.next()) |line| {\n        if (line.len &amp;gt; 0) {\n            cals
        += try std.fmt.parseUnsigned(u32, line, 10); // base 10\n        } else {\n            if
        (cals &amp;gt; tops[0]) {\n                tops[1] = tops[0];\n                tops[0]
        = cals;\n            } else if (cals &amp;gt; tops[1]) {\n                tops[2]
        = tops[1];\n                tops[1] = cals;\n            } else if (cals &amp;gt;
        tops[2]) {\n                tops[2] = cals;\n            }\n            cals
        = 0;\n        }\n    }\n    std.debug.print(&amp;quot;Part 1: {d}\\n&amp;quot;,
        .{tops[0]});\n    std.debug.print(&amp;quot;Part 2: {d}\\n&amp;quot;, .{tops[0]
        + tops[1] + tops[2]});\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykcpbh/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669943049.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669943049.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyoqs9m", "id": "iyoqs9m", "parent_id":
        "t1_iykcpbh", "depth": 1, "children": ["iyoqs9m"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyktzod",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "daikontana",
        "can_mod_post": false, "created_utc": 1669951144.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_8fbug", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Learning **OCaml** this year:\n\n    let step (sum, sums) line =\n      match
        line with\n      | \"\" -&gt; (0, List.cons sum sums)\n      | x -&gt; (sum
        + int_of_string x, sums)\n    \n    let topn n sums =\n      List.sort compare
        sums |&gt; List.rev |&gt; List.to_seq |&gt; Seq.take n\n      |&gt; Seq.fold_left
        (fun acc x -&gt; acc + x) 0\n    \n    let solve n seq =\n      Seq.fold_left
        step (0, []) seq |&gt; fun (_, sums) -&gt; topn n sums\n    \n    let part1
        = solve 1\n    let part2 = solve 3\n    \n    let () =\n      let seq = Arg.read_arg
        \"data/day1.txt\" |&gt; Array.to_seq in\n      part1 seq |&gt; string_of_int
        |&gt; print_endline;\n      part2 seq |&gt; string_of_int |&gt; print_endline",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Learning &lt;strong&gt;OCaml&lt;/strong&gt;
        this year:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let step (sum, sums) line =\n  match
        line with\n  | &amp;quot;&amp;quot; -&amp;gt; (0, List.cons sum sums)\n  |
        x -&amp;gt; (sum + int_of_string x, sums)\n\nlet topn n sums =\n  List.sort
        compare sums |&amp;gt; List.rev |&amp;gt; List.to_seq |&amp;gt; Seq.take n\n  |&amp;gt;
        Seq.fold_left (fun acc x -&amp;gt; acc + x) 0\n\nlet solve n seq =\n  Seq.fold_left
        step (0, []) seq |&amp;gt; fun (_, sums) -&amp;gt; topn n sums\n\nlet part1
        = solve 1\nlet part2 = solve 3\n\nlet () =\n  let seq = Arg.read_arg &amp;quot;data/day1.txt&amp;quot;
        |&amp;gt; Array.to_seq in\n  part1 seq |&amp;gt; string_of_int |&amp;gt; print_endline;\n  part2
        seq |&amp;gt; string_of_int |&amp;gt; print_endline\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyktzod/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyktzod", "created":
        1669951144.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykxc31",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "SherpaIII",
        "can_mod_post": false, "created_utc": 1669952774.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 4, "author_fullname": "t2_3gk9mkpg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3**\n\n    def three_elves_with_most_calories(input_file):\n        with
        open(input_file, ''r'') as file:        \n        lines = file.read().split(''\\n\\n'')        \n        file
        = [line.split() for line in lines]\n        x = [[int(j) for j in i] for i
        in file]        \n    return sum(sorted(sum(l) for l in x)[-3:])", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python 3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        three_elves_with_most_calories(input_file):\n    with open(input_file, &amp;#39;r&amp;#39;)
        as file:        \n    lines = file.read().split(&amp;#39;\\n\\n&amp;#39;)        \n    file
        = [line.split() for line in lines]\n    x = [[int(j) for j in i] for i in
        file]        \nreturn sum(sorted(sum(l) for l in x)[-3:])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykxc31/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykxc31", "created":
        1669952774.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iynmvck",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "deckard58",
        "can_mod_post": false, "created_utc": 1670008014.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 5, "author_fullname": "t2_aowdj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "With `AWK` and the shell (`bash`): \n\n    BEGIN { a=1; S[1]=0 }\n    { if
        ($1 &lt; 0) a += 1; else S[a] += $1 }\n    END { for (i in S) printf(\"%d\\t%d\\n\",i,S[i])
        }\n\nthen `awk -f p.awk in.txt | sort -n -k 2` and you have the list of elves
        sorted by load (and you can just add the last three to get the solution)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;With &lt;code&gt;AWK&lt;/code&gt;
        and the shell (&lt;code&gt;bash&lt;/code&gt;): &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;BEGIN
        { a=1; S[1]=0 }\n{ if ($1 &amp;lt; 0) a += 1; else S[a] += $1 }\nEND { for
        (i in S) printf(&amp;quot;%d\\t%d\\n&amp;quot;,i,S[i]) }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;then
        &lt;code&gt;awk -f p.awk in.txt | sort -n -k 2&lt;/code&gt; and you have the
        list of elves sorted by load (and you can just add the last three to get the
        solution)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iynmvck/",
        "subreddit_type": "public", "locked": false, "name": "t1_iynmvck", "created":
        1670008014.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669871592.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyggmu0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MarcusTL12",
        "can_mod_post": false, "created_utc": 1669871307.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_32ynqnu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You people are fast!\n\nJulia 309/197\n\n[github](https://github.com/MarcusTL12/AdventOfCode2022Julia/blob/main/src/day1.jl)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You people are fast!&lt;/p&gt;\n\n&lt;p&gt;Julia
        309/197&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/MarcusTL12/AdventOfCode2022Julia/blob/main/src/day1.jl\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggmu0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggmu0", "created":
        1669871307.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyggurn", "id": "iyggurn", "parent_id":
        "t1_iyggmu0", "depth": 1, "children": ["iyggurn"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyggs0n", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Rust\n\n    fn elves(input: &amp;str) -&gt; impl Iterator&lt;Item
        = i32&gt; + ''_ {\n        input\n            .split(\"\\n\\n\")\n            .map(|elf|
        elf.lines().map(|line| line.parse::&lt;i32&gt;().unwrap()).sum())\n    }\n    \n    pub
        fn part1(input: &amp;str) -&gt; Option&lt;i32&gt; {\n        elves(input).max()\n    }\n    \n    pub
        fn part2(input: &amp;str) -&gt; i32 {\n        let mut elves = elves(input).collect::&lt;Vec&lt;_&gt;&gt;();\n        elves.sort_unstable();\n        elves[elves.len()
        - 3..].iter().sum()\n    }", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyggs0n", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        elves(input: &amp;amp;str) -&amp;gt; impl Iterator&amp;lt;Item = i32&amp;gt;
        + &amp;#39;_ {\n    input\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|elf|
        elf.lines().map(|line| line.parse::&amp;lt;i32&amp;gt;().unwrap()).sum())\n}\n\npub
        fn part1(input: &amp;amp;str) -&amp;gt; Option&amp;lt;i32&amp;gt; {\n    elves(input).max()\n}\n\npub
        fn part2(input: &amp;amp;str) -&amp;gt; i32 {\n    let mut elves = elves(input).collect::&amp;lt;Vec&amp;lt;_&amp;gt;&amp;gt;();\n    elves.sort_unstable();\n    elves[elves.len()
        - 3..].iter().sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggs0n/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669871394.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669871394.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggs37",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aardvark1231",
        "can_mod_post": false, "created_utc": 1669871395.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_24zg2nv1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My C# Solution](https://topaz.github.io/paste/#XQAAAQAmBAAAAAAAAAA6nMlWi076alCx9N1TtsVNiXecUoGeYT6aP6mR8mlULJpnBWlkXihMFNaRPYev6fF2iCZ7U+Cuf/y+wLt7aE4vFuBojMos7kq6n9Q96/JB58xS4rnRa4uPu/uT83SarI61g85mSZoHV/YUjMk4JtlNSv8/OfGclGqVKZm+6CohoGYadzlWJiEl28N/sfqwxw1XX1wyAmyvbI+jQkCTsH093EO3ENBpLU13OYABYj+owobiWDS35FzOq7XI1cQImHF104LhK615KAME7Ur8IemIz2gKZfz+GOxAaoSPbY4dKsyLlnoU7SBGfszMIHied0NgMPFarllYHP3lzQZL7d1uqyOw390PTDhrhkTxPnd6M5ZD98XbvZnXy/a9H+EuZjBt25QbXYffe4Vlwsvt2axRY4niHWjAo3nd+zeKv61vaLJ7j95H44F1fr6OQ+ZZWffDgVT6Onm278NnR5eFiNAevUJoXWwMAO+z/caLo53CxtcMCz+n9kL3feSEurVHtZ3GdEgSvwVZ7yKMmCC5bQX5E9p0Wc6ig5v5K7dfRf5TdZ8=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQAmBAAAAAAAAAA6nMlWi076alCx9N1TtsVNiXecUoGeYT6aP6mR8mlULJpnBWlkXihMFNaRPYev6fF2iCZ7U+Cuf/y+wLt7aE4vFuBojMos7kq6n9Q96/JB58xS4rnRa4uPu/uT83SarI61g85mSZoHV/YUjMk4JtlNSv8/OfGclGqVKZm+6CohoGYadzlWJiEl28N/sfqwxw1XX1wyAmyvbI+jQkCTsH093EO3ENBpLU13OYABYj+owobiWDS35FzOq7XI1cQImHF104LhK615KAME7Ur8IemIz2gKZfz+GOxAaoSPbY4dKsyLlnoU7SBGfszMIHied0NgMPFarllYHP3lzQZL7d1uqyOw390PTDhrhkTxPnd6M5ZD98XbvZnXy/a9H+EuZjBt25QbXYffe4Vlwsvt2axRY4niHWjAo3nd+zeKv61vaLJ7j95H44F1fr6OQ+ZZWffDgVT6Onm278NnR5eFiNAevUJoXWwMAO+z/caLo53CxtcMCz+n9kL3feSEurVHtZ3GdEgSvwVZ7yKMmCC5bQX5E9p0Wc6ig5v5K7dfRf5TdZ8=\"&gt;My
        C# Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggs37/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggs37", "created":
        1669871395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggs40",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "udoprog",
        "can_mod_post": false, "created_utc": 1669871395.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4eur7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust, didn''t prepare any framework (yet) so had to hack that together, 880/612\n\nGist:
        [https://gist.github.com/udoprog/eb96579ce13e6f91c450c0bcc0e17b48](https://gist.github.com/udoprog/eb96579ce13e6f91c450c0bcc0e17b48)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust, didn&amp;#39;t
        prepare any framework (yet) so had to hack that together, 880/612&lt;/p&gt;\n\n&lt;p&gt;Gist:
        &lt;a href=\"https://gist.github.com/udoprog/eb96579ce13e6f91c450c0bcc0e17b48\"&gt;https://gist.github.com/udoprog/eb96579ce13e6f91c450c0bcc0e17b48&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggs40/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggs40", "created":
        1669871395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygn3i6", "id": "iygn3i6", "parent_id":
        "t1_iyggs40", "depth": 1, "children": ["iygn3i6"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggtxq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "YT-SW_Creeperking",
        "can_mod_post": false, "created_utc": 1669871425.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_246zcn5g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# 493/559\n\n  \npart 1:\n\n    return inp.Split(\"\\n\\n\").Select(s =&gt;
        s.Split(''\\n'').Select(int.Parse).Sum()).Max();\n\npart 2:\n\n    return
        inp.Split(\"\\n\\n\").Select(s =&gt; s.Split(''\\n'').Select(int.Parse).Sum()).OrderDescending().ToArray()[..3].Sum();",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C# 493/559&lt;/p&gt;\n\n&lt;p&gt;part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return inp.Split(&amp;quot;\\n\\n&amp;quot;).Select(s
        =&amp;gt; s.Split(&amp;#39;\\n&amp;#39;).Select(int.Parse).Sum()).Max();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;return inp.Split(&amp;quot;\\n\\n&amp;quot;).Select(s
        =&amp;gt; s.Split(&amp;#39;\\n&amp;#39;).Select(int.Parse).Sum()).OrderDescending().ToArray()[..3].Sum();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggtxq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggtxq", "created":
        1669871425.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iygjp4a", "id": "iygjp4a", "parent_id":
        "t1_iyggtxq", "depth": 1, "children": ["iygjp4a", "iygkpys"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670151317.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyghhpq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mazedlx",
        "can_mod_post": false, "created_utc": 1669871826.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_t5wv1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PHP (with Laravel''s Collection) 5181/1517 i''m obviously too old and therefore
        too slow.\n\nPart 1:\n\n\n    $values = [];\n    $elf = 0;\n    foreach(preg_split(''/\\n/'',
        $input) as $value) {\n        $values[$elf][] = $value;\n        if ($value
        === '''') {\n            $elf++;\n        }\n    }\n\n    collect($values)\n        -&gt;map(fn($value)
        =&gt; collect($value)-&gt;filter())\n        -&gt;map(fn($value) =&gt; collect($value)-&gt;reduce(fn($carry,
        $item) =&gt; $carry + $item))\n        -&gt;max();\n\n\nPart 2:\n\n\n    collect($values)\n        -&gt;map(fn($value)
        =&gt; collect($value)-&gt;filter())\n        -&gt;map(fn($value) =&gt; collect($value)-&gt;reduce(fn($carry,
        $item) =&gt; $carry + $item))\n        -&gt;sortDesc()\n        -&gt;take(3)\n        -&gt;sum();",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP (with Laravel&amp;#39;s
        Collection) 5181/1517 i&amp;#39;m obviously too old and therefore too slow.&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$values = [];\n$elf = 0;\nforeach(preg_split(&amp;#39;/\\n/&amp;#39;,
        $input) as $value) {\n    $values[$elf][] = $value;\n    if ($value === &amp;#39;&amp;#39;)
        {\n        $elf++;\n    }\n}\n\ncollect($values)\n    -&amp;gt;map(fn($value)
        =&amp;gt; collect($value)-&amp;gt;filter())\n    -&amp;gt;map(fn($value) =&amp;gt;
        collect($value)-&amp;gt;reduce(fn($carry, $item) =&amp;gt; $carry + $item))\n    -&amp;gt;max();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;collect($values)\n    -&amp;gt;map(fn($value)
        =&amp;gt; collect($value)-&amp;gt;filter())\n    -&amp;gt;map(fn($value) =&amp;gt;
        collect($value)-&amp;gt;reduce(fn($carry, $item) =&amp;gt; $carry + $item))\n    -&amp;gt;sortDesc()\n    -&amp;gt;take(3)\n    -&amp;gt;sum();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghhpq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghhpq", "created":
        1669871826.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669942150.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyghinf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Fickle_Dragonfly4381",
        "can_mod_post": false, "created_utc": 1669871841.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_9t754u7x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Swift\n\nhttps://github.com/ezfe/advent-of-code/blob/main/Sources/AdventOfCode/2022/2022%20Day%201.swift",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Swift&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ezfe/advent-of-code/blob/main/Sources/AdventOfCode/2022/2022%20Day%201.swift\"&gt;https://github.com/ezfe/advent-of-code/blob/main/Sources/AdventOfCode/2022/2022%20Day%201.swift&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghinf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghinf", "created":
        1669871841.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygin6x",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "reesmichael1",
        "can_mod_post": false, "created_utc": 1669872525.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_kxxbq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Nim [283/359]\n\nI forgot that my input parser removes empty lines by default,
        so I lost time checking what the argument to disable that was called :''(\n\nMy
        initial version of this was simply looping over all of the lines, storing
        the temporary sums, and comparing to the largest found so far on every empty
        line. However, I couldn''t resist revising it to the more functional style.\n\n    import
        algorithm\n    import math\n    import sequtils\n    import strutils\n\n    proc
        loadCalories(): seq[int] =\n      let content = contentForDay(1)\n      let
        elves = content.split(\"\\n\\n\")\n    \n      elves.mapIt(it.split(\"\\n\").filterIt(it.len()
        &gt; 0).mapIt(it.parseInt).sum())\n        \n    proc part1(): int64 =\n      result
        = loadCalories().max()\n        \n    proc part2(): int64 =\n      var calories
        = loadCalories()\n      calories.sort()\n      result = calories[calories.high-2..calories.high].sum()\n\n(`contentForDay`
        comes from [my own `input` module](https://git.sr.ht/~reesmichael1/adventofcode/tree/master/item/2022/src/input.nim),
        which has several niceties like downloading/caching the inputs once available
        and different ways of loading the input. [I also have a `runner`](https://git.sr.ht/~reesmichael1/adventofcode/tree/master/item/2022/src/runner.nim),
        which collects all of my solutions and narrates them with the story.)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Nim [283/359]&lt;/h1&gt;\n\n&lt;p&gt;I
        forgot that my input parser removes empty lines by default, so I lost time
        checking what the argument to disable that was called :&amp;#39;(&lt;/p&gt;\n\n&lt;p&gt;My
        initial version of this was simply looping over all of the lines, storing
        the temporary sums, and comparing to the largest found so far on every empty
        line. However, I couldn&amp;#39;t resist revising it to the more functional
        style.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import algorithm\nimport math\nimport
        sequtils\nimport strutils\n\nproc loadCalories(): seq[int] =\n  let content
        = contentForDay(1)\n  let elves = content.split(&amp;quot;\\n\\n&amp;quot;)\n\n  elves.mapIt(it.split(&amp;quot;\\n&amp;quot;).filterIt(it.len()
        &amp;gt; 0).mapIt(it.parseInt).sum())\n\nproc part1(): int64 =\n  result =
        loadCalories().max()\n\nproc part2(): int64 =\n  var calories = loadCalories()\n  calories.sort()\n  result
        = calories[calories.high-2..calories.high].sum()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(&lt;code&gt;contentForDay&lt;/code&gt;
        comes from &lt;a href=\"https://git.sr.ht/%7Ereesmichael1/adventofcode/tree/master/item/2022/src/input.nim\"&gt;my
        own &lt;code&gt;input&lt;/code&gt; module&lt;/a&gt;, which has several niceties
        like downloading/caching the inputs once available and different ways of loading
        the input. &lt;a href=\"https://git.sr.ht/%7Ereesmichael1/adventofcode/tree/master/item/2022/src/runner.nim\"&gt;I
        also have a &lt;code&gt;runner&lt;/code&gt;&lt;/a&gt;, which collects all
        of my solutions and narrates them with the story.)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygin6x/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygin6x", "created":
        1669872525.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygv0d8", "id": "iygv0d8", "parent_id":
        "t1_iygin6x", "depth": 1, "children": ["iygv0d8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygje2d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nithinbekal",
        "can_mod_post": false, "created_utc": 1669872999.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_69h8g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Ruby**\n\n    calories = File.read(\"input/01.txt\")\n      .split(\"\\n\\n\")
        .map { |line| line.split(\"\\n\").map(&amp;:to_i).sum }\n      .sort\n\n    part_1
        = calories.last\n    part_2 = calories.last(3).sum\n    \n\n[Link to solution](https://github.com/nithinbekal/advent-of-code/blob/bf9e78ef8cec95d5a8c9b6a3d655e8c1b77a2c20/lib/01.rb)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;calories
        = File.read(&amp;quot;input/01.txt&amp;quot;)\n  .split(&amp;quot;\\n\\n&amp;quot;)
        .map { |line| line.split(&amp;quot;\\n&amp;quot;).map(&amp;amp;:to_i).sum
        }\n  .sort\n\npart_1 = calories.last\npart_2 = calories.last(3).sum\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/nithinbekal/advent-of-code/blob/bf9e78ef8cec95d5a8c9b6a3d655e8c1b77a2c20/lib/01.rb\"&gt;Link
        to solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygje2d/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygje2d", "created":
        1669872999.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygka65",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mrtatulas",
        "can_mod_post": false, "created_utc": 1669873572.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_8erli", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Elixir](https://github.com/kupych/aoc-2022/blob/elixir/lib/day1.ex) - 4182
        / 2942 (I''m just happy to be here)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/kupych/aoc-2022/blob/elixir/lib/day1.ex\"&gt;Elixir&lt;/a&gt;
        - 4182 / 2942 (I&amp;#39;m just happy to be here)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygka65/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygka65", "created":
        1669873572.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iygxhre", "id": "iygxhre", "parent_id":
        "t1_iygka65", "depth": 1, "children": ["iygxhre", "iygovko"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygkuux", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygkuux", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygkuux/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669873947.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669873947.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygl25i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "willkill07",
        "can_mod_post": false, "created_utc": 1669874081.0, "send_replies": true,
        "parent_id": "t1_iygkuux", "score": 5, "author_fullname": "t2_7j0ca", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    let sum_list = List.fold_left (+) 0\n\nyou could do that if you really
        wanted to", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;let
        sum_list = List.fold_left (+) 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;you
        could do that if you really wanted to&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygl25i/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygl25i", "created": 1669874081.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iygmo6h", "id": "iygmo6h", "parent_id": "t1_iygl25i", "depth": 2, "children":
        ["iygmo6h"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygkxlq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HeathRaftery",
        "can_mod_post": false, "created_utc": 1669873997.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_omedd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Learning [Julia](https://github.com/hraftery/aoc2022/blob/main/day1/day1.jl)
        for the first time. Looking forward to comparing with more experienced Juliarians.  \n\n    using
        DelimitedFiles;\n\n    inp = Matrix{Int}[]\n\n    open(\"input.txt\", \"r\")
        do io\n        while !eof(io)\n            str = readuntil(io, \"\\n\\n\")\n            push!(inp,
        readdlm(IOBuffer(str)))\n        end\n    end\n\n    println(maximum(sum.(inp)))\n\n    s
        = sort(sum.(inp), rev=true)\n    println(sum(s[1:3]))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Learning &lt;a href=\"https://github.com/hraftery/aoc2022/blob/main/day1/day1.jl\"&gt;Julia&lt;/a&gt;
        for the first time. Looking forward to comparing with more experienced Juliarians.  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;using
        DelimitedFiles;\n\ninp = Matrix{Int}[]\n\nopen(&amp;quot;input.txt&amp;quot;,
        &amp;quot;r&amp;quot;) do io\n    while !eof(io)\n        str = readuntil(io,
        &amp;quot;\\n\\n&amp;quot;)\n        push!(inp, readdlm(IOBuffer(str)))\n    end\nend\n\nprintln(maximum(sum.(inp)))\n\ns
        = sort(sum.(inp), rev=true)\nprintln(sum(s[1:3]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygkxlq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygkxlq", "created":
        1669873997.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyh3xwi", "id": "iyh3xwi", "parent_id":
        "t1_iygkxlq", "depth": 1, "children": ["iyh3xwi"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyglyla",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Maolagin",
        "can_mod_post": false, "created_utc": 1669874691.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_25vuax", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Language: Python\n\nMost everyone is splitting on `\\n\\n` which is well
        and good, but it seems like good habits for later days not to just assume
        that there won''t be a billion elves in part 2. A scanning approach works
        fine too:\n\n    def d1_totals(lines):\n        out = [0]\n        for l in
        lines:\n            l = l.strip()\n            if len(l) &gt; 0: out[-1] +=
        int(l)\n            else: out.append(0)\n        return out\n    \n    with
        open(''codeadvent/2022/01/input1.txt'') as f:\n        d1_p1_tot = d1_totals(f)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Language: Python&lt;/p&gt;\n\n&lt;p&gt;Most
        everyone is splitting on &lt;code&gt;\\n\\n&lt;/code&gt; which is well and
        good, but it seems like good habits for later days not to just assume that
        there won&amp;#39;t be a billion elves in part 2. A scanning approach works
        fine too:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def d1_totals(lines):\n    out
        = [0]\n    for l in lines:\n        l = l.strip()\n        if len(l) &amp;gt;
        0: out[-1] += int(l)\n        else: out.append(0)\n    return out\n\nwith
        open(&amp;#39;codeadvent/2022/01/input1.txt&amp;#39;) as f:\n    d1_p1_tot
        = d1_totals(f)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglyla/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyglyla", "created": 1669874691.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_iygmqtx", "id": "iygmqtx", "parent_id": "t1_iyglyla", "depth": 1, "children":
        ["iygmqtx", "iygw4c9"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygmaml", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "DestroyerCrazy", "can_mod_post": false,
        "created_utc": 1669874917.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 3, "author_fullname": "t2_8rlgf6c2", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Language: Python (v3.11.0)\n\n    import
        os\n    \n    filename = \"calorie-counting.txt\"\n    here = os.path.dirname(os.path.abspath(__file__))
        \n    filepath = os.path.join(here, filename)\n    \n    with open(filepath,
        \"r\") as f: \n        content = f.read().splitlines()\n    \n    finalarray,
        temp = [], 0 \n    for i in range(0, len(content)): \n        if content[i]
        != \"\": \n            temp += int(content[i]) \n        else: \n            finalarray.append(int(temp))
        \n            temp = 0 \n    finalarray.sort()\n    \n    print(\"Part 1:\",
        finalarray[-1:][0]) \n    print(\"Part 2:\", sum(finalarray[-3:]))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Language: Python (v3.11.0)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        os\n\nfilename = &amp;quot;calorie-counting.txt&amp;quot;\nhere = os.path.dirname(os.path.abspath(__file__))
        \nfilepath = os.path.join(here, filename)\n\nwith open(filepath, &amp;quot;r&amp;quot;)
        as f: \n    content = f.read().splitlines()\n\nfinalarray, temp = [], 0 \nfor
        i in range(0, len(content)): \n    if content[i] != &amp;quot;&amp;quot;:
        \n        temp += int(content[i]) \n    else: \n        finalarray.append(int(temp))
        \n        temp = 0 \nfinalarray.sort()\n\nprint(&amp;quot;Part 1:&amp;quot;,
        finalarray[-1:][0]) \nprint(&amp;quot;Part 2:&amp;quot;, sum(finalarray[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygmaml/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygmaml", "created":
        1669874917.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iygurvq", "id": "iygurvq", "parent_id":
        "t1_iygmaml", "depth": 1, "children": ["iygurvq"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygpvr6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gpit2286",
        "can_mod_post": false, "created_utc": 1669877523.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_57kdr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Guile/Scheme\n\nI''m trying to learn a new language. This code isn''t
        completely \"Scheme-y\", but it''s a starting point for thinking more functional
        in my approach.\n\n[Pastebin](https://pastebin.com/nt3gr4Gb)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h2&gt;Guile/Scheme&lt;/h2&gt;\n\n&lt;p&gt;I&amp;#39;m
        trying to learn a new language. This code isn&amp;#39;t completely &amp;quot;Scheme-y&amp;quot;,
        but it&amp;#39;s a starting point for thinking more functional in my approach.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/nt3gr4Gb\"&gt;Pastebin&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygpvr6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygpvr6", "created":
        1669877523.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669877795.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygpwy8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "emu_fake",
        "can_mod_post": false, "created_utc": 1669877547.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_lhzva", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\n    var formattedInput = File.ReadAllText(inputPath).Split(\"\\r\\n\\r\\n\").Select(x
        =&gt; x.Split(\"\\r\\n\").Select(y =&gt; int.Parse(y)));\n    var itemStash
        = formattedInput.Select(y =&gt; (Sum: y.Sum(), Items: y)).OrderByDescending(y
        =&gt; y.Sum);\n    var puzzleOne = itemStash.First().Sum; \n    var puzzleTwo
        = itemStash.Select(x =&gt; x.Sum).Take(3).Sum();\n\nBoth &lt;1ms", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        formattedInput = File.ReadAllText(inputPath).Split(&amp;quot;\\r\\n\\r\\n&amp;quot;).Select(x
        =&amp;gt; x.Split(&amp;quot;\\r\\n&amp;quot;).Select(y =&amp;gt; int.Parse(y)));\nvar
        itemStash = formattedInput.Select(y =&amp;gt; (Sum: y.Sum(), Items: y)).OrderByDescending(y
        =&amp;gt; y.Sum);\nvar puzzleOne = itemStash.First().Sum; \nvar puzzleTwo
        = itemStash.Select(x =&amp;gt; x.Sum).Take(3).Sum();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Both
        &amp;lt;1ms&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygpwy8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygpwy8", "created":
        1669877547.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygpwyd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sidewaysthinking",
        "can_mod_post": false, "created_utc": 1669877548.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_cy6rppc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C# 34/34](https://github.com/oparkerj/AdventOfCode/blob/master/AdventOfCode2022/Puzzles/Day1.cs)\n\nI
        wasn''t expecting grouped input on day one, but I''m still pretty happy with
        how it turned out.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/oparkerj/AdventOfCode/blob/master/AdventOfCode2022/Puzzles/Day1.cs\"&gt;C#
        34/34&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I wasn&amp;#39;t expecting grouped input
        on day one, but I&amp;#39;m still pretty happy with how it turned out.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygpwyd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygpwyd", "created":
        1669877548.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygqj28",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lokidev",
        "can_mod_post": false, "created_utc": 1669878019.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4d0zk076", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\"Excel\" (works with real input too, but put in the example data):  \n\n\nhttps://docs.google.com/spreadsheets/d/1F44bCYhvj7v2cZVmvZL4v-ImZyxT\\_Z1YINWE6DOOpJo/edit?usp=sharing",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Excel&amp;quot;
        (works with real input too, but put in the example data):  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://docs.google.com/spreadsheets/d/1F44bCYhvj7v2cZVmvZL4v-ImZyxT%5C_Z1YINWE6DOOpJo/edit?usp=sharing\"&gt;https://docs.google.com/spreadsheets/d/1F44bCYhvj7v2cZVmvZL4v-ImZyxT\\_Z1YINWE6DOOpJo/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygqj28/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygqj28", "created":
        1669878019.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iytr5c6", "id": "iytr5c6", "parent_id":
        "t1_iygqj28", "depth": 1, "children": ["iytr5c6"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygqjmn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rabuf",
        "can_mod_post": false, "created_utc": 1669878030.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_38xc9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### [C++](https://github.com/rabuf/advent-of-code/blob/0da7f3196462a07396a10095fa690f3ba0dbfc57/2022/cpp/main.cpp#L6-L20)\n\nThis
        will get cleaned up for better support of multiple days, haven''t used C++
        in a while and decided to try it with some of the problems (my first version
        will always be Lisp). I liked the way this one turned out. The core, after
        parsing, ends up being this:\n\n    std::nth_element(elves.begin(), elves.begin()+2,
        elves.end(), std::greater{});\n    std::cout &lt;&lt; \"Day 01:\\n\";\n    std::cout
        &lt;&lt; \"    Part 1: \" &lt;&lt; elves[0] &lt;&lt; std::endl;\n    std::cout
        &lt;&lt; \"    Part 2: \" &lt;&lt; std::accumulate(elves.begin(), elves.begin()+3,
        0) &lt;&lt; std::endl;\n\nFirst line ensures the first 3 elements are the
        largest three (and are in descending order), then for part 1 just grab the
        first element and for part 2 sum up the first 3 elements.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h3&gt;&lt;a href=\"https://github.com/rabuf/advent-of-code/blob/0da7f3196462a07396a10095fa690f3ba0dbfc57/2022/cpp/main.cpp#L6-L20\"&gt;C++&lt;/a&gt;&lt;/h3&gt;\n\n&lt;p&gt;This
        will get cleaned up for better support of multiple days, haven&amp;#39;t used
        C++ in a while and decided to try it with some of the problems (my first version
        will always be Lisp). I liked the way this one turned out. The core, after
        parsing, ends up being this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;std::nth_element(elves.begin(),
        elves.begin()+2, elves.end(), std::greater{});\nstd::cout &amp;lt;&amp;lt;
        &amp;quot;Day 01:\\n&amp;quot;;\nstd::cout &amp;lt;&amp;lt; &amp;quot;    Part
        1: &amp;quot; &amp;lt;&amp;lt; elves[0] &amp;lt;&amp;lt; std::endl;\nstd::cout
        &amp;lt;&amp;lt; &amp;quot;    Part 2: &amp;quot; &amp;lt;&amp;lt; std::accumulate(elves.begin(),
        elves.begin()+3, 0) &amp;lt;&amp;lt; std::endl;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;First
        line ensures the first 3 elements are the largest three (and are in descending
        order), then for part 1 just grab the first element and for part 2 sum up
        the first 3 elements.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygqjmn/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygqjmn", "created":
        1669878030.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iygwgmj", "id": "iygwgmj", "parent_id":
        "t1_iygqjmn", "depth": 1, "children": ["iygwgmj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygrfdj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kirigerKairen",
        "can_mod_post": false, "created_utc": 1669878715.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4f9rzl9p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3.10, today with two one-liners.\nI accordingly called the file `cursed.py`.\n\n```python\nprint(max([sum([int(a)
        for a in b.split(\"\\n\")]) for b in open(\"../input\", \"r\").read().strip().split(\"\\n\\n\")]))\nprint(sum(sorted([sum([int(a)
        for a in b.split(\"\\n\")]) for b in open(\"../input\", \"r\").read().strip().split(\"\\n\\n\")],
        reverse=True)[0:3]))\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3.10, today with two one-liners.\nI accordingly called the file &lt;code&gt;cursed.py&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;python\nprint(max([sum([int(a)
        for a in b.split(&amp;quot;\\n&amp;quot;)]) for b in open(&amp;quot;../input&amp;quot;,
        &amp;quot;r&amp;quot;).read().strip().split(&amp;quot;\\n\\n&amp;quot;)]))\nprint(sum(sorted([sum([int(a)
        for a in b.split(&amp;quot;\\n&amp;quot;)]) for b in open(&amp;quot;../input&amp;quot;,
        &amp;quot;r&amp;quot;).read().strip().split(&amp;quot;\\n\\n&amp;quot;)],
        reverse=True)[0:3]))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygrfdj/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygrfdj", "created": 1669878715.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iygtln2", "id": "iygtln2", "parent_id": "t1_iygrfdj", "depth": 1, "children":
        ["iygtln2"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669896599.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygrl7g", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BarkLicker",
        "can_mod_post": false, "created_utc": 1669878846.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_hu13z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#Python\n\nI know eval() is frowned upon, but it just worked so well.\n\n    #
        Part 1\n    # with open(''2022\\\\Day 1 Input.txt'', ''r'') as data:\n    #     calories
        = ''+''.join([x.strip() for x in data.readlines()]).split(''++'')\n    #     print(max([eval(i)
        for i in calories]))\n    \n    # Part 2\n    with open(''2022\\\\Day 1 Input.txt'',
        ''r'') as data:\n        calories = ''+''.join([x.strip() for x in data.readlines()]).split(''++'')\n        calorie_sums
        = [eval(i) for i in calories]\n        print(sum(sorted(calorie_sums, reverse=True)[:3]))\n\nI''m
        barely a sophmore in college at the age of 35. This is all new to me and I''m
        having a blast!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;I
        know eval() is frowned upon, but it just worked so well.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Part 1\n# with open(&amp;#39;2022\\\\Day 1 Input.txt&amp;#39;, &amp;#39;r&amp;#39;)
        as data:\n#     calories = &amp;#39;+&amp;#39;.join([x.strip() for x in data.readlines()]).split(&amp;#39;++&amp;#39;)\n#     print(max([eval(i)
        for i in calories]))\n\n# Part 2\nwith open(&amp;#39;2022\\\\Day 1 Input.txt&amp;#39;,
        &amp;#39;r&amp;#39;) as data:\n    calories = &amp;#39;+&amp;#39;.join([x.strip()
        for x in data.readlines()]).split(&amp;#39;++&amp;#39;)\n    calorie_sums
        = [eval(i) for i in calories]\n    print(sum(sorted(calorie_sums, reverse=True)[:3]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;m
        barely a sophmore in college at the age of 35. This is all new to me and I&amp;#39;m
        having a blast!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygrl7g/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygrl7g", "created":
        1669878846.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iygvlhh", "id": "iygvlhh", "parent_id":
        "t1_iygrl7g", "depth": 1, "children": ["iygvlhh", "iygtdjj", "iygsc21"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygs1yo", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Cloudan29",
        "can_mod_post": false, "created_utc": 1669879213.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_jp811tl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Did a few different solutions in J for those who want to see (this wasn''t
        my first submission, I also have a Python solution).\n\n    NB. I absolutely
        abhor string stuff in J\n    NB. This converts the input into a bunch of lists
        of numbers\n    input =: \". &gt; cutLF (''  '';LF) stringreplace (LF;'' '')
        stringreplace 1!:1 &lt; ''day01.txt''\n    \n    NB. Rank one sum, get max\n    part1
        =: &gt;./ +/\"1 input\n    NB. Rank one sum, sort descending, get first\n    part1
        =: {. \\:~ +/\"1 input\n    NB. Rank one sum, sort ascending, get last\n    ]part1
        =: {: /:~ +/\"1 input\n    \n    NB. Rank one sum, sort descending, get first
        3, sum\n    ]part2 =: +/ 3 {. \\:~ +/\"1 input", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Did a few different solutions in J for those who
        want to see (this wasn&amp;#39;t my first submission, I also have a Python
        solution).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;NB. I absolutely abhor string
        stuff in J\nNB. This converts the input into a bunch of lists of numbers\ninput
        =: &amp;quot;. &amp;gt; cutLF (&amp;#39;  &amp;#39;;LF) stringreplace (LF;&amp;#39;
        &amp;#39;) stringreplace 1!:1 &amp;lt; &amp;#39;day01.txt&amp;#39;\n\nNB.
        Rank one sum, get max\npart1 =: &amp;gt;./ +/&amp;quot;1 input\nNB. Rank one
        sum, sort descending, get first\npart1 =: {. \\:~ +/&amp;quot;1 input\nNB.
        Rank one sum, sort ascending, get last\n]part1 =: {: /:~ +/&amp;quot;1 input\n\nNB.
        Rank one sum, sort descending, get first 3, sum\n]part2 =: +/ 3 {. \\:~ +/&amp;quot;1
        input\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygs1yo/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygs1yo", "created":
        1669879213.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygs8y7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "crzyhorse",
        "can_mod_post": false, "created_utc": 1669879369.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_g1lsk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C++](https://raw.githubusercontent.com/crzyhorse/AdventOfCode2022/main/day1/AdventOfCodeDay1.cpp)\n\nNote:
        I used a map, as opposed to vector or array like everyone else because I didn''t
        fully read the problem statement and assumed that I was going to be asked
        something like \"How many calories was elf #256 carrying\" or somesuch.\n\nAlso
        would have liked a way to get the blank line with just streaming to an int,
        instead of having to convert from a string, but I couldn''t figure out how.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://raw.githubusercontent.com/crzyhorse/AdventOfCode2022/main/day1/AdventOfCodeDay1.cpp\"&gt;C++&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Note:
        I used a map, as opposed to vector or array like everyone else because I didn&amp;#39;t
        fully read the problem statement and assumed that I was going to be asked
        something like &amp;quot;How many calories was elf #256 carrying&amp;quot;
        or somesuch.&lt;/p&gt;\n\n&lt;p&gt;Also would have liked a way to get the
        blank line with just streaming to an int, instead of having to convert from
        a string, but I couldn&amp;#39;t figure out how.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygs8y7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygs8y7", "created":
        1669879369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygtcbe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lynerist",
        "can_mod_post": false, "created_utc": 1669880266.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_314jez9d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Golang commented solutions as Always\n\nhttps://github.com/lynerist/Advent-of-code-2022-golang/blob/main/Day_01/day01_b.go",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Golang commented solutions
        as Always&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/lynerist/Advent-of-code-2022-golang/blob/main/Day_01/day01_b.go\"&gt;https://github.com/lynerist/Advent-of-code-2022-golang/blob/main/Day_01/day01_b.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtcbe/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygtcbe", "created":
        1669880266.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygtgn9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "musifter",
        "can_mod_post": false, "created_utc": 1669880366.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_cwt0kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# dc\n\nOkay, the first day isn''t so friendly to dc this year.  Need to
        replace those blank lines with some way that dc can actually detect (-1 sentinels
        here).  Also decided to take advantage of a newer dc feature I''ve been avoiding
        in past years for compatibility... I will be using the R deep rotates this
        year.  The fun of using a concatenative stack language is juggling the stack...
        using registers for everything just removes the need for a stack.\n\n    perl
        -pe ''s#^$#_1#; BEGIN {print \"_1 \"}'' input | dc -f- -e ''[q]sQ0sn[s.ln:eln1+sn0]sS[rd_1=Sz1=Q+lLx]sL0lLx[dsm]sN[d;e3R&lt;Nlm;er1+dln&gt;M]sM[0sm0;e1lMx]sRlRxs.p0lm:elRxs.+0lm:elRxs.+p''\n\nFormatted
        with comments version: [https://pastebin.com/fhs5HYFJ](https://pastebin.com/fhs5HYFJ)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;dc&lt;/h1&gt;\n\n&lt;p&gt;Okay,
        the first day isn&amp;#39;t so friendly to dc this year.  Need to replace
        those blank lines with some way that dc can actually detect (-1 sentinels
        here).  Also decided to take advantage of a newer dc feature I&amp;#39;ve
        been avoiding in past years for compatibility... I will be using the R deep
        rotates this year.  The fun of using a concatenative stack language is juggling
        the stack... using registers for everything just removes the need for a stack.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;perl
        -pe &amp;#39;s#^$#_1#; BEGIN {print &amp;quot;_1 &amp;quot;}&amp;#39; input
        | dc -f- -e &amp;#39;[q]sQ0sn[s.ln:eln1+sn0]sS[rd_1=Sz1=Q+lLx]sL0lLx[dsm]sN[d;e3R&amp;lt;Nlm;er1+dln&amp;gt;M]sM[0sm0;e1lMx]sRlRxs.p0lm:elRxs.+0lm:elRxs.+p&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Formatted
        with comments version: &lt;a href=\"https://pastebin.com/fhs5HYFJ\"&gt;https://pastebin.com/fhs5HYFJ&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtgn9/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygtgn9", "created":
        1669880366.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygul2m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vss2sn",
        "can_mod_post": false, "created_utc": 1669881311.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_aadtluzt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solutions in C++\r  \n[Part 1](https://github.com/vss2sn/advent_of_code/blob/master/2022/cpp/day_01a.cpp)\r  \n\r[Part
        2](https://github.com/vss2sn/advent_of_code/blob/master/2022/cpp/day_01b.cpp)\r  \n(Each
        file is a self-contained solution)", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Solutions in C++&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/vss2sn/advent_of_code/blob/master/2022/cpp/day_01a.cpp\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/vss2sn/advent_of_code/blob/master/2022/cpp/day_01b.cpp\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(Each file is a self-contained solution)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygul2m/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygul2m", "created":
        1669881311.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669882847.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygw4nv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "raevnos",
        "can_mod_post": false, "created_utc": 1669882643.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_3995k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using Racket:\n\n    #lang racket\n    \n    (define (read-food-supplies)\n      (for/fold
        ([elves ''()]\n                 [current-elf ''()]\n                 #:result
        (cons current-elf elves))\n                ([line (in-lines)])\n        (if
        (string=? line \"\")\n    \t    (values (cons current-elf elves) ''())\n    \t    (values
        elves (cons (string-&gt;number line) current-elf)))))\n    \n    (define (sum
        list) (foldl + 0 list))\n    \n    (define food-supplies (read-food-supplies))\n    (define
        food-totals (sort (map sum food-supplies) &gt;))\n    (printf \"Part 1: ~A~%\"
        (first food-totals))\n    (printf \"Part 2: ~A~%\" (sum (take food-totals
        3)))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using
        Racket:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#lang racket\n\n(define (read-food-supplies)\n  (for/fold
        ([elves &amp;#39;()]\n             [current-elf &amp;#39;()]\n             #:result
        (cons current-elf elves))\n            ([line (in-lines)])\n    (if (string=?
        line &amp;quot;&amp;quot;)\n        (values (cons current-elf elves) &amp;#39;())\n        (values
        elves (cons (string-&amp;gt;number line) current-elf)))))\n\n(define (sum
        list) (foldl + 0 list))\n\n(define food-supplies (read-food-supplies))\n(define
        food-totals (sort (map sum food-supplies) &amp;gt;))\n(printf &amp;quot;Part
        1: ~A~%&amp;quot; (first food-totals))\n(printf &amp;quot;Part 2: ~A~%&amp;quot;
        (sum (take food-totals 3)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygw4nv/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygw4nv", "created": 1669882643.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 5, "name":
        "t1_iyh6bgc", "id": "iyh6bgc", "parent_id": "t1_iygw4nv", "depth": 1, "children":
        ["iyh6bgc", "iygy02q", "iyh12yu", "iyh58ms"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygwtge",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ShadowwwsAsm",
        "can_mod_post": false, "created_utc": 1669883234.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_7ifn9lix", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Assembly x64\n\nPart 1&amp;2 : https://github.com/Shadowwws/AdventOfCode2022  \n\n\nTrying
        to do it in assembly once again. Starting with day 1. Less straightforward
        than previous years because of the 2D array. So I decided to read the calories
        for one elf and do the sum immediately to store it in a register and go to
        the next elf. That way I only use the stack to store the calories for one
        elf at the same time.  \n\n\nCode is a bit messy, I have to de-rust lol, might
        get better later.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Assembly
        x64&lt;/p&gt;\n\n&lt;p&gt;Part 1&amp;amp;2 : &lt;a href=\"https://github.com/Shadowwws/AdventOfCode2022\"&gt;https://github.com/Shadowwws/AdventOfCode2022&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Trying
        to do it in assembly once again. Starting with day 1. Less straightforward
        than previous years because of the 2D array. So I decided to read the calories
        for one elf and do the sum immediately to store it in a register and go to
        the next elf. That way I only use the stack to store the calories for one
        elf at the same time.  &lt;/p&gt;\n\n&lt;p&gt;Code is a bit messy, I have
        to de-rust lol, might get better later.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygwtge/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygwtge", "created": 1669883234.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 4, "name":
        "t1_iyhge54", "id": "iyhge54", "parent_id": "t1_iygwtge", "depth": 1, "children":
        ["iyhge54"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669885782.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygzbos", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "afunkyduck",
        "can_mod_post": false, "created_utc": 1669885505.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_tsg1iz04", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Unison](https://www.unison-lang.org/)\n\n`&gt; parseInput input |&gt; solution`\n\n    day01.parseInput
        : Text -&gt; [[Nat]]\n    day01.parseInput = \n        use List map \n        Text.split
        ?\\n \n        &gt;&gt; List.split Text.isEmpty \n        &gt;&gt; map (map
        Nat.fromText &gt;&gt; somes)\n\n**Part 1**\n\n    day01.part1.solution : [[Nat]]
        -&gt; Nat\n    day01.part1.solution = \n        use Nat + \n        List.map
        (List.foldLeft (+) 0) \n        &gt;&gt; maximum \n        &gt;&gt; Optional.getOrElse
        0\n\n**Part 2**\n\n    day01.part2.solution : [[Nat]] -&gt; Nat\n    day01.part2.solution
        = \n        use List foldLeft use Nat + &gt;= \n        List.map (foldLeft
        (+) 0) \n        &gt;&gt; sortWith (&gt;=) \n        &gt;&gt; List.take 3
        \n        &gt;&gt; foldLeft (+) 0", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.unison-lang.org/\"&gt;Unison&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;gt;
        parseInput input |&amp;gt; solution&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;day01.parseInput
        : Text -&amp;gt; [[Nat]]\nday01.parseInput = \n    use List map \n    Text.split
        ?\\n \n    &amp;gt;&amp;gt; List.split Text.isEmpty \n    &amp;gt;&amp;gt;
        map (map Nat.fromText &amp;gt;&amp;gt; somes)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        1&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;day01.part1.solution
        : [[Nat]] -&amp;gt; Nat\nday01.part1.solution = \n    use Nat + \n    List.map
        (List.foldLeft (+) 0) \n    &amp;gt;&amp;gt; maximum \n    &amp;gt;&amp;gt;
        Optional.getOrElse 0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Part
        2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;day01.part2.solution
        : [[Nat]] -&amp;gt; Nat\nday01.part2.solution = \n    use List foldLeft use
        Nat + &amp;gt;= \n    List.map (foldLeft (+) 0) \n    &amp;gt;&amp;gt; sortWith
        (&amp;gt;=) \n    &amp;gt;&amp;gt; List.take 3 \n    &amp;gt;&amp;gt; foldLeft
        (+) 0\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygzbos/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygzbos", "created":
        1669885505.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygzbp2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "## C++ Code Solution\n\nStraight-forward solution\n\n    #include
        &lt;bits/stdc++.h&gt;\n    \n    using namespace  std;\n    \n    int main()
        {\n    \tbool ok = 1;\n    \tint s = 0, a = 0, b = 0, c = 0;\n    \tstring
        str;\n    \twhile(getline(cin,  str)) {\n    \t\tif(str.empty()) {\n    \t\t\tif(a
        &lt;= s) {\n    \t\t\t\tc = b;\n    \t\t\t\tb = a; \n    \t\t\t\ta = s;\n    \t\t\t}
        else if(b &lt;= s) {\n    \t\t\t\tc = b;\n    \t\t\t\tb = s;\n    \t\t\t}
        else if(c &lt;= s) {\n    \t\t\t\tc = s;\n    \t\t\t}\n    \t\t\ts = 0;\n    \t\t\tcontinue;\n    \t\t}\n    \t\ts
        += stoi(str);\n    \t}\n    \tif( c &lt;= s ) c = s;\n    \tcout &lt;&lt;
        a + b + c &lt;&lt; ''\\n'';\n    \t\n    \treturn 0;\n    }", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_iygzbp2", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;C++
        Code Solution&lt;/h2&gt;\n\n&lt;p&gt;Straight-forward solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;bits/stdc++.h&amp;gt;\n\nusing namespace  std;\n\nint main() {\n    bool
        ok = 1;\n    int s = 0, a = 0, b = 0, c = 0;\n    string str;\n    while(getline(cin,  str))
        {\n        if(str.empty()) {\n            if(a &amp;lt;= s) {\n                c
        = b;\n                b = a; \n                a = s;\n            } else
        if(b &amp;lt;= s) {\n                c = b;\n                b = s;\n            }
        else if(c &amp;lt;= s) {\n                c = s;\n            }\n            s
        = 0;\n            continue;\n        }\n        s += stoi(str);\n    }\n    if(
        c &amp;lt;= s ) c = s;\n    cout &amp;lt;&amp;lt; a + b + c &amp;lt;&amp;lt;
        &amp;#39;\\n&amp;#39;;\n\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygzbp2/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669885505.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669885505.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygzh5i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jorge_Fakher",
        "can_mod_post": false, "created_utc": 1669885641.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_c6epr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Elixir\n\n    defmodule CalorieCounting do\n      def part1(file) do\n        file\n        |&gt;
        split_elves\n        |&gt; Enum.map(&amp;sum_elves/1)\n        |&gt; Enum.max\n      end\n    \n      def
        part2(file) do\n        file\n        |&gt; split_elves\n        |&gt; Enum.map(&amp;sum_elves/1)\n        |&gt;
        Enum.sort\n        |&gt; Enum.take(-3)\n        |&gt; Enum.sum\n      end\n    \n      defp
        split_elves(file) do\n        file\n        |&gt; File.read!\n        |&gt;
        String.split(\"\\n\\n\")\n      end\n    \n      defp sum_elves(elf) do\n       String.split(elf,
        \"\\n\")\n        |&gt; Enum.map(&amp;String.to_integer/1)\n        |&gt;
        Enum.sum\n      end\n    end\n    \n    p1 = CalorieCounting.part1 \"input.txt\"\n    p2
        = CalorieCounting.part2 \"input.txt\"\n    \n    IO.puts ~s/Part 1: #{p1}\\nPart
        2: #{p2}/", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Elixir&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;defmodule
        CalorieCounting do\n  def part1(file) do\n    file\n    |&amp;gt; split_elves\n    |&amp;gt;
        Enum.map(&amp;amp;sum_elves/1)\n    |&amp;gt; Enum.max\n  end\n\n  def part2(file)
        do\n    file\n    |&amp;gt; split_elves\n    |&amp;gt; Enum.map(&amp;amp;sum_elves/1)\n    |&amp;gt;
        Enum.sort\n    |&amp;gt; Enum.take(-3)\n    |&amp;gt; Enum.sum\n  end\n\n  defp
        split_elves(file) do\n    file\n    |&amp;gt; File.read!\n    |&amp;gt; String.split(&amp;quot;\\n\\n&amp;quot;)\n  end\n\n  defp
        sum_elves(elf) do\n   String.split(elf, &amp;quot;\\n&amp;quot;)\n    |&amp;gt;
        Enum.map(&amp;amp;String.to_integer/1)\n    |&amp;gt; Enum.sum\n  end\nend\n\np1
        = CalorieCounting.part1 &amp;quot;input.txt&amp;quot;\np2 = CalorieCounting.part2
        &amp;quot;input.txt&amp;quot;\n\nIO.puts ~s/Part 1: #{p1}\\nPart 2: #{p2}/\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygzh5i/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygzh5i", "created":
        1669885641.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygzohd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sanraith",
        "can_mod_post": false, "created_utc": 1669885830.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_5yook", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\nSplit input string on double line breaks, sum groups. Order by
        reverse and take 3 on part 2.\n\nSource: [github.com/sanraith/aoc2022/.../day01.rs](https://github.com/sanraith/aoc2022/blob/f86ecb10fa7e4697940abb9d666c708e082726de/aoc-lib/src/solutions/year2022/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;Split
        input string on double line breaks, sum groups. Order by reverse and take
        3 on part 2.&lt;/p&gt;\n\n&lt;p&gt;Source: &lt;a href=\"https://github.com/sanraith/aoc2022/blob/f86ecb10fa7e4697940abb9d666c708e082726de/aoc-lib/src/solutions/year2022/day01.rs\"&gt;github.com/sanraith/aoc2022/.../day01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygzohd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygzohd", "created":
        1669885830.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygzx33",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Fyvaproldje",
        "can_mod_post": false, "created_utc": 1669886055.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_2h7zn9ro", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Julia](https://github.com/DarthGandalf/advent-of-code/blob/master/2022/day01.jl)\n\n    function
        part1(input)\n        result = 0\n        for elf = eachsplit(input, \"\\n\\n\")\n            this
        = sum(parse.(Int, eachsplit(elf)))\n            result = max(this, result)\n        end\n        result\n    end\n    \n    function
        part2(input)\n        return sum(partialsort!(eachsplit(test_input, \"\\n\\n\")\n                                .|&gt;
        (elf -&gt; parse.(Int, eachsplit(elf)) |&gt; sum),\n                                1:3,
        rev=true))\n        # previous solution, also works but doesn''t use fancy
        julia features\n        elves = []\n        for elf = eachsplit(input, \"\\n\\n\")\n            this
        = parse.(Int, eachsplit(elf)) |&gt; sum\n            push!(elves, this)\n        end\n        sum(partialsort!(elves,
        1:3, rev=true))\n    end", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/DarthGandalf/advent-of-code/blob/master/2022/day01.jl\"&gt;Julia&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        part1(input)\n    result = 0\n    for elf = eachsplit(input, &amp;quot;\\n\\n&amp;quot;)\n        this
        = sum(parse.(Int, eachsplit(elf)))\n        result = max(this, result)\n    end\n    result\nend\n\nfunction
        part2(input)\n    return sum(partialsort!(eachsplit(test_input, &amp;quot;\\n\\n&amp;quot;)\n                            .|&amp;gt;
        (elf -&amp;gt; parse.(Int, eachsplit(elf)) |&amp;gt; sum),\n                            1:3,
        rev=true))\n    # previous solution, also works but doesn&amp;#39;t use fancy
        julia features\n    elves = []\n    for elf = eachsplit(input, &amp;quot;\\n\\n&amp;quot;)\n        this
        = parse.(Int, eachsplit(elf)) |&amp;gt; sum\n        push!(elves, this)\n    end\n    sum(partialsort!(elves,
        1:3, rev=true))\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygzx33/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygzx33", "created": 1669886055.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyhkkom", "id": "iyhkkom", "parent_id": "t1_iygzx33", "depth": 1, "children":
        ["iyhkkom"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh1z60", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "yomanidkman",
        "can_mod_post": false, "created_utc": 1669887956.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_45bbifhf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin\n\nhttps://github.com/MarcusDunn/aoc2022/blob/master/src/main/kotlin/io/github/marcusdunn/aoc2022/day01/CalorieCounting.kt",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/MarcusDunn/aoc2022/blob/master/src/main/kotlin/io/github/marcusdunn/aoc2022/day01/CalorieCounting.kt\"&gt;https://github.com/MarcusDunn/aoc2022/blob/master/src/main/kotlin/io/github/marcusdunn/aoc2022/day01/CalorieCounting.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh1z60/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh1z60", "created":
        1669887956.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh3ipx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "radulfr2",
        "can_mod_post": false, "created_utc": 1669889389.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_1wqtesyh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3.\n\n    with open(\"input1.txt\") as file:\n        n_calories =
        sorted(sum(int(food) for food in calories.split(\"\\n\")) for calories in
        (elf for elf in file.read().strip().split(\"\\n\\n\")))\n        print(n_calories[-1])\n        print(sum(n_calories[-3:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;input1.txt&amp;quot;) as file:\n    n_calories = sorted(sum(int(food)
        for food in calories.split(&amp;quot;\\n&amp;quot;)) for calories in (elf
        for elf in file.read().strip().split(&amp;quot;\\n\\n&amp;quot;)))\n    print(n_calories[-1])\n    print(sum(n_calories[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh3ipx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh3ipx", "created":
        1669889389.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669890095.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh3pws", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "blacai",
        "can_mod_post": false, "created_utc": 1669889572.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_gnlzn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hi! here again another year continuing learning F#**F#**\n\n    // helper
        method\n    let getLinesGroupBySeparator (inputLines: string list) (separator:
        string) =\n        let complete = \n            seq {\n                for
        line in inputLines do\n                    yield! line.Split('' '')\n            }
        |&gt; List.ofSeq\n        let folder (a) (cur, acc) = \n            match
        a with\n            | _ when a &lt;&gt; separator -&gt; a::cur, acc\n            |
        _ -&gt; [], cur::acc\n        \n        let result = List.foldBack folder
        (complete) ([], [])\n        (fst result)::(snd result)\n    \n    let elvesCalories
        = getLinesGroupBySeparator inputLines \"\" |&gt; List.map(fun l -&gt; l |&gt;
        (List.map int) |&gt; List.sum)\n    \n    // Part 1 \n    elvesCalories |&gt;
        List.max \n    // Part 2 \n    elvesCalories |&gt; List.sortDescending |&gt;
        List.take 3 |&gt; List.sum", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hi!
        here again another year continuing learning F#&lt;strong&gt;F#&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        helper method\nlet getLinesGroupBySeparator (inputLines: string list) (separator:
        string) =\n    let complete = \n        seq {\n            for line in inputLines
        do\n                yield! line.Split(&amp;#39; &amp;#39;)\n        } |&amp;gt;
        List.ofSeq\n    let folder (a) (cur, acc) = \n        match a with\n        |
        _ when a &amp;lt;&amp;gt; separator -&amp;gt; a::cur, acc\n        | _ -&amp;gt;
        [], cur::acc\n\n    let result = List.foldBack folder (complete) ([], [])\n    (fst
        result)::(snd result)\n\nlet elvesCalories = getLinesGroupBySeparator inputLines
        &amp;quot;&amp;quot; |&amp;gt; List.map(fun l -&amp;gt; l |&amp;gt; (List.map
        int) |&amp;gt; List.sum)\n\n// Part 1 \nelvesCalories |&amp;gt; List.max \n//
        Part 2 \nelvesCalories |&amp;gt; List.sortDescending |&amp;gt; List.take 3
        |&amp;gt; List.sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh3pws/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyh3pws", "created": 1669889572.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyh4bg4", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ChevyRayJohnston", "can_mod_post": false,
        "created_utc": 1669890108.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 3, "author_fullname": "t2_b6ceh", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "**Rust**:\n\n    fn
        solve(input: &amp;str) -&gt; i32 {\n        let mut totals: Vec&lt;i32&gt;
        = input\n            .split(\"\\n\\n\")\n            .map(|elf| elf.lines().map(|cals|
        cals.parse::&lt;i32&gt;().unwrap()).sum())\n            .collect();\n        totals.sort();\n        totals.iter().rev().take(3).sum()\n    }\n\nAnd
        an alternative that avoids the `Vec` allocation and `sort()` call:\n\n    fn
        solve_without_vec(input: &amp;str) -&gt; i32 {\n        input\n            .split(\"\\n\\n\")\n            .map(|elf|
        elf.lines().map(|cals| cals.parse::&lt;i32&gt;().unwrap()).sum())\n            .fold([0,
        0, 0], |[a, b, c], cals| {\n                if cals &gt;= a {\n                    [cals,
        a, b]\n                } else if cals &gt;= b {\n                    [a, cals,
        b]\n                } else if cals &gt;= c {\n                    [a, b, cals]\n                }
        else {\n                    [a, b, c]\n                }\n            })\n            .into_iter()\n            .sum()\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        solve(input: &amp;amp;str) -&amp;gt; i32 {\n    let mut totals: Vec&amp;lt;i32&amp;gt;
        = input\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|elf| elf.lines().map(|cals|
        cals.parse::&amp;lt;i32&amp;gt;().unwrap()).sum())\n        .collect();\n    totals.sort();\n    totals.iter().rev().take(3).sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        an alternative that avoids the &lt;code&gt;Vec&lt;/code&gt; allocation and
        &lt;code&gt;sort()&lt;/code&gt; call:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        solve_without_vec(input: &amp;amp;str) -&amp;gt; i32 {\n    input\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|elf|
        elf.lines().map(|cals| cals.parse::&amp;lt;i32&amp;gt;().unwrap()).sum())\n        .fold([0,
        0, 0], |[a, b, c], cals| {\n            if cals &amp;gt;= a {\n                [cals,
        a, b]\n            } else if cals &amp;gt;= b {\n                [a, cals,
        b]\n            } else if cals &amp;gt;= c {\n                [a, b, cals]\n            }
        else {\n                [a, b, c]\n            }\n        })\n        .into_iter()\n        .sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh4bg4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh4bg4", "created":
        1669890108.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyh6ko9", "id": "iyh6ko9", "parent_id":
        "t1_iyh4bg4", "depth": 1, "children": ["iyh6ko9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh4j50",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rctxs",
        "can_mod_post": false, "created_utc": 1669890302.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_17g6pa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Haskell**\n\n[https://pastebin.com/8r2ZiqFR](https://pastebin.com/8r2ZiqFR)\n\n```\nmain
        :: IO ()\nmain = do\n  f1 &lt;- readFile \"input01.txt\"\n  print $ taskOne
        f1\n  print $ taskTwo f1\n \ntaskOne :: String -&gt; Int\ntaskOne = maximum
        . map sum . parseElves\n \ntaskTwo :: String -&gt; Int\ntaskTwo = sum . take
        3 . reverse . sort . map sum . parseElves\n \nparseElves :: String -&gt; [[Int]]\nparseElves
        = parseLine [] [] . lines\n  where\n    parseLine :: [Int] -&gt; [[Int]] -&gt;
        [String] -&gt; [[Int]]\n    -- end of file reached\n    parseLine elve elves
        [] = elve : elves\n    -- blank line\n    parseLine elve elves (\"\" : xs)
        = parseLine [] (elve : elves) xs\n    -- line with number\n    parseLine elve
        elves (line : xs) = parseLine (read line : elve) elves xs\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Haskell&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/8r2ZiqFR\"&gt;https://pastebin.com/8r2ZiqFR&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;```\nmain
        :: IO ()\nmain = do\n  f1 &amp;lt;- readFile &amp;quot;input01.txt&amp;quot;\n  print
        $ taskOne f1\n  print $ taskTwo f1&lt;/p&gt;\n\n&lt;p&gt;taskOne :: String
        -&amp;gt; Int\ntaskOne = maximum . map sum . parseElves&lt;/p&gt;\n\n&lt;p&gt;taskTwo
        :: String -&amp;gt; Int\ntaskTwo = sum . take 3 . reverse . sort . map sum
        . parseElves&lt;/p&gt;\n\n&lt;p&gt;parseElves :: String -&amp;gt; [[Int]]\nparseElves
        = parseLine [] [] . lines\n  where\n    parseLine :: [Int] -&amp;gt; [[Int]]
        -&amp;gt; [String] -&amp;gt; [[Int]]\n    -- end of file reached\n    parseLine
        elve elves [] = elve : elves\n    -- blank line\n    parseLine elve elves
        (&amp;quot;&amp;quot; : xs) = parseLine [] (elve : elves) xs\n    -- line
        with number\n    parseLine elve elves (line : xs) = parseLine (read line :
        elve) elves xs\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh4j50/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh4j50", "created":
        1669890302.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyhn9y6", "id": "iyhn9y6", "parent_id":
        "t1_iyh4j50", "depth": 1, "children": ["iyhn9y6", "iyugicf"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh5ex1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "**Python3**\n\n    def main():\n        with open(\"input.txt\")
        as f:\n            elf_list = []\n            elf = 0\n            for calorie
        in [line.rstrip() for line in f.readlines()]:\n                if calorie:\n                    elf
        += int(calorie)\n                else:\n                    elf_list.append(elf)\n                    elf
        = 0\n            # part 1\n            print(max(elf_list))\n            #
        part 2\n            print(sum(sorted(elf_list, reverse=True)[0:3]))\n    \n    \n    if
        __name__ == \"__main__\":\n        main()", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyh5ex1", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        main():\n    with open(&amp;quot;input.txt&amp;quot;) as f:\n        elf_list
        = []\n        elf = 0\n        for calorie in [line.rstrip() for line in f.readlines()]:\n            if
        calorie:\n                elf += int(calorie)\n            else:\n                elf_list.append(elf)\n                elf
        = 0\n        # part 1\n        print(max(elf_list))\n        # part 2\n        print(sum(sorted(elf_list,
        reverse=True)[0:3]))\n\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    main()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh5ex1/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669891105.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669891105.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyimk9b", "id": "iyimk9b", "parent_id":
        "t1_iyh5ex1", "depth": 1, "children": ["iyimk9b"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh5meo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mandus",
        "can_mod_post": false, "created_utc": 1669891289.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_1sdd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A solution in k:\n\n`d:0:\"input.txt\"`  \n`l:(+/.'')''(1_''(&amp;~#''d)_d)`  \n`l[*&gt;l]`  \n`+/l[3#&gt;l]`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A solution in k:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;d:0:&amp;quot;input.txt&amp;quot;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;l:(+/.&amp;#39;)&amp;#39;(1_&amp;#39;(&amp;amp;~#&amp;#39;d)_d)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;l[*&amp;gt;l]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;+/l[3#&amp;gt;l]&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh5meo/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh5meo", "created":
        1669891289.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyj2uze", "id": "iyj2uze", "parent_id":
        "t1_iyh5meo", "depth": 1, "children": ["iyj2uze"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh6avq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "The-Dwarf",
        "can_mod_post": false, "created_utc": 1669891886.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_djauq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Go\n\n[Github](https://github.com/FloSchl8/advent-of-code-2022/blob/main/day01/day01.go)\n\n    package
        main\n    \n    import (\n    \t\"fmt\"\n    \t\"log\"\n    \t\"os\"\n    \t\"sort\"\n    \t\"strconv\"\n    \t\"strings\"\n    )\n    \n    func
        main() {\n    \tinput, err := os.ReadFile(\"./day01/input.txt\")\n    \tif
        err != nil {\n    \t\tlog.Fatal(err)\n    \t}\n    \n    \tfmt.Println(\"Most
        calories:\", sumCaolries(string(input)))\n    }\n    \n    func sumCaolries(calories
        string) int {\n    \n    \tsplittedCalories := strings.Split(calories, \"\\n\")\n    \n    \tvar
        elvesCalories []int\n    \ttmp := 0\n    \tfor _, calory := range splittedCalories
        {\n    \t\tif calory != \"\" {\n    \t\t\ti, _ := strconv.Atoi(calory)\n    \t\t\ttmp
        += i\n    \t\t} else {\n    \t\t\telvesCalories = append(elvesCalories, tmp)\n    \t\t\ttmp
        = 0\n    \t\t}\n    \t}\n    \n    \tmax := 0\n    \tsort.Ints(elvesCalories)\n    \tfor
        _, i := range elvesCalories[len(elvesCalories)-3:] {\n    \t\tmax += i\n    \t}\n    \treturn
        max\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Go&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/FloSchl8/advent-of-code-2022/blob/main/day01/day01.go\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;log&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;sort&amp;quot;\n    &amp;quot;strconv&amp;quot;\n    &amp;quot;strings&amp;quot;\n)\n\nfunc
        main() {\n    input, err := os.ReadFile(&amp;quot;./day01/input.txt&amp;quot;)\n    if
        err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(&amp;quot;Most
        calories:&amp;quot;, sumCaolries(string(input)))\n}\n\nfunc sumCaolries(calories
        string) int {\n\n    splittedCalories := strings.Split(calories, &amp;quot;\\n&amp;quot;)\n\n    var
        elvesCalories []int\n    tmp := 0\n    for _, calory := range splittedCalories
        {\n        if calory != &amp;quot;&amp;quot; {\n            i, _ := strconv.Atoi(calory)\n            tmp
        += i\n        } else {\n            elvesCalories = append(elvesCalories,
        tmp)\n            tmp = 0\n        }\n    }\n\n    max := 0\n    sort.Ints(elvesCalories)\n    for
        _, i := range elvesCalories[len(elvesCalories)-3:] {\n        max += i\n    }\n    return
        max\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh6avq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh6avq", "created":
        1669891886.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh7938", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyh7938", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh7938/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669892699.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669892699.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyha67z", "id": "iyha67z", "parent_id":
        "t1_iyh7938", "depth": 1, "children": ["iyha67z"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh9sz6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "natrys",
        "can_mod_post": false, "created_utc": 1669894734.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_gr41fzt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**[TXR](https://www.nongnu.org/txr/)** (It''s a text extraction engine with
        an embedded lisp)\n\n    @(collect :vars (inventories))\n    @ (collect :vars
        (calories))\n    @calories\n    @ (last)\n\n    @ (end)\n    @ (bind inventories
        @(sum [mapcar toint calories]))\n    @(end)\n    @(do (put-line `@(sum (take
        3 [sort inventories &gt;]))`))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=\"https://www.nongnu.org/txr/\"&gt;TXR&lt;/a&gt;&lt;/strong&gt;
        (It&amp;#39;s a text extraction engine with an embedded lisp)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@(collect
        :vars (inventories))\n@ (collect :vars (calories))\n@calories\n@ (last)\n\n@
        (end)\n@ (bind inventories @(sum [mapcar toint calories]))\n@(end)\n@(do (put-line
        `@(sum (take 3 [sort inventories &amp;gt;]))`))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh9sz6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh9sz6", "created":
        1669894734.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhae6e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Illustrious_Fortune7",
        "can_mod_post": false, "created_utc": 1669895179.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_6h9tvrkj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Day 1 in Kotlin\n\n  \nhttps://github.com/ritesh-singh/aoc-2022-kotlin/blob/main/src/day01/Day01.kt",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Day 1 in Kotlin&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ritesh-singh/aoc-2022-kotlin/blob/main/src/day01/Day01.kt\"&gt;https://github.com/ritesh-singh/aoc-2022-kotlin/blob/main/src/day01/Day01.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhae6e/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhae6e", "created":
        1669895179.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhdtk6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "trollerskates1",
        "can_mod_post": false, "created_utc": 1669897595.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_hhre0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Scala](https://github.com/aaronreidsmith/advent-of-code/blob/997d7e074768a0fb063e6956f63a5ea387717d30/src/main/scala/io/github/aaronreidsmith/year2022/Day01.scala)\n\n    object
        Day01 {\n      def main(args: Array[String]): Unit = {\n        val input
        = using(\"2022/day01.txt\")(parseInput)\n        println(s\"Part 1: ${part1(input)}\")\n        println(s\"Part
        2: ${part2(input)}\")\n      }\n\n      def parseInput(file: Source): Seq[Seq[Int]]
        = {\n        file.mkString\n          .split(\"\\n\\n\")\n          .toSeq\n          .map
        { block =&gt;\n            block\n              .split(\"\\n\")\n              .toSeq\n              .map(_.toInt)\n          }\n      }\n      def
        part1(elves: Seq[Seq[Int]]): Int = elves.map(_.sum).max\n      def part2(elves:
        Seq[Seq[Int]]): Int = elves.map(_.sum).sorted.takeRight(3).sum\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/aaronreidsmith/advent-of-code/blob/997d7e074768a0fb063e6956f63a5ea387717d30/src/main/scala/io/github/aaronreidsmith/year2022/Day01.scala\"&gt;Scala&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;object
        Day01 {\n  def main(args: Array[String]): Unit = {\n    val input = using(&amp;quot;2022/day01.txt&amp;quot;)(parseInput)\n    println(s&amp;quot;Part
        1: ${part1(input)}&amp;quot;)\n    println(s&amp;quot;Part 2: ${part2(input)}&amp;quot;)\n  }\n\n  def
        parseInput(file: Source): Seq[Seq[Int]] = {\n    file.mkString\n      .split(&amp;quot;\\n\\n&amp;quot;)\n      .toSeq\n      .map
        { block =&amp;gt;\n        block\n          .split(&amp;quot;\\n&amp;quot;)\n          .toSeq\n          .map(_.toInt)\n      }\n  }\n  def
        part1(elves: Seq[Seq[Int]]): Int = elves.map(_.sum).max\n  def part2(elves:
        Seq[Seq[Int]]): Int = elves.map(_.sum).sorted.takeRight(3).sum\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhdtk6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhdtk6", "created":
        1669897595.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhenrh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JakDrako",
        "can_mod_post": false, "created_utc": 1669898145.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_477xl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "VB.Net in LINQPad...\n\n    Sub Main\n\n        Dim input = GetDay(1), lst
        = {New List(Of Integer)}.ToList\n        \n        For Each line In input\n            If
        line = \"\" Then\n                lst.Add(New List(Of Integer))        \n            Else\n                lst.Last.Add(CInt(line))\n            End
        If\n        Next\n        \n        lst.Select(Function(x) x.Sum).Max.Dump(\"Part
        1\")\n        \n        lst.Select(Function(x) x.Sum) _\n           .OrderByDescending(Function(x)
        x) _\n           .Take(3) _\n           .Sum _\n           .Dump(\"Part 2\")\n\n    End
        Sub", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;VB.Net
        in LINQPad...&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Sub Main\n\n    Dim input
        = GetDay(1), lst = {New List(Of Integer)}.ToList\n\n    For Each line In input\n        If
        line = &amp;quot;&amp;quot; Then\n            lst.Add(New List(Of Integer))        \n        Else\n            lst.Last.Add(CInt(line))\n        End
        If\n    Next\n\n    lst.Select(Function(x) x.Sum).Max.Dump(&amp;quot;Part
        1&amp;quot;)\n\n    lst.Select(Function(x) x.Sum) _\n       .OrderByDescending(Function(x)
        x) _\n       .Take(3) _\n       .Sum _\n       .Dump(&amp;quot;Part 2&amp;quot;)\n\nEnd
        Sub\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhenrh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhenrh", "created":
        1669898145.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhfum8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "astro_wonk",
        "can_mod_post": false, "created_utc": 1669898895.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_hjk7drm4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\nWith some superfluous use of Pandas series:\n\n    #Part1\n    data_series
        = pd.Series([\n        sum([int(x) for x in x.split(''\\n'')]) for x in data.split(''\\n\\n'')\n    ]).sort_values()\n    data_series.tail(1)\n    #Part2\n    data_series.tail(3).sum()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;With
        some superfluous use of Pandas series:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#Part1\ndata_series
        = pd.Series([\n    sum([int(x) for x in x.split(&amp;#39;\\n&amp;#39;)]) for
        x in data.split(&amp;#39;\\n\\n&amp;#39;)\n]).sort_values()\ndata_series.tail(1)\n#Part2\ndata_series.tail(3).sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhfum8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhfum8", "created":
        1669898895.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhg8mm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SpaceHonk",
        "can_mod_post": false, "created_utc": 1669899132.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_dkj9u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Swift [repo](https://github.com/gereons/AoC2022/blob/main/Sources/Day01/Day01.swift)\n\nStraightforward
        as expected.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Swift
        &lt;a href=\"https://github.com/gereons/AoC2022/blob/main/Sources/Day01/Day01.swift\"&gt;repo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Straightforward
        as expected.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhg8mm/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhg8mm", "created":
        1669899132.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyhoi69", "id": "iyhoi69", "parent_id":
        "t1_iyhg8mm", "depth": 1, "children": ["iyhoi69"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669900136.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhhmdv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SirWyvern1",
        "can_mod_post": false, "created_utc": 1669899952.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_5rz8sf4e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C#\n\nPretty easy, but thats the first day for you. started with a lot
        longer code, because i was converting it to a regular list of all lines first,
        and then looping and checking whitespace for a empty line. but pretty happy
        with my final solution\n\n    public static void D1P1(string input)\n    {\n        var
        l = input.Split(\"\\n\\n\").Select(i =&gt; i.Split(\"\\n\").Select(int.Parse).Sum()).ToList();\n        l.Sort((x,
        y) =&gt; y.CompareTo(x));\n        Console.WriteLine(l[0]);\n\n    }\n    public
        static void D1P2(string input)\n    {\n        var l = input.Split(\"\\n\\n\").Select(i
        =&gt; i.Split(\"\\n\").Select(int.Parse).Sum()).ToList();\n        l.Sort((x,
        y) =&gt; y.CompareTo(x));\n        Console.WriteLine(l.GetRange(0, 3).Sum());\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C&lt;/h1&gt;\n\n&lt;p&gt;Pretty
        easy, but thats the first day for you. started with a lot longer code, because
        i was converting it to a regular list of all lines first, and then looping
        and checking whitespace for a empty line. but pretty happy with my final solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        static void D1P1(string input)\n{\n    var l = input.Split(&amp;quot;\\n\\n&amp;quot;).Select(i
        =&amp;gt; i.Split(&amp;quot;\\n&amp;quot;).Select(int.Parse).Sum()).ToList();\n    l.Sort((x,
        y) =&amp;gt; y.CompareTo(x));\n    Console.WriteLine(l[0]);\n\n}\npublic static
        void D1P2(string input)\n{\n    var l = input.Split(&amp;quot;\\n\\n&amp;quot;).Select(i
        =&amp;gt; i.Split(&amp;quot;\\n&amp;quot;).Select(int.Parse).Sum()).ToList();\n    l.Sort((x,
        y) =&amp;gt; y.CompareTo(x));\n    Console.WriteLine(l.GetRange(0, 3).Sum());\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhhmdv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhhmdv", "created":
        1669899952.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyhjqca", "id": "iyhjqca", "parent_id":
        "t1_iyhhmdv", "depth": 1, "children": ["iyhjqca", "iyhksgm"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670218271.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhhp2z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gurrewe",
        "can_mod_post": false, "created_utc": 1669899995.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_5308z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash/Shell:\n\nPart1:\n\n```\ngsed -z ''s/\\n/+/ig'' input.txt | gsed -z
        ''s/++/\\n/ig'' | bc | sort -r | head -n1\n```\n\nPart2:\n\n```\ngsed -z ''s/\\n/+/ig''
        input.txt | gsed -z ''s/++/\\n/ig'' | bc | sort -r | head -n3 | gsed -z ''s/\\n/+/g''
        | sed ''s/.$//'' | bc\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash/Shell:&lt;/p&gt;\n\n&lt;p&gt;Part1:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\ngsed
        -z &amp;#39;s/\\n/+/ig&amp;#39; input.txt | gsed -z &amp;#39;s/++/\\n/ig&amp;#39;
        | bc | sort -r | head -n1\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part2:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\ngsed
        -z &amp;#39;s/\\n/+/ig&amp;#39; input.txt | gsed -z &amp;#39;s/++/\\n/ig&amp;#39;
        | bc | sort -r | head -n3 | gsed -z &amp;#39;s/\\n/+/g&amp;#39; | sed &amp;#39;s/.$//&amp;#39;
        | bc\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhhp2z/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhhp2z", "created":
        1669899995.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyufn73", "id": "iyufn73", "parent_id":
        "t1_iyhhp2z", "depth": 1, "children": ["iyufn73", "iyhn0k9"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669924437.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhjhbv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oweiler",
        "can_mod_post": false, "created_utc": 1669900999.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_qmufu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "KotlinScript Day 1\n\nPart 1\n\n    #!/usr/bin/env kotlin\n    \n    import
        java.io.File\n    \n    File(\"input.txt\")\n        .readText()\n        .trimEnd()\n        .split(\"\\n\\n\")\n        .maxOf
        { it.lines().sumOf(String::toInt) }\n\nPart 2\n\n    #!/usr/bin/env kotlin\n    \n    import
        java.io.File\n    \n    File(\"input.txt\")\n        .readText()\n        .trimEnd()\n        .split(\"\\n\\n\")\n        .map
        { it.lines().sumOf(String::toInt) }\n        .sortedDescending()\n        .take(3)\n        .sum()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;KotlinScript Day 1&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env kotlin\n\nimport java.io.File\n\nFile(&amp;quot;input.txt&amp;quot;)\n    .readText()\n    .trimEnd()\n    .split(&amp;quot;\\n\\n&amp;quot;)\n    .maxOf
        { it.lines().sumOf(String::toInt) }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env kotlin\n\nimport java.io.File\n\nFile(&amp;quot;input.txt&amp;quot;)\n    .readText()\n    .trimEnd()\n    .split(&amp;quot;\\n\\n&amp;quot;)\n    .map
        { it.lines().sumOf(String::toInt) }\n    .sortedDescending()\n    .take(3)\n    .sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhjhbv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhjhbv", "created":
        1669900999.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyif0i7", "id": "iyif0i7", "parent_id":
        "t1_iyhjhbv", "depth": 1, "children": ["iyif0i7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhjkjw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tymscar",
        "can_mod_post": false, "created_utc": 1669901048.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_5gebp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thought about doing it in **Typescript** this year. You can find part1 [here](https://github.com/tymscar/Advent-Of-Code/blob/master/2022/typescript/day01/part1.ts)
        and part2 [here](https://github.com/tymscar/Advent-Of-Code/blob/master/2022/typescript/day01/part2.ts)!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thought about doing
        it in &lt;strong&gt;Typescript&lt;/strong&gt; this year. You can find part1
        &lt;a href=\"https://github.com/tymscar/Advent-Of-Code/blob/master/2022/typescript/day01/part1.ts\"&gt;here&lt;/a&gt;
        and part2 &lt;a href=\"https://github.com/tymscar/Advent-Of-Code/blob/master/2022/typescript/day01/part2.ts\"&gt;here&lt;/a&gt;!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhjkjw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhjkjw", "created":
        1669901048.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhjxcg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aevitas",
        "can_mod_post": false, "created_utc": 1669901244.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_7hmq4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#:\n\n    private static readonly string[] Input = File.ReadAllLines(\"Day1.txt\");\n\n    public
        static void PartOne()\n    {\n        var elves = CalculateCaloriesCarried();\n\n        Console.WriteLine(elves.Max());\n    }\n\n    public
        static void PartTwo()\n    {\n        var elves = CalculateCaloriesCarried();\n\n        Console.WriteLine(elves.OrderByDescending(i
        =&gt; i).Take(3).Sum());\n    }\n\n    private static List&lt;int&gt; CalculateCaloriesCarried()\n    {\n        List&lt;int&gt;
        elves = new();\n\n        int cur = 0;\n        foreach (var line in Input)\n        {\n            if
        (string.IsNullOrWhiteSpace(line))\n            {\n                elves.Add(cur);\n                cur
        = 0;\n\n                continue;\n            }\n\n            cur += int.Parse(line);\n        }\n\n        return
        elves;\n    }\n\nAnd Go, because I''m learning the language:\n\n\tpackage
        main\n\n\timport (\n\t\t\"bufio\"\n\t\t\"fmt\"\n\t\t\"log\"\n\t\t\"os\"\n\t\t\"sort\"\n\t\t\"strconv\"\n\t)\n\n\tfunc
        main() {\n\t\tpartOne()\n\t\tpartTwo()\n\t}\n\n\tfunc partOne() {\n\t\telves
        := getCaloriesCarried()\n\n\t\tfmt.Println(max(elves))\n\t}\n\n\tfunc partTwo()
        {\n\t\telves := getCaloriesCarried()\n\n\t\ttop := maxThree(elves)\n\t\tvar
        total int\n\n\t\tfor _, i := range top {\n\t\t\ttotal += i\n\t\t}\n\n\t\tfmt.Println(total)\n\t}\n\n\tfunc
        getCaloriesCarried() []int {\n\t\tinput := readInput(\"day1.txt\")\n\n\t\tvar
        elves []int\n\t\tvar cur int\n\t\tfor _, l := range input {\n\t\t\tif l ==
        \"\" {\n\t\t\t\telves = append(elves, cur)\n\t\t\t\tcur = 0\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\ti,
        _ := strconv.Atoi(l)\n\n\t\t\tcur += i\n\t\t}\n\n\t\treturn elves\n\t}\n\n\tfunc
        readInput(file string) []string {\n\t\tcontent, err := os.Open(file)\n\n\t\tif
        err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\n\t\tscanner := bufio.NewScanner(content)\n\n\t\tvar
        lines []string\n\t\tfor scanner.Scan() {\n\t\t\tlines = append(lines, scanner.Text())\n\t\t}\n\n\t\treturn
        lines\n\t}\n\n\tfunc max(input []int) int {\n\t\tsort.Ints(input)\n\n\t\treturn
        input[len(input)-1]\n\t}\n\n\tfunc maxThree(input []int) []int {\n\t\tsort.Sort(sort.Reverse(sort.IntSlice(input[:])))\n\n\t\treturn
        input[:3]\n\t}", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;private
        static readonly string[] Input = File.ReadAllLines(&amp;quot;Day1.txt&amp;quot;);\n\npublic
        static void PartOne()\n{\n    var elves = CalculateCaloriesCarried();\n\n    Console.WriteLine(elves.Max());\n}\n\npublic
        static void PartTwo()\n{\n    var elves = CalculateCaloriesCarried();\n\n    Console.WriteLine(elves.OrderByDescending(i
        =&amp;gt; i).Take(3).Sum());\n}\n\nprivate static List&amp;lt;int&amp;gt;
        CalculateCaloriesCarried()\n{\n    List&amp;lt;int&amp;gt; elves = new();\n\n    int
        cur = 0;\n    foreach (var line in Input)\n    {\n        if (string.IsNullOrWhiteSpace(line))\n        {\n            elves.Add(cur);\n            cur
        = 0;\n\n            continue;\n        }\n\n        cur += int.Parse(line);\n    }\n\n    return
        elves;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And Go, because I&amp;#39;m
        learning the language:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport
        (\n    &amp;quot;bufio&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;log&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;sort&amp;quot;\n    &amp;quot;strconv&amp;quot;\n)\n\nfunc
        main() {\n    partOne()\n    partTwo()\n}\n\nfunc partOne() {\n    elves :=
        getCaloriesCarried()\n\n    fmt.Println(max(elves))\n}\n\nfunc partTwo() {\n    elves
        := getCaloriesCarried()\n\n    top := maxThree(elves)\n    var total int\n\n    for
        _, i := range top {\n        total += i\n    }\n\n    fmt.Println(total)\n}\n\nfunc
        getCaloriesCarried() []int {\n    input := readInput(&amp;quot;day1.txt&amp;quot;)\n\n    var
        elves []int\n    var cur int\n    for _, l := range input {\n        if l
        == &amp;quot;&amp;quot; {\n            elves = append(elves, cur)\n            cur
        = 0\n            continue\n        }\n\n        i, _ := strconv.Atoi(l)\n\n        cur
        += i\n    }\n\n    return elves\n}\n\nfunc readInput(file string) []string
        {\n    content, err := os.Open(file)\n\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    scanner
        := bufio.NewScanner(content)\n\n    var lines []string\n    for scanner.Scan()
        {\n        lines = append(lines, scanner.Text())\n    }\n\n    return lines\n}\n\nfunc
        max(input []int) int {\n    sort.Ints(input)\n\n    return input[len(input)-1]\n}\n\nfunc
        maxThree(input []int) []int {\n    sort.Sort(sort.Reverse(sort.IntSlice(input[:])))\n\n    return
        input[:3]\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhjxcg/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhjxcg", "created": 1669901244.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyi2d8y", "id": "iyi2d8y", "parent_id": "t1_iyhjxcg", "depth": 1, "children":
        ["iyi2d8y"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhk1w1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fnands",
        "can_mod_post": false, "created_utc": 1669901312.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_73ex85mp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Julia.  \n\n\nUsing AOC to learn Julia. I feel I still write very pythonic
        Julia though.\n\nIf you are a Julia aficionado and see something I can do
        different please let me know.\n\nI see people seem to be using `eachsplit`.
        Will have to look into that.\n\n    in_file = \"day_1/input_1.txt\"\n    \n    #
        Read in input file as an array of strings\n    calories = open(in_file) do
        file\n        readlines(file)\n    end\n    \n    \n    \n    function get_max_calories(calories::Vector{String})::UInt32\n        #
        Max elf calory storage\n        max_elf_calories::UInt32 = 0\n    \n        #
        Initialize current elf calory counter\n        this_elf_calories::UInt32 =
        0\n    \n        # Iterate through list of calories\n        for item in calories\n            if
        item == \"\"\n                # If this elf is carrying more than max, set
        it to max\n                if this_elf_calories &gt; max_elf_calories\n                    max_elf_calories
        = this_elf_calories\n                end\n    \n                # Reset counter\n                this_elf_calories
        = 0\n            else\n                this_elf_calories += parse(UInt32,
        item)\n            end\n        end\n    \n        return max_elf_calories\n    \n    end\n    \n    \n    function
        get_sum_top_k_calories(calories::Vector{String}, k::UInt32)::UInt32\n        #
        Top k elf calory storage\n        max_elf_calories =zeros(UInt32, k)\n    \n        #
        Initialize current elf calory counter\n        this_elf_calories::UInt32 =
        0\n    \n        # Iterate through list of calories\n        for item in calories\n            if
        item == \"\"\n                # If this elf is carrying more than the smallest
        value in the max \n                # array, set it to max\n                if
        this_elf_calories &gt; max_elf_calories[1]\n                    max_elf_calories[1]
        = this_elf_calories\n                end\n    \n                # Reset counter\n                this_elf_calories
        = 0\n    \n                # Sort max elf calories\n                sort!(max_elf_calories)\n            else\n                this_elf_calories
        += parse(UInt32, item)\n            end\n        end\n    \n        return
        sum(max_elf_calories)\n    \n    end\n    \n    println(\"The solution to
        part one is: \", get_max_calories(calories))\n    \n    println(\"The solution
        to part one is: \", get_sum_top_k_calories(calories,3))", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Julia.  &lt;/p&gt;\n\n&lt;p&gt;Using AOC
        to learn Julia. I feel I still write very pythonic Julia though.&lt;/p&gt;\n\n&lt;p&gt;If
        you are a Julia aficionado and see something I can do different please let
        me know.&lt;/p&gt;\n\n&lt;p&gt;I see people seem to be using &lt;code&gt;eachsplit&lt;/code&gt;.
        Will have to look into that.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;in_file =
        &amp;quot;day_1/input_1.txt&amp;quot;\n\n# Read in input file as an array
        of strings\ncalories = open(in_file) do file\n    readlines(file)\nend\n\n\n\nfunction
        get_max_calories(calories::Vector{String})::UInt32\n    # Max elf calory storage\n    max_elf_calories::UInt32
        = 0\n\n    # Initialize current elf calory counter\n    this_elf_calories::UInt32
        = 0\n\n    # Iterate through list of calories\n    for item in calories\n        if
        item == &amp;quot;&amp;quot;\n            # If this elf is carrying more than
        max, set it to max\n            if this_elf_calories &amp;gt; max_elf_calories\n                max_elf_calories
        = this_elf_calories\n            end\n\n            # Reset counter\n            this_elf_calories
        = 0\n        else\n            this_elf_calories += parse(UInt32, item)\n        end\n    end\n\n    return
        max_elf_calories\n\nend\n\n\nfunction get_sum_top_k_calories(calories::Vector{String},
        k::UInt32)::UInt32\n    # Top k elf calory storage\n    max_elf_calories =zeros(UInt32,
        k)\n\n    # Initialize current elf calory counter\n    this_elf_calories::UInt32
        = 0\n\n    # Iterate through list of calories\n    for item in calories\n        if
        item == &amp;quot;&amp;quot;\n            # If this elf is carrying more than
        the smallest value in the max \n            # array, set it to max\n            if
        this_elf_calories &amp;gt; max_elf_calories[1]\n                max_elf_calories[1]
        = this_elf_calories\n            end\n\n            # Reset counter\n            this_elf_calories
        = 0\n\n            # Sort max elf calories\n            sort!(max_elf_calories)\n        else\n            this_elf_calories
        += parse(UInt32, item)\n        end\n    end\n\n    return sum(max_elf_calories)\n\nend\n\nprintln(&amp;quot;The
        solution to part one is: &amp;quot;, get_max_calories(calories))\n\nprintln(&amp;quot;The
        solution to part one is: &amp;quot;, get_sum_top_k_calories(calories,3))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhk1w1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhk1w1", "created":
        1669901312.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyiwuyv", "id": "iyiwuyv", "parent_id":
        "t1_iyhk1w1", "depth": 1, "children": ["iyiwuyv"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhkpo5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mosredna101",
        "can_mod_post": false, "created_utc": 1669901669.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4cbr46", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Javascript / Node.js](https://pastebin.com/F81TvgWq)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://pastebin.com/F81TvgWq\"&gt;Javascript
        / Node.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhkpo5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhkpo5", "created":
        1669901669.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhm9bd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ViliamPucik",
        "can_mod_post": false, "created_utc": 1669902479.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_8s8cgq3w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3** - Minimal readable solution for both parts \\[[GitHub](https://github.com/viliampucik/adventofcode/blob/master/2022/01.py)\\]\n\n    c
        = sorted(\n        sum(map(int, e.splitlines()))\n        for e in open(0).read().split(\"\\n\\n\")\n    )\n    print(c[-1])\n    print(sum(c[-3:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python
        3&lt;/strong&gt; - Minimal readable solution for both parts [&lt;a href=\"https://github.com/viliampucik/adventofcode/blob/master/2022/01.py\"&gt;GitHub&lt;/a&gt;]&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;c
        = sorted(\n    sum(map(int, e.splitlines()))\n    for e in open(0).read().split(&amp;quot;\\n\\n&amp;quot;)\n)\nprint(c[-1])\nprint(sum(c[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhm9bd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhm9bd", "created":
        1669902479.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyhq1jy", "id": "iyhq1jy", "parent_id":
        "t1_iyhm9bd", "depth": 1, "children": ["iyhq1jy"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhn1tj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "axr123",
        "can_mod_post": false, "created_utc": 1669902877.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_5cuakppd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Bazel\n\nInspired by somebody here solving it in CMake, I tried some Bazel
        misuse. Full solution [here](https://github.com/ahans/aoc2022/tree/main/bazel).
        When run, it looks like this:\n\n    \u276f bazel run @day01//:solve\n    INFO:
        Analyzed target @day01//:solve (39 packages loaded, 160 targets configured).\n    INFO:
        Found 1 target...\n    Target @day01//:solve up-to-date:\n      bazel-bin/external/day01/solve\n    INFO:
        Elapsed time: 0.230s, Critical Path: 0.00s\n    INFO: 4 processes: 4 internal.\n    INFO:
        Build completed successfully, 4 total actions\n    INFO: Build completed successfully,
        4 total actions\n    Part #1: 74711\n    Part #2: 209481", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Bazel&lt;/h1&gt;\n\n&lt;p&gt;Inspired by
        somebody here solving it in CMake, I tried some Bazel misuse. Full solution
        &lt;a href=\"https://github.com/ahans/aoc2022/tree/main/bazel\"&gt;here&lt;/a&gt;.
        When run, it looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u276f bazel
        run @day01//:solve\nINFO: Analyzed target @day01//:solve (39 packages loaded,
        160 targets configured).\nINFO: Found 1 target...\nTarget @day01//:solve up-to-date:\n  bazel-bin/external/day01/solve\nINFO:
        Elapsed time: 0.230s, Critical Path: 0.00s\nINFO: 4 processes: 4 internal.\nINFO:
        Build completed successfully, 4 total actions\nINFO: Build completed successfully,
        4 total actions\nPart #1: 74711\nPart #2: 209481\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhn1tj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhn1tj", "created":
        1669902877.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhnlpb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "andrewsredditstuff",
        "can_mod_post": false, "created_utc": 1669903154.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_2h5225av", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\nDid with foreach initially for speed of development, then translated
        to Linq for practice.\n\nCould get it down to a single line, but I think it''s
        unreadable enough already,\n\n[github](https://github.com/andrewscodedump/Advent/blob/master/2022/Done/Days01-05/Day01.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;p&gt;Did
        with foreach initially for speed of development, then translated to Linq for
        practice.&lt;/p&gt;\n\n&lt;p&gt;Could get it down to a single line, but I
        think it&amp;#39;s unreadable enough already,&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/andrewscodedump/Advent/blob/master/2022/Done/Days01-05/Day01.cs\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhnlpb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhnlpb", "created":
        1669903154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhnuwt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Thin_Alternative_669",
        "can_mod_post": false, "created_utc": 1669903284.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_d6i8xu5x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3 One-Liners:  \n\n\n&gt;answer\\_1 = max(\\[sum(int(i) for i in item.split(\"
        \")) for item in \" \".join(\\[line.strip() for line in open(BASE\\_DIR/\"D1\"/\"input\\_1.txt\").readlines()\\]).split(\"  \")\\])\r  \n  \n&gt;  \n&gt;answer\\_2
        = sum(sorted(\\[sum(int(i) for i in item.split(\" \")) for item in \" \".join(\\[line.strip()
        for line in open(BASE\\_DIR/\"D1\"/\"input\\_1.txt\").readlines()\\]).split(\"  \")\\])\\[-3:\\])",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3 One-Liners:  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;answer_1
        = max([sum(int(i) for i in item.split(&amp;quot; &amp;quot;)) for item in
        &amp;quot; &amp;quot;.join([line.strip() for line in open(BASE_DIR/&amp;quot;D1&amp;quot;/&amp;quot;input_1.txt&amp;quot;).readlines()]).split(&amp;quot;  &amp;quot;)])&lt;/p&gt;\n\n&lt;p&gt;answer_2
        = sum(sorted([sum(int(i) for i in item.split(&amp;quot; &amp;quot;)) for item
        in &amp;quot; &amp;quot;.join([line.strip() for line in open(BASE_DIR/&amp;quot;D1&amp;quot;/&amp;quot;input_1.txt&amp;quot;).readlines()]).split(&amp;quot;  &amp;quot;)])[-3:])&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhnuwt/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhnuwt", "created":
        1669903284.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670166117.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhqehc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Mikel3377",
        "can_mod_post": false, "created_utc": 1669904523.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_e4993", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JS one-liner\n\n    const runPart2 = input =&gt; input.split(''\\r\\n\\r\\n'').map(r
        =&gt; r.split(''\\r\\n'').map(n =&gt; +n)).map(r =&gt; r.reduce((a, c) =&gt;
        a + c, 0)).sort((a, b) =&gt; b - a).slice(0, 3).reduce((a, c) =&gt; a + c,
        0);", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JS
        one-liner&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const runPart2 = input =&amp;gt;
        input.split(&amp;#39;\\r\\n\\r\\n&amp;#39;).map(r =&amp;gt; r.split(&amp;#39;\\r\\n&amp;#39;).map(n
        =&amp;gt; +n)).map(r =&amp;gt; r.reduce((a, c) =&amp;gt; a + c, 0)).sort((a,
        b) =&amp;gt; b - a).slice(0, 3).reduce((a, c) =&amp;gt; a + c, 0);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhqehc/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhqehc", "created":
        1669904523.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyuf0gl", "id": "iyuf0gl", "parent_id":
        "t1_iyhqehc", "depth": 1, "children": ["iyuf0gl"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhqtzi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rrutkows",
        "can_mod_post": false, "created_utc": 1669904726.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_28bk8wp7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\nSingle function for both parts. No collecting and sorting.\n\nhttps://github.com/rrutkows/aoc2022/blob/main/src/d01/mod.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Single
        function for both parts. No collecting and sorting.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/rrutkows/aoc2022/blob/main/src/d01/mod.rs\"&gt;https://github.com/rrutkows/aoc2022/blob/main/src/d01/mod.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhqtzi/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhqtzi", "created":
        1669904726.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyi96rq", "id": "iyi96rq", "parent_id":
        "t1_iyhqtzi", "depth": 1, "children": ["iyi96rq"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhud6h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Catcatcher33",
        "can_mod_post": false, "created_utc": 1669906331.0, "send_replies": false,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_89s60v38", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Python 3 solution. Finally actually decided to take part in Advent, looking
        forward to more!\n\n```python\ndef get_calorie_sums() -&gt; list:\n    ''''''
        Get the number of calories carried by each elf. ''''''\n    with open(''input.txt'',
        ''r'') as file:\n        return [sum(map(int, x.split(''\\n''))) for x in
        file.read().strip().split(''\\n\\n'')]\n\n\ndef get_top_calories() -&gt; int:\n    ''''''
        Get the maximum number of calories carried by one elf at a time. ''''''\n    return
        max(get_calorie_sums())\n\n\ndef get_top_three_calories_sum() -&gt; int:\n    ''''''
        Get the sum of calories of top 3 heaviest weights. ''''''\n    return sum(sorted(get_calorie_sums())[-3:])\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Python 3 solution.
        Finally actually decided to take part in Advent, looking forward to more!&lt;/p&gt;\n\n&lt;p&gt;```python\ndef
        get_calorie_sums() -&amp;gt; list:\n    &amp;#39;&amp;#39;&amp;#39; Get the
        number of calories carried by each elf. &amp;#39;&amp;#39;&amp;#39;\n    with
        open(&amp;#39;input.txt&amp;#39;, &amp;#39;r&amp;#39;) as file:\n        return
        [sum(map(int, x.split(&amp;#39;\\n&amp;#39;))) for x in file.read().strip().split(&amp;#39;\\n\\n&amp;#39;)]&lt;/p&gt;\n\n&lt;p&gt;def
        get_top_calories() -&amp;gt; int:\n    &amp;#39;&amp;#39;&amp;#39; Get the
        maximum number of calories carried by one elf at a time. &amp;#39;&amp;#39;&amp;#39;\n    return
        max(get_calorie_sums())&lt;/p&gt;\n\n&lt;p&gt;def get_top_three_calories_sum()
        -&amp;gt; int:\n    &amp;#39;&amp;#39;&amp;#39; Get the sum of calories of
        top 3 heaviest weights. &amp;#39;&amp;#39;&amp;#39;\n    return sum(sorted(get_calorie_sums())[-3:])\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhud6h/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhud6h", "created":
        1669906331.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyue8a8", "id": "iyue8a8", "parent_id":
        "t1_iyhud6h", "depth": 1, "children": ["iyue8a8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhwmf9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TheZigerionScammer",
        "can_mod_post": false, "created_utc": 1669907322.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_hembo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\nNot going to be able to compete for the leaderboard on weekdays
        but that''s what I get for working on third shift this year I guess. Still
        got a good solution going. Nothing fancy, it just goes through the list of
        numbers, summing them up as it goes along and remembers the highest value
        seen so far. For Part 2 it des the same thing but keeps the totals in a list,
        sorts them, and pops off the lowest one each time so the three highest are
        left when it''s done. I had a problem where I forgot that sorts go from lowest
        to highest and not highest to lowest so I accidentally calculated the total
        of the three lowest elfs at first.\n\n[Paste](https://topaz.github.io/paste/#XQAAAQDQAwAAAAAAAAA0m0pnuFI8c+00WAwBY8sOrj7B7WCE4CSF5vt71IzlCMXU9JPSGeGbfLnyI4KrdVr4l2Z2eq0GwA8d/H7ARCqwbPXLtT7+sFiVL2JPzDBeHC+sxXbEonk9J/ZcKZVrafLRgmfDWa+RQrk4oBZ6lg3jqsm7CtMOp0BBxbvpraGYqUm1TIvJyseAcyWjMJC5TJZYgwZ94tHSWw8/lV47Jf6OMyWtAlm9n655wi3pIdBVwW14dXDQd4w1j+uu0tFjuLbHum+v758xdOBEUbPAQITlvcXGGs8xggy3H/aaKGKJIM/WvWhFufTTS0Ir+Io7cT4k9dwVgNA7UFPHfIEBsRkyK+jcGB8eTySBSwNO1ovnnpXpqpqfrRIj8yDgFCKOCoJaUKakfcgIn+kO8eos4/a9kEDlW37GNFvktga5Z4mbD0X+04a5IsPX561h5cZ1U5RyQl9//+6EnZc=)\n\nAlso,
        **ADVENT OF CODE IS BACK BABY! IT''S CODIN'' TIME!**", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Not
        going to be able to compete for the leaderboard on weekdays but that&amp;#39;s
        what I get for working on third shift this year I guess. Still got a good
        solution going. Nothing fancy, it just goes through the list of numbers, summing
        them up as it goes along and remembers the highest value seen so far. For
        Part 2 it des the same thing but keeps the totals in a list, sorts them, and
        pops off the lowest one each time so the three highest are left when it&amp;#39;s
        done. I had a problem where I forgot that sorts go from lowest to highest
        and not highest to lowest so I accidentally calculated the total of the three
        lowest elfs at first.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDQAwAAAAAAAAA0m0pnuFI8c+00WAwBY8sOrj7B7WCE4CSF5vt71IzlCMXU9JPSGeGbfLnyI4KrdVr4l2Z2eq0GwA8d/H7ARCqwbPXLtT7+sFiVL2JPzDBeHC+sxXbEonk9J/ZcKZVrafLRgmfDWa+RQrk4oBZ6lg3jqsm7CtMOp0BBxbvpraGYqUm1TIvJyseAcyWjMJC5TJZYgwZ94tHSWw8/lV47Jf6OMyWtAlm9n655wi3pIdBVwW14dXDQd4w1j+uu0tFjuLbHum+v758xdOBEUbPAQITlvcXGGs8xggy3H/aaKGKJIM/WvWhFufTTS0Ir+Io7cT4k9dwVgNA7UFPHfIEBsRkyK+jcGB8eTySBSwNO1ovnnpXpqpqfrRIj8yDgFCKOCoJaUKakfcgIn+kO8eos4/a9kEDlW37GNFvktga5Z4mbD0X+04a5IsPX561h5cZ1U5RyQl9//+6EnZc=\"&gt;Paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also,
        &lt;strong&gt;ADVENT OF CODE IS BACK BABY! IT&amp;#39;S CODIN&amp;#39; TIME!&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhwmf9/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhwmf9", "created":
        1669907322.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670151844.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhx6dw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "theRIAA",
        "can_mod_post": false, "created_utc": 1669907561.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_35oks", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3** I made it \"by hand\" first, then tried with GPT-3:  \n\n[my
        version - code](https://topaz.github.io/paste/#XQAAAQAOAwAAAAAAAAA2GkofDKaDR27xJTxmoPDuD9YiSVMtos0IsxbyV5kHaUcZI9YDJTz3GnUOBEwmFn1WMKp26/lsLGMHd1f/Ub/QuWBLCxqRd5re2Kv1LXPYuWgTl8bqGMLnBLec3zMxNVvJ0AO8zewW8EN4febOKCNDCWPLmqLFB6eLykBiw6PD0UEGfxQ0SYDpeIcMRi3zo3KW+Y1Xjhw8MoYGDB02FCCNO3BZC2u0FOijAyZDNROjruwD8fue/7FoMSdXc80PEkXvl47x7+XeImRHxlamg/FOryQEPI65eNe0wC7OP8EQX9rSLLmbz58f+WKaTmXUwc/4QN3iNMLk9xDH7coHboqL+Fv5Sdz16JDAenYD5S+c5joKSVe4OhnnGgw/G6TWHluTN3i4ZTlYu6bcmgiL2S/H6f05P/Kzaw7/ENOqd5Ev8a6mbPrCs/fBxv/1Ldag)  (it''s
        silly, i know)  \n[my version - jupyter screenshot](https://i.imgur.com/jWYg4uP.png)   \n[input.txt](https://topaz.github.io/paste/#XQAAAQDOKAAAAAAAAAAaDYJCsr4os4tH4IU6qyZ5bjegC2rlupG7811rKx6/Txie9CNe7+4sPKUJ+Dc+cieezOL3cwD+16FF7sr/WoNEArgdbXee5zo+e5teCUfKxb/Tp0kOVH0/4XCx4qW4JO3aJ6bzmfuknWtabQM8T+X4j1CQhlAKd5wL7SI8CSVSXyeJ/AVAaVnGkU5Dpjyow6LYC1ZwQL8Pqa+I9Eb58A6cmA4HvhoRL3L2Gce9JbV4vrJUygN3QX/WdkxWOuZ+akEqCOkiqyzexK4Sz+/WXQfzu3/9IDEzGhxaYGwgPI2Qc8kCpJawGByOi12cSeD1GOVDb3n7T+abQ5dFonVdGyiKjLIYD4ISQdkaY3Jr6zWwT9oyGJLoZYVXzsB6ahiUdo1i2l6wWwNre3p+ViIV1GtVqQFfyfceWDzxXtNXUg3Xa8nuR+SIWQTjO7AZC7AMqFAyeOpZbzhsCjQajo3BQt4pGy7LJ7JTqiaTTNLgsyFFHm/vSQw0PO5bBe6QrQ7qcU7rGwPSrWEJARHZASmQ0WDz1UHEt9U/uAOjxucm/50/DGoIy0YdX24YkpajLiBkoopSVcCzsEGV/5ndWWrl8M5Igl+irj+4epY9vTMrZiuvfy4wlyYe7b1t23kC1xqSGFQ7eZPnjjboks9jwxxtUOiLjSrhcBGYCGqqUSMFvoaCLHxljEx1REYf3rffzsHrB5kw6ZOiYBlgQktobYCl41Das4DAEpK1535vUXUESpkbKx6JbbXxzOI9v7p0e/2G1rKEelboyPejQkwCMujrwdsXLKS26/Jex+t8xwgC5n2COuAGuqkBxKRoI2xWOUxyR0oGmznOlL9X1N7wH7AXQG2R4TzTw/KK+PUAekd/oczSv2siNpJxb+B8BqE0cDZlEDcPCD0mYaBnzGotF/xOSBZ2SdhHxzDyrXj84mIAuq1hfhBOjpF04jepJN3r8NiuRtrHz+Rw2h6jKpEZZqaVVbSHM3tAKLfiNKP4gIqlih04/lH6E6M8DtjA9jMrVKwvXE1nMKYpXj/XUuplpstUfatt6FlYnHQBW7JmyjXswR9Gh33t/u69VCj41wtkzZSEOPpPhnAeOlzblSmTZ40lopeXKpDTQuQJZb11JzPQUU8LmqM3iTorsACQR1uNkULehUt4w/MXcDrTCwn3JzJ6dhyvQFWny/BUgLr13nPrOpHtUesu6I2ydt+Jq6B25ITR0Y0A1wwP7X9O12pvMfv4wouOUQMCqZXbjgpbcw2/iEtVGbEkWlDzNobqzBb7B9/nVOmmB7vRLsSfbWOMKOCumt+dl9B/NT9dsQpkpHDyjLK0zAa1FpH51forDRejbcJ52R4079os9h3bWSZ7pUzLMufwHgjhRyCbTF+w7z0tcbxKWttx5PDLttzHtcKamk48ErcmDOdlgCDWtqzN3i496G8v5sPzWFn8uGJTyye7KcYynUJ9zf4BlOTbsuPsSInm6icj/hdZp6QaW3tqgS4gIgO0cJ/uo5pvQ1FzO1V+AxTkYkgdreCg9hq4VFruiJ2N2SGK5DwPNNT+V3Dq0yHqsWnwSmf8PKpPKvNi8/viC1xu0jer5tdj3w4XNvjebHf32SfCNrdO2JN7VuEceWdNS+6sFlXadKg8+/412rInbvChG5G0wKXXyu+eIu8nqMwU6e9wG/kaHR+tCMRmdQEDTgqNNI1xFoz2rlDlOrhFc3GycdAHvFLhgE0nil/+24ODHd323rF215WHgPi6m0dkVYW6Z71514jsxCTWcnQTxqJLSQiK1ndUZoaYCQ+YkkRbsNRrieT2fGfdusT6u0KRFYIYlgawAzwciOHc8X0EYr1J5fehUs2pqcNiFGCp68in/4Lzh2yK6Bn5yLKhWZnqi6ORvT19IMy6yIlOVgvgmEzKUIlXuMtPD9laFRCC4dlHiC3h58xOx9Ehvt4g4Z7OfQaKVMGKogQZ82coxqIdje0SQMAIaZ6PRi7Q2dVAxnRxBwKLrTQHzp7F+Eu3Au0GCo9Vttw+IJ5eckboN9hrsWbltwQqnaY4onHzPIcX/2RyagGSc5nVs2KMnyTD8HnhBzIASZuxH2Zi4sSXEf+U4Of0Q6nQ4F3gCp07Cf2/2MXkXUHBNzeTaps2UlxdXCvjhT06PaSLDgJ33y5WWgjp7Lz3J3NALibvOYPOe1kNiSIMwtSlzK4FFBZX+mms74S0UHde+wIN/oUXHBeXJINhZliXHg7DT9Ju4/kTOhLIBuiJKRAo46X5fuSQB9xh40QJznWz/ubEbULkI+ryv6pVavk9iG57BE0bemgZWvL9dZ33SWqPy93FNcEVsmEwLAdFm4SjY1mLMW5QmTkphypfMo8fl6ofC2LuvS+OEizexbUnBNJENMby2vP9sLqcEoEIRxYkpuar9M5I4pR+Nl+0UkpPna+uygG9qrPlC5Vi5TzQgXHt85XOwQPJ3+HyIahaiuohqvwMvWY++55qTvU4g2ijjD5T+Vma0h4cfHnWFGgMo2Y2EUbqlAfDAHhBxOog8DBioZ+WSYTN95mwDwH1wzKDa6HTpBoQ1fqli0HYVXgDCcnTJIGVH/NsY34Gs3ileoW6xwmNH1ibxUTSGSJYoEzilqDADsQzM5ezO6w6a1spw0Dn8/IxLi9wiSq8vhhTr+Ss7ttwZQjDCb3dP1Ry8w/ynrhrEMbD96ZWzgZASEhJepJadeJOFLIQmxr8D6u6VIajgESivCrMzzMK50yYaLqaMVVGfglwTlwGMEQt19hV8NomWwTULJs+lMUAmrMLHm5K9r7u4YmdeoxCQyvGaWKrTJPMKT3B+qITd62FnspphCOLz02O0kymNc9XmYjy1z8MG8xbHtQ46abf1KSdqXQUieYnxfq9IVVUBZno9PlwW2lt7wxDMFcJ+yaCWRx/oZJIlZr4ppOSHBgbs2TUVxyKa9ZJO1gSULjgJu51HMrRCd1puUwHAoc+cNlHhoHsDDdBY4ev/gQaFg8xC7xGd6THhEntcmhlDocZbbFH9F/xr7yCPs5UpG0HLpiDF97GOzbzai3oYkHtuOfMCSbkuP/EgklFsMpoJiASevcwCElGJDroKjB/PFqxtAb8ZlNBnc+5OhDSCoxQWxejQG53yWfL8a6Xz5BI/xh0sF0Prj9slhdmqJBKYbCNKRM1Pnyi4q/siiXCd8tykbd9RkYWksJsE8N/fJB/e8jO32FjFn4PPYEpFrPB8vbvBzcpzewFrOBN69MWPUb72oT4kJbgpxN9XG5wFc4ZkXKqVuMVqfWYe00HmTY7EOXUH1B71nKE5XCyO6eEWNrkOah/sepLkyZz1tfZLVvdHdk3fbrL6SNI+/nZCqN/XCv62XGEWNetHX1+ue90I9wnP173+aDpAIFQadczNzv8urXhD45Qt1Mkie9qn08fLi1EzF+TnmnSpHidrw94l/FaRUUnrqU8/I/oCGkK7T6/j7xYscpDtoBKSiIn+h5n2vMmlPUGt906K8J8qMkdqS4+25kp9Kyb/IVdf5danzBAdIQS0/LoT1JUhUOip4vXdCsz9tGHM6LGnBtQV+xsVbKdl+qOfTA4baWbp/Jhx0LwqUt28nbFrlQ05xaqL6ycFrt0cNEFE9S4cpnZPOAx4uKT9FPhix+R+XbOYb1Rjm/V3IUKjUHFs7S0Ff+t/ocovTrUViqCIqr7NmU0KN4mhNM9hR+94TqjxpZSI71IRGbX6zzKBaT1AihSCqvCM/EXJqdkiusV33yaSJURRfkbuc9JEYEc4v5E3+DfZgsWt7rKf+HHjU2U/Y4T6RPnOxzBJgPmDPI0XcLPuphGYSkFh1Z0Jy6r+BHAYUZyYZJvxDBPQmuRUDtr6hjvEvpaklCgJW7LX94LnWPpio9v7erpUBWwuiTsfU/ShsCk/T9IOEW3yHtXa6gFQowt8UFJKfY8wdIdA1tAQYBDQJ9/fVUlpalTrlXTIwGobxAbar1XoXwDVPBBlfriUk13w9DAyOsU57+A1lAAtk7Fr6uoe00nEaybkkRV+koeKu7IivmijsMd0VfyPyCG2WqmlHhokGyZuZL32wQn8LaoOPCMueMvvLrcRf4u2gj1MV3b20YXey1qyb7iag1c2chEJhaXIsUQiZD4xFgHIFQh9bganRvWXcvqqrKmj3toNWlh2tm2w4fuTe0TyAjrFjKSl11WHjecxjFjKd1Dn664YrwrNb39BZJ71+2aAHE5MUmoIYc3F8bfj+mubOfJUtEuLDYm5q/sdBhT9/3MclzSjVMbRQxQrph1j2X6s/yfdoI2STvfgHH2XQXWDVEvxaK65dd107uniFOJui4gcNrHchKTOK0kLniZ5m9NCZIBkr6OUkiJe7jv95mkHfARMj1Gqb3vuul0IdO4r5HsP1qYwZcZC6TcSShubiSpdhTuKQ3LVQQ40JgQ5ebm/YgSGW2sCOZsJblWLi7q7bw1JF2KVqnm8oxam36d4zSuzawkJkWX5ZAffIRFEZxSKbs9AujgvtGSa7X6SCr8FXeAGrt3daeSXAKzLn5403jb4cwvEX5BavUKwaX02aLy0/QbZXn7AZEouL5CD35+X0cK5udStNAGBpxyIGeeKYeZ8hWimpiyJFhOnsl9chYkfsVQToR2zdMjutiFWkr7G7EHvcMR0B65Jz0XSGuf3ZtjqtO78mGeZ86fdwu45Dt8k+nOSSoiuExZ0BaIVZG9+X80TLyFQrwHldpP2EJbEJ8YU6WeolDBG8c+krfrDlwfPsw4ZPhY753QuAiTIQ4G87euvYx21EL7jjWoTU9xyWMjMx5XuveOXUn0+ZDBJUpQxhE/Kq3MbudH2iQsrfJpnRVqSCB8EjfpNHAEwMs3uCDhqIRYy05MZSd6epAYDaX2pxNg3Tj2NIcFJkcavg9PKFRpxrV8es7EARyhoJqKBx2Hn67ovraUOmvWFJGP1sOgEwpYTzcZSkb4Rp+UYTnmsgu45FrFCYPpTc5xPjt9D88vKDBwhtLL4P1ezeRRkcLO8HiByLIUPOfgLnZXeq7IfA6XVRjEeWsm7JllYuOZvtvyObrBFw1vySUhEZiQblNgXUTPTvXhuhROvi7IQ1cIj5e+8lOsIzJvgkVhveUbqewpvh1sR3OL40RBvhOVfY1VH6KGBXHyNWXUO9LKrqR3KUYp89Ftma+gqlFEpw52p87HN+62d21dGjx46n3qs00r+MxKMH1o3v4JAyq2+AAyWann7XU5VHts/ILCOgxbMofgCgRVlOKea1NboLE3Yg81VFic3nxueZHHxsYXqhzcRu/yjcULG4/VgZflhgvFqKLeyuGpxlXny/RuUZmOnKDTiOG6vLkJlDPsIUGkkwfrcyNH8zkWGkR6m/HnBAbQF1TLM6k5dLR3Q1lRMYWhfPwkAGMw8dlzXvR2p24Tw+tkYfKhRuJcoAv81ha3SsRvtQrjgclLLpPgty1K9Tl78Q3Rfw7YVQz9TZrjlVxwafzIVe6tTL2zXEQGNXpJoZ5gcJaXQh/Yo1rEuJREHDoU2UbrLNhFVPhEVgOpUEEFfwnQJ7DPKjMh82UuLCJrWlH0pmROnaLK8BMo/zJuSo3wws3MW+46jnORlRiwI/FrynA63LIh1czgJnBucAKB5FgY+Dzjmw5UpRuUJAP+HIGOUGlwbOeSmhC/cZK2zSHGkF8x4A/HY0C6WjxY3CISI60qVwtpXge84s/dYGTdcUwAn/bm9+P8+ZvcBjt/ygKSTHqSsoN3CB9Wt8UBT9mKny2bnPKYT3EP/PWBMcInwYwv+OQiPHgBuKi9uOctijtOuHqM7QPAgEOLgosq6b8Mys3k5icw2JWKaiZY15LiigKK72rC1g+JLeTW2yH7CvUKkE43sa1fIY+7TzFvM6VQT6eZT+D/S/0WrViFgbbkxTy6mzyGlsNz28cOvXZXR0hmIrBmU31EP6bA+9FL8g3tYJgB+rMkeDO2Xaxdzbv36MwNIEiWDnfV+NROmyzBIUhkE3xDi8rl46Ao1zXwl1AZD/0M7NPHrFTzwvndIKpaC6cbwPsoOwabC3v3XaKukQSckuR4E93KiJLGwCZdmVbptklG9k9ZQKs9kxWHhYsvJhc6ftluCBnNrLp5u7nNFtNfWdZ6rHkfFKhyhBMnY3OjWUS6yF9mQ1DRKIdcIz9BrEAYoKf9zcqwZVikcQLF7/REqnOZ250QdF9JBAHes4y9LBgSQt12x9AWkaVfrm8B4XVRCQ+h2QlU2vq47uzO1AYVkpWtik28LCDFxoBN+ZLBMgWdmHqowcYSHXiYxcVaQ/C9dbifLIroHwsXfPI+B0XB+GyqdTD21gc0//aBusJdHU5LxmQ8Lj9CpmqmJH70tTLJMgV57G6InCh/3FNKi/C6ceP3EM0hMOB/+QEx/6lh4t6p/t8xlg==)  \n\n[GPT-3
        input prompt - (text-davinci-003-insert)](https://topaz.github.io/paste/#XQAAAQBQAQAAAAAAAAApGUoG3dqz7fTf0bbxEyYQs+X8VBiZbWdf69MXsOZQ9UyCpBoapCuZWoWp7XeLHLEl4jxb+ruccMpXoMZ1j5sX1skbGnyG36fzcea3RdzE19+TLoWxoJk2GePbm5MRcO73qD0H32a32x2yUKASjgR+YXripYoRdew8/ySz443gu/l/QPw08WqZ/yJL/mFTZ+TC5dWFaA9IGTlYXs/WCyepoU072A+mJ3t/0U1AmDmDwOKKbEj66324ylku9d4lO5hqa5I1Qkw7diT29tBKAGr6yT9sQnTt34KTzNDyCa5UCbpMa4f//5ELRwA=)  \n[GPT-3
        output code](https://topaz.github.io/paste/#XQAAAQBXAgAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx/DqKkM2yi+Ar0Z2wnSZEail2h/Dv4UCxErcHA4LsTNSz0hm6MzT8jGVht6MIxuRUim6ocLepfhiwFVKtIHpTulA8HSebPZkKKNGgVfeO+1b3uEVDe2GPPFlGweRomShmjXXBe842osw0TV45ys9J8C4D97Qx7zfqSDhbBQNDIphhNM0V1d7esmZMZe8yjfBbCo/ve3g+lZi5vQZsbM7Joy9bFNaUVaoyfLpxY8yQ1iuHKh/EqABSK++NImkf6TaZKbHxv1lGLVivzzd2uaPbrsGJx+v2YEWyfy8wfd/uQ8citDeu3m3NCxxHahyXc98pTc6/5LnkwiALfsEB6y1xZsu7LTtepAgibmlRYdoW8kW0CDBZfFnPhqXhfKIplrzh5vqb8XNYQS6Z3jgYk88cqtutprGB//z2Uyn)  \n**[GPT-3
        - process image](https://i.imgur.com/icdb7J2.png)**    \n[GPT-3 - jupyter
        screenshot](https://i.imgur.com/srZRw6u.png)      \n  \nI made two attempts
        with GPT-3 and both worked first-shot. My other attempt was with text-davinci-edit-001,
        but this code from text-davinci-003 was cleaner.  \n    \nI had to remove
        the empty newline from the end of input.txt to make GPT-3 code happy.. however
        I see a lot of python code here that also requires that step. (apparently,
        only some people got a blank line at the end)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python 3&lt;/strong&gt; I made it &amp;quot;by
        hand&amp;quot; first, then tried with GPT-3:  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAOAwAAAAAAAAA2GkofDKaDR27xJTxmoPDuD9YiSVMtos0IsxbyV5kHaUcZI9YDJTz3GnUOBEwmFn1WMKp26/lsLGMHd1f/Ub/QuWBLCxqRd5re2Kv1LXPYuWgTl8bqGMLnBLec3zMxNVvJ0AO8zewW8EN4febOKCNDCWPLmqLFB6eLykBiw6PD0UEGfxQ0SYDpeIcMRi3zo3KW+Y1Xjhw8MoYGDB02FCCNO3BZC2u0FOijAyZDNROjruwD8fue/7FoMSdXc80PEkXvl47x7+XeImRHxlamg/FOryQEPI65eNe0wC7OP8EQX9rSLLmbz58f+WKaTmXUwc/4QN3iNMLk9xDH7coHboqL+Fv5Sdz16JDAenYD5S+c5joKSVe4OhnnGgw/G6TWHluTN3i4ZTlYu6bcmgiL2S/H6f05P/Kzaw7/ENOqd5Ev8a6mbPrCs/fBxv/1Ldag\"&gt;my
        version - code&lt;/a&gt;  (it&amp;#39;s silly, i know)&lt;br/&gt;\n&lt;a href=\"https://i.imgur.com/jWYg4uP.png\"&gt;my
        version - jupyter screenshot&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQDOKAAAAAAAAAAaDYJCsr4os4tH4IU6qyZ5bjegC2rlupG7811rKx6/Txie9CNe7+4sPKUJ+Dc+cieezOL3cwD+16FF7sr/WoNEArgdbXee5zo+e5teCUfKxb/Tp0kOVH0/4XCx4qW4JO3aJ6bzmfuknWtabQM8T+X4j1CQhlAKd5wL7SI8CSVSXyeJ/AVAaVnGkU5Dpjyow6LYC1ZwQL8Pqa+I9Eb58A6cmA4HvhoRL3L2Gce9JbV4vrJUygN3QX/WdkxWOuZ+akEqCOkiqyzexK4Sz+/WXQfzu3/9IDEzGhxaYGwgPI2Qc8kCpJawGByOi12cSeD1GOVDb3n7T+abQ5dFonVdGyiKjLIYD4ISQdkaY3Jr6zWwT9oyGJLoZYVXzsB6ahiUdo1i2l6wWwNre3p+ViIV1GtVqQFfyfceWDzxXtNXUg3Xa8nuR+SIWQTjO7AZC7AMqFAyeOpZbzhsCjQajo3BQt4pGy7LJ7JTqiaTTNLgsyFFHm/vSQw0PO5bBe6QrQ7qcU7rGwPSrWEJARHZASmQ0WDz1UHEt9U/uAOjxucm/50/DGoIy0YdX24YkpajLiBkoopSVcCzsEGV/5ndWWrl8M5Igl+irj+4epY9vTMrZiuvfy4wlyYe7b1t23kC1xqSGFQ7eZPnjjboks9jwxxtUOiLjSrhcBGYCGqqUSMFvoaCLHxljEx1REYf3rffzsHrB5kw6ZOiYBlgQktobYCl41Das4DAEpK1535vUXUESpkbKx6JbbXxzOI9v7p0e/2G1rKEelboyPejQkwCMujrwdsXLKS26/Jex+t8xwgC5n2COuAGuqkBxKRoI2xWOUxyR0oGmznOlL9X1N7wH7AXQG2R4TzTw/KK+PUAekd/oczSv2siNpJxb+B8BqE0cDZlEDcPCD0mYaBnzGotF/xOSBZ2SdhHxzDyrXj84mIAuq1hfhBOjpF04jepJN3r8NiuRtrHz+Rw2h6jKpEZZqaVVbSHM3tAKLfiNKP4gIqlih04/lH6E6M8DtjA9jMrVKwvXE1nMKYpXj/XUuplpstUfatt6FlYnHQBW7JmyjXswR9Gh33t/u69VCj41wtkzZSEOPpPhnAeOlzblSmTZ40lopeXKpDTQuQJZb11JzPQUU8LmqM3iTorsACQR1uNkULehUt4w/MXcDrTCwn3JzJ6dhyvQFWny/BUgLr13nPrOpHtUesu6I2ydt+Jq6B25ITR0Y0A1wwP7X9O12pvMfv4wouOUQMCqZXbjgpbcw2/iEtVGbEkWlDzNobqzBb7B9/nVOmmB7vRLsSfbWOMKOCumt+dl9B/NT9dsQpkpHDyjLK0zAa1FpH51forDRejbcJ52R4079os9h3bWSZ7pUzLMufwHgjhRyCbTF+w7z0tcbxKWttx5PDLttzHtcKamk48ErcmDOdlgCDWtqzN3i496G8v5sPzWFn8uGJTyye7KcYynUJ9zf4BlOTbsuPsSInm6icj/hdZp6QaW3tqgS4gIgO0cJ/uo5pvQ1FzO1V+AxTkYkgdreCg9hq4VFruiJ2N2SGK5DwPNNT+V3Dq0yHqsWnwSmf8PKpPKvNi8/viC1xu0jer5tdj3w4XNvjebHf32SfCNrdO2JN7VuEceWdNS+6sFlXadKg8+/412rInbvChG5G0wKXXyu+eIu8nqMwU6e9wG/kaHR+tCMRmdQEDTgqNNI1xFoz2rlDlOrhFc3GycdAHvFLhgE0nil/+24ODHd323rF215WHgPi6m0dkVYW6Z71514jsxCTWcnQTxqJLSQiK1ndUZoaYCQ+YkkRbsNRrieT2fGfdusT6u0KRFYIYlgawAzwciOHc8X0EYr1J5fehUs2pqcNiFGCp68in/4Lzh2yK6Bn5yLKhWZnqi6ORvT19IMy6yIlOVgvgmEzKUIlXuMtPD9laFRCC4dlHiC3h58xOx9Ehvt4g4Z7OfQaKVMGKogQZ82coxqIdje0SQMAIaZ6PRi7Q2dVAxnRxBwKLrTQHzp7F+Eu3Au0GCo9Vttw+IJ5eckboN9hrsWbltwQqnaY4onHzPIcX/2RyagGSc5nVs2KMnyTD8HnhBzIASZuxH2Zi4sSXEf+U4Of0Q6nQ4F3gCp07Cf2/2MXkXUHBNzeTaps2UlxdXCvjhT06PaSLDgJ33y5WWgjp7Lz3J3NALibvOYPOe1kNiSIMwtSlzK4FFBZX+mms74S0UHde+wIN/oUXHBeXJINhZliXHg7DT9Ju4/kTOhLIBuiJKRAo46X5fuSQB9xh40QJznWz/ubEbULkI+ryv6pVavk9iG57BE0bemgZWvL9dZ33SWqPy93FNcEVsmEwLAdFm4SjY1mLMW5QmTkphypfMo8fl6ofC2LuvS+OEizexbUnBNJENMby2vP9sLqcEoEIRxYkpuar9M5I4pR+Nl+0UkpPna+uygG9qrPlC5Vi5TzQgXHt85XOwQPJ3+HyIahaiuohqvwMvWY++55qTvU4g2ijjD5T+Vma0h4cfHnWFGgMo2Y2EUbqlAfDAHhBxOog8DBioZ+WSYTN95mwDwH1wzKDa6HTpBoQ1fqli0HYVXgDCcnTJIGVH/NsY34Gs3ileoW6xwmNH1ibxUTSGSJYoEzilqDADsQzM5ezO6w6a1spw0Dn8/IxLi9wiSq8vhhTr+Ss7ttwZQjDCb3dP1Ry8w/ynrhrEMbD96ZWzgZASEhJepJadeJOFLIQmxr8D6u6VIajgESivCrMzzMK50yYaLqaMVVGfglwTlwGMEQt19hV8NomWwTULJs+lMUAmrMLHm5K9r7u4YmdeoxCQyvGaWKrTJPMKT3B+qITd62FnspphCOLz02O0kymNc9XmYjy1z8MG8xbHtQ46abf1KSdqXQUieYnxfq9IVVUBZno9PlwW2lt7wxDMFcJ+yaCWRx/oZJIlZr4ppOSHBgbs2TUVxyKa9ZJO1gSULjgJu51HMrRCd1puUwHAoc+cNlHhoHsDDdBY4ev/gQaFg8xC7xGd6THhEntcmhlDocZbbFH9F/xr7yCPs5UpG0HLpiDF97GOzbzai3oYkHtuOfMCSbkuP/EgklFsMpoJiASevcwCElGJDroKjB/PFqxtAb8ZlNBnc+5OhDSCoxQWxejQG53yWfL8a6Xz5BI/xh0sF0Prj9slhdmqJBKYbCNKRM1Pnyi4q/siiXCd8tykbd9RkYWksJsE8N/fJB/e8jO32FjFn4PPYEpFrPB8vbvBzcpzewFrOBN69MWPUb72oT4kJbgpxN9XG5wFc4ZkXKqVuMVqfWYe00HmTY7EOXUH1B71nKE5XCyO6eEWNrkOah/sepLkyZz1tfZLVvdHdk3fbrL6SNI+/nZCqN/XCv62XGEWNetHX1+ue90I9wnP173+aDpAIFQadczNzv8urXhD45Qt1Mkie9qn08fLi1EzF+TnmnSpHidrw94l/FaRUUnrqU8/I/oCGkK7T6/j7xYscpDtoBKSiIn+h5n2vMmlPUGt906K8J8qMkdqS4+25kp9Kyb/IVdf5danzBAdIQS0/LoT1JUhUOip4vXdCsz9tGHM6LGnBtQV+xsVbKdl+qOfTA4baWbp/Jhx0LwqUt28nbFrlQ05xaqL6ycFrt0cNEFE9S4cpnZPOAx4uKT9FPhix+R+XbOYb1Rjm/V3IUKjUHFs7S0Ff+t/ocovTrUViqCIqr7NmU0KN4mhNM9hR+94TqjxpZSI71IRGbX6zzKBaT1AihSCqvCM/EXJqdkiusV33yaSJURRfkbuc9JEYEc4v5E3+DfZgsWt7rKf+HHjU2U/Y4T6RPnOxzBJgPmDPI0XcLPuphGYSkFh1Z0Jy6r+BHAYUZyYZJvxDBPQmuRUDtr6hjvEvpaklCgJW7LX94LnWPpio9v7erpUBWwuiTsfU/ShsCk/T9IOEW3yHtXa6gFQowt8UFJKfY8wdIdA1tAQYBDQJ9/fVUlpalTrlXTIwGobxAbar1XoXwDVPBBlfriUk13w9DAyOsU57+A1lAAtk7Fr6uoe00nEaybkkRV+koeKu7IivmijsMd0VfyPyCG2WqmlHhokGyZuZL32wQn8LaoOPCMueMvvLrcRf4u2gj1MV3b20YXey1qyb7iag1c2chEJhaXIsUQiZD4xFgHIFQh9bganRvWXcvqqrKmj3toNWlh2tm2w4fuTe0TyAjrFjKSl11WHjecxjFjKd1Dn664YrwrNb39BZJ71+2aAHE5MUmoIYc3F8bfj+mubOfJUtEuLDYm5q/sdBhT9/3MclzSjVMbRQxQrph1j2X6s/yfdoI2STvfgHH2XQXWDVEvxaK65dd107uniFOJui4gcNrHchKTOK0kLniZ5m9NCZIBkr6OUkiJe7jv95mkHfARMj1Gqb3vuul0IdO4r5HsP1qYwZcZC6TcSShubiSpdhTuKQ3LVQQ40JgQ5ebm/YgSGW2sCOZsJblWLi7q7bw1JF2KVqnm8oxam36d4zSuzawkJkWX5ZAffIRFEZxSKbs9AujgvtGSa7X6SCr8FXeAGrt3daeSXAKzLn5403jb4cwvEX5BavUKwaX02aLy0/QbZXn7AZEouL5CD35+X0cK5udStNAGBpxyIGeeKYeZ8hWimpiyJFhOnsl9chYkfsVQToR2zdMjutiFWkr7G7EHvcMR0B65Jz0XSGuf3ZtjqtO78mGeZ86fdwu45Dt8k+nOSSoiuExZ0BaIVZG9+X80TLyFQrwHldpP2EJbEJ8YU6WeolDBG8c+krfrDlwfPsw4ZPhY753QuAiTIQ4G87euvYx21EL7jjWoTU9xyWMjMx5XuveOXUn0+ZDBJUpQxhE/Kq3MbudH2iQsrfJpnRVqSCB8EjfpNHAEwMs3uCDhqIRYy05MZSd6epAYDaX2pxNg3Tj2NIcFJkcavg9PKFRpxrV8es7EARyhoJqKBx2Hn67ovraUOmvWFJGP1sOgEwpYTzcZSkb4Rp+UYTnmsgu45FrFCYPpTc5xPjt9D88vKDBwhtLL4P1ezeRRkcLO8HiByLIUPOfgLnZXeq7IfA6XVRjEeWsm7JllYuOZvtvyObrBFw1vySUhEZiQblNgXUTPTvXhuhROvi7IQ1cIj5e+8lOsIzJvgkVhveUbqewpvh1sR3OL40RBvhOVfY1VH6KGBXHyNWXUO9LKrqR3KUYp89Ftma+gqlFEpw52p87HN+62d21dGjx46n3qs00r+MxKMH1o3v4JAyq2+AAyWann7XU5VHts/ILCOgxbMofgCgRVlOKea1NboLE3Yg81VFic3nxueZHHxsYXqhzcRu/yjcULG4/VgZflhgvFqKLeyuGpxlXny/RuUZmOnKDTiOG6vLkJlDPsIUGkkwfrcyNH8zkWGkR6m/HnBAbQF1TLM6k5dLR3Q1lRMYWhfPwkAGMw8dlzXvR2p24Tw+tkYfKhRuJcoAv81ha3SsRvtQrjgclLLpPgty1K9Tl78Q3Rfw7YVQz9TZrjlVxwafzIVe6tTL2zXEQGNXpJoZ5gcJaXQh/Yo1rEuJREHDoU2UbrLNhFVPhEVgOpUEEFfwnQJ7DPKjMh82UuLCJrWlH0pmROnaLK8BMo/zJuSo3wws3MW+46jnORlRiwI/FrynA63LIh1czgJnBucAKB5FgY+Dzjmw5UpRuUJAP+HIGOUGlwbOeSmhC/cZK2zSHGkF8x4A/HY0C6WjxY3CISI60qVwtpXge84s/dYGTdcUwAn/bm9+P8+ZvcBjt/ygKSTHqSsoN3CB9Wt8UBT9mKny2bnPKYT3EP/PWBMcInwYwv+OQiPHgBuKi9uOctijtOuHqM7QPAgEOLgosq6b8Mys3k5icw2JWKaiZY15LiigKK72rC1g+JLeTW2yH7CvUKkE43sa1fIY+7TzFvM6VQT6eZT+D/S/0WrViFgbbkxTy6mzyGlsNz28cOvXZXR0hmIrBmU31EP6bA+9FL8g3tYJgB+rMkeDO2Xaxdzbv36MwNIEiWDnfV+NROmyzBIUhkE3xDi8rl46Ao1zXwl1AZD/0M7NPHrFTzwvndIKpaC6cbwPsoOwabC3v3XaKukQSckuR4E93KiJLGwCZdmVbptklG9k9ZQKs9kxWHhYsvJhc6ftluCBnNrLp5u7nNFtNfWdZ6rHkfFKhyhBMnY3OjWUS6yF9mQ1DRKIdcIz9BrEAYoKf9zcqwZVikcQLF7/REqnOZ250QdF9JBAHes4y9LBgSQt12x9AWkaVfrm8B4XVRCQ+h2QlU2vq47uzO1AYVkpWtik28LCDFxoBN+ZLBMgWdmHqowcYSHXiYxcVaQ/C9dbifLIroHwsXfPI+B0XB+GyqdTD21gc0//aBusJdHU5LxmQ8Lj9CpmqmJH70tTLJMgV57G6InCh/3FNKi/C6ceP3EM0hMOB/+QEx/6lh4t6p/t8xlg==\"&gt;input.txt&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBQAQAAAAAAAAApGUoG3dqz7fTf0bbxEyYQs+X8VBiZbWdf69MXsOZQ9UyCpBoapCuZWoWp7XeLHLEl4jxb+ruccMpXoMZ1j5sX1skbGnyG36fzcea3RdzE19+TLoWxoJk2GePbm5MRcO73qD0H32a32x2yUKASjgR+YXripYoRdew8/ySz443gu/l/QPw08WqZ/yJL/mFTZ+TC5dWFaA9IGTlYXs/WCyepoU072A+mJ3t/0U1AmDmDwOKKbEj66324ylku9d4lO5hqa5I1Qkw7diT29tBKAGr6yT9sQnTt34KTzNDyCa5UCbpMa4f//5ELRwA=\"&gt;GPT-3
        input prompt - (text-davinci-003-insert)&lt;/a&gt;&lt;br/&gt;\n&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBXAgAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx/DqKkM2yi+Ar0Z2wnSZEail2h/Dv4UCxErcHA4LsTNSz0hm6MzT8jGVht6MIxuRUim6ocLepfhiwFVKtIHpTulA8HSebPZkKKNGgVfeO+1b3uEVDe2GPPFlGweRomShmjXXBe842osw0TV45ys9J8C4D97Qx7zfqSDhbBQNDIphhNM0V1d7esmZMZe8yjfBbCo/ve3g+lZi5vQZsbM7Joy9bFNaUVaoyfLpxY8yQ1iuHKh/EqABSK++NImkf6TaZKbHxv1lGLVivzzd2uaPbrsGJx+v2YEWyfy8wfd/uQ8citDeu3m3NCxxHahyXc98pTc6/5LnkwiALfsEB6y1xZsu7LTtepAgibmlRYdoW8kW0CDBZfFnPhqXhfKIplrzh5vqb8XNYQS6Z3jgYk88cqtutprGB//z2Uyn\"&gt;GPT-3
        output code&lt;/a&gt;&lt;br/&gt;\n&lt;strong&gt;&lt;a href=\"https://i.imgur.com/icdb7J2.png\"&gt;GPT-3
        - process image&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;\n&lt;a href=\"https://i.imgur.com/srZRw6u.png\"&gt;GPT-3
        - jupyter screenshot&lt;/a&gt;      &lt;/p&gt;\n\n&lt;p&gt;I made two attempts
        with GPT-3 and both worked first-shot. My other attempt was with text-davinci-edit-001,
        but this code from text-davinci-003 was cleaner.  &lt;/p&gt;\n\n&lt;p&gt;I
        had to remove the empty newline from the end of input.txt to make GPT-3 code
        happy.. however I see a lot of python code here that also requires that step.
        (apparently, only some people got a blank line at the end)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhx6dw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhx6dw", "created":
        1669907561.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyhxpdq", "id": "iyhxpdq", "parent_id":
        "t1_iyhx6dw", "depth": 1, "children": ["iyhxpdq"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhzbnm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vypxl",
        "can_mod_post": false, "created_utc": 1669908457.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_2pbhezcb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python** 882/605\nMade a stupid for loop for part 1 first, lost a minute
        there\n\n    def parse(inp):\n        return sorted([sum(nums(x)) for x in
        superlines(inp)])\n\n    def p1(inp):\n        return inp[-1]\n\n    def p2(inp):\n        return
        sum(inp[-3:])\n\n`nums` extracts all numbers from a string, `superlines` splits
        a string by \"\\n\\n\".\n\nThis year I want to learn **F#**, so here is my
        first try:\n\n    let parse = Seq.rev &lt;&lt; Seq.sort &lt;&lt; Seq.map (Seq.sum
        &lt;&lt; Seq.map int &lt;&lt; lines) &lt;&lt; split \"\\n\\n\"\n\n    let
        part1 = Seq.head\n    let part2 = Seq.sum &lt;&lt; Seq.take 3\n\n    let input
        = parse &lt;| System.IO.File.ReadAllText \"1.in\"\n\n`lines` splits by \"\\n\",
        `split` is a wrapper around `String.Split`.\n\nYou can find all of this years
        and my last last years solution on [Github](https://github.com/vypxl.aoc)
        :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;
        882/605\nMade a stupid for loop for part 1 first, lost a minute there&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        parse(inp):\n    return sorted([sum(nums(x)) for x in superlines(inp)])\n\ndef
        p1(inp):\n    return inp[-1]\n\ndef p2(inp):\n    return sum(inp[-3:])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;nums&lt;/code&gt;
        extracts all numbers from a string, &lt;code&gt;superlines&lt;/code&gt; splits
        a string by &amp;quot;\\n\\n&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;This year I
        want to learn &lt;strong&gt;F#&lt;/strong&gt;, so here is my first try:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        parse = Seq.rev &amp;lt;&amp;lt; Seq.sort &amp;lt;&amp;lt; Seq.map (Seq.sum
        &amp;lt;&amp;lt; Seq.map int &amp;lt;&amp;lt; lines) &amp;lt;&amp;lt; split
        &amp;quot;\\n\\n&amp;quot;\n\nlet part1 = Seq.head\nlet part2 = Seq.sum &amp;lt;&amp;lt;
        Seq.take 3\n\nlet input = parse &amp;lt;| System.IO.File.ReadAllText &amp;quot;1.in&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;lines&lt;/code&gt;
        splits by &amp;quot;\\n&amp;quot;, &lt;code&gt;split&lt;/code&gt; is a wrapper
        around &lt;code&gt;String.Split&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;You can
        find all of this years and my last last years solution on &lt;a href=\"https://github.com/vypxl.aoc\"&gt;Github&lt;/a&gt;
        :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason": null,
        "associated_award": null, "stickied": false, "author_premium": false, "can_gild":
        false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhzbnm/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhzbnm", "created":
        1669908457.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyidr8p", "id": "iyidr8p", "parent_id":
        "t1_iyhzbnm", "depth": 1, "children": ["iyidr8p"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhzopl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tinygiant80",
        "can_mod_post": false, "created_utc": 1669908606.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_xndk6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "TCL\n[Solution](https://github.com/ccaporale1/aoc2022/blob/main/day1.tcl)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TCL\n&lt;a href=\"https://github.com/ccaporale1/aoc2022/blob/main/day1.tcl\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhzopl/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhzopl", "created":
        1669908606.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyj3ipo", "id": "iyj3ipo", "parent_id":
        "t1_iyhzopl", "depth": 1, "children": ["iyj3ipo"]}}, {"kind": "more", "data":
        {"count": 862, "name": "t1_iyi25hy", "id": "iyi25hy", "parent_id": "t3_z9ezjb",
        "depth": 0, "children": ["iyi25hy", "iyi58dz", "iyi42bx", "iyi8c85", "iyi5mb6",
        "iyi43qa", "iyi42o2", "iyi9lor", "iyjgbn4", "iykba6a", "iyigqnw", "iyid8ah",
        "iyi5lfb", "iyihtt5", "iyizg5x", "iyj7qvx", "iyiuo14", "iylw4iq", "iyjjx19",
        "iyloqpg", "iyh7kil", "iyio5ot", "iyivmd4", "iyjmfg2", "iyixwn5", "iyids34",
        "iyi73mk", "iyjk5c5", "iyjr1gr", "iyjlqwe", "iyj2fnp", "iykt1ij", "iyllxtz",
        "iygu8w6", "iyj2rpc", "iyggs2n", "iyh3qk1", "iyglg0j", "iyh5gmk", "iyhihj8",
        "iyhcntx", "iygpi5x", "iyj01y1", "iyjufhy", "iyj4jvs", "iygxiqu", "iylv8l4",
        "iyguelm", "iyk6f5r", "iygr5ot", "iygt7fy", "iyi3voe", "iyji2ik", "iyktjwk",
        "iykr4j2", "iyjkm2g", "iykty7b", "iyjxqbh", "iygls4b", "iyhap4o", "iygvg47",
        "iym0xxj", "iygpln4", "iygtt5s", "iyh9nau", "iygu9im", "iygsgdd", "iyjn0xs",
        "iyghbx9", "iygnnpp", "iygocru", "iyi7wuv", "iylofbp", "iyl2era", "iygvepx",
        "iyh23v3", "iyhckmi", "iyibwag", "iyi9xmp", "iyhta1w", "iyki2hv", "iyjk8d1",
        "iyh4d67", "iykr360", "iyj9hb0", "iyj9nk4", "iykw82v", "iygwf7e", "iyggef3",
        "iykjqu5", "iyi2ubt", "iygzep7", "iyh6ipy", "iygv06u", "iyhrqsb", "iyhawrr",
        "iygortf", "iyk8vik", "iyi61u1", "iyhoas8", "iyhly7i", "iyikovq", "iyjhb6d",
        "iykuhvk", "iyig3lr", "iygg75r", "iykgq29", "iyhp7bp", "iyggemo", "iyhhx5j",
        "iyjll1x", "iykqwil", "iyj0pbg", "iyghdgp", "iyk5zef", "iyhf4pi", "iyh1sbe",
        "iykhrv4", "iyk5rz1", "iyh8y4t", "iyh27hi", "iyhmu7g", "iyh6v07", "iyh903q",
        "iygul8j", "iyhdm18", "iygwwax", "iyh134y", "iyiq59r", "iyiyv19", "iyghgsh",
        "iyhepar", "iyh8acg", "iyh37cn", "iyh254k", "iygihhd", "iyjsr7s", "iygumyg",
        "iyirah1", "iygs4zx", "iygq8yp", "iyhg6wl", "iyh47kb", "iygvd37", "iygkieb",
        "iygi1lg", "iygk71s", "iyglca6", "iyilp2v", "iyh2xk0", "iyhkd91", "iykeihg",
        "iyi5ph1", "iylkrc2", "iyj82ao", "iyh94pi", "iyifepj", "iyjuk4z", "iyjqdky",
        "iygqbgt", "iyghs29", "iykqjpw", "iylbsbk", "iynanji", "iyhviwa", "iyhu377",
        "iyiew8r", "iygl6mf", "iylrykp", "iygksew", "iygii8u", "iyh7vgw", "iymfr3k",
        "iyhmipo", "iyizv63", "iyhwkux", "iyhbekg", "iyjfcnq", "iyizsac", "iyk1xr7",
        "iyityzs", "iyirrcf", "iyj1jqy", "iyj1e8h", "iylrdmd", "iyhtniy", "iyhe9x7",
        "iykcmen", "iyh3qkb", "iymnxs4", "iygi5po", "iyglvip", "iyhj14i", "iygtn82",
        "iyiptcs", "iymeok0", "iyjyxup", "iyggvx5", "iyiu5e2", "iyig2js", "iyjhii0",
        "iyjo6pc", "iyifjlg", "iyjtc5m", "iygkf3o", "iyghk2v", "iylpn1h", "iygvchv",
        "iyj68z1", "iygs99u", "iygsprw", "iygmznb", "iyj8urz", "iygidqj", "iykiwgh",
        "iyib1g3", "iyjfti2", "iylvtwj", "iyndnm7", "iygihp4", "iyghlbt", "iylbtc9",
        "iyicmdx", "iykp93u", "iygk5ym", "iyjmzei", "iykih4i", "iylvz2d", "iygiahl",
        "iygi5xr", "iyj4wrk", "iyh53if", "iyih8nf", "iyiuhlp", "iyh4jvk", "iykv833",
        "iyiuj74", "iyhbnku", "iygikhh", "iygjuhs", "iyjhev8", "iyjttql", "iyjbqi4",
        "iyjfjcb", "iygnnt2", "iyk142r", "iyioig2", "iyhwhv8", "iyk2rga", "iyhpim5",
        "iymrn28", "iyjxybu", "iyjlma8", "iykbd6u", "iyh1cly", "iyhfj16", "iyhtfc5",
        "iyhncoa", "iyhlomk", "iykukm3", "iyja14o", "iyghijn", "iygits6", "iykillk",
        "iygikbe", "iygh1vn", "iyhazll", "iyhjx47", "iyhucho", "iyh48zd", "iylhx8m",
        "iyjosmn", "iygq3eu", "iylvnvr", "iygjzud", "iyk2msm", "iyhmy8u", "iyhdmga",
        "iyh2ga8", "iyhs4pw", "iyhi0hs", "iyhcc5a", "iygogzm", "iyjmlnl", "iylt0c2",
        "iygo7is", "iyh40eu", "iygu7yp", "iygizh5", "iylsah5", "iyjqs6b", "iygq9ex",
        "iylruwg", "iykl2k8", "iygj0gb", "iyjr2fv", "iyhnl8j", "iygnjv0", "iyjsuh9",
        "iygh4ev", "iyn5own", "iygojh4", "iyhp9bc", "iyit8hi", "iyjrdd3", "iyk2b5l",
        "iyiijcf", "iyk8tpt", "iyjjlwa", "iygnrsm", "iym1oim", "iymtg1y", "iyjo0p4",
        "iyjes91", "iygj91q", "iyjoxe5", "iygrr0v", "iygsonm", "iyh5f37", "iygllw5",
        "iygk7ty", "iygpb55", "iyhu7hi", "iyjmvn5", "iyml7p5", "iygjsuh", "iyj6m98",
        "iykca4b", "iygxrp3", "iygtqba", "iyilrwd", "iyghyk7", "iyjq2ke", "iyiuevh",
        "iyggvrp", "iykhf2b", "iygwx9e", "iyjrlwy", "iyl7t9c", "iygipfe", "iylyrfw",
        "iyht2wb", "iygx5l6", "iygretv", "iykkyaf", "iyjca4f", "iyjoviq", "iyiuahb",
        "iylrvts", "iygnie1", "iyh0jn5", "iyk589m", "iyj05dc", "iyhwp80", "iygot51",
        "iyl6d5z", "iyh83ef", "iyghnsf", "iyh2jzk", "iyhqtl8", "iyjg18i", "iygjyh0",
        "iygrb24", "iygh5ur", "iyi1l73", "iyi6v6k", "iylrzr2", "iyghrha", "iyhhlqt",
        "iyj8sit", "iygk2q0", "iyjrsrt", "iyk38p6", "iygifp2", "iyidtjc", "iyh4msz",
        "iygty01", "iyjd08l", "iyjtywa", "iyh01nr", "iyjt0id", "iyj0l1g", "iyhg2qj",
        "iyhfatq", "iyh7ecp", "iyjpndh", "iyggqcs", "iyjon13", "iyiwnvn", "iygk3a4",
        "iygnov1", "iyh9uw5", "iyid3mu", "iyglepl", "iylenyb", "iylrl58", "iyjjbuu",
        "iyjj4z7", "iygld5k", "iyhfzli", "iyhclqb", "iyjpq76", "iyi4yrd", "iyhr51u",
        "iyjqo0n", "iygyccj", "iyi0vt0", "iyhd2b7", "iyj8hzx", "iygu4na", "iyisc1l",
        "iykjata", "iyhjfge", "iyh87eq", "iyk30jj", "iygk841", "iyhd6hi", "iygh7jy",
        "iylbokf", "iygonqk", "iyk3370", "iyj5tvu", "iyna5us", "iyh55x1", "iyjqxua",
        "iykf2rh", "iyhnrc6", "iyjo9dr", "iyjjk6w", "iyitfmg", "iylsfbg", "iylr8nj",
        "iyijotf", "iyhaofh", "iyh9v1e", "iygvdkc", "iygire9", "iyglpww", "iykh5as",
        "iygl9gz", "iygqxbs", "iygjmjd", "iyll509", "iylahzo", "iyigaiq", "iyhej8p",
        "iyk964p", "iyjcn65", "iyj12wv", "iyjuml8", "iyh7ico", "iyl3nhm", "iyj6eg1",
        "iygiuk8", "iygtz22", "iygtowk", "iyippe0", "iyifpzv", "iygilxa", "iyizzou",
        "iyijtn7", "iygifh5", "iyghf4q", "iyhdc65", "iyilg4g", "iygibn4", "iygwcfb",
        "iygj0fa", "iyjfvg4", "iyjh0by", "iygiar9", "iykr6rb", "iylmebf", "iyjz08s",
        "iyjp7up", "iyls2ng", "iyl15he", "iyk42v2", "iygnqq5", "iyhc157", "iyik00f",
        "iyifqq9", "iyjs7bn", "iyl783x", "iymoetz", "iyk33x5", "iyjphct", "iyk0fpn",
        "iyip2ky", "iygi2zb", "iyk2sbf", "iylldan", "iyju5na", "iygiboc", "iykxscx",
        "iyndflq", "iykopsr", "iygjpdu", "iyh85kz", "iymm9y8", "iyh9s69", "iyh9vm9",
        "iygzzzp", "iygnsdd", "iygiuff", "iyik796", "iyiev6x", "iyixtuz", "iygnqw6",
        "iyjdyny", "iykhd3j"]}}], true]], [0, 12, "attr", "things"], [12, 13, "call",
        ["t1_iyimw2r"]], [13, 14, "attr", "focus"], [14, 15, "call", []], [0, 16,
        "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr", "filter"],
        [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"], [20, 21,
        "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:36 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:36 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=7L0vTKNczgQfVyM2ky; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:36 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyi25hy,iyi58dz,iyi42bx,iyi8c85,iyi5mb6,iyi43qa,iyi42o2,iyi9lor,iyjgbn4,iykba6a,iyigqnw,iyid8ah,iyi5lfb,iyihtt5,iyizg5x,iyj7qvx,iyiuo14,iylw4iq,iyjjx19,iyloqpg,iyh7kil,iyio5ot,iyivmd4,iyjmfg2,iyixwn5,iyids34,iyi73mk,iyjk5c5,iyjr1gr,iyjlqwe,iyj2fnp,iykt1ij,iyllxtz,iygu8w6,iyj2rpc,iyggs2n,iyh3qk1,iyglg0j,iyh5gmk,iyhihj8,iyhcntx,iygpi5x,iyj01y1,iyjufhy,iyj4jvs,iygxiqu,iylv8l4,iyguelm,iyk6f5r,iygr5ot,iygt7fy,iyi3voe,iyji2ik,iyktjwk,iykr4j2,iyjkm2g,iykty7b,iyjxqbh,iygls4b,iyhap4o,iygvg47,iym0xxj,iygpln4,iygtt5s,iyh9nau,iygu9im,iygsgdd,iyjn0xs,iyghbx9,iygnnpp,iygocru,iyi7wuv,iylofbp,iyl2era,iygvepx,iyh23v3,iyhckmi,iyibwag,iyi9xmp,iyhta1w,iyki2hv,iyjk8d1,iyh4d67,iykr360,iyj9hb0,iyj9nk4,iykw82v,iygwf7e,iyggef3,iykjqu5,iyi2ubt,iygzep7,iyh6ipy,iygv06u,iyhrqsb,iyhawrr,iygortf,iyk8vik,iyi61u1,iyhoas8,iyhly7i,iyikovq,iyjhb6d,iykuhvk,iyig3lr,iygg75r,iykgq29,iyhp7bp,iyggemo,iyhhx5j,iyjll1x,iykqwil,iyj0pbg,iyghdgp,iyk5zef,iyhf4pi,iyh1sbe,iykhrv4,iyk5rz1,iyh8y4t,iyh27hi,iyhmu7g,iyh6v07,iyh903q,iygul8j,iyhdm18,iygwwax,iyh134y,iyiq59r,iyiyv19,iyghgsh,iyhepar,iyh8acg,iyh37cn,iyh254k,iygihhd,iyjsr7s,iygumyg,iyirah1,iygs4zx,iygq8yp,iyhg6wl,iyh47kb,iygvd37,iygkieb,iygi1lg,iygk71s,iyglca6,iyilp2v,iyh2xk0,iyhkd91,iykeihg,iyi5ph1,iylkrc2,iyj82ao,iyh94pi,iyifepj,iyjuk4z,iyjqdky,iygqbgt,iyghs29,iykqjpw,iylbsbk,iynanji,iyhviwa,iyhu377,iyiew8r,iygl6mf,iylrykp,iygksew,iygii8u,iyh7vgw,iymfr3k,iyhmipo,iyizv63,iyhwkux,iyhbekg,iyjfcnq,iyizsac,iyk1xr7,iyityzs,iyirrcf,iyj1jqy,iyj1e8h,iylrdmd,iyhtniy,iyhe9x7,iykcmen,iyh3qkb,iymnxs4,iygi5po,iyglvip,iyhj14i,iygtn82,iyiptcs,iymeok0,iyjyxup,iyggvx5,iyiu5e2,iyig2js,iyjhii0,iyjo6pc,iyifjlg,iyjtc5m,iygkf3o,iyghk2v,iylpn1h,iygvchv,iyj68z1,iygs99u,iygsprw,iygmznb,iyj8urz,iygidqj,iykiwgh,iyib1g3,iyjfti2,iylvtwj,iyndnm7,iygihp4,iyghlbt,iylbtc9,iyicmdx,iykp93u,iygk5ym,iyjmzei,iykih4i,iylvz2d,iygiahl,iygi5xr,iyj4wrk,iyh53if,iyih8nf,iyiuhlp,iyh4jvk,iykv833,iyiuj74,iyhbnku,iygikhh,iygjuhs,iyjhev8,iyjttql,iyjbqi4,iyjfjcb,iygnnt2,iyk142r,iyioig2,iyhwhv8,iyk2rga,iyhpim5,iymrn28,iyjxybu,iyjlma8,iykbd6u,iyh1cly,iyhfj16,iyhtfc5,iyhncoa,iyhlomk,iykukm3,iyja14o,iyghijn,iygits6,iykillk,iygikbe,iygh1vn,iyhazll,iyhjx47,iyhucho,iyh48zd,iylhx8m,iyjosmn,iygq3eu,iylvnvr,iygjzud,iyk2msm,iyhmy8u,iyhdmga,iyh2ga8,iyhs4pw,iyhi0hs,iyhcc5a,iygogzm,iyjmlnl,iylt0c2,iygo7is,iyh40eu,iygu7yp,iygizh5,iylsah5,iyjqs6b,iygq9ex,iylruwg,iykl2k8,iygj0gb,iyjr2fv,iyhnl8j,iygnjv0,iyjsuh9,iygh4ev,iyn5own,iygojh4,iyhp9bc,iyit8hi,iyjrdd3,iyk2b5l,iyiijcf,iyk8tpt,iyjjlwa,iygnrsm,iym1oim,iymtg1y,iyjo0p4,iyjes91,iygj91q,iyjoxe5,iygrr0v,iygsonm,iyh5f37,iygllw5,iygk7ty,iygpb55,iyhu7hi,iyjmvn5,iyml7p5,iygjsuh,iyj6m98,iykca4b,iygxrp3,iygtqba,iyilrwd,iyghyk7,iyjq2ke,iyiuevh,iyggvrp,iykhf2b,iygwx9e,iyjrlwy,iyl7t9c,iygipfe,iylyrfw,iyht2wb,iygx5l6,iygretv,iykkyaf,iyjca4f,iyjoviq,iyiuahb,iylrvts,iygnie1,iyh0jn5,iyk589m,iyj05dc,iyhwp80,iygot51,iyl6d5z,iyh83ef,iyghnsf,iyh2jzk,iyhqtl8,iyjg18i,iygjyh0,iygrb24,iygh5ur,iyi1l73,iyi6v6k,iylrzr2,iyghrha,iyhhlqt,iyj8sit,iygk2q0,iyjrsrt,iyk38p6,iygifp2,iyidtjc,iyh4msz,iygty01,iyjd08l,iyjtywa,iyh01nr,iyjt0id,iyj0l1g,iyhg2qj,iyhfatq,iyh7ecp,iyjpndh,iyggqcs,iyjon13,iyiwnvn,iygk3a4,iygnov1,iyh9uw5,iyid3mu,iyglepl,iylenyb,iylrl58,iyjjbuu,iyjj4z7,iygld5k,iyhfzli,iyhclqb,iyjpq76,iyi4yrd,iyhr51u,iyjqo0n,iygyccj,iyi0vt0,iyhd2b7,iyj8hzx,iygu4na,iyisc1l,iykjata,iyhjfge,iyh87eq,iyk30jj,iygk841,iyhd6hi,iygh7jy,iylbokf,iygonqk,iyk3370,iyj5tvu,iyna5us,iyh55x1,iyjqxua,iykf2rh,iyhnrc6,iyjo9dr,iyjjk6w,iyitfmg,iylsfbg,iylr8nj,iyijotf,iyhaofh,iyh9v1e,iygvdkc,iygire9,iyglpww,iykh5as,iygl9gz,iygqxbs,iygjmjd,iyll509,iylahzo,iyigaiq,iyhej8p,iyk964p,iyjcn65,iyj12wv,iyjuml8,iyh7ico,iyl3nhm,iyj6eg1,iygiuk8,iygtz22,iygtowk,iyippe0,iyifpzv,iygilxa,iyizzou,iyijtn7,iygifh5,iyghf4q,iyhdc65,iyilg4g,iygibn4,iygwcfb,iygj0fa,iyjfvg4,iyjh0by,iygiar9,iykr6rb,iylmebf,iyjz08s,iyjp7up,iyls2ng,iyl15he,iyk42v2,iygnqq5,iyhc157,iyik00f,iyifqq9,iyjs7bn,iyl783x,iymoetz,iyk33x5,iyjphct,iyk0fpn,iyip2ky,iygi2zb,iyk2sbf,iylldan,iyju5na,iygiboc,iykxscx,iyndflq,iykopsr,iygjpdu,iyh85kz,iymm9y8,iyh9s69,iyh9vm9,iygzzzp,iygnsdd,iygiuff,iyik796,iyiev6x,iyixtuz,iygnqw6,iyjdyny,iykhd3j
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '44508'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv3ini8.2.1741472676526.Z0FBQUFBQm56TU9rLUR6SUJwT1JIME41NVZPb0dMNkU0M0xUZTd2dEN5NnhKMGdlU2F4RDhJVFlyNDc0a3FraFUyRlBjMUlpaVk4Z2VmUDMxUjFTdDExSVpOSlUtQldEM3dGekpJVjc4OHZlcVRYVjJCdm1lSlU0bm9iYjNuMDRSQ25RWENyODlLeHQ;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:36
        GMT; secure, session_tracker=nahhadhacpknjmrlhq.0.1741472676538.Z0FBQUFBQm56TU9ralItV05xNWZuS05xNFk5WUFJemU1bnNkR1puMEdqd1E1Tm9zNHpaXzlIeGx1TXc4Z0hDelpvM0RRVFR1T25wVHpJdno3Nm83cEowWUZpV3lqeVctV3FoT3Y0ODI1d21YRjdsM29ONW5QTzlQaUNlTm5seFpMT0tPTnlpY3Rfa1o;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:36
        GMT; secure, edgebucket=u3fzofltlvOlxNrCTh; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '35'
      x-ratelimit-remaining:
      - '65.0'
      x-ratelimit-reset:
      - '323'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:36 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670060393.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi25hy", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WasteEngineerPY",
        "can_mod_post": false, "created_utc": 1669909626.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_tf17cbhi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python** very obfuscated, cramped it in three lines (and there are a few
        unecessary parts in there...)\n\n[https://github.com/Zerhigh/personal_codebase/blob/main/aoc_22/aoc22_01_short.py](https://github.com/Zerhigh/personal_codebase/blob/main/aoc_22/aoc22_01_short.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;
        very obfuscated, cramped it in three lines (and there are a few unecessary
        parts in there...)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Zerhigh/personal_codebase/blob/main/aoc_22/aoc22_01_short.py\"&gt;https://github.com/Zerhigh/personal_codebase/blob/main/aoc_22/aoc22_01_short.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi25hy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi25hy", "created":
        1669909626.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq6e29", "id": "iyq6e29", "parent_id":
        "t1_iyi25hy", "depth": 1, "children": ["iyq6e29"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi42bx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "OutlandishnessOk4575",
        "can_mod_post": false, "created_utc": 1669910395.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_724d8575", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**In Rust, tried to be idiomatic**\n\n```rust\nuse aoc_core::read_file;\nuse
        std::collections::BinaryHeap;\n\nfn main() -&gt; Result&lt;(), std::io::Error&gt;
        {\n    let data = read_file(01).unwrap();\n    let mut sol: (u64, u64) = (u64::MIN,
        u64::MIN);\n    let mut b_heap: BinaryHeap&lt;u64&gt; = BinaryHeap::new();\n\n    data.lines().fold(0,
        |acc, x| {\n        match x.trim() {\n            \"\" =&gt; {\n                b_heap.push(acc);\n                0\n            },\n            num
        =&gt; {\n                acc + num.parse::&lt;u64&gt;().unwrap()\n            }\n        }\n    });\n\n    sol.0
        = b_heap.pop().unwrap();\n    sol.1 = b_heap.pop().unwrap() + b_heap.pop().unwrap()
        + sol.0;\n    println!(\"0: {}\", sol.0);\n    println!(\"1: {}\", sol.1);\n    Ok(())\n}\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;In Rust,
        tried to be idiomatic&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;```rust\nuse aoc_core::read_file;\nuse
        std::collections::BinaryHeap;&lt;/p&gt;\n\n&lt;p&gt;fn main() -&amp;gt; Result&amp;lt;(),
        std::io::Error&amp;gt; {\n    let data = read_file(01).unwrap();\n    let
        mut sol: (u64, u64) = (u64::MIN, u64::MIN);\n    let mut b_heap: BinaryHeap&amp;lt;u64&amp;gt;
        = BinaryHeap::new();&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data.lines().fold(0,
        |acc, x| {\n    match x.trim() {\n        &amp;quot;&amp;quot; =&amp;gt; {\n            b_heap.push(acc);\n            0\n        },\n        num
        =&amp;gt; {\n            acc + num.parse::&amp;lt;u64&amp;gt;().unwrap()\n        }\n    }\n});\n\nsol.0
        = b_heap.pop().unwrap();\nsol.1 = b_heap.pop().unwrap() + b_heap.pop().unwrap()
        + sol.0;\nprintln!(&amp;quot;0: {}&amp;quot;, sol.0);\nprintln!(&amp;quot;1:
        {}&amp;quot;, sol.1);\nOk(())\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi42bx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi42bx", "created":
        1669910395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq6dac", "id": "iyq6dac", "parent_id":
        "t1_iyi42bx", "depth": 1, "children": ["iyq6dac"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi42o2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Rumel57",
        "can_mod_post": false, "created_utc": 1669910398.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4xi3n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Working on learning Clojure, I would very much like critiques on what I should
        clean up or where I''m not thinking like a clojurist.\n\n[Github Link](https://github.com/Rumel/advent-of-code-2022/blob/master/src/problems/problem_01.clj)\n\n    (ns
        problems.problem-01\n      \"Day 1: Calorie Counting\n       \n       Problem:
        https://adventofcode.com/2022/day/1\"\n      (:require [clojure.string :as
        str]))\n    \n    (defn get-calorie-totals\n      \"Take the elves calories
        and get the total per elf\"\n      [calories]\n      (map #(reduce + %) calories))\n    \n    (defn
        max-calories\n      \"Return the max calories\"\n      [calories]\n      (apply
        max calories))\n    \n    (defn convert-to-vec\n      \"Take a string and
        convert it to a vector of vector of numbers.\"\n      [s]\n      (let [lines
        (str/split-lines s)]\n        (loop [lines lines\n               ret-arr []\n               cur-arr
        []]\n          (if (empty? lines)\n            (conj ret-arr cur-arr)\n            (if
        (empty? (first lines))\n              (recur (rest lines) (conj ret-arr cur-arr)
        [])\n              (recur (rest lines) ret-arr (conj cur-arr (read-string
        (first lines)))))))))\n    \n    (defn top-three-calories\n      \"Return
        a vector of the top 3 calorie counts\"\n      [calorie-counts]\n      (take
        3 (sort &gt; calorie-counts)))\n    \n    (defn answer-a\n      \"Read the
        elves'' calories and return the max elf''s calories\"\n      [file]\n      (-&gt;
        file\n          slurp\n          convert-to-vec\n          get-calorie-totals\n          max-calories))\n    \n    (defn
        answer-b\n      \"Read the elves'' calories and return the max elf''s calories\"\n      [file]\n      (-&gt;
        file\n          slurp\n          convert-to-vec\n          get-calorie-totals\n          top-three-calories\n          (as-&gt;
        calories (reduce + calories))))\n    \n    (defn answer []\n      (println
        \"01: A:\" (answer-a \"data/problem-01-input.txt\"))\n      (println \"01:
        B:\" (answer-b \"data/problem-01-input.txt\")))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Working on learning Clojure, I would very much like
        critiques on what I should clean up or where I&amp;#39;m not thinking like
        a clojurist.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Rumel/advent-of-code-2022/blob/master/src/problems/problem_01.clj\"&gt;Github
        Link&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns problems.problem-01\n  &amp;quot;Day
        1: Calorie Counting\n\n   Problem: https://adventofcode.com/2022/day/1&amp;quot;\n  (:require
        [clojure.string :as str]))\n\n(defn get-calorie-totals\n  &amp;quot;Take the
        elves calories and get the total per elf&amp;quot;\n  [calories]\n  (map #(reduce
        + %) calories))\n\n(defn max-calories\n  &amp;quot;Return the max calories&amp;quot;\n  [calories]\n  (apply
        max calories))\n\n(defn convert-to-vec\n  &amp;quot;Take a string and convert
        it to a vector of vector of numbers.&amp;quot;\n  [s]\n  (let [lines (str/split-lines
        s)]\n    (loop [lines lines\n           ret-arr []\n           cur-arr []]\n      (if
        (empty? lines)\n        (conj ret-arr cur-arr)\n        (if (empty? (first
        lines))\n          (recur (rest lines) (conj ret-arr cur-arr) [])\n          (recur
        (rest lines) ret-arr (conj cur-arr (read-string (first lines)))))))))\n\n(defn
        top-three-calories\n  &amp;quot;Return a vector of the top 3 calorie counts&amp;quot;\n  [calorie-counts]\n  (take
        3 (sort &amp;gt; calorie-counts)))\n\n(defn answer-a\n  &amp;quot;Read the
        elves&amp;#39; calories and return the max elf&amp;#39;s calories&amp;quot;\n  [file]\n  (-&amp;gt;
        file\n      slurp\n      convert-to-vec\n      get-calorie-totals\n      max-calories))\n\n(defn
        answer-b\n  &amp;quot;Read the elves&amp;#39; calories and return the max
        elf&amp;#39;s calories&amp;quot;\n  [file]\n  (-&amp;gt; file\n      slurp\n      convert-to-vec\n      get-calorie-totals\n      top-three-calories\n      (as-&amp;gt;
        calories (reduce + calories))))\n\n(defn answer []\n  (println &amp;quot;01:
        A:&amp;quot; (answer-a &amp;quot;data/problem-01-input.txt&amp;quot;))\n  (println
        &amp;quot;01: B:&amp;quot; (answer-b &amp;quot;data/problem-01-input.txt&amp;quot;)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi42o2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi42o2", "created":
        1669910398.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyimmc4", "id": "iyimmc4", "parent_id":
        "t1_iyi42o2", "depth": 1, "children": ["iyimmc4"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi43qa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fsed123",
        "can_mod_post": false, "created_utc": 1669910410.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_2lwv2ppr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[python3/rust] 3k/3k\n\n  \npretty compact solution, using only std function  \nhttps://github.com/Fadi88/AoC/tree/master/2022/day01",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[python3/rust] 3k/3k&lt;/p&gt;\n\n&lt;p&gt;pretty
        compact solution, using only std function&lt;br/&gt;\n&lt;a href=\"https://github.com/Fadi88/AoC/tree/master/2022/day01\"&gt;https://github.com/Fadi88/AoC/tree/master/2022/day01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi43qa/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi43qa", "created":
        1669910410.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670150095.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi58dz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "neur0sys",
        "can_mod_post": false, "created_utc": 1669910869.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_7hyvf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First try in [Joy](https://en.wikipedia.org/wiki/Joy_(programming_language)).
        Download the interpreter [here](https://www.kevinalbrecht.com/code/joy-mirror/joy.tar.gz).
        Edit globals.h to increase memory.\n\nPart2\n\n    basic-libload.\n\n    DEFINE\n      no-nl        ==
        [dup 10 = swap 13 = or not] filter;\n      readlines    == []\n                      \"1.txt\"
        \"ro\" fopen\n                      [feof not] [fgets no-nl rolldown cons
        swap] while\n                      fclose reverse;\n      toint        ==
        0 [ord ''0 ord - swap 10 * +] fold;\n      zap          == unswons reverse
        rolldown swons reverse swons;\n      tuck         == [] swons;\n      group-bucket
        == [[]] [[dup \"\" =] [swap tuck] [swap zap] ifte] fold;\n      sum          ==
        0 [toint +] fold;\n      sum-last-3   == reverse 3 [uncons] times pop + +;\n      solve        ==
        readlines group-bucket [sum] map qsort sum-last-3;\n    .\n\n    solve.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First try in &lt;a href=\"https://en.wikipedia.org/wiki/Joy_(programming_language\"&gt;Joy&lt;/a&gt;).
        Download the interpreter &lt;a href=\"https://www.kevinalbrecht.com/code/joy-mirror/joy.tar.gz\"&gt;here&lt;/a&gt;.
        Edit globals.h to increase memory.&lt;/p&gt;\n\n&lt;p&gt;Part2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;basic-libload.\n\nDEFINE\n  no-nl        ==
        [dup 10 = swap 13 = or not] filter;\n  readlines    == []\n                  &amp;quot;1.txt&amp;quot;
        &amp;quot;ro&amp;quot; fopen\n                  [feof not] [fgets no-nl rolldown
        cons swap] while\n                  fclose reverse;\n  toint        == 0 [ord
        &amp;#39;0 ord - swap 10 * +] fold;\n  zap          == unswons reverse rolldown
        swons reverse swons;\n  tuck         == [] swons;\n  group-bucket == [[]]
        [[dup &amp;quot;&amp;quot; =] [swap tuck] [swap zap] ifte] fold;\n  sum          ==
        0 [toint +] fold;\n  sum-last-3   == reverse 3 [uncons] times pop + +;\n  solve        ==
        readlines group-bucket [sum] map qsort sum-last-3;\n.\n\nsolve.\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi58dz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi58dz", "created":
        1669910869.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq60cz", "id": "iyq60cz", "parent_id":
        "t1_iyi58dz", "depth": 1, "children": ["iyq60cz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670071992.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi5lfb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "joshbduncan",
        "can_mod_post": false, "created_utc": 1669911019.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_9t2qo339", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\n\n\n    data = open(\"day1.in\").read()\n    totals = [sum([int(c)
        for c in elf.split(\"\\n\")]) for elf in data.strip().split(\"\\n\\n\")]\n    print(f\"Part
        1: {max(totals)}\")\n    print(f\"Part 2: {sum(sorted(totals, reverse=True)[:3])}\")",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data
        = open(&amp;quot;day1.in&amp;quot;).read()\ntotals = [sum([int(c) for c in
        elf.split(&amp;quot;\\n&amp;quot;)]) for elf in data.strip().split(&amp;quot;\\n\\n&amp;quot;)]\nprint(f&amp;quot;Part
        1: {max(totals)}&amp;quot;)\nprint(f&amp;quot;Part 2: {sum(sorted(totals,
        reverse=True)[:3])}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi5lfb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi5lfb", "created":
        1669911019.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyq5zyj", "id": "iyq5zyj", "parent_id":
        "t1_iyi5lfb", "depth": 1, "children": ["iyq5zyj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi5mb6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Sebbern",
        "can_mod_post": false, "created_utc": 1669911029.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_5xuh8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java this year: https://github.com/Sebbern/Advent-of-Code/blob/master/2022/day01/day01_2.java\n\n    import
        java.io.BufferedReader;\n    import java.io.File;\n    import java.io.FileNotFoundException;\n    import
        java.io.FileReader;\n    import java.io.IOException;\n    import java.util.ArrayList;\n\n    public
        class day01_2 {\n        public static void main(String[] args) throws IOException,
        FileNotFoundException{\n            File inputTxt = new File(\"2022\\\\day01\\\\input.txt\");\n            BufferedReader
        input = new BufferedReader(new FileReader(inputTxt));\n            String
        string;\n            int caloriesFirst = 0, caloriesSecond = 0, caloriesThird
        = 0;\n            ArrayList&lt;Integer&gt; caloriesList = new ArrayList&lt;&gt;();\n\n            while
        ((string = input.readLine()) != null){\n                if (string.isEmpty()){\n                    caloriesList.add(caloriesFirst);\n                    caloriesFirst
        = 0;\n                }\n                else {\n                    caloriesFirst
        += Integer.parseInt(string);\n                }\n            }\n            input.close();\n\n            for
        (int i = 0; i&lt;caloriesList.size(); i++){\n                if (caloriesFirst
        &lt; caloriesList.get(i)){\n                    caloriesThird = caloriesSecond;\n                    caloriesSecond
        = caloriesFirst;\n                    caloriesFirst = caloriesList.get(i);\n                }\n                else
        if (caloriesFirst &gt; caloriesList.get(i) &amp;&amp; caloriesSecond &lt;
        caloriesList.get(i)){\n                    caloriesThird = caloriesSecond;\n                    caloriesSecond
        = caloriesList.get(i);\n                }\n                else if (caloriesFirst
        &gt; caloriesList.get(i) &amp;&amp; caloriesSecond &gt; caloriesList.get(i)
        &amp;&amp; caloriesThird &lt; caloriesList.get(i))\n                {\n                    caloriesThird
        = caloriesList.get(i);\n                }\n            }\n            System.out.println(caloriesFirst);\n            System.out.println(caloriesFirst+caloriesSecond+caloriesThird);\n        }\n    }\n\nTips
        appreciated", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java
        this year: &lt;a href=\"https://github.com/Sebbern/Advent-of-Code/blob/master/2022/day01/day01_2.java\"&gt;https://github.com/Sebbern/Advent-of-Code/blob/master/2022/day01/day01_2.java&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport
        java.io.FileReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\n\npublic
        class day01_2 {\n    public static void main(String[] args) throws IOException,
        FileNotFoundException{\n        File inputTxt = new File(&amp;quot;2022\\\\day01\\\\input.txt&amp;quot;);\n        BufferedReader
        input = new BufferedReader(new FileReader(inputTxt));\n        String string;\n        int
        caloriesFirst = 0, caloriesSecond = 0, caloriesThird = 0;\n        ArrayList&amp;lt;Integer&amp;gt;
        caloriesList = new ArrayList&amp;lt;&amp;gt;();\n\n        while ((string
        = input.readLine()) != null){\n            if (string.isEmpty()){\n                caloriesList.add(caloriesFirst);\n                caloriesFirst
        = 0;\n            }\n            else {\n                caloriesFirst +=
        Integer.parseInt(string);\n            }\n        }\n        input.close();\n\n        for
        (int i = 0; i&amp;lt;caloriesList.size(); i++){\n            if (caloriesFirst
        &amp;lt; caloriesList.get(i)){\n                caloriesThird = caloriesSecond;\n                caloriesSecond
        = caloriesFirst;\n                caloriesFirst = caloriesList.get(i);\n            }\n            else
        if (caloriesFirst &amp;gt; caloriesList.get(i) &amp;amp;&amp;amp; caloriesSecond
        &amp;lt; caloriesList.get(i)){\n                caloriesThird = caloriesSecond;\n                caloriesSecond
        = caloriesList.get(i);\n            }\n            else if (caloriesFirst
        &amp;gt; caloriesList.get(i) &amp;amp;&amp;amp; caloriesSecond &amp;gt; caloriesList.get(i)
        &amp;amp;&amp;amp; caloriesThird &amp;lt; caloriesList.get(i))\n            {\n                caloriesThird
        = caloriesList.get(i);\n            }\n        }\n        System.out.println(caloriesFirst);\n        System.out.println(caloriesFirst+caloriesSecond+caloriesThird);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Tips
        appreciated&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi5mb6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi5mb6", "created":
        1669911029.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi73mk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "professoreyl",
        "can_mod_post": false, "created_utc": 1669911634.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_dzucz4v2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Javascript\n\nPart 1\n\n    Math.max(...input.split(\"\\n\\n\").map((lines)
        =&gt; Number(lines.split(\"\\n\").reduce((a,b) =&gt; Number(a)+Number(b)))))\n\nPart
        2\n\n    input.split(\"\\n\\n\").map((lines) =&gt; Number(lines.split(\"\\n\").reduce((a,b)
        =&gt; Number(a)+Number(b)))).sort((a,b) =&gt; b-a).slice(0,3).reduce((a,b)
        =&gt; a+b)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Javascript&lt;/h2&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Math.max(...input.split(&amp;quot;\\n\\n&amp;quot;).map((lines)
        =&amp;gt; Number(lines.split(&amp;quot;\\n&amp;quot;).reduce((a,b) =&amp;gt;
        Number(a)+Number(b)))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input.split(&amp;quot;\\n\\n&amp;quot;).map((lines)
        =&amp;gt; Number(lines.split(&amp;quot;\\n&amp;quot;).reduce((a,b) =&amp;gt;
        Number(a)+Number(b)))).sort((a,b) =&amp;gt; b-a).slice(0,3).reduce((a,b) =&amp;gt;
        a+b)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi73mk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi73mk", "created":
        1669911634.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669912621.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyi8c85", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "No-Time-7643",
        "can_mod_post": false, "created_utc": 1669912134.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_t40ntyti", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Hey folks, happy to be doing AOC in Racket this year\n\nThe first part
        can be gotten by changing the arg in take-right to 1\n\nhttps://github.com/dr-neptune/advent-of-code-22/blob/master/day1.rkt",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Hey folks, happy to
        be doing AOC in Racket this year&lt;/h1&gt;\n\n&lt;p&gt;The first part can
        be gotten by changing the arg in take-right to 1&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/dr-neptune/advent-of-code-22/blob/master/day1.rkt\"&gt;https://github.com/dr-neptune/advent-of-code-22/blob/master/day1.rkt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi8c85/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi8c85", "created":
        1669912134.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi9lor",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dshookowsky",
        "can_mod_post": false, "created_utc": 1669912647.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_nxl4s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in C++\n\n[https://github.com/dshookowsky/adventOfCode/blob/master/2022/1/Day1/Day1/Day1.cpp](https://github.com/dshookowsky/adventOfCode/blob/master/2022/1/Day1/Day1/Day1.cpp)\n\nI''m
        trying to make use of modern C++. I''ll take any pointers on improving it.
        Not necessarily golfing, just making it more idiomatic.  (e.g., The while
        loop feels crusty and I''m sure there''s a better way of doing that).", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in C++&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/dshookowsky/adventOfCode/blob/master/2022/1/Day1/Day1/Day1.cpp\"&gt;https://github.com/dshookowsky/adventOfCode/blob/master/2022/1/Day1/Day1/Day1.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        trying to make use of modern C++. I&amp;#39;ll take any pointers on improving
        it. Not necessarily golfing, just making it more idiomatic.  (e.g., The while
        loop feels crusty and I&amp;#39;m sure there&amp;#39;s a better way of doing
        that).&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi9lor/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi9lor", "created":
        1669912647.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyimpg7", "id": "iyimpg7", "parent_id":
        "t1_iyi9lor", "depth": 1, "children": ["iyimpg7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyid8ah",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vitothelegend",
        "can_mod_post": false, "created_utc": 1669914028.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_wvmop", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Scratch  \n\n\n[https://prnt.sc/iAWuqOUAyi21](https://prnt.sc/iAWuqOUAyi21)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Scratch  &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://prnt.sc/iAWuqOUAyi21\"&gt;https://prnt.sc/iAWuqOUAyi21&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyid8ah/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyid8ah", "created":
        1669914028.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyids34",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "skawid",
        "can_mod_post": false, "created_utc": 1669914246.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_s25k4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Go!\n\n\tpackage main\n\n\timport (\n\t\t\"bufio\"\n\t\t\"fmt\"\n\t\t\"os\"\n\t\t\"strconv\"\n\t)\n\n\tfunc
        main() {\n\t\tinputFile, _ := os.Open(\"input.txt\")\n\t\tdefer inputFile.Close()\n\n\t\tlines
        := bufio.NewScanner(inputFile)\n\n\t\tcalorieCounts := []int{}\n\t\tcurrentElfCount
        := 0\n\t\tfor lines.Scan() {\n\t\t\tline := lines.Text()\n\n\t\t\tif line
        == \"\" {\n\t\t\t\tcalorieCounts = append(calorieCounts, currentElfCount)\n\t\t\t\tcurrentElfCount
        = 0\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tcalories, _ := strconv.Atoi(line)\n\t\t\tcurrentElfCount
        += calories\n\t\t}\n\n\t\tcalorieCounts = append(calorieCounts, currentElfCount)\n\n\t\tfirst
        := 0\n\t\tsecond := 0\n\t\tthird := 0\n\t\tfor _, calorieCount := range calorieCounts
        {\n\t\t\tif calorieCount &gt; third {\n\t\t\t\tthird = calorieCount\n\t\t\t}\n\n\t\t\tif
        calorieCount &gt; second {\n\t\t\t\tsecond, third = calorieCount, second\n\t\t\t}\n\n\t\t\tif
        calorieCount &gt; first {\n\t\t\t\tfirst, second = calorieCount, first\n\t\t\t}\n\t\t}\n\n\t\tfmt.Println(first)\n\t\tfmt.Println(second)\n\t\tfmt.Println(third)\n\n\t\tfmt.Println(first
        + second + third)\n\t}", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n    &amp;quot;bufio&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;strconv&amp;quot;\n)\n\nfunc
        main() {\n    inputFile, _ := os.Open(&amp;quot;input.txt&amp;quot;)\n    defer
        inputFile.Close()\n\n    lines := bufio.NewScanner(inputFile)\n\n    calorieCounts
        := []int{}\n    currentElfCount := 0\n    for lines.Scan() {\n        line
        := lines.Text()\n\n        if line == &amp;quot;&amp;quot; {\n            calorieCounts
        = append(calorieCounts, currentElfCount)\n            currentElfCount = 0\n            continue\n        }\n\n        calories,
        _ := strconv.Atoi(line)\n        currentElfCount += calories\n    }\n\n    calorieCounts
        = append(calorieCounts, currentElfCount)\n\n    first := 0\n    second :=
        0\n    third := 0\n    for _, calorieCount := range calorieCounts {\n        if
        calorieCount &amp;gt; third {\n            third = calorieCount\n        }\n\n        if
        calorieCount &amp;gt; second {\n            second, third = calorieCount,
        second\n        }\n\n        if calorieCount &amp;gt; first {\n            first,
        second = calorieCount, first\n        }\n    }\n\n    fmt.Println(first)\n    fmt.Println(second)\n    fmt.Println(third)\n\n    fmt.Println(first
        + second + third)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyids34/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyids34", "created": 1669914246.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iyizds4", "id": "iyizds4", "parent_id": "t1_iyids34", "depth": 1, "children":
        ["iyizds4"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669916061.0,
        "mod_reason_by": null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyigqnw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "skitlex",
        "can_mod_post": false, "created_utc": 1669915388.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_er08r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java 17 solution: [github](https://github.com/CasvanDongen/advent-of-code-2022/blob/master/src/main/java/nl/casvandongen/adventofcode/challenges/Day1.java)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java 17 solution: &lt;a
        href=\"https://github.com/CasvanDongen/advent-of-code-2022/blob/master/src/main/java/nl/casvandongen/adventofcode/challenges/Day1.java\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyigqnw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyigqnw", "created":
        1669915388.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyinhl9", "id": "iyinhl9", "parent_id":
        "t1_iyigqnw", "depth": 1, "children": ["iyinhl9"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670063391.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyihtt5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jjjsevon",
        "can_mod_post": false, "created_utc": 1669915804.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4mxleqfi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript / Node\n\nAlmost forgot AoC for this year, quickly hacked together
        the [Code](https://github.com/jabis/aoc2022) before it was past midnight.\nbasic
        gist of code is: \n\n    \n    const {day1} = require(''./01/day1'');\n    (async
        ()=&gt;{\n      let elves = await day1();\n      let part1 = Math.max(...Array.from(elves.values()).map(t=&gt;t.t));\n      console.log(\"part
        1 total\", part1);\n      let top3 = Array.from(elves.values()).sort((a,b)=&gt;{
        return a.t - b.t }).reverse().slice(0,3);\n      let part2 = top3.map(t=&gt;t.t).reduce((a,b)=&gt;{return
        a+b},0);\n      console.log(\"part 2 total\", part2);\n    })()\n\nAnother
        10 loc in the day1 require, mostly reading of the input, and some splittery,
        number format, and unnecessary storing of elves properties into a map, while
        expecting something more to do with elves individual snacks in part 2.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript / Node&lt;/p&gt;\n\n&lt;p&gt;Almost
        forgot AoC for this year, quickly hacked together the &lt;a href=\"https://github.com/jabis/aoc2022\"&gt;Code&lt;/a&gt;
        before it was past midnight.\nbasic gist of code is: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        {day1} = require(&amp;#39;./01/day1&amp;#39;);\n(async ()=&amp;gt;{\n  let
        elves = await day1();\n  let part1 = Math.max(...Array.from(elves.values()).map(t=&amp;gt;t.t));\n  console.log(&amp;quot;part
        1 total&amp;quot;, part1);\n  let top3 = Array.from(elves.values()).sort((a,b)=&amp;gt;{
        return a.t - b.t }).reverse().slice(0,3);\n  let part2 = top3.map(t=&amp;gt;t.t).reduce((a,b)=&amp;gt;{return
        a+b},0);\n  console.log(&amp;quot;part 2 total&amp;quot;, part2);\n})()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Another
        10 loc in the day1 require, mostly reading of the input, and some splittery,
        number format, and unnecessary storing of elves properties into a map, while
        expecting something more to do with elves individual snacks in part 2.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyihtt5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyihtt5", "created":
        1669915804.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyq5u0t", "id": "iyq5u0t", "parent_id":
        "t1_iyihtt5", "depth": 1, "children": ["iyq5u0t"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyio5ot",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Wraldpyk",
        "can_mod_post": false, "created_utc": 1669918267.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_627s1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript!\n\nhttps://github.com/Topener/adventofcode/blob/2022/day1/program.js",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Topener/adventofcode/blob/2022/day1/program.js\"&gt;https://github.com/Topener/adventofcode/blob/2022/day1/program.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyio5ot/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyio5ot", "created":
        1669918267.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669921123.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyiuo14", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "0xDEF3C8ED",
        "can_mod_post": false, "created_utc": 1669920780.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_up0zldd4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Clojure for a second year in a row, hopefully this time a bit more idiomatic.\n\nlib.clj:\n\n    (ns
        clj-aoc2022.lib\n       (:require [clojure.java.io :as io]))\n      \n    (defprotocol
        Parse\n      (read [this])\n      (-&gt;data [this]))\n    \n    (defn default-read-fn
        [short-fname]\n      (-&gt;&gt; short-fname\n           io/resource\n           slurp))\n\nday1.clj:\n\n    (ns
        clj-aoc2022.day1\n      (:require [clj-aoc2022.lib :as l]\n                [clojure.string
        :as str]\n                [clojure.core.reducers :as r]))\n    \n    (defrecord
        ElfLists [input-file]\n      l/Parse\n      (read [this] (l/default-read-fn
        (:input-file this)))\n      (-&gt;data [this]\n        (-&gt;&gt; (str/split
        (l/read this) #\"\\n\\n\")\n             (map #(str/split % #\"\\n\"))\n             (map
        #(map (fn [i] (Integer/parseInt i)) %)))))\n    \n    (defn top-n [coll n]\n      (let
        [sorted (into [] (sort coll))\n            len (count sorted)]\n        (-&gt;&gt;
        (dec len)\n             (iterate dec)\n             (take n)\n             (map
        #(nth sorted %)))))\n    \n    (defn solve []\n      (let [item-calorie-lists
        (l/-&gt;data (-&gt;ElfLists \"day1.txt\"))\n            calorie-totals (-&gt;&gt;
        item-calorie-lists\n                                (r/map #(reduce + %))\n                                (into
        []))]\n        (time (do\n                (println \"  Part 1:\" (apply max
        calorie-totals))\n                (println \"  Part 2:\" (reduce + (top-n
        calorie-totals 3)))))))\n\nOutput:\n\n    Day 1:\n      Part 1: 73211\n      Part
        2: 213958\n    \"Elapsed time: 2.351413 msecs\"", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Clojure for a second year in a row, hopefully this
        time a bit more idiomatic.&lt;/p&gt;\n\n&lt;p&gt;lib.clj:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns
        clj-aoc2022.lib\n   (:require [clojure.java.io :as io]))\n\n(defprotocol Parse\n  (read
        [this])\n  (-&amp;gt;data [this]))\n\n(defn default-read-fn [short-fname]\n  (-&amp;gt;&amp;gt;
        short-fname\n       io/resource\n       slurp))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;day1.clj:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns
        clj-aoc2022.day1\n  (:require [clj-aoc2022.lib :as l]\n            [clojure.string
        :as str]\n            [clojure.core.reducers :as r]))\n\n(defrecord ElfLists
        [input-file]\n  l/Parse\n  (read [this] (l/default-read-fn (:input-file this)))\n  (-&amp;gt;data
        [this]\n    (-&amp;gt;&amp;gt; (str/split (l/read this) #&amp;quot;\\n\\n&amp;quot;)\n         (map
        #(str/split % #&amp;quot;\\n&amp;quot;))\n         (map #(map (fn [i] (Integer/parseInt
        i)) %)))))\n\n(defn top-n [coll n]\n  (let [sorted (into [] (sort coll))\n        len
        (count sorted)]\n    (-&amp;gt;&amp;gt; (dec len)\n         (iterate dec)\n         (take
        n)\n         (map #(nth sorted %)))))\n\n(defn solve []\n  (let [item-calorie-lists
        (l/-&amp;gt;data (-&amp;gt;ElfLists &amp;quot;day1.txt&amp;quot;))\n        calorie-totals
        (-&amp;gt;&amp;gt; item-calorie-lists\n                            (r/map
        #(reduce + %))\n                            (into []))]\n    (time (do\n            (println
        &amp;quot;  Part 1:&amp;quot; (apply max calorie-totals))\n            (println
        &amp;quot;  Part 2:&amp;quot; (reduce + (top-n calorie-totals 3)))))))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Day
        1:\n  Part 1: 73211\n  Part 2: 213958\n&amp;quot;Elapsed time: 2.351413 msecs&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiuo14/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiuo14", "created":
        1669920780.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyk2fri", "id": "iyk2fri", "parent_id":
        "t1_iyiuo14", "depth": 1, "children": ["iyk2fri"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669921563.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyivmd4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "n3buchadnezzar",
        "can_mod_post": false, "created_utc": 1669921148.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_kcivk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I am guessing this is very close to optimal regarding the algorithm. Really
        happy I figured it out. Will come back to solve this one in rust =)\n\n###
        Explanation\n\nWe _could_ have sorted the entire list of elves, but this is
        slow. E.g `O(n log n)`. Instead we attempt to get it done in a little over
        `O(n)`. The idea is to keep a sorted que of length `n` and check if the new
        value is lower than the weakest link in the que. If it is, we perform an `insertion
        sort`. \n\nThe insertion sort _could_ have been hardcoded for even more speed
        since we only need the top 3 contenders, however I feel a general insertion
        algorithm is nicer. Even if it is a little slower. \n\n### Code\n    import
        bisect\n    \n    from aocpy.utils.utilities import PathLike, as_integer,
        blank_line, readlines\n\n    def part_a(path: PathLike) -&gt; int:\n        \"\"\"Solves
        Advent of Code 2022 Day 01 part a\"\"\"\n        calories_per_elf = readlines(path,
        formater=as_integer, split_by=blank_line)\n        total_calories_per_elf
        = map(sum, calories_per_elf)\n        most_calories_carried = max(total_calories_per_elf)\n        return
        most_calories_carried\n    \n    \n    def part_b(path, length: int = 3) -&gt;
        int:\n        \"\"\"Solves Advent of Code 2022 Day 01 part b\"\"\"\n        calories_per_elf
        = readlines(path, formater=as_integer, split_by=blank_line)\n        total_calories_per_elf
        = map(sum, calories_per_elf)\n    \n        top_carriers = [next(total_calories_per_elf,
        0) for _ in range(length)]\n        top_carriers.sort(reverse=True)\n        weakest_link
        = top_carriers[-1]\n        for calories_per_elf in total_calories_per_elf:\n            if
        calories_per_elf &gt; weakest_link:\n                # In Python 3.10, insort
        gain a key parameter, this allows us to use\n                # a reversed
        sorted list. This makes it possible to pop lowest value\n                bisect.insort(top_carriers,
        calories_per_elf, key=lambda x: -1 * x)\n                weakest_link = top_carriers.pop()\n        return
        sum(top_carriers)\n\nThe library used contains\n\n    import re\n    from
        pathlib import Path\n    from typing import Annotated, Callable, Generator,
        Optional, TypeVar\n    \n    PathLike = Annotated[Path | str, \"A Pathlike
        object\"]\n    \n    \n    def as_integer(text: str) -&gt; int:\n        \"\"\"Returns
        the inputed text as an integer\"\"\"\n        try:\n            return int(text)\n        except
        ValueError:\n            pass\n        match = re.search(r\"\\d+\", text)\n        if
        match is not None:\n            return int(match.group(0))\n        raise
        ValueError(f\"Unable to convert {text} to integer!\")\n    \n    \n    def
        blank_line(line: str):\n        return line.strip() == \"\"\n    \n    \n    T
        = TypeVar(\"T\")\n    \n    \n    def readlines(\n        path: str | Path,\n        formater:
        Optional[Callable[[str], T]] = None,\n        split_by: Optional[Callable[[str],
        bool]] = None,\n    ) -&gt; Generator[list[T], None, None]:\n        \"\"\"Read
        lines from a file, formating and splitting as needed\n    \n        Args:\n            path:
        A filename giving our input data\n            formated: A function (for instance:
        int) formating our values\n            split_by: split our lines based on
        some condition\n    \n        Yields:\n            List[T]: A list of formated
        values\n        \"\"\"\n        with open(path, \"r\") as f:\n            group
        = []\n            for line in map(str.strip, f):\n                if split_by
        is not None and split_by(line):\n                    yield group\n                    group
        = []\n                    continue\n                formated_line = line\n                if
        formater is not None:\n                    formated_line = formater(line)\n                group.append(formated_line)\n        if
        group:\n            yield group", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I am guessing this is very close to optimal regarding
        the algorithm. Really happy I figured it out. Will come back to solve this
        one in rust =)&lt;/p&gt;\n\n&lt;h3&gt;Explanation&lt;/h3&gt;\n\n&lt;p&gt;We
        &lt;em&gt;could&lt;/em&gt; have sorted the entire list of elves, but this
        is slow. E.g &lt;code&gt;O(n log n)&lt;/code&gt;. Instead we attempt to get
        it done in a little over &lt;code&gt;O(n)&lt;/code&gt;. The idea is to keep
        a sorted que of length &lt;code&gt;n&lt;/code&gt; and check if the new value
        is lower than the weakest link in the que. If it is, we perform an &lt;code&gt;insertion
        sort&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;The insertion sort &lt;em&gt;could&lt;/em&gt;
        have been hardcoded for even more speed since we only need the top 3 contenders,
        however I feel a general insertion algorithm is nicer. Even if it is a little
        slower. &lt;/p&gt;\n\n&lt;h3&gt;Code&lt;/h3&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        bisect\n\nfrom aocpy.utils.utilities import PathLike, as_integer, blank_line,
        readlines\n\ndef part_a(path: PathLike) -&amp;gt; int:\n    &amp;quot;&amp;quot;&amp;quot;Solves
        Advent of Code 2022 Day 01 part a&amp;quot;&amp;quot;&amp;quot;\n    calories_per_elf
        = readlines(path, formater=as_integer, split_by=blank_line)\n    total_calories_per_elf
        = map(sum, calories_per_elf)\n    most_calories_carried = max(total_calories_per_elf)\n    return
        most_calories_carried\n\n\ndef part_b(path, length: int = 3) -&amp;gt; int:\n    &amp;quot;&amp;quot;&amp;quot;Solves
        Advent of Code 2022 Day 01 part b&amp;quot;&amp;quot;&amp;quot;\n    calories_per_elf
        = readlines(path, formater=as_integer, split_by=blank_line)\n    total_calories_per_elf
        = map(sum, calories_per_elf)\n\n    top_carriers = [next(total_calories_per_elf,
        0) for _ in range(length)]\n    top_carriers.sort(reverse=True)\n    weakest_link
        = top_carriers[-1]\n    for calories_per_elf in total_calories_per_elf:\n        if
        calories_per_elf &amp;gt; weakest_link:\n            # In Python 3.10, insort
        gain a key parameter, this allows us to use\n            # a reversed sorted
        list. This makes it possible to pop lowest value\n            bisect.insort(top_carriers,
        calories_per_elf, key=lambda x: -1 * x)\n            weakest_link = top_carriers.pop()\n    return
        sum(top_carriers)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The library used
        contains&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import re\nfrom pathlib import
        Path\nfrom typing import Annotated, Callable, Generator, Optional, TypeVar\n\nPathLike
        = Annotated[Path | str, &amp;quot;A Pathlike object&amp;quot;]\n\n\ndef as_integer(text:
        str) -&amp;gt; int:\n    &amp;quot;&amp;quot;&amp;quot;Returns the inputed
        text as an integer&amp;quot;&amp;quot;&amp;quot;\n    try:\n        return
        int(text)\n    except ValueError:\n        pass\n    match = re.search(r&amp;quot;\\d+&amp;quot;,
        text)\n    if match is not None:\n        return int(match.group(0))\n    raise
        ValueError(f&amp;quot;Unable to convert {text} to integer!&amp;quot;)\n\n\ndef
        blank_line(line: str):\n    return line.strip() == &amp;quot;&amp;quot;\n\n\nT
        = TypeVar(&amp;quot;T&amp;quot;)\n\n\ndef readlines(\n    path: str | Path,\n    formater:
        Optional[Callable[[str], T]] = None,\n    split_by: Optional[Callable[[str],
        bool]] = None,\n) -&amp;gt; Generator[list[T], None, None]:\n    &amp;quot;&amp;quot;&amp;quot;Read
        lines from a file, formating and splitting as needed\n\n    Args:\n        path:
        A filename giving our input data\n        formated: A function (for instance:
        int) formating our values\n        split_by: split our lines based on some
        condition\n\n    Yields:\n        List[T]: A list of formated values\n    &amp;quot;&amp;quot;&amp;quot;\n    with
        open(path, &amp;quot;r&amp;quot;) as f:\n        group = []\n        for line
        in map(str.strip, f):\n            if split_by is not None and split_by(line):\n                yield
        group\n                group = []\n                continue\n            formated_line
        = line\n            if formater is not None:\n                formated_line
        = formater(line)\n            group.append(formated_line)\n    if group:\n        yield
        group\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyivmd4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyivmd4", "created":
        1669921148.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyixwn5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Late to the party with some very naughty Python. \n\n    from
        pathlib import Path\n    p = Path(\"input.txt\")\n        \n    sorted_sums
        = sorted(map(sum, map(lambda x : map(int, x.strip().split(''\\n'')),\n                        p.read_text().split(''\\n\\n''))))\n    \n    print(sorted_sums[-1])          #
        Part 1\n    print(sum(sorted_sums[-3:]))    # Part 2", "awarders": [], "downs":
        0, "author_flair_css_class": null, "name": "t1_iyixwn5", "collapsed": false,
        "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Late
        to the party with some very naughty Python. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        pathlib import Path\np = Path(&amp;quot;input.txt&amp;quot;)\n\nsorted_sums
        = sorted(map(sum, map(lambda x : map(int, x.strip().split(&amp;#39;\\n&amp;#39;)),\n                    p.read_text().split(&amp;#39;\\n\\n&amp;#39;))))\n\nprint(sorted_sums[-1])          #
        Part 1\nprint(sum(sorted_sums[-3:]))    # Part 2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyixwn5/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669922050.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669922050.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670165886.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj6a9m", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lehpunisher",
        "can_mod_post": false, "created_utc": 1669925330.0, "send_replies": true,
        "parent_id": "t1_iyixwn5", "score": 3, "author_fullname": "t2_7z0scen", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I like your creativity of mapping a lambda instead of using a loop! Also
        if you''d like to make it even \"naughtier\", here''s some unsolicited shrinking
        tips\n\n* Remove `.strip()` as `int()` behaves the same even with excess whitespace.\n*
        Remove the argument to `.split(''\\n'')` as the default split separator is
        any whitespace character.\n* Replace use of Path with `open(''input.txt'').read()`
        (allows you to remove the import, has a shorter method name, and is the more
        conventional Python approach)\n* Remove the space after `lambda x` and before
        `colon` (nitpick which conforms to conventional Python lambda formatting).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like your creativity
        of mapping a lambda instead of using a loop! Also if you&amp;#39;d like to
        make it even &amp;quot;naughtier&amp;quot;, here&amp;#39;s some unsolicited
        shrinking tips&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Remove &lt;code&gt;.strip()&lt;/code&gt;
        as &lt;code&gt;int()&lt;/code&gt; behaves the same even with excess whitespace.&lt;/li&gt;\n&lt;li&gt;Remove
        the argument to &lt;code&gt;.split(&amp;#39;\\n&amp;#39;)&lt;/code&gt; as
        the default split separator is any whitespace character.&lt;/li&gt;\n&lt;li&gt;Replace
        use of Path with &lt;code&gt;open(&amp;#39;input.txt&amp;#39;).read()&lt;/code&gt;
        (allows you to remove the import, has a shorter method name, and is the more
        conventional Python approach)&lt;/li&gt;\n&lt;li&gt;Remove the space after
        &lt;code&gt;lambda x&lt;/code&gt; and before &lt;code&gt;colon&lt;/code&gt;
        (nitpick which conforms to conventional Python lambda formatting).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj6a9m/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj6a9m", "created":
        1669925330.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyq555d", "id": "iyq555d", "parent_id":
        "t1_iyj6a9m", "depth": 2, "children": ["iyq555d", "iyj6knz", "iyjwnik"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyizg5x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dedolent",
        "can_mod_post": false, "created_utc": 1669922661.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_7v9xysyn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\nhow do you all manage to copy and paste into reddit? it always
        breaks everything for me? i''m on firefox (though i hear it''s a problem on
        other browsers). i''ve tried pasting without formatting, tried saving to a
        plain text file and copying that, neither worked.\n\nanyways, while i''m not
        good enough to do the later days, in the meantime i have fun with my little
        recursive functions in :) \n\none thing that i wanted to do was to keep sorting
        to a minimum; no way i wanted to sort the entire input since all i cared about
        was the top 3. so i only kept track of whether the current group total was
        greater than any one of the current top 3, inserting the new number at its
        index if it was, discarding it otherwise.\n\n    f = open(\"inputs/day1.txt\")\n    groups
        = [0, 0, 0]\n    highest = 0\n    current = 0\n    \n    \n    def rank(i,
        t):\n        if i &gt;= 2:\n            return\n    \n        if t &gt; groups[i]:\n            groups.insert(i,
        t)\n            groups.pop()\n            return\n    \n        i += 1\n        return
        rank(i, t)\n    \n    \n    for line in f:\n        if line != \"\\n\":\n            current
        += int(line)\n        else:\n            rank(0, current)\n            current
        = 0\n    \n    print(sum(groups))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;p&gt;how do you all manage
        to copy and paste into reddit? it always breaks everything for me? i&amp;#39;m
        on firefox (though i hear it&amp;#39;s a problem on other browsers). i&amp;#39;ve
        tried pasting without formatting, tried saving to a plain text file and copying
        that, neither worked.&lt;/p&gt;\n\n&lt;p&gt;anyways, while i&amp;#39;m not
        good enough to do the later days, in the meantime i have fun with my little
        recursive functions in :) &lt;/p&gt;\n\n&lt;p&gt;one thing that i wanted to
        do was to keep sorting to a minimum; no way i wanted to sort the entire input
        since all i cared about was the top 3. so i only kept track of whether the
        current group total was greater than any one of the current top 3, inserting
        the new number at its index if it was, discarding it otherwise.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f
        = open(&amp;quot;inputs/day1.txt&amp;quot;)\ngroups = [0, 0, 0]\nhighest =
        0\ncurrent = 0\n\n\ndef rank(i, t):\n    if i &amp;gt;= 2:\n        return\n\n    if
        t &amp;gt; groups[i]:\n        groups.insert(i, t)\n        groups.pop()\n        return\n\n    i
        += 1\n    return rank(i, t)\n\n\nfor line in f:\n    if line != &amp;quot;\\n&amp;quot;:\n        current
        += int(line)\n    else:\n        rank(0, current)\n        current = 0\n\nprint(sum(groups))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyizg5x/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyizg5x", "created":
        1669922661.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq4x0z", "id": "iyq4x0z", "parent_id":
        "t1_iyizg5x", "depth": 1, "children": ["iyq4x0z"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669923266.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj01y1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Acrobatic-Bicycle969",
        "can_mod_post": false, "created_utc": 1669922903.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_8cv8s3up", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3\n\n    data = open(''input_day1.txt'', ''r'')\n    elves_calories
        = data.read().strip().split(''\\n\\n'')\n    calories = [ ]\n    for elf in
        elves_calories:\n        meals = elf.split(''\\n'')\n        meals = [eval(i)
        for i in meals]\n        calories.append(sum(meals))\n    \n    answer1 =
        max(calories)\n    print(''the answer1 is:'', answer1)\n    \n    calories
        = sorted(calories)\n    answer2 = sum(calories[-1:-4:-1])\n    print(''the
        answer2 is:'', answer2)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data = open(&amp;#39;input_day1.txt&amp;#39;,
        &amp;#39;r&amp;#39;)\nelves_calories = data.read().strip().split(&amp;#39;\\n\\n&amp;#39;)\ncalories
        = [ ]\nfor elf in elves_calories:\n    meals = elf.split(&amp;#39;\\n&amp;#39;)\n    meals
        = [eval(i) for i in meals]\n    calories.append(sum(meals))\n\nanswer1 = max(calories)\nprint(&amp;#39;the
        answer1 is:&amp;#39;, answer1)\n\ncalories = sorted(calories)\nanswer2 = sum(calories[-1:-4:-1])\nprint(&amp;#39;the
        answer2 is:&amp;#39;, answer2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj01y1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj01y1", "created":
        1669922903.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj2fnp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Merricat--Blackwood",
        "can_mod_post": false, "created_utc": 1669923853.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_9s7rx64z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Trying to learn rust this year.\n\n    use std::fs;\n    \n    struct Elf
        {\n        food_items: Vec&lt;i32&gt;\n    }\n    \n    impl Elf {\n        fn
        new(food_items: Vec&lt;i32&gt;) -&gt; Self {\n            return Elf {\n                food_items\n            }\n        }\n    \n        fn
        total_calories(&amp;self) -&gt; i32 {\n            self.food_items.iter().fold(0,
        |acc, x| acc + x)\n        }\n    }\n    \n    fn main() {\n        let data:
        String = fs::read_to_string(\"src/input\")\n            .unwrap();\n        let
        data: Vec&lt;&amp;str&gt; = data.trim().split(\"\\n\\n\").collect();\n        let
        mut elves: Vec&lt;Elf&gt; = vec![];\n    \n        for i in data {\n            elves.push(Elf::new(parse_food_items(i)));\n        }\n    \n        println!(\"Part
        one: {}\", find_x_most_calories(&amp;elves, 1));\n        println!(\"Part
        two: {}\", find_x_most_calories(&amp;elves, 3));\n    }\n    \n    fn parse_food_items(items:
        &amp;str) -&gt; Vec&lt;i32&gt; {\n        let mut parsed: Vec&lt;i32&gt; =
        vec![];\n        let items: Vec&lt;&amp;str&gt; = items.split(''\\n'').collect();\n        for
        item in items{\n            parsed.push(item.parse::&lt;i32&gt;().unwrap());\n        }\n        parsed\n    }\n    \n    \n    fn
        find_x_most_calories(elves: &amp;Vec&lt;Elf&gt;, x: i32) -&gt; i32 {\n        let
        mut calories: Vec&lt;i32&gt; = vec![];\n        let mut total = 0;\n        for
        elf in elves {\n            calories.push(elf.total_calories());\n        }\n        calories.sort();\n        for
        _ in 0..x{\n            total += calories.pop().unwrap();\n        }\n        total\n    }\n\nI''ve
        been looking forward to this year a lot after missing out on last year.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Trying to learn rust
        this year.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use std::fs;\n\nstruct Elf
        {\n    food_items: Vec&amp;lt;i32&amp;gt;\n}\n\nimpl Elf {\n    fn new(food_items:
        Vec&amp;lt;i32&amp;gt;) -&amp;gt; Self {\n        return Elf {\n            food_items\n        }\n    }\n\n    fn
        total_calories(&amp;amp;self) -&amp;gt; i32 {\n        self.food_items.iter().fold(0,
        |acc, x| acc + x)\n    }\n}\n\nfn main() {\n    let data: String = fs::read_to_string(&amp;quot;src/input&amp;quot;)\n        .unwrap();\n    let
        data: Vec&amp;lt;&amp;amp;str&amp;gt; = data.trim().split(&amp;quot;\\n\\n&amp;quot;).collect();\n    let
        mut elves: Vec&amp;lt;Elf&amp;gt; = vec![];\n\n    for i in data {\n        elves.push(Elf::new(parse_food_items(i)));\n    }\n\n    println!(&amp;quot;Part
        one: {}&amp;quot;, find_x_most_calories(&amp;amp;elves, 1));\n    println!(&amp;quot;Part
        two: {}&amp;quot;, find_x_most_calories(&amp;amp;elves, 3));\n}\n\nfn parse_food_items(items:
        &amp;amp;str) -&amp;gt; Vec&amp;lt;i32&amp;gt; {\n    let mut parsed: Vec&amp;lt;i32&amp;gt;
        = vec![];\n    let items: Vec&amp;lt;&amp;amp;str&amp;gt; = items.split(&amp;#39;\\n&amp;#39;).collect();\n    for
        item in items{\n        parsed.push(item.parse::&amp;lt;i32&amp;gt;().unwrap());\n    }\n    parsed\n}\n\n\nfn
        find_x_most_calories(elves: &amp;amp;Vec&amp;lt;Elf&amp;gt;, x: i32) -&amp;gt;
        i32 {\n    let mut calories: Vec&amp;lt;i32&amp;gt; = vec![];\n    let mut
        total = 0;\n    for elf in elves {\n        calories.push(elf.total_calories());\n    }\n    calories.sort();\n    for
        _ in 0..x{\n        total += calories.pop().unwrap();\n    }\n    total\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ve
        been looking forward to this year a lot after missing out on last year.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj2fnp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj2fnp", "created":
        1669923853.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj2rpc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Dricus",
        "can_mod_post": false, "created_utc": 1669923981.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_cun8e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in Kotlin:\n\n    class Day01(input: Input) : Puzzle() {\n        private
        val calories = input.string().split(\"\\n\\n\")\n            .map { elf -&gt;
        elf.split(\"\\n\").map { calories -&gt; calories.toLong() } }\n            .map
        { elf -&gt; elf.sum() }\n    \n        override fun part1() = calories.max()\n        override
        fun part2() = calories.sortedDescending().take(3).sum()\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in Kotlin:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class
        Day01(input: Input) : Puzzle() {\n    private val calories = input.string().split(&amp;quot;\\n\\n&amp;quot;)\n        .map
        { elf -&amp;gt; elf.split(&amp;quot;\\n&amp;quot;).map { calories -&amp;gt;
        calories.toLong() } }\n        .map { elf -&amp;gt; elf.sum() }\n\n    override
        fun part1() = calories.max()\n    override fun part2() = calories.sortedDescending().take(3).sum()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj2rpc/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj2rpc", "created":
        1669923981.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj4jvs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RibozymeR",
        "can_mod_post": false, "created_utc": 1669924666.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4emyqvzp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Factor\n\n    USING: kernel sequences io.files io.encodings.ascii splitting
        math math.order math.parser sorting ;\n    IN: aoc22.day01\n    \n    : get-input
        ( -- seq ) \"work/aoc22/day01/input.txt\" ascii file-lines ;\n    \n    :
        task1 ( -- n ) get-input { \"\" } split [ [ string&gt;number ] map-sum ] map
        supremum ;\n    \n    : task2 ( -- n ) get-input { \"\" } split [ [ string&gt;number
        ] map-sum ] map [ &lt;=&gt; ] sort 3 tail* sum ;", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Factor&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;USING:
        kernel sequences io.files io.encodings.ascii splitting math math.order math.parser
        sorting ;\nIN: aoc22.day01\n\n: get-input ( -- seq ) &amp;quot;work/aoc22/day01/input.txt&amp;quot;
        ascii file-lines ;\n\n: task1 ( -- n ) get-input { &amp;quot;&amp;quot; }
        split [ [ string&amp;gt;number ] map-sum ] map supremum ;\n\n: task2 ( --
        n ) get-input { &amp;quot;&amp;quot; } split [ [ string&amp;gt;number ] map-sum
        ] map [ &amp;lt;=&amp;gt; ] sort 3 tail* sum ;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj4jvs/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj4jvs", "created":
        1669924666.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj7qvx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Kiko_MK",
        "can_mod_post": false, "created_utc": 1669925876.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_14shpe", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PowerShell 7.3\n\n    $finalArray = [System.Collections.ArrayList]@()\n    $calories
        = Get-Content -Path .\\calories.txt -Delimiter \"`r`n`r`n\" \n    $calories
        | ForEach-Object { \n        $finalArray.Add(($_ -split \"\\D+\" | Measure-Object
        -Sum).Sum) &gt; $null \n    } \n    \"01\",($finalArray | Measure-Object -Maximum).Maximum
        -join \": \" \n    \"02\",($finalArray | Sort-Object | Select-Object -Last
        3 | Measure-Object -Sum).Sum -join \": \"\n\nMilliseconds      : 24 (avg.
        of 5 runs)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PowerShell
        7.3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$finalArray = [System.Collections.ArrayList]@()\n$calories
        = Get-Content -Path .\\calories.txt -Delimiter &amp;quot;`r`n`r`n&amp;quot;
        \n$calories | ForEach-Object { \n    $finalArray.Add(($_ -split &amp;quot;\\D+&amp;quot;
        | Measure-Object -Sum).Sum) &amp;gt; $null \n} \n&amp;quot;01&amp;quot;,($finalArray
        | Measure-Object -Maximum).Maximum -join &amp;quot;: &amp;quot; \n&amp;quot;02&amp;quot;,($finalArray
        | Sort-Object | Select-Object -Last 3 | Measure-Object -Sum).Sum -join &amp;quot;:
        &amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Milliseconds      : 24 (avg.
        of 5 runs)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj7qvx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj7qvx", "created":
        1669925876.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj9hb0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Ienal",
        "can_mod_post": false, "created_utc": 1669926516.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_14bq3v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I never coded much, nothing at all last year, but decided to give it a go.
        Not really elegant, but it works. \n\nMatlab:\n    \n    input = dlmread(''input.txt'',newline);\n    M
        = zeros(sum(~input),1);\n    sum = 0;\n    k = 1;\n    for i = 1:size(input,2)\n        sum
        = sum + input(i);\n        if input(i)==0\n        M(k) = sum;\n        sum
        = 0;\n        k = k+1;   \n        end\n    end\n    sortM = sort(M,''descend'');\n    sortM(1)
        %answer1\n    sortM(1) + sortM(2) + sortM(3) %answer2", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I never coded much, nothing at all last year, but
        decided to give it a go. Not really elegant, but it works. &lt;/p&gt;\n\n&lt;p&gt;Matlab:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        = dlmread(&amp;#39;input.txt&amp;#39;,newline);\nM = zeros(sum(~input),1);\nsum
        = 0;\nk = 1;\nfor i = 1:size(input,2)\n    sum = sum + input(i);\n    if input(i)==0\n    M(k)
        = sum;\n    sum = 0;\n    k = k+1;   \n    end\nend\nsortM = sort(M,&amp;#39;descend&amp;#39;);\nsortM(1)
        %answer1\nsortM(1) + sortM(2) + sortM(3) %answer2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj9hb0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj9hb0", "created":
        1669926516.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj9nk4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LuckyLactose",
        "can_mod_post": false, "created_utc": 1669926578.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_3wf82ne1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**SWIFT**\n\nFull repo here: [https://github.com/gkwaerp/aoc](https://github.com/gkwaerp/aoc)\n\nA
        lot more verbose than needed, but I tend to solve these things in a fairly
        similar fashion. Could/should probably have just used array slicing instead
        of prefixing, oh well.\n\n    class Solver_2022_01: Solver {\n        class
        Elf {\n            let calories: Int\n    \n            private init(food:
        String) {\n                calories = food\n                    .components(separatedBy:
        \"\\n\")\n                    .map { Int($0)! }\n                    .reduce(0,
        +)\n            }\n    \n            static func createSorted(from input:
        [String]) -&gt; [Elf] {\n                input\n                    .map {
        Elf(food: $0) }\n                    .sorted(by: { $0.calories &gt; $1.calories
        })\n            }\n    \n            static func getCalories(from elves: [Elf],
        numToInclude num: Int) -&gt; Int {\n                elves\n                    .prefix(num)\n                    .map
        { $0.calories }\n                    .reduce(0, +)\n            }\n        }\n    \n        private
        var elves: [Elf] = []\n    \n        override func didLoadFunction() {\n            let
        input = defaultInputFileString.loadAsTextStringArray(separator: \"\\n\\n\")\n            elves
        = Elf.createSorted(from: input)\n        }\n    \n        override func solveFunction1()
        -&gt; String {\n            let result = Elf.getCalories(from: elves, numToInclude:
        1)\n            return \"\\(result)\"\n        }\n    \n        override func
        solveFunction2() -&gt; String {\n            let result = Elf.getCalories(from:
        elves, numToInclude: 3)\n            return \"\\(result)\"\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;SWIFT&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Full
        repo here: &lt;a href=\"https://github.com/gkwaerp/aoc\"&gt;https://github.com/gkwaerp/aoc&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A
        lot more verbose than needed, but I tend to solve these things in a fairly
        similar fashion. Could/should probably have just used array slicing instead
        of prefixing, oh well.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class Solver_2022_01:
        Solver {\n    class Elf {\n        let calories: Int\n\n        private init(food:
        String) {\n            calories = food\n                .components(separatedBy:
        &amp;quot;\\n&amp;quot;)\n                .map { Int($0)! }\n                .reduce(0,
        +)\n        }\n\n        static func createSorted(from input: [String]) -&amp;gt;
        [Elf] {\n            input\n                .map { Elf(food: $0) }\n                .sorted(by:
        { $0.calories &amp;gt; $1.calories })\n        }\n\n        static func getCalories(from
        elves: [Elf], numToInclude num: Int) -&amp;gt; Int {\n            elves\n                .prefix(num)\n                .map
        { $0.calories }\n                .reduce(0, +)\n        }\n    }\n\n    private
        var elves: [Elf] = []\n\n    override func didLoadFunction() {\n        let
        input = defaultInputFileString.loadAsTextStringArray(separator: &amp;quot;\\n\\n&amp;quot;)\n        elves
        = Elf.createSorted(from: input)\n    }\n\n    override func solveFunction1()
        -&amp;gt; String {\n        let result = Elf.getCalories(from: elves, numToInclude:
        1)\n        return &amp;quot;\\(result)&amp;quot;\n    }\n\n    override func
        solveFunction2() -&amp;gt; String {\n        let result = Elf.getCalories(from:
        elves, numToInclude: 3)\n        return &amp;quot;\\(result)&amp;quot;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj9nk4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj9nk4", "created":
        1669926578.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjgbn4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hetzenmat",
        "can_mod_post": false, "created_utc": 1669929098.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_144tta", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Prolog**\n\nI like the clean solution with DCG parsing. Also, I am quite
        surprised how fast the execution is (tested using SWI Prolog 8.4.2).\n\n    :-
        use_module(library(dcg/basics)).\n    :- use_module(library(pure_input)).\n    \n    :-
        initialization(main, main).\n    \n    nl --&gt; [10].\n    integers([H|T])
        --&gt; integer(H), ( nl, integers(T) | { T = [] }).\n    runs_of_integers([S|T])
        --&gt; integers(H),\n                                { sum_list(H, S) },\n                                (
        nl, nl, runs_of_integers(T)\n                                | blanks, eos,
        { T = [] }).\n    \n    main([Input]) :-\n            phrase_from_file(runs_of_integers(L),
        Input),\n            sort(0, @&gt;=, L, [P1, X1, X2 | _]),\n            P2
        is P1 + X1 + X2,\n            writef(''Part 1: %w\\nPart 2: %w\\n'', [P1,
        P2]).", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Prolog&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        like the clean solution with DCG parsing. Also, I am quite surprised how fast
        the execution is (tested using SWI Prolog 8.4.2).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;:-
        use_module(library(dcg/basics)).\n:- use_module(library(pure_input)).\n\n:-
        initialization(main, main).\n\nnl --&amp;gt; [10].\nintegers([H|T]) --&amp;gt;
        integer(H), ( nl, integers(T) | { T = [] }).\nruns_of_integers([S|T]) --&amp;gt;
        integers(H),\n                            { sum_list(H, S) },\n                            (
        nl, nl, runs_of_integers(T)\n                            | blanks, eos, {
        T = [] }).\n\nmain([Input]) :-\n        phrase_from_file(runs_of_integers(L),
        Input),\n        sort(0, @&amp;gt;=, L, [P1, X1, X2 | _]),\n        P2 is
        P1 + X1 + X2,\n        writef(&amp;#39;Part 1: %w\\nPart 2: %w\\n&amp;#39;,
        [P1, P2]).\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjgbn4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjgbn4", "created":
        1669929098.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyji2ik",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TLStudios",
        "can_mod_post": false, "created_utc": 1669929769.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_x87vg2v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My answers in:\n\nGolang (somewhat experienced): [https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/golang/1/main.go](https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/golang/1/main.go)\n\nElixir
        (wanting to learn): [https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/elixir/1/main.exs](https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/elixir/1/main.exs)\n\nAnd
        Lua (never touched before): [https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/lua/1/main.lua](https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/lua/1/main.lua)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My answers in:&lt;/p&gt;\n\n&lt;p&gt;Golang
        (somewhat experienced): &lt;a href=\"https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/golang/1/main.go\"&gt;https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/golang/1/main.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Elixir
        (wanting to learn): &lt;a href=\"https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/elixir/1/main.exs\"&gt;https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/elixir/1/main.exs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And
        Lua (never touched before): &lt;a href=\"https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/lua/1/main.lua\"&gt;https://github.com/CSS-Scripter/AdventOfCode/blob/main/2022/lua/1/main.lua&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyji2ik/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyji2ik", "created":
        1669929769.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyjv68r", "id": "iyjv68r", "parent_id":
        "t1_iyji2ik", "depth": 1, "children": ["iyjv68r"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjjx19",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "silentclowd",
        "can_mod_post": false, "created_utc": 1669930486.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_7l7bc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I am also joining my compatriots in learning F# this year!\n\nDang pipelines
        do look cool though\n\n\n    let rec getTotals2 (x::ints) str = \n        match
        str with\n        | \"\" -&gt; 0::x::ints\n        | _  -&gt; (x+(str |&gt;
        int))::ints\n\n    let totals =\n        filename\n        |&gt; File.ReadAllLines\n        |&gt;
        List.ofArray\n        |&gt; List.fold getTotals2 [0]\n\n    totals\n    |&gt;
        List.max\n    |&gt; printfn \"Top snack: %i\"\n\n    totals\n    |&gt; List.sortDescending  //
        -&gt; [sorted]\n    |&gt; List.take 3  // List.take(3, sorted) -&gt;  return
        first 3 elements\n    |&gt; List.sum\n    |&gt; printfn \"Top 3 snacks: %i\"",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am also joining my
        compatriots in learning F# this year!&lt;/p&gt;\n\n&lt;p&gt;Dang pipelines
        do look cool though&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let rec getTotals2
        (x::ints) str = \n    match str with\n    | &amp;quot;&amp;quot; -&amp;gt;
        0::x::ints\n    | _  -&amp;gt; (x+(str |&amp;gt; int))::ints\n\nlet totals
        =\n    filename\n    |&amp;gt; File.ReadAllLines\n    |&amp;gt; List.ofArray\n    |&amp;gt;
        List.fold getTotals2 [0]\n\ntotals\n|&amp;gt; List.max\n|&amp;gt; printfn
        &amp;quot;Top snack: %i&amp;quot;\n\ntotals\n|&amp;gt; List.sortDescending  //
        -&amp;gt; [sorted]\n|&amp;gt; List.take 3  // List.take(3, sorted) -&amp;gt;  return
        first 3 elements\n|&amp;gt; List.sum\n|&amp;gt; printfn &amp;quot;Top 3 snacks:
        %i&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjjx19/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyjjx19", "created": 1669930486.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669935628.0, "mod_reason_by": null, "banned_by": null, "ups": 3,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjk5c5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ignurant",
        "can_mod_post": false, "created_utc": 1669930578.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_6uqli", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Rockstar Day 1, Pt 1](https://tzarnal.github.io/Opal/#XQAAAQCdAwAAAAAAAAAqGgiiAbqHQGmMNT/gNqOF09bjnD4TaaiWl1puc+1LmEKpFQW94UXJVlpNVl5JTn9lk+WhFhsw2bloQv308gqAug2B/FsbA+WSQdzcWb2LgrF8pETPo3hzNxfbOWlPXzez6E9pUjlyTpRSvGzfzwAoqwB+LwBJr1BjYO9bE3btCFzax4GhycucLkL1pWhDE/o3ZbJkb2QrXb46M0UUkfKS1ipoQtsFy2YFvQlxprw+GTh+7YpsR/MGNmoOWBTwyxqckYwzcGAAwS2dJZE5KroTuedPehFFwy+2m36N8FJUs/vbxWEPoSs8062HSR2om1Lwhrg41boE+qNesni92Apwk0YKmP9osvg6nIecbd12L0OuGQ0cLK5sxDO9lF+zOcw3s5hv4dnkmO5pFzzFXZt8dCK6WNiLlXiT98Rj8SigZwXTsFncT0R8n3WXRkFkxund0ep7KgXbAADEwQw98WQ2mz7DdCgfQf38lPEiyoMc7vW9Z7eo5pbU+17l/9Vpx7N5QXp7crupLpRXrOPH+3TmyBF+TSFWnP1gwVtUAGlEXeT1//+1CjgI)\n\n[Annotated
        Version](https://tzarnal.github.io/Opal/#XQAAAQC1DAAAAAAAAAAqGgiiAbqHQGmMNT/gNqOF09bjnD4Taaob5XrSlA1URpb2xvEIT+XzKbmdAmba4KzIY2cUtzzqtvxqNMti8R2horZ3LcQx3T0z+bCj0uGXrM/y8jY4GER6XbH097e6L67SEpwdnZsIjK5N8bEu6S6g2vhUZeNuhYfPtvhaKaTfhUygcIaff6F6OwF7oN6+eSRQJzxDzK8NyGucsZG8gvm+O6UKAiIVZ9O+OxozCpVkjaOINGSKJc1jP4bQm/xbgcZ/YyKR/rhBxa5yWtpv9gzBn/2bH60v49411dSgU3cu/Du1R3a8Gm9hFZRDAjHghWb6+350TvGSPSKrhvYkUYVP6TDDeOXyVPzqgbMl7mQkpe+j6qHiQ8D5pd/CWBkSghdigdww3coiKlvRSB8wYfQyn4C8zrA03O4XxBPhL8hOIhsT3qlgltiDq/D+F7TypU9K8+Og72th4osHzXzLqTYw93dpDOFoRe2sxtOOHAq6d6dmAJbtl0D7h2PRkdv9ufiV/NKF9+Zc913ScMP+XxINEdLZ4DY3EOKQfTyoCaseJqBf0dKL698CEjyViTOE1mqZn+0kmJhBIc1yskAMFM/BM5lWJ1i63q0P5ulSY+ddB0BiF4LhuaSMbFUCu56p628uVdTYrEuaVa85Udz04De9aF9ftMvoWoR0CdnZT4vkY50x2+ENTtOsDTs5RGtRWd6JKI5TVDXJvI+NFNEKa1OYcui157UMxzncPWba1kComsyT3/PLh6XCZ0SmkikqJDaCXKHmYrkgl1YiWR5sjb9M07o+5FkY83UQ9pLcNeKloSgHXlSKcVPYedzFy1oe8jChQmjv6U7Bh15EhZt8e32KhcfWsS3pBu4TQq1ArlD7tRgR/xYDZSmmSJgUNNDJCNjX/xVRa7wLmi4mqk9ea5Xx/hJNMnn8k50eVpfBqxENg9eOMN0GpVh/zzEy0Pa487cAxdcqclpWV7gLOMoVGkkaWGpqfQDr5xcLzljnSnX9cIpKZoaN0nsHb7sti754BcJhN+JXYX/fqTPdTQHCY1v2VUT/Z4TkoCfp+Fj9ItQSRNAaOFpehLw3eSQS36Ihd+eD1WbmVqX7sWMXbUCPBD/DoQXMxl9P1Vr+ivlOT/tnyQkdBOITk33IjMeyXA6EYcQH+5TaexP1Co1cbCd/jLWQxQRViKDdOhY+9aF1RZEqd+e2VnxndCGnwXaKFwFmE4IYyyYftgpqSF9T0Z1nYYbWGCaiEYW5pUw+2Ejo5xf3XXpJGbL/vr/TSrgDFgo1PP0M9mltLvvaFHUFkVd28nKgugzACLFM9PsCOm0jmr63dB3gjDJx8IJCbiRKmnRjFKS/DzI8UGUlBEBg6pB2HGWSvkikwDm62Rw3WEqB+pN5j/44TP5vLueblLudPKgi1PxDhpPw7+hrgTkITY9PEDnvDLvmh+EI9cUGAb7XYyU74J2qZYgQQpDR19N8RzB1bofF70tji9D+9+fehZLGgRbsDlVA5+mTYWJ2gNpkiuh65dMcgSRUj/f/vvpGGA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://tzarnal.github.io/Opal/#XQAAAQCdAwAAAAAAAAAqGgiiAbqHQGmMNT/gNqOF09bjnD4TaaiWl1puc+1LmEKpFQW94UXJVlpNVl5JTn9lk+WhFhsw2bloQv308gqAug2B/FsbA+WSQdzcWb2LgrF8pETPo3hzNxfbOWlPXzez6E9pUjlyTpRSvGzfzwAoqwB+LwBJr1BjYO9bE3btCFzax4GhycucLkL1pWhDE/o3ZbJkb2QrXb46M0UUkfKS1ipoQtsFy2YFvQlxprw+GTh+7YpsR/MGNmoOWBTwyxqckYwzcGAAwS2dJZE5KroTuedPehFFwy+2m36N8FJUs/vbxWEPoSs8062HSR2om1Lwhrg41boE+qNesni92Apwk0YKmP9osvg6nIecbd12L0OuGQ0cLK5sxDO9lF+zOcw3s5hv4dnkmO5pFzzFXZt8dCK6WNiLlXiT98Rj8SigZwXTsFncT0R8n3WXRkFkxund0ep7KgXbAADEwQw98WQ2mz7DdCgfQf38lPEiyoMc7vW9Z7eo5pbU+17l/9Vpx7N5QXp7crupLpRXrOPH+3TmyBF+TSFWnP1gwVtUAGlEXeT1//+1CjgI\"&gt;Rockstar
        Day 1, Pt 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://tzarnal.github.io/Opal/#XQAAAQC1DAAAAAAAAAAqGgiiAbqHQGmMNT/gNqOF09bjnD4Taaob5XrSlA1URpb2xvEIT+XzKbmdAmba4KzIY2cUtzzqtvxqNMti8R2horZ3LcQx3T0z+bCj0uGXrM/y8jY4GER6XbH097e6L67SEpwdnZsIjK5N8bEu6S6g2vhUZeNuhYfPtvhaKaTfhUygcIaff6F6OwF7oN6+eSRQJzxDzK8NyGucsZG8gvm+O6UKAiIVZ9O+OxozCpVkjaOINGSKJc1jP4bQm/xbgcZ/YyKR/rhBxa5yWtpv9gzBn/2bH60v49411dSgU3cu/Du1R3a8Gm9hFZRDAjHghWb6+350TvGSPSKrhvYkUYVP6TDDeOXyVPzqgbMl7mQkpe+j6qHiQ8D5pd/CWBkSghdigdww3coiKlvRSB8wYfQyn4C8zrA03O4XxBPhL8hOIhsT3qlgltiDq/D+F7TypU9K8+Og72th4osHzXzLqTYw93dpDOFoRe2sxtOOHAq6d6dmAJbtl0D7h2PRkdv9ufiV/NKF9+Zc913ScMP+XxINEdLZ4DY3EOKQfTyoCaseJqBf0dKL698CEjyViTOE1mqZn+0kmJhBIc1yskAMFM/BM5lWJ1i63q0P5ulSY+ddB0BiF4LhuaSMbFUCu56p628uVdTYrEuaVa85Udz04De9aF9ftMvoWoR0CdnZT4vkY50x2+ENTtOsDTs5RGtRWd6JKI5TVDXJvI+NFNEKa1OYcui157UMxzncPWba1kComsyT3/PLh6XCZ0SmkikqJDaCXKHmYrkgl1YiWR5sjb9M07o+5FkY83UQ9pLcNeKloSgHXlSKcVPYedzFy1oe8jChQmjv6U7Bh15EhZt8e32KhcfWsS3pBu4TQq1ArlD7tRgR/xYDZSmmSJgUNNDJCNjX/xVRa7wLmi4mqk9ea5Xx/hJNMnn8k50eVpfBqxENg9eOMN0GpVh/zzEy0Pa487cAxdcqclpWV7gLOMoVGkkaWGpqfQDr5xcLzljnSnX9cIpKZoaN0nsHb7sti754BcJhN+JXYX/fqTPdTQHCY1v2VUT/Z4TkoCfp+Fj9ItQSRNAaOFpehLw3eSQS36Ihd+eD1WbmVqX7sWMXbUCPBD/DoQXMxl9P1Vr+ivlOT/tnyQkdBOITk33IjMeyXA6EYcQH+5TaexP1Co1cbCd/jLWQxQRViKDdOhY+9aF1RZEqd+e2VnxndCGnwXaKFwFmE4IYyyYftgpqSF9T0Z1nYYbWGCaiEYW5pUw+2Ejo5xf3XXpJGbL/vr/TSrgDFgo1PP0M9mltLvvaFHUFkVd28nKgugzACLFM9PsCOm0jmr63dB3gjDJx8IJCbiRKmnRjFKS/DzI8UGUlBEBg6pB2HGWSvkikwDm62Rw3WEqB+pN5j/44TP5vLueblLudPKgi1PxDhpPw7+hrgTkITY9PEDnvDLvmh+EI9cUGAb7XYyU74J2qZYgQQpDR19N8RzB1bofF70tji9D+9+fehZLGgRbsDlVA5+mTYWJ2gNpkiuh65dMcgSRUj/f/vvpGGA==\"&gt;Annotated
        Version&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjk5c5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjk5c5", "created":
        1669930578.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjmfg2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aoc-fan",
        "can_mod_post": false, "created_utc": 1669931478.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_13cqpt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[F# - No Sorting, Single Iteration](https://github.com/bhosale-ajay/adventofcode/blob/master/2022/fs/D01.fs)
        and [TypeScript - Old Style](https://github.com/bhosale-ajay/adventofcode/blob/master/2022/ts/D01.test.ts)\n\n    let
        pickTop3 c (m1, m2, m3) = \n        if m3 &gt; c then (m1, m2, m3)\n        else
        if m2 &gt; c then (m1, m2, c)\n        else if m1 &gt; c then (m1, c, m2)\n        else
        (c, m1, m2)\n    \n    let folder (c , m) = function\n        | Integer n
        -&gt; (c + n, m)\n        | _ -&gt; (0, pickTop3 c m)\n    \n    let solve
        fileName = \n        let (_, (m1, m2, m3)) =\n            fileName \n            |&gt;
        seqOfLines\n            |&gt; Seq.fold folder (0, (0,0,0))\n        (m1, m1
        + m2 + m3)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/bhosale-ajay/adventofcode/blob/master/2022/fs/D01.fs\"&gt;F#
        - No Sorting, Single Iteration&lt;/a&gt; and &lt;a href=\"https://github.com/bhosale-ajay/adventofcode/blob/master/2022/ts/D01.test.ts\"&gt;TypeScript
        - Old Style&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let pickTop3 c (m1,
        m2, m3) = \n    if m3 &amp;gt; c then (m1, m2, m3)\n    else if m2 &amp;gt;
        c then (m1, m2, c)\n    else if m1 &amp;gt; c then (m1, c, m2)\n    else (c,
        m1, m2)\n\nlet folder (c , m) = function\n    | Integer n -&amp;gt; (c + n,
        m)\n    | _ -&amp;gt; (0, pickTop3 c m)\n\nlet solve fileName = \n    let
        (_, (m1, m2, m3)) =\n        fileName \n        |&amp;gt; seqOfLines\n        |&amp;gt;
        Seq.fold folder (0, (0,0,0))\n    (m1, m1 + m2 + m3)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjmfg2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjmfg2", "created":
        1669931478.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669984209.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjn0xs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyjn0xs", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjn0xs/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669931717.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669931717.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyjqhqa", "id": "iyjqhqa", "parent_id":
        "t1_iyjn0xs", "depth": 1, "children": ["iyjqhqa"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670186366.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjr1gr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "spikelovesharmony",
        "can_mod_post": false, "created_utc": 1669933385.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_87fy5jdf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    const elfCalories = (elves) =&gt; {\n    const calorieSum = [] const
        sanitizedElfData = \n    elves.split(\"\\n\\n\").map((elf) =&gt; elf.split(\"\\n\"))\n    \n    sanitizedElfData.map((arr)
        =&gt; calorieSum.push(arr.reduce((a, cV) =&gt; { \n    return (a += Number(cV))\n     },
        0)) )\n    \n    return calorieSum.sort((a, b) =&gt; a - b)[calorieSum.length
        - 1] }\n\nJavaScript - my first time participating - a few years ago when  starting
        to learn programming i could barely even figure the site out...heh", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;const elfCalories = (elves)
        =&amp;gt; {\nconst calorieSum = [] const sanitizedElfData = \nelves.split(&amp;quot;\\n\\n&amp;quot;).map((elf)
        =&amp;gt; elf.split(&amp;quot;\\n&amp;quot;))\n\nsanitizedElfData.map((arr)
        =&amp;gt; calorieSum.push(arr.reduce((a, cV) =&amp;gt; { \nreturn (a += Number(cV))\n
        }, 0)) )\n\nreturn calorieSum.sort((a, b) =&amp;gt; a - b)[calorieSum.length
        - 1] }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;JavaScript - my first time participating
        - a few years ago when  starting to learn programming i could barely even
        figure the site out...heh&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjr1gr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjr1gr", "created":
        1669933385.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyq2gk1", "id": "iyq2gk1", "parent_id":
        "t1_iyjr1gr", "depth": 1, "children": ["iyq2gk1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjufhy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Pflastersteinmetz",
        "can_mod_post": false, "created_utc": 1669934833.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_lml6lyxz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3:\n\n    def get_max_calories(file_path: str, get_top_x: int) -&gt;
        list:\n        calories_per_elve: list = []\n        count_calories: int =
        0\n        with open(file_path, encoding=\"UTF-8\") as f:\n            for
        line in f:\n                if \"\\n\" in line:\n                    line
        = line.strip()\n                    if line != \"\":\n                        count_calories
        += int(line)\n                    else:\n                        calories_per_elve.append(count_calories)\n                        count_calories
        = 0  # reset\n                else:\n                    calories_per_elve.append(int(line.strip()))  #
        last line\n        return sum(sorted(calories_per_elve, reverse=True)[0:get_top_x])\n\nfor
        Task 1:\n\n    assert 24000 == get_max_calories(\"test_data.txt\", 1)\n    print(get_max_calories(\"../../get_input_data/input_data_1.txt\",
        1))\n\n\nfor Task 2:\n\n    assert 45000 == get_max_calories(\"test_data.txt\",
        3)\n    print(get_max_calories(\"../../get_input_data/input_data_1.txt\",
        3))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python
        3:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def get_max_calories(file_path: str,
        get_top_x: int) -&amp;gt; list:\n    calories_per_elve: list = []\n    count_calories:
        int = 0\n    with open(file_path, encoding=&amp;quot;UTF-8&amp;quot;) as f:\n        for
        line in f:\n            if &amp;quot;\\n&amp;quot; in line:\n                line
        = line.strip()\n                if line != &amp;quot;&amp;quot;:\n                    count_calories
        += int(line)\n                else:\n                    calories_per_elve.append(count_calories)\n                    count_calories
        = 0  # reset\n            else:\n                calories_per_elve.append(int(line.strip()))  #
        last line\n    return sum(sorted(calories_per_elve, reverse=True)[0:get_top_x])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;for
        Task 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;assert 24000 == get_max_calories(&amp;quot;test_data.txt&amp;quot;,
        1)\nprint(get_max_calories(&amp;quot;../../get_input_data/input_data_1.txt&amp;quot;,
        1))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;for Task 2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;assert
        45000 == get_max_calories(&amp;quot;test_data.txt&amp;quot;, 3)\nprint(get_max_calories(&amp;quot;../../get_input_data/input_data_1.txt&amp;quot;,
        3))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjufhy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjufhy", "created":
        1669934833.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjxqbh", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        3, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyjxqbh", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjxqbh/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669936251.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669936251.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 3}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iykzh6x", "id": "iykzh6x", "parent_id":
        "t1_iyjxqbh", "depth": 1, "children": ["iykzh6x"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk6f5r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ozjimbob",
        "can_mod_post": false, "created_utc": 1669940117.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_4a43w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rather verbose **R** solution\n\n    splitAt &lt;- function(x, pos) {\n      unname(split(x,
        cumsum(seq_along(x) %in% pos)))\n    }\n    \n    sum_element &lt;- function(x){\n      sum(as.numeric(x),na.rm=TRUE)\n    }\n    \n    data
        &lt;- readLines(\"data_01.txt\")\n    \n    split_points &lt;- which(data
        == \"\")\n    \n    dlist &lt;- data |&gt; \n      splitAt(split_points) |&gt;
        \n      lapply(sum_element) |&gt; \n      unlist()\n    \n    # Maximum \n    max(dlist)
        \n    \n    # Maximum of 3\n    dlist |&gt; \n      sort() |&gt; \n      tail(3)
        |&gt; \n      sum() |&gt; \n      print()", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rather verbose &lt;strong&gt;R&lt;/strong&gt; solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;splitAt
        &amp;lt;- function(x, pos) {\n  unname(split(x, cumsum(seq_along(x) %in% pos)))\n}\n\nsum_element
        &amp;lt;- function(x){\n  sum(as.numeric(x),na.rm=TRUE)\n}\n\ndata &amp;lt;-
        readLines(&amp;quot;data_01.txt&amp;quot;)\n\nsplit_points &amp;lt;- which(data
        == &amp;quot;&amp;quot;)\n\ndlist &amp;lt;- data |&amp;gt; \n  splitAt(split_points)
        |&amp;gt; \n  lapply(sum_element) |&amp;gt; \n  unlist()\n\n# Maximum \nmax(dlist)
        \n\n# Maximum of 3\ndlist |&amp;gt; \n  sort() |&amp;gt; \n  tail(3) |&amp;gt;
        \n  sum() |&amp;gt; \n  print()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk6f5r/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk6f5r", "created":
        1669940117.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykba6a",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ZoDalek",
        "can_mod_post": false, "created_utc": 1669942369.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_12jkz0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**[C](https://github.com/sjmulder/aoc/blob/master/2022/c/day01.c)**\n\n**[C#](https://github.com/sjmulder/aoc/blob/master/2022/cs/day01/Program.cs)**\n\nWith
        Linq and without reading the entire file at once.\n\n**[AWK](https://github.com/sjmulder/aoc/blob/master/2022/awk/day01.awk)**\n\nA
        little messy", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/sjmulder/aoc/blob/master/2022/c/day01.c\"&gt;C&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/sjmulder/aoc/blob/master/2022/cs/day01/Program.cs\"&gt;C#&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;With
        Linq and without reading the entire file at once.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/sjmulder/aoc/blob/master/2022/awk/day01.awk\"&gt;AWK&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;A
        little messy&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykba6a/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykba6a", "created":
        1669942369.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykjqu5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KleberPF",
        "can_mod_post": false, "created_utc": 1669946365.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_hsbpu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C\n\n    #include &lt;stdbool.h&gt;\n    #include &lt;stdio.h&gt;\n    #include
        &lt;stdlib.h&gt;\n    #include &lt;string.h&gt;\n    \n    void insert_elf(int
        *elves, int elf)\n    {\n        // find place to put the elf\n        int
        place = -1;\n        for (int i = 2; i &gt;= 0; i--) {\n            if (elf
        &gt; elves[i]) {\n                place = i;\n            }\n        }\n    \n        if
        (place != -1) {\n            // shift right\n            memmove(elves + place
        + 1, elves + place, (2 - place) * sizeof(elf));\n            elves[place]
        = elf;\n        }\n    }\n    \n    int main()\n    {\n        FILE *f = fopen(\"input.txt\",
        \"r\");\n    \n        int biggest_elves[3] = {0};\n        int current_elf
        = 0;\n        bool running = true;\n    \n        while (running) {\n            char
        line[32];\n            bool end = fgets(line, sizeof(line), f) == NULL;\n    \n            if
        (end || !strcmp(line, \"\\n\")) {\n                insert_elf(biggest_elves,
        current_elf);\n                current_elf = 0;\n                running =
        !end;\n            } else {\n                current_elf += strtol(line, NULL,
        10);\n            }\n        }\n    \n        printf(\"Part 1: %d\\n\", biggest_elves[0]);\n        printf(\"Part
        2: %d\\n\",\n               biggest_elves[0] + biggest_elves[1] + biggest_elves[2]);\n    \n        fclose(f);\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;stdbool.h&amp;gt;\n#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n#include
        &amp;lt;string.h&amp;gt;\n\nvoid insert_elf(int *elves, int elf)\n{\n    //
        find place to put the elf\n    int place = -1;\n    for (int i = 2; i &amp;gt;=
        0; i--) {\n        if (elf &amp;gt; elves[i]) {\n            place = i;\n        }\n    }\n\n    if
        (place != -1) {\n        // shift right\n        memmove(elves + place + 1,
        elves + place, (2 - place) * sizeof(elf));\n        elves[place] = elf;\n    }\n}\n\nint
        main()\n{\n    FILE *f = fopen(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;);\n\n    int
        biggest_elves[3] = {0};\n    int current_elf = 0;\n    bool running = true;\n\n    while
        (running) {\n        char line[32];\n        bool end = fgets(line, sizeof(line),
        f) == NULL;\n\n        if (end || !strcmp(line, &amp;quot;\\n&amp;quot;))
        {\n            insert_elf(biggest_elves, current_elf);\n            current_elf
        = 0;\n            running = !end;\n        } else {\n            current_elf
        += strtol(line, NULL, 10);\n        }\n    }\n\n    printf(&amp;quot;Part
        1: %d\\n&amp;quot;, biggest_elves[0]);\n    printf(&amp;quot;Part 2: %d\\n&amp;quot;,\n           biggest_elves[0]
        + biggest_elves[1] + biggest_elves[2]);\n\n    fclose(f);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykjqu5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykjqu5", "created":
        1669946365.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykr4j2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ABlazingLife",
        "can_mod_post": false, "created_utc": 1669949757.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_yddf7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# CJam\n\nI decided to try a golfing esolang for the first time while the
        challenges are on the easier side, and picked a random one to try!\n\n## Part
        1\n\n### Code\n\n`qN/[\"\"]%{{i}%}%{{+}*}%$)p;`\n\n### Explainer\n\nhttps://pastebin.com/u6iCfWN0\n\n\n##
        Part 2\n\n### Code\n\n`qN/[\"\"]%{{i}%}%{{+}*}%$W%3/(:+p;`\n\n### Explainer\n\nhttps://pastebin.com/GzrNY92Z\n\n##
        Links\n\n[Cjam Site](https://sourceforge.net/projects/cjam/)\n\n[CJam Syntax
        Reference](https://sourceforge.net/p/cjam/wiki/Basic%20operators/)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;CJam&lt;/h1&gt;\n\n&lt;p&gt;I decided to
        try a golfing esolang for the first time while the challenges are on the easier
        side, and picked a random one to try!&lt;/p&gt;\n\n&lt;h2&gt;Part 1&lt;/h2&gt;\n\n&lt;h3&gt;Code&lt;/h3&gt;\n\n&lt;p&gt;&lt;code&gt;qN/[&amp;quot;&amp;quot;]%{{i}%}%{{+}*}%$)p;&lt;/code&gt;&lt;/p&gt;\n\n&lt;h3&gt;Explainer&lt;/h3&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/u6iCfWN0\"&gt;https://pastebin.com/u6iCfWN0&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Part
        2&lt;/h2&gt;\n\n&lt;h3&gt;Code&lt;/h3&gt;\n\n&lt;p&gt;&lt;code&gt;qN/[&amp;quot;&amp;quot;]%{{i}%}%{{+}*}%$W%3/(:+p;&lt;/code&gt;&lt;/p&gt;\n\n&lt;h3&gt;Explainer&lt;/h3&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/GzrNY92Z\"&gt;https://pastebin.com/GzrNY92Z&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Links&lt;/h2&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://sourceforge.net/projects/cjam/\"&gt;Cjam Site&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://sourceforge.net/p/cjam/wiki/Basic%20operators/\"&gt;CJam Syntax
        Reference&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykr4j2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykr4j2", "created":
        1669949757.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670274480.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykt1ij", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jordyjwilliams",
        "can_mod_post": false, "created_utc": 1669950679.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_59arxpe7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Some nice snakey python snakes. May create JS repo later.\n\n[https://github.com/jordyjwilliams/advent\\_of\\_code/blob/main/2022/day\\_01/day\\_01\\_solution.py](https://github.com/jordyjwilliams/advent_of_code/blob/main/2022/day_01/day_01_solution.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some nice snakey python
        snakes. May create JS repo later.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/jordyjwilliams/advent_of_code/blob/main/2022/day_01/day_01_solution.py\"&gt;https://github.com/jordyjwilliams/advent_of_code/blob/main/2022/day_01/day_01_solution.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykt1ij/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykt1ij", "created":
        1669950679.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iypx4pc", "id": "iypx4pc", "parent_id":
        "t1_iykt1ij", "depth": 1, "children": ["iypx4pc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669951126.0, "mod_reason_by": null,
        "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyktjwk", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Chrinkus",
        "can_mod_post": false, "created_utc": 1669950930.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_n38jn1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\nLearning Rust this year, here is the [Topaz link](https://topaz.github.io/paste/#XQAAAQC6AgAAAAAAAAA6nMjJFMpQiatRvt7HtRFwhPwv9neWyWm+jI6AC7gqRb2NMsmIC9a9E9vBEoLz6F/5ODGhPQqg1ldicLzdr/cmmnVdr/XY65VnJNeVHkWgbthcAnEFnPaUas8fK80uJEKCklPQaVCJBz7cYztZ4YhZGY6IDsR2NlbbeysWGWqH4IOJ4YPvmt8Xcd7Y2lwqC163vFJOqNpInwNnEQHqHeKUg6AzuGES23a7MivGzZLIaDTqTY9XQgKg2CGkPdditeEQ+qMvqQ/tfT13bcgQnj+iv8BQ7AuFSuP19OWuv9cI5/SDy7MMhcsAGimd601HMDiiZR+3yp6sleWvFRYBpsUh8eucavignDE48VXr+dtU4hESvK2sBDPeo4C1SbFZ72GnPc01AW6QaFXRoFK1dNw2h563DQDhO8OLranJ9f68tDKiU57FAiENAp/kASEBPR92cWSDmSco5DsJx6F6JMkc7J1aiZsk2/qWK9sv9pY8mv6FhdE=)!
        Merry AoC!\n\nThe [repo](https://github.com/Chrinkus/advent-of-code/tree/main/2022).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;Learning
        Rust this year, here is the &lt;a href=\"https://topaz.github.io/paste/#XQAAAQC6AgAAAAAAAAA6nMjJFMpQiatRvt7HtRFwhPwv9neWyWm+jI6AC7gqRb2NMsmIC9a9E9vBEoLz6F/5ODGhPQqg1ldicLzdr/cmmnVdr/XY65VnJNeVHkWgbthcAnEFnPaUas8fK80uJEKCklPQaVCJBz7cYztZ4YhZGY6IDsR2NlbbeysWGWqH4IOJ4YPvmt8Xcd7Y2lwqC163vFJOqNpInwNnEQHqHeKUg6AzuGES23a7MivGzZLIaDTqTY9XQgKg2CGkPdditeEQ+qMvqQ/tfT13bcgQnj+iv8BQ7AuFSuP19OWuv9cI5/SDy7MMhcsAGimd601HMDiiZR+3yp6sleWvFRYBpsUh8eucavignDE48VXr+dtU4hESvK2sBDPeo4C1SbFZ72GnPc01AW6QaFXRoFK1dNw2h563DQDhO8OLranJ9f68tDKiU57FAiENAp/kASEBPR92cWSDmSco5DsJx6F6JMkc7J1aiZsk2/qWK9sv9pY8mv6FhdE=\"&gt;Topaz
        link&lt;/a&gt;! Merry AoC!&lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=\"https://github.com/Chrinkus/advent-of-code/tree/main/2022\"&gt;repo&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyktjwk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyktjwk", "created":
        1669950930.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykty7b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "shadowninja1050",
        "can_mod_post": false, "created_utc": 1669951124.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_2hpy2n2r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "ngn/k parts one and two\n\n    n:0N,`I$:\"i.txt\"\n    c:+/''1_''(&amp;^n)_n\n    |/c\n    +/3#c@&gt;c",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ngn/k parts one and
        two&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;n:0N,`I$:&amp;quot;i.txt&amp;quot;\nc:+/&amp;#39;1_&amp;#39;(&amp;amp;^n)_n\n|/c\n+/3#c@&amp;gt;c\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykty7b/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykty7b", "created":
        1669951124.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykw82v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "NeonPuzzler_",
        "can_mod_post": false, "created_utc": 1669952229.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_idxk2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3 golf attempt  \n`print((z:=sorted([sum(map(int,x.split()))for x in
        open(0).read().split(''\\n\\n'')])[-3:])[2],sum(z))`", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python3 golf attempt&lt;br/&gt;\n&lt;code&gt;print((z:=sorted([sum(map(int,x.split()))for
        x in open(0).read().split(&amp;#39;\\n\\n&amp;#39;)])[-3:])[2],sum(z))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykw82v/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykw82v", "created":
        1669952229.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iykxs6t", "id": "iykxs6t", "parent_id":
        "t1_iykw82v", "depth": 1, "children": ["iykxs6t"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyllxtz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Paranoid-Dev",
        "can_mod_post": false, "created_utc": 1669968976.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_8lslp4kw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Bash**\n\n    while read x; do\n      if [ -z \"$x\" ]; then\n        ((max3=sum&gt;max?max2:sum&gt;max2?max2:sum&gt;max3?sum:max3))\n        ((max2=sum&gt;max?max:sum&gt;max2?sum:max2))\n        ((max=sum&gt;max?sum:max))\n        sum=\n      else\n       ((sum+=x))\n      fi\n    done
        &lt; input.txt\n    echo part 1 : $max\n    echo part 2 : $((max+max2+max3))\n\nI
        wanted to avoid using bash arrays because bash arrays are *messy*, also I
        didn''t want to use multiple if statements for the same reason. The result
        was something fairly compact and equally messy and probably very inefficient
        lol.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Bash&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;while
        read x; do\n  if [ -z &amp;quot;$x&amp;quot; ]; then\n    ((max3=sum&amp;gt;max?max2:sum&amp;gt;max2?max2:sum&amp;gt;max3?sum:max3))\n    ((max2=sum&amp;gt;max?max:sum&amp;gt;max2?sum:max2))\n    ((max=sum&amp;gt;max?sum:max))\n    sum=\n  else\n   ((sum+=x))\n  fi\ndone
        &amp;lt; input.txt\necho part 1 : $max\necho part 2 : $((max+max2+max3))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        wanted to avoid using bash arrays because bash arrays are &lt;em&gt;messy&lt;/em&gt;,
        also I didn&amp;#39;t want to use multiple if statements for the same reason.
        The result was something fairly compact and equally messy and probably very
        inefficient lol.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyllxtz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyllxtz", "created":
        1669968976.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iylrpys", "id": "iylrpys", "parent_id":
        "t1_iyllxtz", "depth": 1, "children": ["iylrpys"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyloqpg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AdelFtnr",
        "can_mod_post": false, "created_utc": 1669971379.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_l6hgxwo0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hi! This is my first time doing this, so things could and will get better
        with time! So far so good!\n\nDid this one in JavaScript grabbing the element
        from the DOM and method chained it to make it usable, full repo is here: [https://github.com/AdelFetner/Advent-of-Code](https://github.com/AdelFetner/Advent-of-Code)\n\nI''m
        also a front end developer really into community driven development, so if
        you want to network &amp; connect w/ me, feel free to do it! All my links
        at my github''s bio, or here: [https://linktr.ee/AdelFetner](https://linktr.ee/AdelFetner)\n\n&amp;#x200B;\n\n    //
        Grab element from dom\n    const element = document.getElementsByTagName(\"pre\")\n    \n    //
        Make the HTMLCollection into an array \n    const elementArr = [...element]\n    \n    //
        loop thru array and split the text of the first index \n    const splittedArr
        = elementArr[0].innerText.split(\"\\n\\n\")\n    \n    // get elves from the
        array, and transform their calories elements into numbers from strings \n    const
        elves = splittedArr.map((elf) =&gt; elf.split(\"\\n\").map((calories) =&gt;
        Number(calories)))\n    \n    // add calories to make a total for each elf
        with a reduce, initial value 0 as it needs to add elements \n    const totalCalories
        = elves.map((elf) =&gt; elf.reduce((acc, current) =&gt; acc + current), 0)\n    \n    //
        gets the highest number of calories from the totalCalories with a Math.max
        and the elements spreaded to pass them as arguments \n    const getHighestCalories
        = (calories) =&gt; Math.max(...calories)\n    \n    \n    // Second Part,
        Find the top three Elves carrying the most Calories. How many Calories are
        those Elves carrying in total?\n    \n    // get the top three elves with
        a sort (to sort from highest to lowest) and a slice (to get only the first
        three, so the top three highest)\n    const getTopThreeElves = (calories)
        =&gt; calories.sort((a, b) =&gt; b - a).slice(0, 3)\n    \n    // get the
        total calories of the top three elves with a reduce, initial value 0 as it
        needs to add elements \n    const totalCaloriesTopThree = (calories) =&gt;
        getTopThreeElves(calories).reduce((acc, current) =&gt; acc + current, 0)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hi! This is my first
        time doing this, so things could and will get better with time! So far so
        good!&lt;/p&gt;\n\n&lt;p&gt;Did this one in JavaScript grabbing the element
        from the DOM and method chained it to make it usable, full repo is here: &lt;a
        href=\"https://github.com/AdelFetner/Advent-of-Code\"&gt;https://github.com/AdelFetner/Advent-of-Code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        also a front end developer really into community driven development, so if
        you want to network &amp;amp; connect w/ me, feel free to do it! All my links
        at my github&amp;#39;s bio, or here: &lt;a href=\"https://linktr.ee/AdelFetner\"&gt;https://linktr.ee/AdelFetner&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        Grab element from dom\nconst element = document.getElementsByTagName(&amp;quot;pre&amp;quot;)\n\n//
        Make the HTMLCollection into an array \nconst elementArr = [...element]\n\n//
        loop thru array and split the text of the first index \nconst splittedArr
        = elementArr[0].innerText.split(&amp;quot;\\n\\n&amp;quot;)\n\n// get elves
        from the array, and transform their calories elements into numbers from strings
        \nconst elves = splittedArr.map((elf) =&amp;gt; elf.split(&amp;quot;\\n&amp;quot;).map((calories)
        =&amp;gt; Number(calories)))\n\n// add calories to make a total for each elf
        with a reduce, initial value 0 as it needs to add elements \nconst totalCalories
        = elves.map((elf) =&amp;gt; elf.reduce((acc, current) =&amp;gt; acc + current),
        0)\n\n// gets the highest number of calories from the totalCalories with a
        Math.max and the elements spreaded to pass them as arguments \nconst getHighestCalories
        = (calories) =&amp;gt; Math.max(...calories)\n\n\n// Second Part, Find the
        top three Elves carrying the most Calories. How many Calories are those Elves
        carrying in total?\n\n// get the top three elves with a sort (to sort from
        highest to lowest) and a slice (to get only the first three, so the top three
        highest)\nconst getTopThreeElves = (calories) =&amp;gt; calories.sort((a,
        b) =&amp;gt; b - a).slice(0, 3)\n\n// get the total calories of the top three
        elves with a reduce, initial value 0 as it needs to add elements \nconst totalCaloriesTopThree
        = (calories) =&amp;gt; getTopThreeElves(calories).reduce((acc, current) =&amp;gt;
        acc + current, 0)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyloqpg/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyloqpg", "created": 1669971379.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iypp0ss", "id": "iypp0ss", "parent_id": "t1_iyloqpg", "depth": 1, "children":
        ["iypp0ss"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iylv8l4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "godrim",
        "can_mod_post": false, "created_utc": 1669977221.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_5aa7e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# R / Rstudio\n\nSmall bit of code.\n\nHardest part was getting it read right
        and then figuring out how to split into elves.\n\n    calories &lt;- as.numeric(readLines(\"AoC1.txt\"))\n    elves
        &lt;- rep(0, sum(is.na(calories))+1)\n    \n    p &lt;- 1\n    for (i in seq_along(calories))
        {\n      if (is.na(calories[i])) {\n        p &lt;- p + 1\n      } else {\n        elves[p]
        &lt;- elves[p] + calories[i]\n      }\n    }\n    \n    max(elves)\n    \n    #
        Max 3\n    sum(sort(elves, decreasing = TRUE)[1:3])", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;R / Rstudio&lt;/h1&gt;\n\n&lt;p&gt;Small bit of
        code.&lt;/p&gt;\n\n&lt;p&gt;Hardest part was getting it read right and then
        figuring out how to split into elves.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;calories
        &amp;lt;- as.numeric(readLines(&amp;quot;AoC1.txt&amp;quot;))\nelves &amp;lt;-
        rep(0, sum(is.na(calories))+1)\n\np &amp;lt;- 1\nfor (i in seq_along(calories))
        {\n  if (is.na(calories[i])) {\n    p &amp;lt;- p + 1\n  } else {\n    elves[p]
        &amp;lt;- elves[p] + calories[i]\n  }\n}\n\nmax(elves)\n\n# Max 3\nsum(sort(elves,
        decreasing = TRUE)[1:3])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylv8l4/", "subreddit_type":
        "public", "locked": false, "name": "t1_iylv8l4", "created": 1669977221.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iz4znei", "id": "iz4znei", "parent_id": "t1_iylv8l4", "depth": 1, "children":
        ["iz4znei"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 3, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iylw4iq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jossbnd",
        "can_mod_post": false, "created_utc": 1669977993.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_r52jhe1n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Go\n\n[https://github.com/jossbnd/advent\\_of\\_code\\_2022/blob/main/dec01/dec01.go](https://github.com/jossbnd/advent_of_code_2022/blob/main/dec01/dec01.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Go&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jossbnd/advent_of_code_2022/blob/main/dec01/dec01.go\"&gt;https://github.com/jossbnd/advent_of_code_2022/blob/main/dec01/dec01.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylw4iq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylw4iq", "created":
        1669977993.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iym0xxj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "underrated_asshole",
        "can_mod_post": false, "created_utc": 1669981819.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_6ujse", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\n    var maxCalories = input\n        .Split(\"\\r\\n\\r\\n\")\n        .Select(x
        =&gt; x\n            .Split(\"\\r\\n\")\n            .Where(x =&gt; x != \"\")\n            .Select(x
        =&gt; int.Parse(x))\n            .Sum()\n        ).Max();", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        maxCalories = input\n    .Split(&amp;quot;\\r\\n\\r\\n&amp;quot;)\n    .Select(x
        =&amp;gt; x\n        .Split(&amp;quot;\\r\\n&amp;quot;)\n        .Where(x
        =&amp;gt; x != &amp;quot;&amp;quot;)\n        .Select(x =&amp;gt; int.Parse(x))\n        .Sum()\n    ).Max();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iym0xxj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iym0xxj", "created":
        1669981819.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iymfr3k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wzkx",
        "can_mod_post": false, "created_utc": 1669990409.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_t1qbo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "*Python*\n\n    d = [sum(map(int,x.split())) for x in open(\"01.dat\",\"rt\").read().strip().split(\"\\n\\n\")]\n    print(max(d),sum(sorted(d)[-3:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;d
        = [sum(map(int,x.split())) for x in open(&amp;quot;01.dat&amp;quot;,&amp;quot;rt&amp;quot;).read().strip().split(&amp;quot;\\n\\n&amp;quot;)]\nprint(max(d),sum(sorted(d)[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymfr3k/",
        "subreddit_type": "public", "locked": false, "name": "t1_iymfr3k", "created":
        1669990409.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyode46", "id": "iyode46", "parent_id":
        "t1_iymfr3k", "depth": 1, "children": ["iyode46", "iyn47b3"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygg75r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "seligman99",
        "can_mod_post": false, "created_utc": 1669871051.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3syc5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python, 261 / 223\n\nAway we go!\n\n[github](https://github.com/seligman/aoc/blob/master/2022/Helpers/day_01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python, 261 / 223&lt;/p&gt;\n\n&lt;p&gt;Away
        we go!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/seligman/aoc/blob/master/2022/Helpers/day_01.py\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygg75r/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygg75r", "created":
        1669871051.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyghiim",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Slothemo",
        "can_mod_post": false, "created_utc": 1669871839.0, "send_replies": true,
        "parent_id": "t1_iygg75r", "score": 3, "author_fullname": "t2_8nfd4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "219 here on part 2. Hello leaderboard neighbour!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;219 here on part 2. Hello leaderboard neighbour!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghiim/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghiim", "created":
        1669871839.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 10, "name": "t1_iygxb35", "id": "iygxb35", "parent_id":
        "t1_iygg75r", "depth": 1, "children": ["iygxb35", "iyggn46"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggef3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kroppeb",
        "can_mod_post": false, "created_utc": 1669871167.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_iszso", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin 24/15\n\n`getLines(1).splitOnEmpty().map{it.int().sum()}.max().log()`\nand\n`getLines(1).splitOnEmpty().map{it.int().sum()}.sortedDescending().take(3).sum().log()`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin 24/15&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;getLines(1).splitOnEmpty().map{it.int().sum()}.max().log()&lt;/code&gt;\nand\n&lt;code&gt;getLines(1).splitOnEmpty().map{it.int().sum()}.sortedDescending().take(3).sum().log()&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggef3/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggef3", "created":
        1669871167.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyglwcz", "id": "iyglwcz", "parent_id":
        "t1_iyggef3", "depth": 1, "children": ["iyglwcz"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggemo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dtinth",
        "can_mod_post": false, "created_utc": 1669871170.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_9osxf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby, 44 / 26. I love Ruby, it allows me to express so much in so little
        code.\n\n```\n# Part 1\np $stdin.read.split(/\\n\\s*\\n/).map{_1.split.map(&amp;:to_i).sum}.max\n\n#
        Part 2\np $stdin.read.split(/\\n\\s*\\n/).map{_1.split.map(&amp;:to_i).sum}.sort.reverse[0...3].sum\n\n#
        Part 2 (improved)\np $stdin.read.split(/\\n\\s*\\n/).map{_1.split.sum(&amp;:to_i)}.max(3).sum\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby, 44 / 26. I love
        Ruby, it allows me to express so much in so little code.&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;h1&gt;Part
        1&lt;/h1&gt;\n\n&lt;p&gt;p $stdin.read.split(/\\n\\s*\\n/).map{_1.split.map(&amp;amp;:to_i).sum}.max&lt;/p&gt;\n\n&lt;h1&gt;Part
        2&lt;/h1&gt;\n\n&lt;p&gt;p $stdin.read.split(/\\n\\s*\\n/).map{_1.split.map(&amp;amp;:to_i).sum}.sort.reverse[0...3].sum&lt;/p&gt;\n\n&lt;h1&gt;Part
        2 (improved)&lt;/h1&gt;\n\n&lt;p&gt;p $stdin.read.split(/\\n\\s*\\n/).map{_1.split.sum(&amp;amp;:to_i)}.max(3).sum\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggemo/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggemo", "created":
        1669871170.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggs2n",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CodingAP",
        "can_mod_post": false, "created_utc": 1669871394.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2mtc4ku", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript, 148/341\n\n[GitHub](https://github.com/CodingAP/advent-of-code/tree/main/profiles/github/2022/day1)\n\nFirst
        time competing for global leaderboard! Didn''t get it but will be following
        the new megathread rules and suggestions.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Javascript, 148/341&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/CodingAP/advent-of-code/tree/main/profiles/github/2022/day1\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;First
        time competing for global leaderboard! Didn&amp;#39;t get it but will be following
        the new megathread rules and suggestions.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggs2n/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyggs2n", "created": 1669871394.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iygyis2", "id": "iygyis2", "parent_id": "t1_iyggs2n", "depth": 1, "children":
        ["iygyis2"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669873247.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyghbx9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "4HbQ",
        "can_mod_post": false, "created_utc": 1669871725.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_55chxi28", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python** (690/607). Really looking forward to this year!\n\n    f = sorted(sum(map(int,
        e.split()))\n        for e in open(0).read().split(\"\\n\\n\"))\n    \n    print(f[-1],
        sum(f[-3:]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;
        (690/607). Really looking forward to this year!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f
        = sorted(sum(map(int, e.split()))\n    for e in open(0).read().split(&amp;quot;\\n\\n&amp;quot;))\n\nprint(f[-1],
        sum(f[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghbx9/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyghbx9", "created": 1669871725.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyijc3g", "id": "iyijc3g", "parent_id": "t1_iyghbx9", "depth": 1, "children":
        ["iyijc3g"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669872058.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyghdgp", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Boojum",
        "can_mod_post": false, "created_utc": 1669871752.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1q57", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n[&lt;kosh&gt;And so it begins...&lt;/kosh&gt;](https://www.youtube.com/watch?v=3qYbVQu7YAQ)\n\nNice
        and simple, though I made a stupid mistake on Part 2 that cost me a minute.  Way
        too slow for the leaderboard either way, though.\n\n    import sys\n\n    print(
        sum( sorted( sum( int( c ) for c in e.split() )\n                        for
        e in sys.stdin.read().split( \"\\n\\n\" ) )[ -3 : ] ) )\n\nChange the -3 to
        a -1 to get the Part 1 solution.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.youtube.com/watch?v=3qYbVQu7YAQ\"&gt;&amp;lt;kosh&amp;gt;And
        so it begins...&amp;lt;/kosh&amp;gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nice
        and simple, though I made a stupid mistake on Part 2 that cost me a minute.  Way
        too slow for the leaderboard either way, though.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        sys\n\nprint( sum( sorted( sum( int( c ) for c in e.split() )\n                    for
        e in sys.stdin.read().split( &amp;quot;\\n\\n&amp;quot; ) )[ -3 : ] ) )\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Change
        the -3 to a -1 to get the Part 1 solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghdgp/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyghdgp", "created": 1669871752.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygihhd", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "delventhalz", "can_mod_post": false, "created_utc":
        1669872426.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_atjv7", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Just a little **JavaScript**
        solution with some utilities I wrote late year. 698/953\n\nPart 1:\n\n    greatest(inputs.map(sum));\n\nPart
        2:\n\n    const calories = inputs.map(sum).sort((a, b) =&gt; b - a);\n    sum(calories.slice(0,
        3));\n\n_(I have an input parser previously written which broke the input
        into nested arrays and parsed the numbers. I also have math utils like sum
        and greatest.)_", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just
        a little &lt;strong&gt;JavaScript&lt;/strong&gt; solution with some utilities
        I wrote late year. 698/953&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;greatest(inputs.map(sum));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const calories = inputs.map(sum).sort((a,
        b) =&amp;gt; b - a);\nsum(calories.slice(0, 3));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;(I
        have an input parser previously written which broke the input into nested
        arrays and parsed the numbers. I also have math utils like sum and greatest.)&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygihhd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygihhd", "created":
        1669872426.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygii8u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "morgoth1145",
        "can_mod_post": false, "created_utc": 1669872439.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4bltn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python 38/52](https://github.com/morgoth1145/advent-of-code/blob/2022-python/2022/01/solution.py)\n\nA
        bit late making this post since I was updating my tool to include a custom
        user agent. Anyway, best I''ve ever done on Day 1! I wasn''t expecting to
        have to deal with separate groups this early in the year but good old split
        by double newline works great.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/morgoth1145/advent-of-code/blob/2022-python/2022/01/solution.py\"&gt;Python
        38/52&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A bit late making this post since I
        was updating my tool to include a custom user agent. Anyway, best I&amp;#39;ve
        ever done on Day 1! I wasn&amp;#39;t expecting to have to deal with separate
        groups this early in the year but good old split by double newline works great.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygii8u/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygii8u", "created":
        1669872439.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iygk7my", "id": "iygk7my", "parent_id":
        "t1_iygii8u", "depth": 1, "children": ["iygk7my"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygksew",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FaustVX",
        "can_mod_post": false, "created_utc": 1669873903.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_gip0c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "In C#, using my own tool [https://github.com/FaustVX/adventofcode](https://github.com/FaustVX/adventofcode)\n\n[https://github.com/FaustVX/adventofcode/blob/main/2022/Day01/Solution.cs](https://github.com/FaustVX/adventofcode/blob/main/2022/Day01/Solution.cs)\n\n```C#\npublic
        object PartOne(string input)\n    =&gt; input.Split2Lines()\n        .Select(static
        elf =&gt; elf.Split().Select(int.Parse).Sum())\n        .Max();\n\npublic
        object PartTwo(string input)\n    =&gt; input.Split2Lines()\n        .Select(static
        elf =&gt; elf.Split().Select(int.Parse).Sum())\n        .OrderDescending()\n        .Take(3)\n        .Sum();\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In C#, using my own
        tool &lt;a href=\"https://github.com/FaustVX/adventofcode\"&gt;https://github.com/FaustVX/adventofcode&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/FaustVX/adventofcode/blob/main/2022/Day01/Solution.cs\"&gt;https://github.com/FaustVX/adventofcode/blob/main/2022/Day01/Solution.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;```C#\npublic
        object PartOne(string input)\n    =&amp;gt; input.Split2Lines()\n        .Select(static
        elf =&amp;gt; elf.Split().Select(int.Parse).Sum())\n        .Max();&lt;/p&gt;\n\n&lt;p&gt;public
        object PartTwo(string input)\n    =&amp;gt; input.Split2Lines()\n        .Select(static
        elf =&amp;gt; elf.Split().Select(int.Parse).Sum())\n        .OrderDescending()\n        .Take(3)\n        .Sum();\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygksew/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygksew", "created":
        1669873903.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669874919.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyglg0j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "naturaln0va",
        "can_mod_post": false, "created_utc": 1669874340.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_nfml3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Ruby** 4k/5k\n\n[https://github.com/naturaln0va/aoc2022/blob/main/day1.rb](https://github.com/naturaln0va/aoc2022/blob/main/day1.rb)\n\nI''ve
        recently begun learning Rails. So, this year I''m going to attempt to solve
        each day in a new language. I''ve already seen a lot of useful Ruby-isms like
        `take` and I''m looking forward to learning even more! I hope by the end I''m
        able to solve a problem in an elegant way, not in a brute force way like this:\n\n    def
        solve_second(input)\n      numbers = input.split(\"\\n\").map { |s| s.chomp.to_i
        }\n      \n      totals = []\n      current = 0\n      \n      for num in
        numbers\n        if num == 0\n          totals.append(current)\n          current
        = 0\n        else\n          current += num\n        end\n      end\n      \n      totals.append(current)
        if current &gt; 0\n      top_three = totals.sort.reverse.slice(0, 3)\n      \n      top_three.sum\n    end",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;
        4k/5k&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/naturaln0va/aoc2022/blob/main/day1.rb\"&gt;https://github.com/naturaln0va/aoc2022/blob/main/day1.rb&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve
        recently begun learning Rails. So, this year I&amp;#39;m going to attempt
        to solve each day in a new language. I&amp;#39;ve already seen a lot of useful
        Ruby-isms like &lt;code&gt;take&lt;/code&gt; and I&amp;#39;m looking forward
        to learning even more! I hope by the end I&amp;#39;m able to solve a problem
        in an elegant way, not in a brute force way like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        solve_second(input)\n  numbers = input.split(&amp;quot;\\n&amp;quot;).map
        { |s| s.chomp.to_i }\n\n  totals = []\n  current = 0\n\n  for num in numbers\n    if
        num == 0\n      totals.append(current)\n      current = 0\n    else\n      current
        += num\n    end\n  end\n\n  totals.append(current) if current &amp;gt; 0\n  top_three
        = totals.sort.reverse.slice(0, 3)\n\n  top_three.sum\nend\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglg0j/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyglg0j", "created":
        1669874340.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669874847.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygls4b", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fromwindowstolinux",
        "can_mod_post": false, "created_utc": 1669874569.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_271hcqs1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Newbies solution on python! I can''t believe I did AoC! I''m happy!\n\n    group
        = []\n    total_cal = 0\n    \n    with open(\"2201input.txt\") as file: \n        for
        line in file: line = line.strip(''\\n'') \n            if line == '''': \n                group.append(total_cal)
        \n                total_cal = 0 \n            else: \n                total_cal
        += int(line)\n        \n        group.sort()\n    \n    part1 = group[-1]\n    part2
        = group[-1] + group[-2] + group[-3] \n    \n    print(\"Answer for Part 1:\",
        part1) \n    print(\"Answer for Part 2:\", part2)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Newbies solution on python! I can&amp;#39;t believe
        I did AoC! I&amp;#39;m happy!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;group =
        []\ntotal_cal = 0\n\nwith open(&amp;quot;2201input.txt&amp;quot;) as file:
        \n    for line in file: line = line.strip(&amp;#39;\\n&amp;#39;) \n        if
        line == &amp;#39;&amp;#39;: \n            group.append(total_cal) \n            total_cal
        = 0 \n        else: \n            total_cal += int(line)\n\n    group.sort()\n\npart1
        = group[-1]\npart2 = group[-1] + group[-2] + group[-3] \n\nprint(&amp;quot;Answer
        for Part 1:&amp;quot;, part1) \nprint(&amp;quot;Answer for Part 2:&amp;quot;,
        part2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygls4b/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygls4b", "created":
        1669874569.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iygoknp", "id": "iygoknp", "parent_id":
        "t1_iygls4b", "depth": 1, "children": ["iygoknp", "iygxqwk"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygnnpp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "encse",
        "can_mod_post": false, "created_utc": 1669875882.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_bidtz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#   \nWe are back again, here is my solution for day 01\n\n[https://github.com/encse/adventofcode/blob/master/2022/Day01/Solution.cs](https://github.com/encse/adventofcode/blob/master/2022/Day01/Solution.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;br/&gt;\nWe are
        back again, here is my solution for day 01&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/encse/adventofcode/blob/master/2022/Day01/Solution.cs\"&gt;https://github.com/encse/adventofcode/blob/master/2022/Day01/Solution.cs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnnpp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygnnpp", "created":
        1669875882.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669876742.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygocru", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CapnFran",
        "can_mod_post": false, "created_utc": 1669876389.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_79i2w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Awk Part 1.\n\n    !/usr/bin/awk -f\n    \n    BEGIN { maxCal = 0; currentCal
        = 0 }\n    \n    { if ($1 == \"\") { maxCal = maxCal &gt; currentCal ? maxCal
        : currentCal; currentCal = 0 } }\n    \n    { currentCal += $1 }\n    \n    END
        { print maxCal }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Awk
        Part 1.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;!/usr/bin/awk -f\n\nBEGIN { maxCal
        = 0; currentCal = 0 }\n\n{ if ($1 == &amp;quot;&amp;quot;) { maxCal = maxCal
        &amp;gt; currentCal ? maxCal : currentCal; currentCal = 0 } }\n\n{ currentCal
        += $1 }\n\nEND { print maxCal }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygocru/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygocru", "created":
        1669876389.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygortf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Radiadorineitor",
        "can_mod_post": false, "created_utc": 1669876695.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_bgx2naeg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Lua:**\n\nhttps://pastebin.com/F3WuJ62v", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Lua:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/F3WuJ62v\"&gt;https://pastebin.com/F3WuJ62v&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygortf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygortf", "created":
        1669876695.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyh50rs", "id": "iyh50rs", "parent_id":
        "t1_iygortf", "depth": 1, "children": ["iyh50rs", "iyhqjna"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669877722.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygpi5x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "stikydude",
        "can_mod_post": false, "created_utc": 1669877241.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5i1tqldz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell:\n\nNew to Haskell so I feel I might have butchered this:\n\nPart
        1:\n\n    import Data.Char\n    \n    main :: IO ()\n    main = do\n      s
        &lt;- readFile \"input.txt\"\n      let linesOfFiles = lines s\n      let
        (max_calories, _) = myFunc linesOfFiles\n      print max_calories\n    \n    myFunc
        :: [String] -&gt; (Int, Int)\n    myFunc lines = foldl myFuncFold (0, 0) lines\n    \n    myFuncFold
        :: (Int, Int) -&gt; String -&gt; (Int, Int)\n    myFuncFold (max_calories,
        calories_sum) str =\n      if str == \"\" then (max max_calories calories_sum,
        0)\n      else\n          (max_calories, calories_sum + (read str::Int))\n\nPart
        2:\n\n```haskell\nimport Data.Char\nimport Data.List\nimport Data.Ord\n\nmain
        :: IO ()\nmain = do\n  s &lt;- readFile \"input.txt\"\n  let elvesCalories
        = lines s ++ [\"\"]\n  let (_, calories) = sumElvesCalories elvesCalories\n  let
        topElves = sum (take 3 (sortBy (comparing Down) calories))\n  print topElves\n\nsumElvesCalories
        :: [String] -&gt; (Int, [Int])\nsumElvesCalories lines = foldl sumCalories
        (0, []) lines\n\nsumCalories :: (Int, [Int]) -&gt; String -&gt; (Int, [Int])\nsumCalories
        (caloriesSum, calories) str =\n  if str == \"\" then (0, calories ++ [caloriesSum])\n  else\n      ((caloriesSum
        + (read str::Int)), calories)\n```", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Haskell:&lt;/p&gt;\n\n&lt;p&gt;New to Haskell so
        I feel I might have butchered this:&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Data.Char\n\nmain :: IO ()\nmain = do\n  s &amp;lt;- readFile &amp;quot;input.txt&amp;quot;\n  let
        linesOfFiles = lines s\n  let (max_calories, _) = myFunc linesOfFiles\n  print
        max_calories\n\nmyFunc :: [String] -&amp;gt; (Int, Int)\nmyFunc lines = foldl
        myFuncFold (0, 0) lines\n\nmyFuncFold :: (Int, Int) -&amp;gt; String -&amp;gt;
        (Int, Int)\nmyFuncFold (max_calories, calories_sum) str =\n  if str == &amp;quot;&amp;quot;
        then (max max_calories calories_sum, 0)\n  else\n      (max_calories, calories_sum
        + (read str::Int))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2:&lt;/p&gt;\n\n&lt;p&gt;```haskell\nimport
        Data.Char\nimport Data.List\nimport Data.Ord&lt;/p&gt;\n\n&lt;p&gt;main ::
        IO ()\nmain = do\n  s &amp;lt;- readFile &amp;quot;input.txt&amp;quot;\n  let
        elvesCalories = lines s ++ [&amp;quot;&amp;quot;]\n  let (_, calories) = sumElvesCalories
        elvesCalories\n  let topElves = sum (take 3 (sortBy (comparing Down) calories))\n  print
        topElves&lt;/p&gt;\n\n&lt;p&gt;sumElvesCalories :: [String] -&amp;gt; (Int,
        [Int])\nsumElvesCalories lines = foldl sumCalories (0, []) lines&lt;/p&gt;\n\n&lt;p&gt;sumCalories
        :: (Int, [Int]) -&amp;gt; String -&amp;gt; (Int, [Int])\nsumCalories (caloriesSum,
        calories) str =\n  if str == &amp;quot;&amp;quot; then (0, calories ++ [caloriesSum])\n  else\n      ((caloriesSum
        + (read str::Int)), calories)\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygpi5x/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygpi5x", "created": 1669877241.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 6, "name":
        "t1_iyicftc", "id": "iyicftc", "parent_id": "t1_iygpi5x", "depth": 1, "children":
        ["iyicftc"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669880707.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygpln4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rabi27",
        "can_mod_post": false, "created_utc": 1669877313.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_830ojr00", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My NodeJS/JavaScript Solution\n\n    const fs = require(''fs'');\n    const
        readline = require(''readline'');\n    const inputStream = fs.createReadStream(''./Input/0.text'');\n    const
        lineReader = readline.createInterface({\n    input: inputStream,\n    });\n    let
        currentCalories = 0;\n    let maxCalories = 0;\n    lineReader.on(''line'',
        function (line) {\n    if (line == '''') {\n    currentCalories = 0;\n    }\n    currentCalories
        += Number(line);\n    maxCalories = Math.max(maxCalories, currentCalories);\n    console.log(maxCalories);\n    });",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My NodeJS/JavaScript
        Solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const fs = require(&amp;#39;fs&amp;#39;);\nconst
        readline = require(&amp;#39;readline&amp;#39;);\nconst inputStream = fs.createReadStream(&amp;#39;./Input/0.text&amp;#39;);\nconst
        lineReader = readline.createInterface({\ninput: inputStream,\n});\nlet currentCalories
        = 0;\nlet maxCalories = 0;\nlineReader.on(&amp;#39;line&amp;#39;, function
        (line) {\nif (line == &amp;#39;&amp;#39;) {\ncurrentCalories = 0;\n}\ncurrentCalories
        += Number(line);\nmaxCalories = Math.max(maxCalories, currentCalories);\nconsole.log(maxCalories);\n});\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygpln4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygpln4", "created":
        1669877313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iygs679", "id": "iygs679", "parent_id":
        "t1_iygpln4", "depth": 1, "children": ["iygs679", "iyh87ep"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygq3eu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wace001",
        "can_mod_post": false, "created_utc": 1669877685.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1j9tc3ax", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin 220/1683:\n\n    fun part1() = input.split(\"\\n\\n\").map { ints(it).sum()
        }.maxOf { it }\n    \n    fun part2() = input.split(\"\\n\\n\").map { ints(it).sum()
        }.sortedDescending().take(3).sum()", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Kotlin 220/1683:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fun
        part1() = input.split(&amp;quot;\\n\\n&amp;quot;).map { ints(it).sum() }.maxOf
        { it }\n\nfun part2() = input.split(&amp;quot;\\n\\n&amp;quot;).map { ints(it).sum()
        }.sortedDescending().take(3).sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygq3eu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygq3eu", "created":
        1669877685.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygq8yp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Rascal_Two",
        "can_mod_post": false, "created_utc": 1669877802.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_kxv37", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [TypeScript](https://github.com/RascalTwo/AdventOfCode/blob/master/2022/solutions/01/solve.ts)
        (1091/764)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a
        href=\"https://github.com/RascalTwo/AdventOfCode/blob/master/2022/solutions/01/solve.ts\"&gt;TypeScript&lt;/a&gt;
        (1091/764)&lt;/h1&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygq8yp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygq8yp", "created":
        1669877802.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygr5ot",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ropecrawler",
        "can_mod_post": false, "created_utc": 1669878502.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_bih7f", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust: https://github.com/ropewalker/advent_of_code_2022/blob/master/src/day01.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust: &lt;a href=\"https://github.com/ropewalker/advent_of_code_2022/blob/master/src/day01.rs\"&gt;https://github.com/ropewalker/advent_of_code_2022/blob/master/src/day01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygr5ot/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygr5ot", "created":
        1669878502.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygs4zx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jenarvaezg",
        "can_mod_post": false, "created_utc": 1669879280.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_c3se4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\n[https://github.com/jenarvaezg/aoc2022/blob/main/src/solutions/day1.rs#L8](https://github.com/jenarvaezg/aoc2022/blob/main/src/solutions/day1.rs#L8)\n\nReusing
        my project structure from 2020, but I will likely change it in the following
        days", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jenarvaezg/aoc2022/blob/main/src/solutions/day1.rs#L8\"&gt;https://github.com/jenarvaezg/aoc2022/blob/main/src/solutions/day1.rs#L8&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Reusing
        my project structure from 2020, but I will likely change it in the following
        days&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygs4zx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygs4zx", "created":
        1669879280.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygs99u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "quodponb",
        "can_mod_post": false, "created_utc": 1669879376.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ffrz8lb2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3: I tried solving it in a different language first, but eventually
        my fingers were itching to type out the solution in python. It was done in
        four lines using `sorted`, but then I decided to instead write a function
        `get_top_n`:\n\n    def get_top_n(numbers, n):\n        top_group = numbers[:1]\n        for
        number in numbers[1:]:\n            i = 0\n            while any(top &lt;
        number for top in top_group[i:]):\n                i += 1\n            top_group
        = (top_group[:i] + [number] + top_group[i:])[-n:]\n        return top_group",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3: I tried solving
        it in a different language first, but eventually my fingers were itching to
        type out the solution in python. It was done in four lines using &lt;code&gt;sorted&lt;/code&gt;,
        but then I decided to instead write a function &lt;code&gt;get_top_n&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        get_top_n(numbers, n):\n    top_group = numbers[:1]\n    for number in numbers[1:]:\n        i
        = 0\n        while any(top &amp;lt; number for top in top_group[i:]):\n            i
        += 1\n        top_group = (top_group[:i] + [number] + top_group[i:])[-n:]\n    return
        top_group\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygs99u/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygs99u", "created":
        1669879376.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670136928.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygsgdd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Rust\n\n    const INPUT: &amp;str = include_str!(\"inputs/day01.txt\");\n    \n    pub
        fn day01() {\n        let (max, max3) = sum3_calories(INPUT);\n        println!(\"Max:
        {max}\\nMax 3 foods: {max3}\");\n    }\n    \n    fn sum3_calories(input:
        &amp;str) -&gt; (u32, u32) {\n        let (mut max, mut mid, mut low) = (0,
        0, 0);\n        let sums = input\n            .split(\"\\n\\n\")\n            .map(|elf|
        elf.lines().map(|l| l.parse::&lt;u32&gt;().unwrap()).sum());\n        for
        sum in sums {\n            if sum &gt; max {\n                low = mid;\n                mid
        = max;\n                max = sum;\n            } else if sum &gt; mid {\n                low
        = mid;\n                mid = sum;\n            } else if sum &gt; low {\n                low
        = sum;\n            }\n        }\n        (max, max + mid + low)\n    }",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iygsgdd",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        INPUT: &amp;amp;str = include_str!(&amp;quot;inputs/day01.txt&amp;quot;);\n\npub
        fn day01() {\n    let (max, max3) = sum3_calories(INPUT);\n    println!(&amp;quot;Max:
        {max}\\nMax 3 foods: {max3}&amp;quot;);\n}\n\nfn sum3_calories(input: &amp;amp;str)
        -&amp;gt; (u32, u32) {\n    let (mut max, mut mid, mut low) = (0, 0, 0);\n    let
        sums = input\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|elf|
        elf.lines().map(|l| l.parse::&amp;lt;u32&amp;gt;().unwrap()).sum());\n    for
        sum in sums {\n        if sum &amp;gt; max {\n            low = mid;\n            mid
        = max;\n            max = sum;\n        } else if sum &amp;gt; mid {\n            low
        = mid;\n            mid = sum;\n        } else if sum &amp;gt; low {\n            low
        = sum;\n        }\n    }\n    (max, max + mid + low)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygsgdd/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669879537.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669879537.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyuh17e", "id": "iyuh17e", "parent_id":
        "t1_iygsgdd", "depth": 1, "children": ["iyuh17e"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygt7fy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oliver-binns",
        "can_mod_post": false, "created_utc": 1669880160.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_cqjp7lg3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Swift** ([as a Swift Package with unit testing](https://github.com/Oliver-Binns/Advent-of-Code/blob/2022/Sources/AdventOfCode/Day%201/Day1.swift))\n\n    struct
        Day1 {\n        let caloriesCarried: [Int]\n        \n        init(input:
        String) {\n            caloriesCarried = input\n                .components(separatedBy:
        \"\\n\\n\")\n                .map {\n                    $0\n                        .components(separatedBy:
        .newlines)\n                        .compactMap(Int.init)\n                        .reduce(0,
        +)\n                }\n                .sorted(by: &gt;)\n        }\n    \n        func
        calculatePartOne() -&gt; Int {\n            caloriesCarried[0]\n        }\n    \n        func
        calculatePartTwo() -&gt; Int {\n            caloriesCarried[0...2].reduce(0,
        +)\n        }\n    }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt;
        (&lt;a href=\"https://github.com/Oliver-Binns/Advent-of-Code/blob/2022/Sources/AdventOfCode/Day%201/Day1.swift\"&gt;as
        a Swift Package with unit testing&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct
        Day1 {\n    let caloriesCarried: [Int]\n\n    init(input: String) {\n        caloriesCarried
        = input\n            .components(separatedBy: &amp;quot;\\n\\n&amp;quot;)\n            .map
        {\n                $0\n                    .components(separatedBy: .newlines)\n                    .compactMap(Int.init)\n                    .reduce(0,
        +)\n            }\n            .sorted(by: &amp;gt;)\n    }\n\n    func calculatePartOne()
        -&amp;gt; Int {\n        caloriesCarried[0]\n    }\n\n    func calculatePartTwo()
        -&amp;gt; Int {\n        caloriesCarried[0...2].reduce(0, +)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygt7fy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygt7fy", "created":
        1669880160.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670151272.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygtt5s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Iain_M_Norman",
        "can_mod_post": false, "created_utc": 1669880657.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_iu374", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "F#  \n\n    let part1 = \n        input.Split \"\\r\\n\\r\\n\"\n        |&gt;
        Seq.map (fun x -&gt; x.Split \"\\r\\n\")\n        |&gt; Seq.map (fun x -&gt;
        Seq.sumBy int x)\n        |&gt; Seq.max\n\n    let part2 = \n        input.Split
        \"\\r\\n\\r\\n\"\n        |&gt; Seq.map (fun x -&gt; x.Split \"\\r\\n\")\n        |&gt;
        Seq.map (fun x -&gt; Seq.sumBy int x)\n        |&gt; Seq.sortDescending\n        |&gt;
        Seq.take 3\n        |&gt; Seq.sum", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;F#  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let part1
        = \n    input.Split &amp;quot;\\r\\n\\r\\n&amp;quot;\n    |&amp;gt; Seq.map
        (fun x -&amp;gt; x.Split &amp;quot;\\r\\n&amp;quot;)\n    |&amp;gt; Seq.map
        (fun x -&amp;gt; Seq.sumBy int x)\n    |&amp;gt; Seq.max\n\nlet part2 = \n    input.Split
        &amp;quot;\\r\\n\\r\\n&amp;quot;\n    |&amp;gt; Seq.map (fun x -&amp;gt; x.Split
        &amp;quot;\\r\\n&amp;quot;)\n    |&amp;gt; Seq.map (fun x -&amp;gt; Seq.sumBy
        int x)\n    |&amp;gt; Seq.sortDescending\n    |&amp;gt; Seq.take 3\n    |&amp;gt;
        Seq.sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtt5s/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygtt5s", "created":
        1669880657.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 10, "name": "t1_iyugyr4", "id": "iyugyr4", "parent_id":
        "t1_iygtt5s", "depth": 1, "children": ["iyugyr4", "iyh26tm"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygu8w6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sotsoguk",
        "can_mod_post": false, "created_utc": 1669881026.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_mv3g3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\nThis was a good problem to look up heapq again.\n\n    calories
        = []\n    curr_calories = 0\n    for l in lines:\n        if l == \"\":\n            calories.append(curr_calories)\n            curr_calories
        = 0\n        else:\n            curr_calories += int(l, base=10)\n    calories.append(curr_calories)\n\n    #
        part1 &amp; 2\n    heapq.heapify(calories)\n\n    part1 = max(calories)\n    part2
        = sum(heapq.nlargest(3, calories))\n\nFull code: [Github](https://github.com/sotsoguk/adventOfCode2022/blob/0cc56634170c5036582c2dae8e84a8e34ea81203/python/day01/day01-heap.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;This
        was a good problem to look up heapq again.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;calories
        = []\ncurr_calories = 0\nfor l in lines:\n    if l == &amp;quot;&amp;quot;:\n        calories.append(curr_calories)\n        curr_calories
        = 0\n    else:\n        curr_calories += int(l, base=10)\ncalories.append(curr_calories)\n\n#
        part1 &amp;amp; 2\nheapq.heapify(calories)\n\npart1 = max(calories)\npart2
        = sum(heapq.nlargest(3, calories))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full
        code: &lt;a href=\"https://github.com/sotsoguk/adventOfCode2022/blob/0cc56634170c5036582c2dae8e84a8e34ea81203/python/day01/day01-heap.py\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygu8w6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygu8w6", "created":
        1669881026.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669882252.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygu9im", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RadiantPurpose3028",
        "can_mod_post": false, "created_utc": 1669881040.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6wdsrm5j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Dataweave (Mulesoft)**\n\nIf you want to try it yourself, use the DataWeave
        Playground on [https://developer.mulesoft.com/learn/dataweave/](https://developer.mulesoft.com/learn/dataweave/)\n\n    %dw
        2.0\n    output application/json\n    var elves = payload splitBy \"\\n\\n\"
        map {calories: sum($ splitBy \"\\n\") as Number}\n    ---\n    {\n        part1:
        (elves orderBy $.calories)[-1].calories,\n        part2: sum((elves orderBy
        $.calories)[-1 to -3].calories)\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Dataweave (Mulesoft)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If
        you want to try it yourself, use the DataWeave Playground on &lt;a href=\"https://developer.mulesoft.com/learn/dataweave/\"&gt;https://developer.mulesoft.com/learn/dataweave/&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;%dw
        2.0\noutput application/json\nvar elves = payload splitBy &amp;quot;\\n\\n&amp;quot;
        map {calories: sum($ splitBy &amp;quot;\\n&amp;quot;) as Number}\n---\n{\n    part1:
        (elves orderBy $.calories)[-1].calories,\n    part2: sum((elves orderBy $.calories)[-1
        to -3].calories)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygu9im/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygu9im", "created": 1669881040.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyguelm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "ThreshBob", "can_mod_post": false, "created_utc":
        1669881157.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_142vm7", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Typescript\nhttps://github.com/Maciejlys/aoc2022/blob/master/src/1/index.ts",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript\n&lt;a href=\"https://github.com/Maciejlys/aoc2022/blob/master/src/1/index.ts\"&gt;https://github.com/Maciejlys/aoc2022/blob/master/src/1/index.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyguelm/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyguelm", "created":
        1669881157.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygul8j",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "stonebr00k",
        "can_mod_post": false, "created_utc": 1669881315.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5zblkw1s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [T-SQL](https://github.com/stonebr00k/aoc/blob/main/2022/day01.sql)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://github.com/stonebr00k/aoc/blob/main/2022/day01.sql\"&gt;T-SQL&lt;/a&gt;&lt;/h1&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygul8j/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygul8j", "created":
        1669881315.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygumyg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "toastedstapler",
        "can_mod_post": false, "created_utc": 1669881357.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ck238", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\n\n[github link](https://github.com/jchevertonwynne/advent-of-code-2022/blob/266ae2eade95c053cb9897dd906b4b284dd36f67/src/days/day01.rs)\n\nthis
        was prettier until i decided to make it fast, perhaps later i''ll find more
        more improvements to make\n\n    pub fn run(input: &amp;''static str) -&gt;
        anyhow::Result&lt;DayResult&gt; {\n        let mut cal_sums = [0; 4];\n    \n        let
        input = bstr::BStr::new(input);\n    \n        let mut sum = 0;\n        for
        line in input.lines() {\n            if line.is_empty() {\n                cal_sums[0]
        = sum;\n                cal_sums.sort();\n                sum = 0;\n            }
        else {\n                sum += byte_slice_to_int::&lt;u64&gt;(line);\n            }\n        }\n    \n        cal_sums[0]
        = sum;\n        cal_sums.sort();\n    \n        let part1 = cal_sums[3];\n        let
        part2 = cal_sums[1] + cal_sums[2] + cal_sums[3];\n    \n        (part1, part2).into_result()\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jchevertonwynne/advent-of-code-2022/blob/266ae2eade95c053cb9897dd906b4b284dd36f67/src/days/day01.rs\"&gt;github
        link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;this was prettier until i decided to
        make it fast, perhaps later i&amp;#39;ll find more more improvements to make&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub
        fn run(input: &amp;amp;&amp;#39;static str) -&amp;gt; anyhow::Result&amp;lt;DayResult&amp;gt;
        {\n    let mut cal_sums = [0; 4];\n\n    let input = bstr::BStr::new(input);\n\n    let
        mut sum = 0;\n    for line in input.lines() {\n        if line.is_empty()
        {\n            cal_sums[0] = sum;\n            cal_sums.sort();\n            sum
        = 0;\n        } else {\n            sum += byte_slice_to_int::&amp;lt;u64&amp;gt;(line);\n        }\n    }\n\n    cal_sums[0]
        = sum;\n    cal_sums.sort();\n\n    let part1 = cal_sums[3];\n    let part2
        = cal_sums[1] + cal_sums[2] + cal_sums[3];\n\n    (part1, part2).into_result()\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygumyg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygumyg", "created":
        1669881357.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyhdbfv", "id": "iyhdbfv", "parent_id":
        "t1_iygumyg", "depth": 1, "children": ["iyhdbfv"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygv06u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jubnzv",
        "can_mod_post": false, "created_utc": 1669881671.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_11lzgz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[OCaml solution](https://github.com/jubnzv/aoc2022/blob/master/day01/day01.ml):\n\n```\nopen
        Core\n\nmodule Part1 = struct\n  In_channel.with_file \"day01/input.txt\"
        ~f:(fun ic -&gt;\n      In_channel.fold_lines ic ~init:(0, 0) ~f:(fun (cur,
        max) line -&gt;\n          if String.is_empty line then (0, Int.max max cur)\n          else
        (cur + int_of_string line, max))\n      |&gt; fun (_, max) -&gt; Printf.printf
        \"Part 1: %d\\n\" max)\nend\n\nmodule Part2 = struct\n  In_channel.with_file
        \"day01/input.txt\" ~f:(fun ic -&gt;\n      In_channel.fold_lines ic ~init:(0,
        []) ~f:(fun (cur, acc) line -&gt;\n          if String.is_empty line then
        (0, acc @ [ cur ])\n          else (cur + int_of_string line, acc))\n      |&gt;
        fun (_, vs) -&gt;\n      let (a :: b :: c :: _) = List.sort vs ~compare:Int.descending
        in\n      Printf.printf \"Part 2: %d\\n\" (a + b + c))\nend [@warning \"-8\"]\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/jubnzv/aoc2022/blob/master/day01/day01.ml\"&gt;OCaml
        solution&lt;/a&gt;:&lt;/p&gt;\n\n&lt;p&gt;```\nopen Core&lt;/p&gt;\n\n&lt;p&gt;module
        Part1 = struct\n  In&lt;em&gt;channel.with_file &amp;quot;day01/input.txt&amp;quot;
        ~f:(fun ic -&amp;gt;\n      In_channel.fold_lines ic ~init:(0, 0) ~f:(fun
        (cur, max) line -&amp;gt;\n          if String.is_empty line then (0, Int.max
        max cur)\n          else (cur + int_of_string line, max))\n      |&amp;gt;
        fun (&lt;/em&gt;, max) -&amp;gt; Printf.printf &amp;quot;Part 1: %d\\n&amp;quot;
        max)\nend&lt;/p&gt;\n\n&lt;p&gt;module Part2 = struct\n  In&lt;em&gt;channel.with_file
        &amp;quot;day01/input.txt&amp;quot; ~f:(fun ic -&amp;gt;\n      In_channel.fold_lines
        ic ~init:(0, []) ~f:(fun (cur, acc) line -&amp;gt;\n          if String.is_empty
        line then (0, acc @ [ cur ])\n          else (cur + int_of_string line, acc))\n      |&amp;gt;
        fun (&lt;/em&gt;, vs) -&amp;gt;\n      let (a :: b :: c :: _) = List.sort
        vs ~compare:Int.descending in\n      Printf.printf &amp;quot;Part 2: %d\\n&amp;quot;
        (a + b + c))\nend [@warning &amp;quot;-8&amp;quot;]\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygv06u/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygv06u", "created":
        1669881671.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyugxdk", "id": "iyugxdk", "parent_id":
        "t1_iygv06u", "depth": 1, "children": ["iyugxdk"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669882262.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygvd37", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "geekagog",
        "can_mod_post": false, "created_utc": 1669881979.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5yepvwcy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n    with open(''../input.txt'', ''r'') as f:\n        data
        = f.read().strip().split(\"\\n\\n\")\n    f.close()\n    \n    elf_totals
        = []  \n    for elf_calories in data:  \n        elf_totals.append(sum(int(number)
        for number in elf_calories.split(\"\\n\")))  \n    \n    elf_totals.sort()  \n    \n    print(f''Part
        1: {elf_totals[-1]}'')    \n    print(f''Part 2: {sum(elf_totals[-3:])}'')",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;../input.txt&amp;#39;, &amp;#39;r&amp;#39;) as f:\n    data
        = f.read().strip().split(&amp;quot;\\n\\n&amp;quot;)\nf.close()\n\nelf_totals
        = []  \nfor elf_calories in data:  \n    elf_totals.append(sum(int(number)
        for number in elf_calories.split(&amp;quot;\\n&amp;quot;)))  \n\nelf_totals.sort()  \n\nprint(f&amp;#39;Part
        1: {elf_totals[-1]}&amp;#39;)    \nprint(f&amp;#39;Part 2: {sum(elf_totals[-3:])}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygvd37/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygvd37", "created":
        1669881979.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygvepx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SESteve",
        "can_mod_post": false, "created_utc": 1669882017.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_27pd8fn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Rust\n\n[Rust Day 1](https://github.com/SSteve/AdventOfCode/blob/e1dd7d39ccb020e041ed2a87589900799d9a31d1/Advent2022/day1/src/main.rs)\n\nI''m
        just starting to learn Rust. For anything I want to do, I need to look it
        up in the documentation. So I''ll be looking at a lot of other folks'' solutions
        to get tips.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Rust&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SSteve/AdventOfCode/blob/e1dd7d39ccb020e041ed2a87589900799d9a31d1/Advent2022/day1/src/main.rs\"&gt;Rust
        Day 1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m just starting to learn Rust.
        For anything I want to do, I need to look it up in the documentation. So I&amp;#39;ll
        be looking at a lot of other folks&amp;#39; solutions to get tips.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygvepx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygvepx", "created":
        1669882017.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygvg47",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Anton-Chernyshov",
        "can_mod_post": false, "created_utc": 1669882050.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_os7v7nds", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[github.com/Anton-Chernyshov/Advent-Of-Code-2022](https://github.com/Anton-Chernyshov/Advent-Of-Code-2022)\n\npython3",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Anton-Chernyshov/Advent-Of-Code-2022\"&gt;github.com/Anton-Chernyshov/Advent-Of-Code-2022&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;python3&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygvg47/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygvg47", "created":
        1669882050.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670561215.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygwf7e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mstksg",
        "can_mod_post": false, "created_utc": 1669882893.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5cbmr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Haskell solution :) [https://github.com/mstksg/advent-of-code-2022/blob/main/reflections-out/day01.md](https://github.com/mstksg/advent-of-code-2022/blob/main/reflections-out/day01.md)\n\nDay
        1''s are usually pretty good for Haskell''s stream processing, and this is
        no exception :)\n\nTo get the list of elf calories, we split on the double
        newlines, and take the sum of the lines of each group.\n\n    import Data.List.Split
        (splitOn)\n    \n    getCalories :: String -&gt; [Int]\n    getCalories =
        map (sum . map read . lines) . splitOn \"\\n\\n\"\n\nFor part 1, this involves
        just finding the maximum.\n\n    part1 :: String -&gt; Int\n    part1 = maximum
        . getCalories\n\nFor part 2, we find the sum of the top 3 values:\n\n    part2
        :: String -&gt; Int\n    part2 = sum . take 3 . reverse . sort . getCalories",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Haskell solution
        :) &lt;a href=\"https://github.com/mstksg/advent-of-code-2022/blob/main/reflections-out/day01.md\"&gt;https://github.com/mstksg/advent-of-code-2022/blob/main/reflections-out/day01.md&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Day
        1&amp;#39;s are usually pretty good for Haskell&amp;#39;s stream processing,
        and this is no exception :)&lt;/p&gt;\n\n&lt;p&gt;To get the list of elf calories,
        we split on the double newlines, and take the sum of the lines of each group.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        Data.List.Split (splitOn)\n\ngetCalories :: String -&amp;gt; [Int]\ngetCalories
        = map (sum . map read . lines) . splitOn &amp;quot;\\n\\n&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For
        part 1, this involves just finding the maximum.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part1
        :: String -&amp;gt; Int\npart1 = maximum . getCalories\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For
        part 2, we find the sum of the top 3 values:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part2
        :: String -&amp;gt; Int\npart2 = sum . take 3 . reverse . sort . getCalories\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygwf7e/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygwf7e", "created":
        1669882893.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyugtzr", "id": "iyugtzr", "parent_id":
        "t1_iygwf7e", "depth": 1, "children": ["iyugtzr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygwwax",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Radiant_Rip_5205",
        "can_mod_post": false, "created_utc": 1669883305.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_33bqrsbb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3: https://github.com/kresimir-lukin/AdventOfCode2022/blob/main/day01.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3: &lt;a href=\"https://github.com/kresimir-lukin/AdventOfCode2022/blob/main/day01.py\"&gt;https://github.com/kresimir-lukin/AdventOfCode2022/blob/main/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygwwax/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygwwax", "created":
        1669883305.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygwx9e",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Radiant_Rip_5205",
        "can_mod_post": false, "created_utc": 1669883329.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_33bqrsbb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3: https://github.com/kresimir-lukin/AdventOfCode2022/blob/main/day01.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3: &lt;a href=\"https://github.com/kresimir-lukin/AdventOfCode2022/blob/main/day01.py\"&gt;https://github.com/kresimir-lukin/AdventOfCode2022/blob/main/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygwx9e/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygwx9e", "created":
        1669883329.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygxiqu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "needpie",
        "can_mod_post": false, "created_utc": 1669883859.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6kbm0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust** \ud83e\udd80:\n\nhttps://github.com/jaimeliew1/Advent-of-Code-2022/blob/master/src/bin/day01.rs\n\n\n    use
        itertools::Itertools;\n\n    fn parse_input(filename: &amp;str) -&gt; Vec&lt;Vec&lt;u64&gt;&gt;
        {\n        let contents = std::fs::read_to_string(filename).expect(\"can''t
        find file\");\n        contents\n            .split(\"\\n\\n\")\n            .map(|par|
        par.lines().map(|l| l.parse().unwrap()).collect())\n            .collect()\n    }\n\n    fn
        solve() -&gt; (u64, u64) {\n        let data = parse_input(\"input/day01.txt\");\n        let
        top_three: Vec&lt;u64&gt; = data\n            .iter()\n            .map(|chunk|
        chunk.iter().sum())\n            .sorted()\n            .rev()\n            .take(3)\n            .collect();\n\n        (top_three[0],
        top_three.iter().sum())\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt; \ud83e\udd80:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jaimeliew1/Advent-of-Code-2022/blob/master/src/bin/day01.rs\"&gt;https://github.com/jaimeliew1/Advent-of-Code-2022/blob/master/src/bin/day01.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        itertools::Itertools;\n\nfn parse_input(filename: &amp;amp;str) -&amp;gt;
        Vec&amp;lt;Vec&amp;lt;u64&amp;gt;&amp;gt; {\n    let contents = std::fs::read_to_string(filename).expect(&amp;quot;can&amp;#39;t
        find file&amp;quot;);\n    contents\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|par|
        par.lines().map(|l| l.parse().unwrap()).collect())\n        .collect()\n}\n\nfn
        solve() -&amp;gt; (u64, u64) {\n    let data = parse_input(&amp;quot;input/day01.txt&amp;quot;);\n    let
        top_three: Vec&amp;lt;u64&amp;gt; = data\n        .iter()\n        .map(|chunk|
        chunk.iter().sum())\n        .sorted()\n        .rev()\n        .take(3)\n        .collect();\n\n    (top_three[0],
        top_three.iter().sum())\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygxiqu/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygxiqu", "created": 1669883859.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygzep7", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "stormblooper", "can_mod_post": false,
        "created_utc": 1669885581.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_6o6gd", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "**Idris**\n\n    module
        Main\n    \n    import Data.List\n    import Data.List1\n    import Data.String\n    import
        System\n    import System.File\n    \n    maxList : Ord ty =&gt; List ty -&gt;
        Maybe ty\n    maxList = map (foldr1 max) . List1.fromList\n    \n    getLineGroups
        : String -&gt; List (List String)\n    getLineGroups = forget . split (==
        \"\") . forget . split (== ''\\n'') . trim\n    \n    ElfInventory : Type\n    ElfInventory
        = List Integer\n    \n    parseInventories : String -&gt; Maybe (List ElfInventory)\n    parseInventories
        = traverse (traverse parseInteger) . getLineGroups\n    \n    solve'' : List
        ElfInventory -&gt; Maybe Integer\n    solve'' = maxList . map sum\n    \n    solve
        : String -&gt; Maybe Integer\n    solve = (&gt;&gt;= solve'') . parseInventories\n    \n    solve2''
        : List ElfInventory -&gt; Integer\n    solve2'' = sum . take 3 . reverse .
        sort . map sum\n    \n    solve2 : String -&gt; Maybe Integer\n    solve2
        = map solve2'' . parseInventories\n    \n    main : IO ()\n    main = do\n      Right
        contents &lt;- readFile \"day1.txt\" | Left error =&gt; putStrLn (\"Error
        reading file: \" ++ show error)\n      Just answer1 &lt;- pure (solve contents)
        | Nothing =&gt; putStrLn \"Error solving puzzle 1\"\n      putStrLn (\"Part
        1: \" ++ show answer1)\n      Just answer2 &lt;- pure (solve2 contents) |
        Nothing =&gt; putStrLn \"Error solving puzzle 2\"\n      putStrLn (\"Part
        2: \" ++ show answer2)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Idris&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;module
        Main\n\nimport Data.List\nimport Data.List1\nimport Data.String\nimport System\nimport
        System.File\n\nmaxList : Ord ty =&amp;gt; List ty -&amp;gt; Maybe ty\nmaxList
        = map (foldr1 max) . List1.fromList\n\ngetLineGroups : String -&amp;gt; List
        (List String)\ngetLineGroups = forget . split (== &amp;quot;&amp;quot;) .
        forget . split (== &amp;#39;\\n&amp;#39;) . trim\n\nElfInventory : Type\nElfInventory
        = List Integer\n\nparseInventories : String -&amp;gt; Maybe (List ElfInventory)\nparseInventories
        = traverse (traverse parseInteger) . getLineGroups\n\nsolve&amp;#39; : List
        ElfInventory -&amp;gt; Maybe Integer\nsolve&amp;#39; = maxList . map sum\n\nsolve
        : String -&amp;gt; Maybe Integer\nsolve = (&amp;gt;&amp;gt;= solve&amp;#39;)
        . parseInventories\n\nsolve2&amp;#39; : List ElfInventory -&amp;gt; Integer\nsolve2&amp;#39;
        = sum . take 3 . reverse . sort . map sum\n\nsolve2 : String -&amp;gt; Maybe
        Integer\nsolve2 = map solve2&amp;#39; . parseInventories\n\nmain : IO ()\nmain
        = do\n  Right contents &amp;lt;- readFile &amp;quot;day1.txt&amp;quot; | Left
        error =&amp;gt; putStrLn (&amp;quot;Error reading file: &amp;quot; ++ show
        error)\n  Just answer1 &amp;lt;- pure (solve contents) | Nothing =&amp;gt;
        putStrLn &amp;quot;Error solving puzzle 1&amp;quot;\n  putStrLn (&amp;quot;Part
        1: &amp;quot; ++ show answer1)\n  Just answer2 &amp;lt;- pure (solve2 contents)
        | Nothing =&amp;gt; putStrLn &amp;quot;Error solving puzzle 2&amp;quot;\n  putStrLn
        (&amp;quot;Part 2: &amp;quot; ++ show answer2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygzep7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygzep7", "created":
        1669885581.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh134y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "iskypitts",
        "can_mod_post": false, "created_utc": 1669887135.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_13hx11", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Julia](https://github.com/iskyd/advent-of-code-julia/blob/main/2022/day1/main.jl)
        using ResumableFunctions", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/iskyd/advent-of-code-julia/blob/main/2022/day1/main.jl\"&gt;Julia&lt;/a&gt;
        using ResumableFunctions&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh134y/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh134y", "created":
        1669887135.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh1sbe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Marterich",
        "can_mod_post": false, "created_utc": 1669887779.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_kqb31", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3:\n\nhttps://github.com/Marterich/AoC/tree/main/2022/day01", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Marterich/AoC/tree/main/2022/day01\"&gt;https://github.com/Marterich/AoC/tree/main/2022/day01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh1sbe/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh1sbe", "created":
        1669887779.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670149676.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh23v3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AX-11",
        "can_mod_post": false, "created_utc": 1669888075.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1abi1omc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python solution without sorted()\n\n    with open(\"1\\input.txt\") as f:\n        input
        = f.read().splitlines()\n    \n    # make elf list\n    elves = [[]]\n    for
        line in input:\n        if line == \"\":\n            # new elf\n            elves.append([])\n        else:\n            #
        add calories to last elf\n            elves[-1].append(int(line))\n    \n    \n    calories
        = [sum(elf) for elf in elves]\n    \n    \n    # find top n highest calories\n    n
        = 3\n    highest = [0]*n\n    for elf in calories:\n        min_highest =
        min(highest)\n        # replace weakest value of highest if there is a higher
        elf\n        if(elf &gt; min_highest):\n            highest[highest.index(min_highest)]
        = elf\n    \n    \n    print(highest, sum(highest))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python solution without sorted()&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;1\\input.txt&amp;quot;) as f:\n    input = f.read().splitlines()\n\n#
        make elf list\nelves = [[]]\nfor line in input:\n    if line == &amp;quot;&amp;quot;:\n        #
        new elf\n        elves.append([])\n    else:\n        # add calories to last
        elf\n        elves[-1].append(int(line))\n\n\ncalories = [sum(elf) for elf
        in elves]\n\n\n# find top n highest calories\nn = 3\nhighest = [0]*n\nfor
        elf in calories:\n    min_highest = min(highest)\n    # replace weakest value
        of highest if there is a higher elf\n    if(elf &amp;gt; min_highest):\n        highest[highest.index(min_highest)]
        = elf\n\n\nprint(highest, sum(highest))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh23v3/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh23v3", "created":
        1669888075.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyugni8", "id": "iyugni8", "parent_id":
        "t1_iyh23v3", "depth": 1, "children": ["iyugni8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh254k",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "braoult",
        "can_mod_post": false, "created_utc": 1669888108.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_147vhmgr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Pure Bash**\n\n[code](https://github.com/braoult/advent-of-code/blob/main/2022/day01/aoc.bash)\n\n[helper
        code](https://github.com/braoult/advent-of-code/blob/main/2022/day01/common.bash)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Pure Bash&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/braoult/advent-of-code/blob/main/2022/day01/aoc.bash\"&gt;code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/braoult/advent-of-code/blob/main/2022/day01/common.bash\"&gt;helper
        code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh254k/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh254k", "created":
        1669888108.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh27hi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SurplusSix",
        "can_mod_post": false, "created_utc": 1669888168.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_7453u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Golang - wrote some generic collections funcs for this year, woo generics\n\n    package
        main\n    \n    import (\n    \t\"fmt\"\n    \t\"os\"\n    \t\"strconv\"\n    \t\"strings\"\n    \n    \t.
        \"github.com/alsm/aoc2022/aoc/collections\"\n    )\n    \n    func main()
        {\n    \td, _ := os.ReadFile(\"day1.txt\")\n    \tinput := Map(strings.Split(string(d),
        \"\\n\\n\"), func(s string) []int {\n    \t\treturn Map(strings.Split(s, \"\\n\"),
        func(n string) int {\n    \t\t\tv, _ := strconv.Atoi(n)\n    \t\t\treturn
        v\n    \t\t})\n    \t})\n    \n    \tfmt.Println(do1(input))\n    \tfmt.Println(do2(input))\n    }\n    \n    func
        do1(i [][]int) int {\n    \treturn Max(Map(i, Sum[int]))\n    }\n    \n    func
        do2(i [][]int) int {\n    \treturn Sum(MaxN(Map(i, Sum[int]), 3))\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Golang - wrote some
        generic collections funcs for this year, woo generics&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;strconv&amp;quot;\n    &amp;quot;strings&amp;quot;\n\n    .
        &amp;quot;github.com/alsm/aoc2022/aoc/collections&amp;quot;\n)\n\nfunc main()
        {\n    d, _ := os.ReadFile(&amp;quot;day1.txt&amp;quot;)\n    input := Map(strings.Split(string(d),
        &amp;quot;\\n\\n&amp;quot;), func(s string) []int {\n        return Map(strings.Split(s,
        &amp;quot;\\n&amp;quot;), func(n string) int {\n            v, _ := strconv.Atoi(n)\n            return
        v\n        })\n    })\n\n    fmt.Println(do1(input))\n    fmt.Println(do2(input))\n}\n\nfunc
        do1(i [][]int) int {\n    return Max(Map(i, Sum[int]))\n}\n\nfunc do2(i [][]int)
        int {\n    return Sum(MaxN(Map(i, Sum[int]), 3))\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh27hi/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh27hi", "created":
        1669888168.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670329829.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh2ga8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Nuhser",
        "can_mod_post": false, "created_utc": 1669888390.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_il1tidd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in **Python 3**:\n\n[https://github.com/Nuhser/Advent-of-Code/blob/master/2022/day01.py](https://github.com/Nuhser/Advent-of-Code/blob/master/2022/day01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in &lt;strong&gt;Python
        3&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/Nuhser/Advent-of-Code/blob/master/2022/day01.py\"&gt;https://github.com/Nuhser/Advent-of-Code/blob/master/2022/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh2ga8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh2ga8", "created":
        1669888390.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669889592.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh37cn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "IF_YOU_READ_THIS_V1",
        "can_mod_post": false, "created_utc": 1669889101.0, "send_replies": false,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_55xfcv8u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C#** LINQ\n\n    public string SolvePart1(string input) =&gt; \n        Solve(input)\n        .Max()\n        .ToString();\n\n    public
        string SolvePart2(string input) =&gt; \n        Solve(input)\n        .OrderByDescending(i
        =&gt; i)\n        .Take(3)\n        .Sum()\n        .ToString();\n\n    private
        List&lt;int&gt; Solve(string input) =&gt;\n            input\n            .Split(\"\\n\")\n            .Aggregate(new
        List&lt;int&gt; { 0 }, (results, s) =&gt;\n            {\n                if
        (s == \"\")\n                {\n                    results.Add(0);\n                }\n                else\n                {\n                    results[^1]
        += int.Parse(s);\n                }\n\n                return results;\n            });",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt;
        LINQ&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public string SolvePart1(string input)
        =&amp;gt; \n    Solve(input)\n    .Max()\n    .ToString();\n\npublic string
        SolvePart2(string input) =&amp;gt; \n    Solve(input)\n    .OrderByDescending(i
        =&amp;gt; i)\n    .Take(3)\n    .Sum()\n    .ToString();\n\nprivate List&amp;lt;int&amp;gt;
        Solve(string input) =&amp;gt;\n        input\n        .Split(&amp;quot;\\n&amp;quot;)\n        .Aggregate(new
        List&amp;lt;int&amp;gt; { 0 }, (results, s) =&amp;gt;\n        {\n            if
        (s == &amp;quot;&amp;quot;)\n            {\n                results.Add(0);\n            }\n            else\n            {\n                results[^1]
        += int.Parse(s);\n            }\n\n            return results;\n        });\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh37cn/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh37cn", "created":
        1669889101.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyh4iwh", "id": "iyh4iwh", "parent_id":
        "t1_iyh37cn", "depth": 1, "children": ["iyh4iwh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670143567.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh3qk1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Derailed_Dash",
        "can_mod_post": false, "created_utc": 1669889588.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2yc8i1wi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n    \"\"\"\n    Author: Darren\n    Date: 01/12/2022\n\n    Solving
        https://adventofcode.com/2022/day/1\n\n    Our input data contains lines of
        numbers, with occasional empty lines.\n    - Each line is a number, representing
        the calories for an elf meal.\n    - Each contiguous block of lines represents
        the meals for a given elf.\n    - The empty lines separate one elf from the
        next.\n\n    Part 1:\n\n    How many calories in total, for the elf with the
        most calories?\n\n    Solution:\n    - Read the data, and split by empty lines,
        to return a list of str.\n    - Each element is a str containing all the numbers
        for a given elf.\n    - Split these numbers, convert them to int with map(),
        and then sum them.\n\n    Part 2:\n\n    How many calories in total for the
        top three elves?\n\n    Solution:\n    - Sort the list.\n    - Add up the
        last three.\n\n    \"\"\"\n    from pathlib import Path\n    import time\n\n    SCRIPT_DIR
        = Path(__file__).parent\n    # INPUT_FILE = Path(SCRIPT_DIR, \"input/sample_input.txt\")\n    INPUT_FILE
        = Path(SCRIPT_DIR, \"input/input.txt\")\n\n    def main():\n        with open(INPUT_FILE,
        mode=\"rt\") as f:\n            elf_meals = f.read().split(\"\\n\\n\") # split
        on empty lines\n        \n        elf_calories = [] # store total calories
        for each elf\n        for elf in elf_meals:\n            calories = sum(map(int,
        elf.splitlines()))\n            elf_calories.append(calories)\n            \n        print(f\"Part
        1: {max(elf_calories)}\")\n        \n        elf_calories = sorted(elf_calories)\n        print(f\"Part
        2: {sum(elf_calories[-3:])}\")\n        \n\n    if __name__ == \"__main__\":\n        t1
        = time.perf_counter()\n        main()\n        t2 = time.perf_counter()\n        print(f\"Execution
        time: {t2 - t1:0.4f} seconds\")\n\n\n- See on [GitHub](https://github.com/derailed-dash/Advent-of-Code/blob/master/src/AoC_2022/d01_calorie_counting/elf_calories.py)\n-
        See my [Advent of Code Python Walkthroughs](https://aoc.just2good.co.uk/)\n-
        See my [AoC post on Medium](https://medium.com/@derailed.dash/advent-of-code-2022-4a4b82d4f87)
        and feel free to subscribe! (I''ll be adding Google Cloud content.)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;\nAuthor:
        Darren\nDate: 01/12/2022\n\nSolving https://adventofcode.com/2022/day/1\n\nOur
        input data contains lines of numbers, with occasional empty lines.\n- Each
        line is a number, representing the calories for an elf meal.\n- Each contiguous
        block of lines represents the meals for a given elf.\n- The empty lines separate
        one elf from the next.\n\nPart 1:\n\nHow many calories in total, for the elf
        with the most calories?\n\nSolution:\n- Read the data, and split by empty
        lines, to return a list of str.\n- Each element is a str containing all the
        numbers for a given elf.\n- Split these numbers, convert them to int with
        map(), and then sum them.\n\nPart 2:\n\nHow many calories in total for the
        top three elves?\n\nSolution:\n- Sort the list.\n- Add up the last three.\n\n&amp;quot;&amp;quot;&amp;quot;\nfrom
        pathlib import Path\nimport time\n\nSCRIPT_DIR = Path(__file__).parent\n#
        INPUT_FILE = Path(SCRIPT_DIR, &amp;quot;input/sample_input.txt&amp;quot;)\nINPUT_FILE
        = Path(SCRIPT_DIR, &amp;quot;input/input.txt&amp;quot;)\n\ndef main():\n    with
        open(INPUT_FILE, mode=&amp;quot;rt&amp;quot;) as f:\n        elf_meals = f.read().split(&amp;quot;\\n\\n&amp;quot;)
        # split on empty lines\n\n    elf_calories = [] # store total calories for
        each elf\n    for elf in elf_meals:\n        calories = sum(map(int, elf.splitlines()))\n        elf_calories.append(calories)\n\n    print(f&amp;quot;Part
        1: {max(elf_calories)}&amp;quot;)\n\n    elf_calories = sorted(elf_calories)\n    print(f&amp;quot;Part
        2: {sum(elf_calories[-3:])}&amp;quot;)\n\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    t1
        = time.perf_counter()\n    main()\n    t2 = time.perf_counter()\n    print(f&amp;quot;Execution
        time: {t2 - t1:0.4f} seconds&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;See
        on &lt;a href=\"https://github.com/derailed-dash/Advent-of-Code/blob/master/src/AoC_2022/d01_calorie_counting/elf_calories.py\"&gt;GitHub&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;See
        my &lt;a href=\"https://aoc.just2good.co.uk/\"&gt;Advent of Code Python Walkthroughs&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;See
        my &lt;a href=\"https://medium.com/@derailed.dash/advent-of-code-2022-4a4b82d4f87\"&gt;AoC
        post on Medium&lt;/a&gt; and feel free to subscribe! (I&amp;#39;ll be adding
        Google Cloud content.)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh3qk1/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyh3qk1", "created": 1669889588.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iyugkgi", "id": "iyugkgi", "parent_id": "t1_iyh3qk1", "depth": 1, "children":
        ["iyugkgi"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh47kb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BomBatty",
        "can_mod_post": false, "created_utc": 1669890014.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_158asm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Typescript\n\n    const input = await Deno.readTextFile(\"./input.txt\");\n\n    const
        inputSplit = input.split(/\\r?\\n/).map((string: string) =&gt; +string);\n\n    const
        allElves = [];\n    let elfItems: Array&lt;number&gt; = [];\n\n    for (let
        i = 0; i &lt; inputSplit.length; i++) {\n      if (inputSplit[i]) {\n        elfItems.push(inputSplit[i]);\n      }
        else {\n        allElves.push(elfItems);\n        elfItems = [];\n      }\n    }\n\n    const
        allElvesTotalledOrdered = allElves\n      .map((elfItems: Array&lt;number&gt;)
        =&gt; {\n        return elfItems.reduce((acc: number, curr: number) =&gt;
        acc + curr, 0);\n      })\n      .sort(function (a, b) {\n        return b
        - a;\n      });\n\n    const largestElf = allElvesTotalledOrdered[0];\n    const
        top3Elves = allElvesTotalledOrdered\n      .splice(0, 3)\n      .reduce((acc:
        number, curr: number) =&gt; acc + curr, 0);\n\n    console.log(largestElf,
        top3Elves);", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Typescript&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        input = await Deno.readTextFile(&amp;quot;./input.txt&amp;quot;);\n\nconst
        inputSplit = input.split(/\\r?\\n/).map((string: string) =&amp;gt; +string);\n\nconst
        allElves = [];\nlet elfItems: Array&amp;lt;number&amp;gt; = [];\n\nfor (let
        i = 0; i &amp;lt; inputSplit.length; i++) {\n  if (inputSplit[i]) {\n    elfItems.push(inputSplit[i]);\n  }
        else {\n    allElves.push(elfItems);\n    elfItems = [];\n  }\n}\n\nconst
        allElvesTotalledOrdered = allElves\n  .map((elfItems: Array&amp;lt;number&amp;gt;)
        =&amp;gt; {\n    return elfItems.reduce((acc: number, curr: number) =&amp;gt;
        acc + curr, 0);\n  })\n  .sort(function (a, b) {\n    return b - a;\n  });\n\nconst
        largestElf = allElvesTotalledOrdered[0];\nconst top3Elves = allElvesTotalledOrdered\n  .splice(0,
        3)\n  .reduce((acc: number, curr: number) =&amp;gt; acc + curr, 0);\n\nconsole.log(largestElf,
        top3Elves);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh47kb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh47kb", "created":
        1669890014.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 670, "name": "t1_iyh48zd", "id": "iyh48zd", "parent_id":
        "t3_z9ezjb", "depth": 0, "children": ["iyh48zd", "iyh4d67", "iyh6v07", "iyh5gmk",
        "iyh6ipy", "iyh903q", "iyh8y4t", "iyh7vgw", "iyh7kil", "iyhawrr", "iyhd2b7",
        "iyhhx5j", "iyhap4o", "iyh9nau", "iyhdmga", "iyh8acg", "iyhckmi", "iyhcntx",
        "iyht2wb", "iyhmipo", "iyhe9x7", "iyhly7i", "iyi0vt0", "iyhp7bp", "iyj0pbg",
        "iyhf4pi", "iyhmu7g", "iyhdm18", "iyhazll", "iyhepar", "iyhg6wl", "iyhi0hs",
        "iyl2era", "iyi5ph1", "iyhihj8", "iyhta1w", "iyhu377", "iyjttql", "iyizv63",
        "iyhwkux", "iyhucho", "iyhrqsb", "iyhj14i", "iyiptcs", "iyhoas8", "iyig2js",
        "iyig3lr", "iyib1g3", "iyih8nf", "iyjfcnq", "iyjll1x", "iyiuhlp", "iyi3voe",
        "iyiev6x", "iyhwhv8", "iyhpim5", "iyhfj16", "iyiq59r", "iyhjx47", "iyk33x5",
        "iyirah1", "iyhmy8u", "iyizsac", "iyi2ubt", "iyi7wuv", "iyhwp80", "iylofbp",
        "iykeihg", "iyifepj", "iyibwag", "iyhkd91", "iykqjpw", "iyjk8d1", "iyj82ao",
        "iyhviwa", "iykhf2b", "iykgq29", "iyjoviq", "iyk2msm", "iyi61u1", "iyjfjcb",
        "iyirrcf", "iyj1jqy", "iyhtniy", "iyioig2", "iyglvip", "iyityzs", "iyhbekg",
        "iyk8vik", "iyjyxup", "iyiu5e2", "iyikovq", "iyjbqi4", "iyj68z1", "iykiwgh",
        "iyjfti2", "iykqwil", "iyjkm2g", "iykp93u", "iykih4i", "iyk5zef", "iyk964p",
        "iylvz2d", "iykhrv4", "iylbsbk", "iyk5rz1", "iyjh0by", "iyjz08s", "iyjxybu",
        "iyjlma8", "iykxscx", "iyk2sbf", "iyj4wrk", "iyiyv19", "iyh2xk0", "iyhncoa",
        "iylhx8m", "iyjsr7s", "iykuhvk", "iyhtfc5", "iyhs4pw", "iyj12wv", "iygihp4",
        "iygi1lg", "iygo7is", "iyjmlnl", "iygq9ex", "iyglca6", "iyilp2v", "iyjca4f",
        "iyn5own", "iylkrc2", "iygjpdu", "iygikbe", "iyjuk4z", "iyi9xmp", "iymtg1y",
        "iygot51", "iygjuhs", "iyh5f37", "iyml7p5", "iynanji", "iyki2hv", "iyilrwd",
        "iyiew8r", "iykr360", "iylrykp", "iyghyk7", "iylyrfw", "iylt0c2", "iyip2ky",
        "iyk589m", "iyk1xr7", "iylrdmd", "iyl6d5z", "iygrb24", "iyjg18i", "iyidtjc",
        "iyj1e8h", "iyghrha", "iyhqtl8", "iyj8sit", "iyhhlqt", "iygtn82", "iyjd08l",
        "iyh7ecp", "iygi2zb", "iyjpndh", "iyixtuz", "iygiahl", "iyggqcs", "iyjhii0",
        "iyjo6pc", "iygzzzp", "iyj8urz", "iyjhb6d", "iygkf3o", "iylpn1h", "iygh7jy",
        "iyghk2v", "iyhjfge", "iyghijn", "iygsprw", "iygilxa", "iygsonm", "iylbokf",
        "iygonqk", "iyghlbt", "iyjmzei", "iylsfbg", "iyitfmg", "iyh9v1e", "iygretv",
        "iygire9", "iyggvx5", "iygnqw6", "iygi5xr", "iymm9y8", "iykv833", "iygtowk",
        "iygifp2", "iyippe0", "iyifpzv", "iyghf4q", "iyl3nhm", "iyk142r", "iyjhev8",
        "iykr6rb", "iyk2rga", "iyl15he", "iykhd3j", "iyik00f", "iykbd6u", "iygj0fa",
        "iyik796", "iymeok0", "iylvnvr", "iyja14o", "iykillk", "iyh9s69", "iygiuff",
        "iyhej8p", "iyi1l73", "iykukm3", "iygiboc", "iyghgsh", "iyh53if", "iyjjk6w",
        "iyhlomk", "iygogzm", "iygvchv", "iyh40eu", "iygkieb", "iygizh5", "iylsah5",
        "iyjqs6b", "iylruwg", "iyjphct", "iygj0gb", "iykl2k8", "iygu7yp", "iyhnl8j",
        "iyghs29", "iygnjv0", "iyjsuh9", "iygh4ev", "iykf2rh", "iyit8hi", "iyhp9bc",
        "iygojh4", "iyjrdd3", "iyh3qkb", "iyiijcf", "iyh94pi", "iyk8tpt", "iygnrsm",
        "iyjqdky", "iyjjlwa", "iyjo0p4", "iygqbgt", "iygj91q", "iykopsr", "iyh85kz",
        "iyhu7hi", "iygk7ty", "iygpb55", "iyhdc65", "iygtqba", "iygxrp3", "iyjmvn5",
        "iygjsuh", "iyjq2ke", "iygl6mf", "iym1oim", "iyj6m98", "iygh1vn", "iyju5na",
        "iyggvrp", "iygk71s", "iyhclqb", "iyl7t9c", "iygx5l6", "iygipfe", "iyiuahb",
        "iyj8hzx", "iymnxs4", "iyndnm7", "iyh0jn5", "iygnie1", "iygikhh", "iyhbnku",
        "iyilg4g", "iyghnsf", "iyh2jzk", "iyjrlwy", "iygllw5", "iyh83ef", "iygjyh0",
        "iykjata", "iyh9vm9", "iylldan", "iylrzr2", "iyi6v6k", "iygk2q0", "iykca4b",
        "iyk38p6", "iyjrsrt", "iyjosmn", "iygi5po", "iygits6", "iyh4msz", "iykcmen",
        "iylr8nj", "iyjtywa", "iyjt0id", "iyj0l1g", "iyhg2qj", "iygty01", "iyhfatq",
        "iyh01nr", "iylrl58", "iyjon13", "iyiwnvn", "iygk3a4", "iygnov1", "iyh9uw5",
        "iyid3mu", "iymoetz", "iyiuevh", "iyglepl", "iyjj4z7", "iylenyb", "iyifjlg",
        "iyjjbuu", "iyhfzli", "iyjtc5m", "iyi4yrd", "iygld5k", "iygyccj", "iygjzud",
        "iygmznb", "iyjr2fv", "iyisc1l", "iyh87eq", "iygu4na", "iyhd6hi", "iygidqj",
        "iyhcc5a", "iygk841", "iyk30jj", "iyjes91", "iyna5us", "iylvtwj", "iyjqxua",
        "iyj05dc", "iyhnrc6", "iyh55x1", "iyjo9dr", "iylbtc9", "iyicmdx", "iyj5tvu",
        "iygk5ym", "iyhaofh", "iyijotf", "iygrr0v", "iyjfvg4", "iygvdkc", "iyk2b5l",
        "iyglpww", "iygl9gz", "iykh5as", "iygqxbs", "iyll509", "iylahzo", "iyigaiq",
        "iykkyaf", "iygjmjd", "iyjcn65", "iyh4jvk", "iyjuml8", "iygiuk8", "iyiuj74",
        "iyh7ico", "iyj6eg1", "iygtz22", "iyhr51u", "iyjoxe5", "iyizzou", "iygnnt2",
        "iyijtn7", "iygifh5", "iyndflq", "iyjdyny", "iylrvts", "iygibn4", "iygwcfb",
        "iyk3370", "iyhc157", "iygiar9", "iylmebf", "iyls2ng", "iyjp7up", "iyk42v2",
        "iygh5ur", "iyl783x", "iygnqq5", "iymrn28", "iyifqq9", "iyjs7bn", "iygnsdd",
        "iyjqo0n", "iyjpq76", "iyk0fpn"]}}], true]], [0, 12, "attr", "things"], [12,
        13, "call", ["t1_iyi25hy"]], [13, 14, "attr", "focus"], [14, 15, "call", []],
        [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr", "filter"],
        [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"], [20, 21,
        "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:36 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:37 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=8DY0NYxnnYNEOSQDZG; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:37 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyh48zd,iyh4d67,iyh6v07,iyh5gmk,iyh6ipy,iyh903q,iyh8y4t,iyh7vgw,iyh7kil,iyhawrr,iyhd2b7,iyhhx5j,iyhap4o,iyh9nau,iyhdmga,iyh8acg,iyhckmi,iyhcntx,iyht2wb,iyhmipo,iyhe9x7,iyhly7i,iyi0vt0,iyhp7bp,iyj0pbg,iyhf4pi,iyhmu7g,iyhdm18,iyhazll,iyhepar,iyhg6wl,iyhi0hs,iyl2era,iyi5ph1,iyhihj8,iyhta1w,iyhu377,iyjttql,iyizv63,iyhwkux,iyhucho,iyhrqsb,iyhj14i,iyiptcs,iyhoas8,iyig2js,iyig3lr,iyib1g3,iyih8nf,iyjfcnq,iyjll1x,iyiuhlp,iyi3voe,iyiev6x,iyhwhv8,iyhpim5,iyhfj16,iyiq59r,iyhjx47,iyk33x5,iyirah1,iyhmy8u,iyizsac,iyi2ubt,iyi7wuv,iyhwp80,iylofbp,iykeihg,iyifepj,iyibwag,iyhkd91,iykqjpw,iyjk8d1,iyj82ao,iyhviwa,iykhf2b,iykgq29,iyjoviq,iyk2msm,iyi61u1,iyjfjcb,iyirrcf,iyj1jqy,iyhtniy,iyioig2,iyglvip,iyityzs,iyhbekg,iyk8vik,iyjyxup,iyiu5e2,iyikovq,iyjbqi4,iyj68z1,iykiwgh,iyjfti2,iykqwil,iyjkm2g,iykp93u,iykih4i,iyk5zef,iyk964p,iylvz2d,iykhrv4,iylbsbk,iyk5rz1,iyjh0by,iyjz08s,iyjxybu,iyjlma8,iykxscx,iyk2sbf,iyj4wrk,iyiyv19,iyh2xk0,iyhncoa,iylhx8m,iyjsr7s,iykuhvk,iyhtfc5,iyhs4pw,iyj12wv,iygihp4,iygi1lg,iygo7is,iyjmlnl,iygq9ex,iyglca6,iyilp2v,iyjca4f,iyn5own,iylkrc2,iygjpdu,iygikbe,iyjuk4z,iyi9xmp,iymtg1y,iygot51,iygjuhs,iyh5f37,iyml7p5,iynanji,iyki2hv,iyilrwd,iyiew8r,iykr360,iylrykp,iyghyk7,iylyrfw,iylt0c2,iyip2ky,iyk589m,iyk1xr7,iylrdmd,iyl6d5z,iygrb24,iyjg18i,iyidtjc,iyj1e8h,iyghrha,iyhqtl8,iyj8sit,iyhhlqt,iygtn82,iyjd08l,iyh7ecp,iygi2zb,iyjpndh,iyixtuz,iygiahl,iyggqcs,iyjhii0,iyjo6pc,iygzzzp,iyj8urz,iyjhb6d,iygkf3o,iylpn1h,iygh7jy,iyghk2v,iyhjfge,iyghijn,iygsprw,iygilxa,iygsonm,iylbokf,iygonqk,iyghlbt,iyjmzei,iylsfbg,iyitfmg,iyh9v1e,iygretv,iygire9,iyggvx5,iygnqw6,iygi5xr,iymm9y8,iykv833,iygtowk,iygifp2,iyippe0,iyifpzv,iyghf4q,iyl3nhm,iyk142r,iyjhev8,iykr6rb,iyk2rga,iyl15he,iykhd3j,iyik00f,iykbd6u,iygj0fa,iyik796,iymeok0,iylvnvr,iyja14o,iykillk,iyh9s69,iygiuff,iyhej8p,iyi1l73,iykukm3,iygiboc,iyghgsh,iyh53if,iyjjk6w,iyhlomk,iygogzm,iygvchv,iyh40eu,iygkieb,iygizh5,iylsah5,iyjqs6b,iylruwg,iyjphct,iygj0gb,iykl2k8,iygu7yp,iyhnl8j,iyghs29,iygnjv0,iyjsuh9,iygh4ev,iykf2rh,iyit8hi,iyhp9bc,iygojh4,iyjrdd3,iyh3qkb,iyiijcf,iyh94pi,iyk8tpt,iygnrsm,iyjqdky,iyjjlwa,iyjo0p4,iygqbgt,iygj91q,iykopsr,iyh85kz,iyhu7hi,iygk7ty,iygpb55,iyhdc65,iygtqba,iygxrp3,iyjmvn5,iygjsuh,iyjq2ke,iygl6mf,iym1oim,iyj6m98,iygh1vn,iyju5na,iyggvrp,iygk71s,iyhclqb,iyl7t9c,iygx5l6,iygipfe,iyiuahb,iyj8hzx,iymnxs4,iyndnm7,iyh0jn5,iygnie1,iygikhh,iyhbnku,iyilg4g,iyghnsf,iyh2jzk,iyjrlwy,iygllw5,iyh83ef,iygjyh0,iykjata,iyh9vm9,iylldan,iylrzr2,iyi6v6k,iygk2q0,iykca4b,iyk38p6,iyjrsrt,iyjosmn,iygi5po,iygits6,iyh4msz,iykcmen,iylr8nj,iyjtywa,iyjt0id,iyj0l1g,iyhg2qj,iygty01,iyhfatq,iyh01nr,iylrl58,iyjon13,iyiwnvn,iygk3a4,iygnov1,iyh9uw5,iyid3mu,iymoetz,iyiuevh,iyglepl,iyjj4z7,iylenyb,iyifjlg,iyjjbuu,iyhfzli,iyjtc5m,iyi4yrd,iygld5k,iygyccj,iygjzud,iygmznb,iyjr2fv,iyisc1l,iyh87eq,iygu4na,iyhd6hi,iygidqj,iyhcc5a,iygk841,iyk30jj,iyjes91,iyna5us,iylvtwj,iyjqxua,iyj05dc,iyhnrc6,iyh55x1,iyjo9dr,iylbtc9,iyicmdx,iyj5tvu,iygk5ym,iyhaofh,iyijotf,iygrr0v,iyjfvg4,iygvdkc,iyk2b5l,iyglpww,iygl9gz,iykh5as,iygqxbs,iyll509,iylahzo,iyigaiq,iykkyaf,iygjmjd,iyjcn65,iyh4jvk,iyjuml8,iygiuk8,iyiuj74,iyh7ico,iyj6eg1,iygtz22,iyhr51u,iyjoxe5,iyizzou,iygnnt2,iyijtn7,iygifh5,iyndflq,iyjdyny,iylrvts,iygibn4,iygwcfb,iyk3370,iyhc157,iygiar9,iylmebf,iyls2ng,iyjp7up,iyk42v2,iygh5ur,iyl783x,iygnqq5,iymrn28,iyifqq9,iyjs7bn,iygnsdd,iyjqo0n,iyjpq76,iyk0fpn
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '41323'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfuvm0wo.2.1741472677447.Z0FBQUFBQm56TU9sTFhvNFoxOE5vNUJzS01KTWs1aTVzMVFHbTZzUE51UVg2d3ZIMzZyd2g2Z1U1QTF5cWtQdEVEblpacFBUTzlZNzc5TkN3ejVvVjljQ1drQkV2Ylh2TmU2Ny1pVUZiV3pxRjY5R21KRTdtVlFZNXJBS1RQLW51S3pHTFV5WjFvaWQ;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:37
        GMT; secure, session_tracker=moqnkckarmpbikjcbf.0.1741472677458.Z0FBQUFBQm56TU9sTkw4NzBuRzhlWjVrUGV3bDVUX0pJU0dWWnNUVnlpSW93U09iUDliQUY0RjVJRDNXdDBfWlBuUERoSEF0U0RrTTlielM1eFZ2UzhlUTZZZlpOY0w4b0tEUF84ZlhKblh6Y1ZwMFZ3UVNzOEdKMWVDbWZZOENEUzV6MnV1NUdkaF8;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:37
        GMT; secure, edgebucket=3dv2RMJX8T3wDYSwqc; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '36'
      x-ratelimit-remaining:
      - '64.0'
      x-ratelimit-reset:
      - '322'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:37 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh48zd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "barsa00",
        "can_mod_post": false, "created_utc": 1669890047.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3qcodcb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Rust\n\n[Day 1 solution on github](https://github.com/barsa2000/AOC2022/blob/main/src/day01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Rust&lt;/h2&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/barsa2000/AOC2022/blob/main/src/day01.rs\"&gt;Day
        1 solution on github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh48zd/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyh48zd", "created": 1669890047.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyh4d67", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "red_shifter", "can_mod_post": false, "created_utc":
        1669890151.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_n75u8", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**PYTHON 3**\n\n    def
        get_elf_list(item_list):\n        elf_list = []\n        elf = 0\n        for
        item in item_list:\n            if item:\n                item = int(item)\n                elf
        += item\n            else:\n                elf_list.append(elf)\n                elf
        = 0\n        elf_list.append(elf)\n        return elf_list\n    \n    def
        part_1_solution(day_1_input):\n        elf_list = get_elf_list(day_1_input)\n        max_elf
        = max(elf_list)\n        max_elf_num = elf_list.index(max_elf)+1\n        return
        max_elf_num, max_elf\n    \n    def part_2_solution(day_1_input):\n        elf_list
        = get_elf_list(day_1_input)\n        elf_list.sort(reverse=True)\n        return
        elf_list[0] + elf_list[1] + elf_list[2]\n    \n    # Getting input\n    f
        = open(\"day-1-input.txt\", \"r\")\n    lines = f.readlines()\n    day_1_input
        = [line.rstrip() for line in lines]\n    f.close()\n       \n    # Finding
        Part 1 solution\n    print(part_1_solution(day_1_input))\n    \n    # Finding
        Part 2 solution\n    print(part_2_solution(day_1_input))", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;PYTHON 3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        get_elf_list(item_list):\n    elf_list = []\n    elf = 0\n    for item in
        item_list:\n        if item:\n            item = int(item)\n            elf
        += item\n        else:\n            elf_list.append(elf)\n            elf
        = 0\n    elf_list.append(elf)\n    return elf_list\n\ndef part_1_solution(day_1_input):\n    elf_list
        = get_elf_list(day_1_input)\n    max_elf = max(elf_list)\n    max_elf_num
        = elf_list.index(max_elf)+1\n    return max_elf_num, max_elf\n\ndef part_2_solution(day_1_input):\n    elf_list
        = get_elf_list(day_1_input)\n    elf_list.sort(reverse=True)\n    return elf_list[0]
        + elf_list[1] + elf_list[2]\n\n# Getting input\nf = open(&amp;quot;day-1-input.txt&amp;quot;,
        &amp;quot;r&amp;quot;)\nlines = f.readlines()\nday_1_input = [line.rstrip()
        for line in lines]\nf.close()\n\n# Finding Part 1 solution\nprint(part_1_solution(day_1_input))\n\n#
        Finding Part 2 solution\nprint(part_2_solution(day_1_input))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh4d67/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh4d67", "created":
        1669890151.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh5gmk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Etsi0",
        "can_mod_post": false, "created_utc": 1669891147.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4wyjw973", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I used Python to get the array so I could use it in JS.\n`py:`\n```\nwith
        open(\"py/text.txt\") as file:\n    data = [i for i in file.read().strip().split(\"\\n\")]\n    print(data)\n```\n`js:`\n```\nvar
        data = []\nvar sum = 0;\nvar arraySum = [];\nvar finallSum = 0;\n\nfor(i =
        0; i != data.length+1; i++) {\n    if(data[i] == '''') {\n        arraySum.push(sum);\n        sum
        = 0; \n    }\n    if(data[i] != '''') {\n        sum += parseInt(data[i]);\n    }\n    if(i
        == (data.length)) {\n        start();\n    }\n}\n\nfunction start() {\n    for(x
        = 0; x != arraySum.length; x++) {\n        if(finallSum &lt;= parseInt(arraySum[x]))
        {\n            finallSum = arraySum[x];\n            console.log(finallSum);\n        }\n        if(parseInt(arraySum[x])
        &gt;= 69102) {\n            console.log(''asd: ''+arraySum[x])\n        }\n    }\n}\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I used Python to get
        the array so I could use it in JS.\n&lt;code&gt;py:&lt;/code&gt;\n&lt;code&gt;\nwith
        open(&amp;quot;py/text.txt&amp;quot;) as file:\n    data = [i for i in file.read().strip().split(&amp;quot;\\n&amp;quot;)]\n    print(data)\n&lt;/code&gt;\n&lt;code&gt;js:&lt;/code&gt;\n```\nvar
        data = []\nvar sum = 0;\nvar arraySum = [];\nvar finallSum = 0;&lt;/p&gt;\n\n&lt;p&gt;for(i
        = 0; i != data.length+1; i++) {\n    if(data[i] == &amp;#39;&amp;#39;) {\n        arraySum.push(sum);\n        sum
        = 0; \n    }\n    if(data[i] != &amp;#39;&amp;#39;) {\n        sum += parseInt(data[i]);\n    }\n    if(i
        == (data.length)) {\n        start();\n    }\n}&lt;/p&gt;\n\n&lt;p&gt;function
        start() {\n    for(x = 0; x != arraySum.length; x++) {\n        if(finallSum
        &amp;lt;= parseInt(arraySum[x])) {\n            finallSum = arraySum[x];\n            console.log(finallSum);\n        }\n        if(parseInt(arraySum[x])
        &amp;gt;= 69102) {\n            console.log(&amp;#39;asd: &amp;#39;+arraySum[x])\n        }\n    }\n}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh5gmk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh5gmk", "created":
        1669891147.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyuggxg", "id": "iyuggxg", "parent_id":
        "t1_iyh5gmk", "depth": 1, "children": ["iyuggxg"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh6ipy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ash30342",
        "can_mod_post": false, "created_utc": 1669892074.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_b0diq7qb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Java\n\n    private int getResult(final List&lt;String&gt; input, final
        boolean part1) {\r\n        final List&lt;Integer&gt; cals = new ArrayList&lt;&gt;();\r\n        int
        currentTotal = 0;\r\n        for (int i = 0; i &lt; input.size(); i++) {\r\n            final
        String line = input.get(i);\r\n            if (line.isEmpty() || i == input.size()
        - 1) {\r\n                cals.add(currentTotal);\r\n                currentTotal
        = 0;\r\n            } else {\r\n                currentTotal += Integer.parseInt(line);\r\n            }\r\n        }\r\n        Collections.sort(cals,
        Comparator.reverseOrder());\r\n        return cals.stream().mapToInt(Integer::intValue).limit(part1
        ? 1 : 3).sum();\r\n}\n\nJust calculate the totals for all elves, and then
        get the top 1 (part 1) or top 3 (part 2).", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Java&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;private
        int getResult(final List&amp;lt;String&amp;gt; input, final boolean part1)
        {\n    final List&amp;lt;Integer&amp;gt; cals = new ArrayList&amp;lt;&amp;gt;();\n    int
        currentTotal = 0;\n    for (int i = 0; i &amp;lt; input.size(); i++) {\n        final
        String line = input.get(i);\n        if (line.isEmpty() || i == input.size()
        - 1) {\n            cals.add(currentTotal);\n            currentTotal = 0;\n        }
        else {\n            currentTotal += Integer.parseInt(line);\n        }\n    }\n    Collections.sort(cals,
        Comparator.reverseOrder());\n    return cals.stream().mapToInt(Integer::intValue).limit(part1
        ? 1 : 3).sum();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;Just
        calculate the totals for all elves, and then get the top 1 (part 1) or top
        3 (part 2).&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh6ipy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh6ipy", "created":
        1669892074.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh6v07",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "KT421",
        "can_mod_post": false, "created_utc": 1669892371.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_8tz5u", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# R\n\nhttps://github.com/KT421/advent-of-code/blob/main/2022/dec01.R", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;R&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/KT421/advent-of-code/blob/main/2022/dec01.R\"&gt;https://github.com/KT421/advent-of-code/blob/main/2022/dec01.R&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh6v07/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh6v07", "created":
        1669892371.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh7kil", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyh7kil", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh7kil/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669892960.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669892960.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyugf95", "id": "iyugf95", "parent_id":
        "t1_iyh7kil", "depth": 1, "children": ["iyugf95", "iyhlpp8"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh7vgw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hdf1986",
        "can_mod_post": false, "created_utc": 1669893215.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_q5cribn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Ruby:**\n\nPart 1:\n\n[https://github.com/hdf1986/advent-of-code/blob/master/2022/1/1.rb](https://github.com/hdf1986/advent-of-code/blob/master/2022/1/1.rb)\n\nPart
        2:\n\n[https://github.com/hdf1986/advent-of-code/blob/master/2022/1/2.rb](https://github.com/hdf1986/advent-of-code/blob/master/2022/1/2.rb)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Ruby:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/hdf1986/advent-of-code/blob/master/2022/1/1.rb\"&gt;https://github.com/hdf1986/advent-of-code/blob/master/2022/1/1.rb&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/hdf1986/advent-of-code/blob/master/2022/1/2.rb\"&gt;https://github.com/hdf1986/advent-of-code/blob/master/2022/1/2.rb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh7vgw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh7vgw", "created":
        1669893215.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669906676.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh8acg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thecircleisround",
        "can_mod_post": false, "created_utc": 1669893550.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_dwlo1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n    from aocd import get_data\n    import json\n    \n    class
        Solution:\n        def __init__(self):\n            self.calories = json.loads(''[[''+get_data(day=1,
        year=2022).replace(''\\n\\n'', ''],['').replace(''\\n'','','') + '']]'')\n            self.individual_calories
        = sorted(map(sum, self.calories), reverse=True)\n    \n        def part_one(self):\n            print(f''Solution
        to part one: {self.individual_calories[0]}'')\n    \n        def part_two(self):\n            print(f''Solution
        to part two: {sum(self.individual_calories[:3])}'')\n    \n    if __name__
        == ''__main__'':\n        solution = Solution()\n        solution.part_one()\n        solution.part_two()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        aocd import get_data\nimport json\n\nclass Solution:\n    def __init__(self):\n        self.calories
        = json.loads(&amp;#39;[[&amp;#39;+get_data(day=1, year=2022).replace(&amp;#39;\\n\\n&amp;#39;,
        &amp;#39;],[&amp;#39;).replace(&amp;#39;\\n&amp;#39;,&amp;#39;,&amp;#39;)
        + &amp;#39;]]&amp;#39;)\n        self.individual_calories = sorted(map(sum,
        self.calories), reverse=True)\n\n    def part_one(self):\n        print(f&amp;#39;Solution
        to part one: {self.individual_calories[0]}&amp;#39;)\n\n    def part_two(self):\n        print(f&amp;#39;Solution
        to part two: {sum(self.individual_calories[:3])}&amp;#39;)\n\nif __name__
        == &amp;#39;__main__&amp;#39;:\n    solution = Solution()\n    solution.part_one()\n    solution.part_two()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh8acg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh8acg", "created":
        1669893550.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh8y4t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CMDR_DarkNeutrino",
        "can_mod_post": false, "created_utc": 1669894072.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2tjf74gq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My dirty and nasty solution for both in C:\n\n    #include &lt;stdio.h&gt;#include
        &lt;stdlib.h&gt;int main(void) {\tFILE *fp;   fp = fopen(\"input1.txt\", \"r\");      long
        highest3[1000];   for (int i = 0; i &lt; 1000; i++) {\t\thighest3[i] = 0;\t}   int
        index = 0;      char * line = NULL;   size_t len = 0;      long count = 0;   long
        highest = 0;   long a;      ssize_t read;   char * ptr;      while ((read
        = getline(&amp;line, &amp;len, fp)) != -1) {   \t\tif (line[0] != ''\\n'')
        {   \t\t\tcount += strtol(line, &amp;ptr, 10);   \t\t\tif (count &gt; highest)
        {   \t\t\t\thighest = count;   \t\t\t}   \t\t}   \t\telse {   \t\t\thighest3[index]
        = count;   \t\t\tindex++;   \t\t\tcount = 0;   \t\t}\t}\tfor (int j = 0; j
        &lt; 1000; j++) {\t\tfor (int i = j+1; i &lt; 1000; i++) {\t\tif (highest3[j]
        &gt; highest3[i]) {\t\t\ta = highest3[j];\t\t\thighest3[j] = highest3[i];\t\t\thighest3[i]
        = a;\t\t\t}\t\t}\t}\tprintf(\"Part 1: %d\\n\", highest3[999]);\tprintf(\"Part
        2: %d\\n\", highest3[999] + highest3[998] + highest3[997]);\t\treturn 0;}",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My dirty and nasty solution
        for both in C:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;#include
        &amp;lt;stdlib.h&amp;gt;int main(void) {   FILE *fp;   fp = fopen(&amp;quot;input1.txt&amp;quot;,
        &amp;quot;r&amp;quot;);      long highest3[1000];   for (int i = 0; i &amp;lt;
        1000; i++) {     highest3[i] = 0;    }   int index = 0;      char * line =
        NULL;   size_t len = 0;      long count = 0;   long highest = 0;   long a;      ssize_t
        read;   char * ptr;      while ((read = getline(&amp;amp;line, &amp;amp;len,
        fp)) != -1) {        if (line[0] != &amp;#39;\\n&amp;#39;) {              count
        += strtol(line, &amp;amp;ptr, 10);            if (count &amp;gt; highest)
        {                  highest = count;            }           }           else
        {              highest3[index] = count;            index++;            count
        = 0;          }   }   for (int j = 0; j &amp;lt; 1000; j++) {        for (int
        i = j+1; i &amp;lt; 1000; i++) {      if (highest3[j] &amp;gt; highest3[i])
        {            a = highest3[j];            highest3[j] = highest3[i];          highest3[i]
        = a;            }       }   }   printf(&amp;quot;Part 1: %d\\n&amp;quot;,
        highest3[999]);  printf(&amp;quot;Part 2: %d\\n&amp;quot;, highest3[999] +
        highest3[998] + highest3[997]);      return 0;}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh8y4t/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh8y4t", "created":
        1669894072.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670262367.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh903q", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "seacucumber_kid",
        "can_mod_post": false, "created_utc": 1669894116.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_bjpq9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Beginner Clojure solution:\n\n    (:require ''[clojure.string :as str])\n    (as-&gt;
        \"input.txt\" $\n      (slurp $)\n      (str/split $ #\"\\n\\n\")\n      (map\n       #(-&gt;&gt;
        %\n             str/split-lines\n             (map read-string)\n             (reduce
        +)) $)\n      (sort &gt; $)\n      (let [x $]\n        (println \"Part 1:\"
        (first x))\n        (println \"Part 2:\" (reduce + (take 3 x)))))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Beginner Clojure solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(:require
        &amp;#39;[clojure.string :as str])\n(as-&amp;gt; &amp;quot;input.txt&amp;quot;
        $\n  (slurp $)\n  (str/split $ #&amp;quot;\\n\\n&amp;quot;)\n  (map\n   #(-&amp;gt;&amp;gt;
        %\n         str/split-lines\n         (map read-string)\n         (reduce
        +)) $)\n  (sort &amp;gt; $)\n  (let [x $]\n    (println &amp;quot;Part 1:&amp;quot;
        (first x))\n    (println &amp;quot;Part 2:&amp;quot; (reduce + (take 3 x)))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh903q/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh903q", "created":
        1669894116.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyug85m", "id": "iyug85m", "parent_id":
        "t1_iyh903q", "depth": 1, "children": ["iyug85m"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669895144.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh9nau", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "foolnotion",
        "can_mod_post": false, "created_utc": 1669894618.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_737kk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C++\n\nhttps://git.sr.ht/~bogdanb/aoc/tree/master/item/source/2022/01/solution.cpp\n\n    #include
        &lt;aoc.hpp&gt;\n    \n    template&lt;&gt;\n    auto advent2022::day01()
        -&gt; result {\n        auto sum{0};\n        std::vector&lt;i32&gt; values;\n        for
        (auto const&amp; s : aoc::util::readlines(\"./source/2022/01/input.txt\"))
        {\n            if (s.empty()) { values.push_back(sum); sum = 0; }\n            sum
        += scn::scan_value&lt;i32&gt;(s).value();\n        }\n        std::ranges::sort(values,
        std::greater{});\n        return aoc::result(values[0], values[0]+values[1]+values[2]);\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C++&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://git.sr.ht/%7Ebogdanb/aoc/tree/master/item/source/2022/01/solution.cpp\"&gt;https://git.sr.ht/~bogdanb/aoc/tree/master/item/source/2022/01/solution.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;aoc.hpp&amp;gt;\n\ntemplate&amp;lt;&amp;gt;\nauto advent2022::day01()
        -&amp;gt; result {\n    auto sum{0};\n    std::vector&amp;lt;i32&amp;gt; values;\n    for
        (auto const&amp;amp; s : aoc::util::readlines(&amp;quot;./source/2022/01/input.txt&amp;quot;))
        {\n        if (s.empty()) { values.push_back(sum); sum = 0; }\n        sum
        += scn::scan_value&amp;lt;i32&amp;gt;(s).value();\n    }\n    std::ranges::sort(values,
        std::greater{});\n    return aoc::result(values[0], values[0]+values[1]+values[2]);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh9nau/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh9nau", "created":
        1669894618.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhap4o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Playing around with the Koka language!\n\nhttps://github.com/neysofu/advent-of-code-2022/blob/main/day01.kk\n\nPretty
        interesting.", "awarders": [], "downs": 0, "author_flair_css_class": null,
        "name": "t1_iyhap4o", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Playing around with the Koka language!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/neysofu/advent-of-code-2022/blob/main/day01.kk\"&gt;https://github.com/neysofu/advent-of-code-2022/blob/main/day01.kk&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Pretty
        interesting.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhap4o/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1669895403.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1669895403.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhawrr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Flekznes",
        "can_mod_post": false, "created_utc": 1669895557.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ms9aiquh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust:\n\n[https://github.com/halli2/advent\\_of\\_code/blob/e99dea9bdc64d9bbc823f171ab0a65086a4ddfbc/src/year\\_2022/day01.rs](https://github.com/halli2/advent_of_code/blob/e99dea9bdc64d9bbc823f171ab0a65086a4ddfbc/src/year_2022/day01.rs)\n\nI
        also tried creating part 2 like this: [https://gist.github.com/halli2/433538819ac90fd281177521e1785016](https://gist.github.com/halli2/433538819ac90fd281177521e1785016)
        but it misses by a couple 100 calories and I don''t know why.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/halli2/advent_of_code/blob/e99dea9bdc64d9bbc823f171ab0a65086a4ddfbc/src/year_2022/day01.rs\"&gt;https://github.com/halli2/advent_of_code/blob/e99dea9bdc64d9bbc823f171ab0a65086a4ddfbc/src/year_2022/day01.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        also tried creating part 2 like this: &lt;a href=\"https://gist.github.com/halli2/433538819ac90fd281177521e1785016\"&gt;https://gist.github.com/halli2/433538819ac90fd281177521e1785016&lt;/a&gt;
        but it misses by a couple 100 calories and I don&amp;#39;t know why.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhawrr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhawrr", "created":
        1669895557.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_iyhbowe", "id": "iyhbowe", "parent_id":
        "t1_iyhawrr", "depth": 1, "children": ["iyhbowe", "iyhublk"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhazll", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "I know that Python can crack this in a couple of lines,
        but I think my solution is clean and beautiful:\n\n    from bisect import
        insort\n    \n    \n    INPUT_PATH = \"input.txt\"\n    \n    \n    def take_inventory(path_in):\n        elves
        = []\n        with open(path_in, \"r\") as inp:\n            elf = 0\n            for
        line in inp.readlines():\n                if line == \"\\n\":\n                    insort(elves,
        elf)\n                    elf = 0\n                else:\n                    elf
        += int(line.strip())\n        return elves\n    \n    \n    def get_top_elves(elves,
        number_of_elves):\n        total = 0\n        for i in range(-number_of_elves,
        0):\n            total += elves[i]\n        return total\n    \n    \n    if
        __name__ == \"__main__\":\n        inventory = take_inventory(INPUT_PATH)\n        #
        Part One\n        print(f\"Top Elf: {get_top_elves(inventory, 1)}\")\n    \n        #
        Part Two\n        print(f\"Top 3: {get_top_elves(inventory, 3)}\")", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_iyhazll", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        know that Python can crack this in a couple of lines, but I think my solution
        is clean and beautiful:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from bisect import
        insort\n\n\nINPUT_PATH = &amp;quot;input.txt&amp;quot;\n\n\ndef take_inventory(path_in):\n    elves
        = []\n    with open(path_in, &amp;quot;r&amp;quot;) as inp:\n        elf =
        0\n        for line in inp.readlines():\n            if line == &amp;quot;\\n&amp;quot;:\n                insort(elves,
        elf)\n                elf = 0\n            else:\n                elf += int(line.strip())\n    return
        elves\n\n\ndef get_top_elves(elves, number_of_elves):\n    total = 0\n    for
        i in range(-number_of_elves, 0):\n        total += elves[i]\n    return total\n\n\nif
        __name__ == &amp;quot;__main__&amp;quot;:\n    inventory = take_inventory(INPUT_PATH)\n    #
        Part One\n    print(f&amp;quot;Top Elf: {get_top_elves(inventory, 1)}&amp;quot;)\n\n    #
        Part Two\n    print(f&amp;quot;Top 3: {get_top_elves(inventory, 3)}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhazll/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669895616.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669895616.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669897023.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhckmi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tjugg",
        "can_mod_post": false, "created_utc": 1669896752.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_i22pc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Wanted to learn a new language so heres 1 &amp; 2 with Go :)\n\n    func
        part1() int {\n        defer util.TimeTrack(time.Now(), \"Day 1 part 1\")\n        fileContent
        := util.ReadFile(\"input.txt\")\n        var toSum []int\n        var biggestSum
        int\n        for _, row := range fileContent {\n        \tif row == \"\" {\n        \t\tsum
        := util.Sum(toSum)\n        \t\tif sum &gt; biggestSum {\n        \t\t\tbiggestSum
        = sum\n        \t\t}\n        \t\ttoSum = make([]int, 0)\n        \t} else
        {\n        \t\ttoSum = append(toSum, util.ToInt(row))\n        \t}\n        }\n        return
        biggestSum\n    }\n    \n    func part2() int {\n        defer util.TimeTrack(time.Now(),
        \"Day 1 part 2\")\n        fileContent := util.ReadFile(\"input.txt\")\n        var
        toSum []int\n        var biggestSums []int\n        for _, row := range fileContent
        {\n        \tif row == \"\" {\n        \t\tsum := util.Sum(toSum)\n        \t\tbiggestSums
        = append(biggestSums, sum)\n        \t\ttoSum = make([]int, 0)\n        \t}
        else {\n        \t\ttoSum = append(toSum, util.ToInt(row))\n        \t}\n        }\n        top
        := util.SortAsc(biggestSums)[:3]\n        return util.Sum(top)\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Wanted to learn a new language so heres
        1 &amp;amp; 2 with Go :)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func part1()
        int {\n    defer util.TimeTrack(time.Now(), &amp;quot;Day 1 part 1&amp;quot;)\n    fileContent
        := util.ReadFile(&amp;quot;input.txt&amp;quot;)\n    var toSum []int\n    var
        biggestSum int\n    for _, row := range fileContent {\n        if row == &amp;quot;&amp;quot;
        {\n            sum := util.Sum(toSum)\n            if sum &amp;gt; biggestSum
        {\n                biggestSum = sum\n            }\n            toSum = make([]int,
        0)\n        } else {\n            toSum = append(toSum, util.ToInt(row))\n        }\n    }\n    return
        biggestSum\n}\n\nfunc part2() int {\n    defer util.TimeTrack(time.Now(),
        &amp;quot;Day 1 part 2&amp;quot;)\n    fileContent := util.ReadFile(&amp;quot;input.txt&amp;quot;)\n    var
        toSum []int\n    var biggestSums []int\n    for _, row := range fileContent
        {\n        if row == &amp;quot;&amp;quot; {\n            sum := util.Sum(toSum)\n            biggestSums
        = append(biggestSums, sum)\n            toSum = make([]int, 0)\n        }
        else {\n            toSum = append(toSum, util.ToInt(row))\n        }\n    }\n    top
        := util.SortAsc(biggestSums)[:3]\n    return util.Sum(top)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhckmi/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhckmi", "created":
        1669896752.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669908990.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhcntx", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RudeGuy2000",
        "can_mod_post": false, "created_utc": 1669896815.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_140yv8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "racket:\n\n    (define (part1 input)\n      (println\n        (apply max
        (map (lambda (x) (apply + x))\n                        (map (lambda (x) (map
        string-&gt;number (string-split x \"\\n\")))\n                             (string-split
        input \"\\n\\n\"))))))\n\n    (define (part2 input)\n      (println\n        (apply
        + (take (sort\n          (map (lambda (x) (apply + x))\n                        (map
        (lambda (x) (map string-&gt;number (string-split x \"\\n\")))\n                             (string-split
        input \"\\n\\n\"))) &gt;) 3))))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;racket:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(define
        (part1 input)\n  (println\n    (apply max (map (lambda (x) (apply + x))\n                    (map
        (lambda (x) (map string-&amp;gt;number (string-split x &amp;quot;\\n&amp;quot;)))\n                         (string-split
        input &amp;quot;\\n\\n&amp;quot;))))))\n\n(define (part2 input)\n  (println\n    (apply
        + (take (sort\n      (map (lambda (x) (apply + x))\n                    (map
        (lambda (x) (map string-&amp;gt;number (string-split x &amp;quot;\\n&amp;quot;)))\n                         (string-split
        input &amp;quot;\\n\\n&amp;quot;))) &amp;gt;) 3))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhcntx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhcntx", "created":
        1669896815.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyhdg12", "id": "iyhdg12", "parent_id":
        "t1_iyhcntx", "depth": 1, "children": ["iyhdg12"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhdm18",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "colonel_dimanche",
        "can_mod_post": false, "created_utc": 1669897455.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_s6658", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Go \n\nFirst time using the language, my solution seems a bit too convoluted,
        looking forward to seeing other people''s answers.\n    \n    package main\n    \n    import
        (\n      \"bufio\"\n      \"fmt\"\n      \"os\"\n      \"strconv\"\n      \"log\"\n      \"sort\"\n    )\n    \n    func
        checkForTopThree(topThree[]int, total int) []int{\n      arrSlice := topThree[:]                      \n      sort.Ints(arrSlice)\n      for
        i:=0; i &lt; len(arrSlice); i++ {\n        if total &gt; arrSlice[i] {\n          arrSlice[i]
        = total\n          i = len(arrSlice)\n        }\n      }\n    \n      return
        arrSlice\n    }\n    \n    func main() {\n      f, err := os.Open(\"input.txt\")\n      if
        err != nil {\n        log.Fatal(err)\n      }\n    \n      defer f.Close()\n    \n      var
        newElf, total, max = 0, 0, 0\n      topThree := []int{0, 0, 0}\n    \n      scanner
        := bufio.NewScanner(f)\n    \n      for scanner.Scan() {\n        i, _ :=
        strconv.Atoi(scanner.Text())\n    \n        if newElf == 1 {\n          fmt.Printf(\"Total
        : %s\\n\", scanner.Text())\n          topThree = checkForTopThree(topThree,
        total)\n          if total &gt; max {\n            max = total\n          }\n          total
        = 0\n          newElf = 0\n        }\n    \n        if scanner.Text() == \"\"
        || scanner.Text() == \"\\n\"{\n          newElf = 1\n          fmt.Printf(\"New
        Elf:\\n\") \n        } else {\n          total = total + i\n          fmt.Printf(\"add:
        %s\\n\", scanner.Text())\n        }\n      }\n    \n      fmt.Printf(\"top
        1: %d\\n\", topThree[0])\n      fmt.Printf(\"top 2: %d\\n\", topThree[1])\n      fmt.Printf(\"top
        3: %d\\n\", topThree[2])\n    \n      fmt.Printf(\"sum: %d\\n\", topThree[0]
        + topThree[1] +topThree[2])\n      if err := scanner.Err(); err != nil {\n        log.Fatal(err)\n      }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go &lt;/p&gt;\n\n&lt;p&gt;First
        time using the language, my solution seems a bit too convoluted, looking forward
        to seeing other people&amp;#39;s answers.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n  &amp;quot;bufio&amp;quot;\n  &amp;quot;fmt&amp;quot;\n  &amp;quot;os&amp;quot;\n  &amp;quot;strconv&amp;quot;\n  &amp;quot;log&amp;quot;\n  &amp;quot;sort&amp;quot;\n)\n\nfunc
        checkForTopThree(topThree[]int, total int) []int{\n  arrSlice := topThree[:]                      \n  sort.Ints(arrSlice)\n  for
        i:=0; i &amp;lt; len(arrSlice); i++ {\n    if total &amp;gt; arrSlice[i] {\n      arrSlice[i]
        = total\n      i = len(arrSlice)\n    }\n  }\n\n  return arrSlice\n}\n\nfunc
        main() {\n  f, err := os.Open(&amp;quot;input.txt&amp;quot;)\n  if err !=
        nil {\n    log.Fatal(err)\n  }\n\n  defer f.Close()\n\n  var newElf, total,
        max = 0, 0, 0\n  topThree := []int{0, 0, 0}\n\n  scanner := bufio.NewScanner(f)\n\n  for
        scanner.Scan() {\n    i, _ := strconv.Atoi(scanner.Text())\n\n    if newElf
        == 1 {\n      fmt.Printf(&amp;quot;Total : %s\\n&amp;quot;, scanner.Text())\n      topThree
        = checkForTopThree(topThree, total)\n      if total &amp;gt; max {\n        max
        = total\n      }\n      total = 0\n      newElf = 0\n    }\n\n    if scanner.Text()
        == &amp;quot;&amp;quot; || scanner.Text() == &amp;quot;\\n&amp;quot;{\n      newElf
        = 1\n      fmt.Printf(&amp;quot;New Elf:\\n&amp;quot;) \n    } else {\n      total
        = total + i\n      fmt.Printf(&amp;quot;add: %s\\n&amp;quot;, scanner.Text())\n    }\n  }\n\n  fmt.Printf(&amp;quot;top
        1: %d\\n&amp;quot;, topThree[0])\n  fmt.Printf(&amp;quot;top 2: %d\\n&amp;quot;,
        topThree[1])\n  fmt.Printf(&amp;quot;top 3: %d\\n&amp;quot;, topThree[2])\n\n  fmt.Printf(&amp;quot;sum:
        %d\\n&amp;quot;, topThree[0] + topThree[1] +topThree[2])\n  if err := scanner.Err();
        err != nil {\n    log.Fatal(err)\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhdm18/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhdm18", "created":
        1669897455.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669903937.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhdmga", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aexl",
        "can_mod_post": false, "created_utc": 1669897463.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6d4oe", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Julia**\n\nQuite an easy start to this year''s Advent of Code season:\n\n    function
        day01(input::String)\n        sums = map(x -&gt; parse.(Int, eachsplit(x))
        |&gt; sum, eachsplit(input, \"\\n\\n\"))\n        partialsort!(sums, 1:3,
        rev=true)\n        return [sums[1], sums[1:3] |&gt; sum]\n    end \n\nLink
        to solution: [https://github.com/goggle/AdventOfCode2022.jl/blob/master/src/day01.jl](https://github.com/goggle/AdventOfCode2022.jl/blob/master/src/day01.jl)\n\nLink
        to repository: [https://github.com/goggle/AdventOfCode2022.jl](https://github.com/goggle/AdventOfCode2022.jl)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Julia&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Quite
        an easy start to this year&amp;#39;s Advent of Code season:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        day01(input::String)\n    sums = map(x -&amp;gt; parse.(Int, eachsplit(x))
        |&amp;gt; sum, eachsplit(input, &amp;quot;\\n\\n&amp;quot;))\n    partialsort!(sums,
        1:3, rev=true)\n    return [sums[1], sums[1:3] |&amp;gt; sum]\nend \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Link
        to solution: &lt;a href=\"https://github.com/goggle/AdventOfCode2022.jl/blob/master/src/day01.jl\"&gt;https://github.com/goggle/AdventOfCode2022.jl/blob/master/src/day01.jl&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Link
        to repository: &lt;a href=\"https://github.com/goggle/AdventOfCode2022.jl\"&gt;https://github.com/goggle/AdventOfCode2022.jl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhdmga/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhdmga", "created":
        1669897463.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669899712.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhe9x7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "feline_amenities",
        "can_mod_post": false, "created_utc": 1669897895.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_pe7sfxe7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Edit: This requires an extra blank line at the end.\n\n**Python**\n\n    fname
        = input(\"Enter file:\")\n    if (len(fname) &lt; 1) : fname = \"data.txt\"\n\n    file
        = open(fname)\n\n    array_elves = []\n    elf = 0\n\n    for line in [line.rstrip()
        for line in file.readlines()]:\n\t    if line:\n\t\t    elf = elf + int(line)\n\t    else:\n\t\t    array_elves.append(elf)\n\t\t    elf
        = 0\n\n    # Part 1\t\n    index_elf = [index for index, item in enumerate(array_elves)
        if item == max(array_elves)]\n    print(\"The elf carrying the most is elf
        number %d\" % (int(index_elf[0])+1))\n    print(\"The total amount of calories
        this elf is carrying is %d \" % sorted(array_elves, reverse=True)[0])\n\n    #
        Part 2\n    print(\"The total amount of calories the top 3 elves are carrying
        is %d \" % sum(sorted(array_elves, reverse=True)[0:3]))", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Edit: This requires an extra blank line
        at the end.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fname
        = input(&amp;quot;Enter file:&amp;quot;)\nif (len(fname) &amp;lt; 1) : fname
        = &amp;quot;data.txt&amp;quot;\n\nfile = open(fname)\n\narray_elves = []\nelf
        = 0\n\nfor line in [line.rstrip() for line in file.readlines()]:\n    if line:\n        elf
        = elf + int(line)\n    else:\n        array_elves.append(elf)\n        elf
        = 0\n\n# Part 1    \nindex_elf = [index for index, item in enumerate(array_elves)
        if item == max(array_elves)]\nprint(&amp;quot;The elf carrying the most is
        elf number %d&amp;quot; % (int(index_elf[0])+1))\nprint(&amp;quot;The total
        amount of calories this elf is carrying is %d &amp;quot; % sorted(array_elves,
        reverse=True)[0])\n\n# Part 2\nprint(&amp;quot;The total amount of calories
        the top 3 elves are carrying is %d &amp;quot; % sum(sorted(array_elves, reverse=True)[0:3]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhe9x7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhe9x7", "created":
        1669897895.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyhfsok", "id": "iyhfsok", "parent_id":
        "t1_iyhe9x7", "depth": 1, "children": ["iyhfsok"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhepar",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pngipngi",
        "can_mod_post": false, "created_utc": 1669898172.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_jdv18q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Excel\n\nNothing really fancy, but lets start with it here.\n\nhttps://github.com/pengi/advent\\_of\\_code/tree/master/2022",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excel&lt;/p&gt;\n\n&lt;p&gt;Nothing
        really fancy, but lets start with it here.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/pengi/advent%5C_of%5C_code/tree/master/2022\"&gt;https://github.com/pengi/advent\\_of\\_code/tree/master/2022&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhepar/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhepar", "created":
        1669898172.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyivz62", "id": "iyivz62", "parent_id":
        "t1_iyhepar", "depth": 1, "children": ["iyivz62", "iyhmi1z"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhf4pi",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "noblematt20",
        "can_mod_post": false, "created_utc": 1669898442.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_x92xuwt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash: [paste](https://topaz.github.io/paste/#XQAAAQCgAQAAAAAAAAARiEAi90hDPVaCn/8biUvNQey6aPESRA6LmZqppFK/UnuhnP8NTSqklUABxRYda4uxMepIoN67JWJPpzwEwec+yJi2Is9X22ED7mwxnl6yziXbNY7HA+gEXyl5oyt3veqU0zSZs+gO0I5RvtRtYd50yNIaTJ+U0XzkAF8+oAy36GHNh6XXQsAmFu8tqa7V1WMBkyJQ4kDzeOiP7T4EWTY337lg5CPxGP/wz8JV)\n\n*Reads
        input from stdin*", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash:
        &lt;a href=\"https://topaz.github.io/paste/#XQAAAQCgAQAAAAAAAAARiEAi90hDPVaCn/8biUvNQey6aPESRA6LmZqppFK/UnuhnP8NTSqklUABxRYda4uxMepIoN67JWJPpzwEwec+yJi2Is9X22ED7mwxnl6yziXbNY7HA+gEXyl5oyt3veqU0zSZs+gO0I5RvtRtYd50yNIaTJ+U0XzkAF8+oAy36GHNh6XXQsAmFu8tqa7V1WMBkyJQ4kDzeOiP7T4EWTY337lg5CPxGP/wz8JV\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Reads
        input from stdin&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhf4pi/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhf4pi", "created":
        1669898442.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhfj16",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Ethoxyethaan",
        "can_mod_post": false, "created_utc": 1669898694.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_54fk0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    l=$(\"*\").innerText.split`\\n\\n`.map(x=&gt;+x.split`\\n`.reduce((z,q)=&gt;z-
        -q),0).sort((x,y)=&gt;y-x);[l[0],l[0]+l[1]+l[2]]\n\nF12 google chrome javascript
        113 bytes", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;l=$(&amp;quot;*&amp;quot;).innerText.split`\\n\\n`.map(x=&amp;gt;+x.split`\\n`.reduce((z,q)=&amp;gt;z-
        -q),0).sort((x,y)=&amp;gt;y-x);[l[0],l[0]+l[1]+l[2]]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;F12
        google chrome javascript 113 bytes&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhfj16/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhfj16", "created": 1669898694.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iyhxlct", "id": "iyhxlct", "parent_id": "t1_iyhfj16", "depth": 1, "children":
        ["iyhxlct"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1670159754.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhg6wl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "aarnens",
        "can_mod_post": false, "created_utc": 1669899105.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_nztlegd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "First time using Go so my answer''s probably quite convoluted but I had fun
        regardless :)\n\n&amp;#x200B;\n\nLink to code: https://github.com/aarneng/AdventOfCode2022/blob/main/day1/main.go",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First time using Go
        so my answer&amp;#39;s probably quite convoluted but I had fun regardless
        :)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Link to code:
        &lt;a href=\"https://github.com/aarneng/AdventOfCode2022/blob/main/day1/main.go\"&gt;https://github.com/aarneng/AdventOfCode2022/blob/main/day1/main.go&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhg6wl/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhg6wl", "created":
        1669899105.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyufsqc", "id": "iyufsqc", "parent_id":
        "t1_iyhg6wl", "depth": 1, "children": ["iyufsqc", "iyhh4n9"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669903080.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhhx5j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "clyne0",
        "can_mod_post": false, "created_utc": 1669900123.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_s9fndgaw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Applesoft BASIC\n\nI tackled day 1''s challenge on an Apple IIgs. This
        required transferring ~~input data~~ the input file to the Apple and source
        code from the Apple over a serial connection. I recently figured out how to
        program file I/O and serial transfers on this machine, which led me to giving
        this a try.\n\nEach part takes about a minute and a half to execute on the
        input data. No special strategies, just tracking maximums and some manual
        sorting.\n\n[Here is the code for part 2](https://github.com/tcsullivan/advent-of-code/blob/master/day1/part2.bas).
        The day 1 README ([see here](https://github.com/tcsullivan/advent-of-code/tree/master/day1))
        also has a picture of the IIgs showing the results.\n\n**EDIT:** [Here is
        a documented version of part 2](https://github.com/tcsullivan/advent-of-code/blob/master/day1/part2_documented.bas).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Applesoft BASIC&lt;/h1&gt;\n\n&lt;p&gt;I
        tackled day 1&amp;#39;s challenge on an Apple IIgs. This required transferring
        &lt;del&gt;input data&lt;/del&gt; the input file to the Apple and source code
        from the Apple over a serial connection. I recently figured out how to program
        file I/O and serial transfers on this machine, which led me to giving this
        a try.&lt;/p&gt;\n\n&lt;p&gt;Each part takes about a minute and a half to
        execute on the input data. No special strategies, just tracking maximums and
        some manual sorting.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/tcsullivan/advent-of-code/blob/master/day1/part2.bas\"&gt;Here
        is the code for part 2&lt;/a&gt;. The day 1 README (&lt;a href=\"https://github.com/tcsullivan/advent-of-code/tree/master/day1\"&gt;see
        here&lt;/a&gt;) also has a picture of the IIgs showing the results.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;
        &lt;a href=\"https://github.com/tcsullivan/advent-of-code/blob/master/day1/part2_documented.bas\"&gt;Here
        is a documented version of part 2&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhhx5j/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhhx5j", "created": 1669900123.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 8, "name":
        "t1_iyhil16", "id": "iyhil16", "parent_id": "t1_iyhhx5j", "depth": 1, "children":
        ["iyhil16", "iyhjtnz", "iyijvse"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhi0hs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bozdoz",
        "can_mod_post": false, "created_utc": 1669900177.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_allns", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Go! \n\nhttps://github.com/bozdoz/advent-of-code-2022/tree/main/01", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Go! &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/bozdoz/advent-of-code-2022/tree/main/01\"&gt;https://github.com/bozdoz/advent-of-code-2022/tree/main/01&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhi0hs/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhi0hs", "created":
        1669900177.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhihj8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MuricanToffee",
        "can_mod_post": false, "created_utc": 1669900449.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_vhqfqzz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Plain ol'' C \n\nhttps://github.com/biesnecker/advent\\_c/blob/master/src/2022/day\\_one.c",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Plain ol&amp;#39; C
        &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/biesnecker/advent%5C_c/blob/master/src/2022/day%5C_one.c\"&gt;https://github.com/biesnecker/advent\\_c/blob/master/src/2022/day\\_one.c&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhihj8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhihj8", "created":
        1669900449.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhj14i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HEaRiX",
        "can_mod_post": false, "created_utc": 1669900752.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ltiee", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**JS**\n\n\n```const input = $(\"pre\").innerText.split(\"\\n\\n\").map(l
        =&gt; l.split(\"\\n\").filter(l =&gt; l !== \"\").reduce((x, y) =&gt; +x +
        +y, 0)).sort((a, b) =&gt; b - a);\nconst partA = input[0];\nconst partB =
        input.slice(0,3).reduce((a, b) =&gt; a + b, 0);\nconsole.log(partA, partB)```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;JS&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const
        input = $(&amp;quot;pre&amp;quot;).innerText.split(&amp;quot;\\n\\n&amp;quot;).map(l
        =&amp;gt; l.split(&amp;quot;\\n&amp;quot;).filter(l =&amp;gt; l !== &amp;quot;&amp;quot;).reduce((x,
        y) =&amp;gt; +x + +y, 0)).sort((a, b) =&amp;gt; b - a);\nconst partA = input[0];\nconst
        partB = input.slice(0,3).reduce((a, b) =&amp;gt; a + b, 0);\nconsole.log(partA,
        partB)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhj14i/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhj14i", "created":
        1669900752.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyufb34", "id": "iyufb34", "parent_id":
        "t1_iyhj14i", "depth": 1, "children": ["iyufb34"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhjx47",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WUVWOO",
        "can_mod_post": false, "created_utc": 1669901240.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_962qz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m giving Go a go ;-)\n\n    package main\n    \n    import (\n    \t\"fmt\"\n    \t\"os\"\n    \t\"sort\"\n    \t\"strconv\"\n    \t\"strings\"\n    )\n    \n    func
        main() {\n    \tbytes, _ := os.ReadFile(\"2022/day1.txt\")\n    \tpuzzleInput
        := string(bytes)\n    \tlines := strings.Split(puzzleInput, \"\\n\\n\")\n    \n    \tvar
        caloriesPerElf []int\n    \n    \tfor _, line := range lines {\n    \t\tcalorieSum
        := 0\n    \t\tcalories := strings.Split(line, \"\\n\")\n    \n    \t\tfor
        _, calorie := range calories {\n    \t\t\ttoInt, _ := strconv.Atoi(calorie)\n    \t\t\tcalorieSum
        += toInt\n    \t\t}\n    \n    \t\tcaloriesPerElf = append(caloriesPerElf,
        calorieSum)\n    \t}\n    \tsort.Ints(caloriesPerElf)\n    \thighestThreeCalorieElves
        := caloriesPerElf[len(caloriesPerElf)-3:]\n    \n    \tanswerPartOne := caloriesPerElf[len(caloriesPerElf)-1]\n    \tanswerPartTwo
        := array_sum(highestThreeCalorieElves)\n    \n    \tfmt.Println(answerPartOne)\n    \tfmt.Println(answerPartTwo)\n    }\n    \n    func
        array_sum(array []int) int {\n    \tresult := 0\n    \tfor _, v := range array
        {\n    \t\tresult += v\n    \t}\n    \treturn result\n    }", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m giving Go a go ;-)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        main\n\nimport (\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;sort&amp;quot;\n    &amp;quot;strconv&amp;quot;\n    &amp;quot;strings&amp;quot;\n)\n\nfunc
        main() {\n    bytes, _ := os.ReadFile(&amp;quot;2022/day1.txt&amp;quot;)\n    puzzleInput
        := string(bytes)\n    lines := strings.Split(puzzleInput, &amp;quot;\\n\\n&amp;quot;)\n\n    var
        caloriesPerElf []int\n\n    for _, line := range lines {\n        calorieSum
        := 0\n        calories := strings.Split(line, &amp;quot;\\n&amp;quot;)\n\n        for
        _, calorie := range calories {\n            toInt, _ := strconv.Atoi(calorie)\n            calorieSum
        += toInt\n        }\n\n        caloriesPerElf = append(caloriesPerElf, calorieSum)\n    }\n    sort.Ints(caloriesPerElf)\n    highestThreeCalorieElves
        := caloriesPerElf[len(caloriesPerElf)-3:]\n\n    answerPartOne := caloriesPerElf[len(caloriesPerElf)-1]\n    answerPartTwo
        := array_sum(highestThreeCalorieElves)\n\n    fmt.Println(answerPartOne)\n    fmt.Println(answerPartTwo)\n}\n\nfunc
        array_sum(array []int) int {\n    result := 0\n    for _, v := range array
        {\n        result += v\n    }\n    return result\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhjx47/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhjx47", "created":
        1669901240.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhkd91",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hrunt",
        "can_mod_post": false, "created_utc": 1669901486.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6xomu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python 3**\n\n[Code](https://topaz.github.io/paste/#XQAAAQB1AgAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx/DqKkM2yi+HVdpp+qLiqZwdO8DftYzG7xETHPvhjXpLhVBtGHxiJr7yn4tjI2iyRb/7n/gXbNlVB4eTFC9qDqbwwm0sASx0Z8gruN/cpWo3PsqaJQNRlzQ47B8QLOlA8/xsPmuqtZxehErgYkwW4A9dgkIBudMzb/U2zI9fGv2pXHa21YLnYluzJgjgF+6RlDAPwC6IyK4mOWSeF7f24hNLKCM8xEpVtTvs0rPOuJ1feMdRQYcnfBetTIpqv2VVO6SARtsSxOljURiQWCklr7FvJW4ZJQF8h1MF8PfP5/DIv6qLwaodG+7tbbXC6Sq+v5JRumtz56bwzeJyYdfRrmNAEtUnRjmXgoNgMt6aOB2U/QR1gFn1DqgPgn6TQKZGc8PFkWg3zEey2If2a4X9gX32on6WiYfUawGVU6kasX/EFLRLmO2yAuiutuG4JS06hJKYOrhtdmU+ifoegNs=)\n\nNothing
        fancy, just a simple loop over the lines.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python 3&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQB1AgAAAAAAAAARiEJHiiMzw3cPM/1Vl+2nx/DqKkM2yi+HVdpp+qLiqZwdO8DftYzG7xETHPvhjXpLhVBtGHxiJr7yn4tjI2iyRb/7n/gXbNlVB4eTFC9qDqbwwm0sASx0Z8gruN/cpWo3PsqaJQNRlzQ47B8QLOlA8/xsPmuqtZxehErgYkwW4A9dgkIBudMzb/U2zI9fGv2pXHa21YLnYluzJgjgF+6RlDAPwC6IyK4mOWSeF7f24hNLKCM8xEpVtTvs0rPOuJ1feMdRQYcnfBetTIpqv2VVO6SARtsSxOljURiQWCklr7FvJW4ZJQF8h1MF8PfP5/DIv6qLwaodG+7tbbXC6Sq+v5JRumtz56bwzeJyYdfRrmNAEtUnRjmXgoNgMt6aOB2U/QR1gFn1DqgPgn6TQKZGc8PFkWg3zEey2If2a4X9gX32on6WiYfUawGVU6kasX/EFLRLmO2yAuiutuG4JS06hJKYOrhtdmU+ifoegNs=\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nothing
        fancy, just a simple loop over the lines.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhkd91/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhkd91", "created": 1669901486.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyhly7i", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "IonOmat", "can_mod_post": false, "created_utc":
        1669902319.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_wj8lp2d", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Javascript / NodeJS\n\n`const
        fs = require(\"fs\");`  \n`const inp = fs.readFileSync(\"input.txt\", \"utf-8\").toString();`  \n`const
        arr = inp.split(/\\n\\n/gi);`  \n`let arr2 = [];`  \n`for (index in arr) {`  \n  `tempElement
        = arr[index].split(/\\n/gi).toString().split(\",\");`  \n  `let sum = tempElement.reduce((total,
        num) =&gt; {`  \n`return Number(total) + Number(num);`  \n  `});`  \n  `arr2.push(Number(sum));`  \n`}`  \n`//
        sorts an array in reverse order`  \n`arr2.sort((a, b) =&gt; b - a);`  \n`console.log(arr2[0]
        + arr2[1] + arr2[2]);`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript
        / NodeJS&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;const fs = require(&amp;quot;fs&amp;quot;);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;const
        inp = fs.readFileSync(&amp;quot;input.txt&amp;quot;, &amp;quot;utf-8&amp;quot;).toString();&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;const
        arr = inp.split(/\\n\\n/gi);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;let arr2
        = [];&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;for (index in arr) {&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;tempElement
        = arr[index].split(/\\n/gi).toString().split(&amp;quot;,&amp;quot;);&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;let
        sum = tempElement.reduce((total, num) =&amp;gt; {&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;return
        Number(total) + Number(num);&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;});&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;arr2.push(Number(sum));&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;}&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;//
        sorts an array in reverse order&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;arr2.sort((a,
        b) =&amp;gt; b - a);&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;console.log(arr2[0]
        + arr2[1] + arr2[2]);&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhly7i/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhly7i", "created": 1669902319.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyhmipo", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "colombo15", "can_mod_post": false, "created_utc":
        1669902612.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_6oqne", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "C#\n\n        private int
        _result;\n\n        public void PartOne(string[] input)\n        {\n            _result
        = GetElfCalories(input).First();\n        }\n\n        public void PartTwo(string[]
        input)\n        {\n            _result = GetElfCalories(input).Take(3).Sum();\n        }\n\n        public
        static IEnumerable&lt;int&gt; GetElfCalories(string[] input)\n        {\n            var
        elfCalories = new List&lt;int&gt;() { 0 };\n            foreach (var i in
        input)\n            {\n                if (i == \"\")\n                    elfCalories.Add(0);\n                else\n                    elfCalories[^1]
        += int.Parse(i);\n            }\n            return elfCalories.OrderByDescending(x
        =&gt; x);\n        }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    private
        int _result;\n\n    public void PartOne(string[] input)\n    {\n        _result
        = GetElfCalories(input).First();\n    }\n\n    public void PartTwo(string[]
        input)\n    {\n        _result = GetElfCalories(input).Take(3).Sum();\n    }\n\n    public
        static IEnumerable&amp;lt;int&amp;gt; GetElfCalories(string[] input)\n    {\n        var
        elfCalories = new List&amp;lt;int&amp;gt;() { 0 };\n        foreach (var i
        in input)\n        {\n            if (i == &amp;quot;&amp;quot;)\n                elfCalories.Add(0);\n            else\n                elfCalories[^1]
        += int.Parse(i);\n        }\n        return elfCalories.OrderByDescending(x
        =&amp;gt; x);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhmipo/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhmipo", "created": 1669902612.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_z9ezjb", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "iyhmu7g", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_iyhmu7g", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhmu7g/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669902771.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669902771.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 4, "name": "t1_iyhsdxr", "id": "iyhsdxr", "parent_id":
        "t1_iyhmu7g", "depth": 1, "children": ["iyhsdxr", "iyhqqcg"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhmy8u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "philippe_cholet",
        "can_mod_post": false, "created_utc": 1669902827.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_uklo8g9c", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust:** Collect sums into a binary heap then (pop+pop+)peek.\n\n    use
        std::collections::BinaryHeap; // a max-heap\n    \n    use common::{Context,
        Part, Part1, Part2, Result}; // anyhow stuff &amp; part enum\n    \n    ///
        Calorie Counting\n    pub fn solver(part: Part, input: &amp;str) -&gt; Result&lt;String&gt;
        {\n        let mut counts: BinaryHeap&lt;u32&gt; = input\n            .split(\"\\n\\n\")\n            .map(|snacks|
        snacks.lines().map(str::parse::&lt;u32&gt;).sum())\n            .collect::&lt;Result&lt;_,
        _&gt;&gt;()?;\n        // No need to pop when peek is enough.\n        Ok(match
        part {\n            Part1 =&gt; *counts.peek().context(\"No elf\")?,\n            Part2
        =&gt; {\n                counts.pop().context(\"No elf\")?\n                    +
        counts.pop().context(\"Only one elf\")?\n                    + *counts.peek().context(\"Only
        two elves\")?\n            }\n        }\n        .to_string()) // my framework
        only uses strings at the moment\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust:&lt;/strong&gt; Collect sums into
        a binary heap then (pop+pop+)peek.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::collections::BinaryHeap; // a max-heap\n\nuse common::{Context, Part,
        Part1, Part2, Result}; // anyhow stuff &amp;amp; part enum\n\n/// Calorie
        Counting\npub fn solver(part: Part, input: &amp;amp;str) -&amp;gt; Result&amp;lt;String&amp;gt;
        {\n    let mut counts: BinaryHeap&amp;lt;u32&amp;gt; = input\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|snacks|
        snacks.lines().map(str::parse::&amp;lt;u32&amp;gt;).sum())\n        .collect::&amp;lt;Result&amp;lt;_,
        _&amp;gt;&amp;gt;()?;\n    // No need to pop when peek is enough.\n    Ok(match
        part {\n        Part1 =&amp;gt; *counts.peek().context(&amp;quot;No elf&amp;quot;)?,\n        Part2
        =&amp;gt; {\n            counts.pop().context(&amp;quot;No elf&amp;quot;)?\n                +
        counts.pop().context(&amp;quot;Only one elf&amp;quot;)?\n                +
        *counts.peek().context(&amp;quot;Only two elves&amp;quot;)?\n        }\n    }\n    .to_string())
        // my framework only uses strings at the moment\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhmy8u/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhmy8u", "created":
        1669902827.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhncoa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "yksgr",
        "can_mod_post": false, "created_utc": 1669903027.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_k85ndh20", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Deno](https://github.com/yk-sgr/aoc2022/blob/main/day1/task.ts)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/yk-sgr/aoc2022/blob/main/day1/task.ts\"&gt;Deno&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhncoa/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhncoa", "created":
        1669903027.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhoas8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rawlexander",
        "can_mod_post": false, "created_utc": 1669903508.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_46jnzuqk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Julia\n\n    per_elf = [parse.(Int, split(x, ''\\n'')) for x in split(readchomp(\"data/1.txt\"),
        \"\\n\\n\")]\n    maximum(sum, per_elf) |&gt; println\n    partialsort!(sum.(per_elf),
        1:3, rev=true) |&gt; sum |&gt; println", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Julia&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;per_elf
        = [parse.(Int, split(x, &amp;#39;\\n&amp;#39;)) for x in split(readchomp(&amp;quot;data/1.txt&amp;quot;),
        &amp;quot;\\n\\n&amp;quot;)]\nmaximum(sum, per_elf) |&amp;gt; println\npartialsort!(sum.(per_elf),
        1:3, rev=true) |&amp;gt; sum |&amp;gt; println\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhoas8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhoas8", "created":
        1669903508.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhp7bp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fourgbram",
        "can_mod_post": false, "created_utc": 1669903947.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_7gvrn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using Rust this year.\n\n    fn main() {\n        let filename = \"src/input.txt\";\n        let
        data = read_input(&amp;filename);\n        let trimmed = data.trim();\n        let
        split_data: Vec&lt;&amp;str&gt; = trimmed.split(\"\\n\\n\").collect();\n        let
        p1 = part1(&amp;split_data);\n        let p2 = part2(&amp;split_data);\n        println!(\"Part
        1: {p1}\");\n        println!(\"Part 2: {p2}\");\n    }\n    \n    fn part1(input:
        &amp;Vec&lt;&amp;str&gt;) -&gt; i32 {\n        let v: Vec&lt;i32&gt; = input\n            .iter()\n            .map(|v|
        {\n                v.split(\"\\n\")\n                    .map(|v| v.parse::&lt;i32&gt;().unwrap())\n                    .sum::&lt;i32&gt;()\n            })\n            .collect();\n    \n        let
        largest = v.iter().max().unwrap();\n        return *largest;\n    }\n    \n    fn
        part2(input: &amp;Vec&lt;&amp;str&gt;) -&gt; i32 {\n        let mut v: Vec&lt;i32&gt;
        = input\n            .iter()\n            .map(|v| {\n                v.split(\"\\n\")\n                    .map(|v|
        v.parse::&lt;i32&gt;().unwrap())\n                    .sum::&lt;i32&gt;()\n            })\n            .collect();\n    \n        v.sort_by(|a,
        b| b.cmp(a));\n        return v[0..3].iter().sum::&lt;i32&gt;();\n    }\n    \n    fn
        read_input(path: &amp;str) -&gt; String {\n        let result = std::fs::read_to_string(path);\n        return
        match result {\n            Ok(data) =&gt; data,\n            Err(e) =&gt;
        {\n                println!(\"error fetching file at {path}: {e}\");\n                std::process::exit(0)\n            }\n        };\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using Rust this year.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        main() {\n    let filename = &amp;quot;src/input.txt&amp;quot;;\n    let data
        = read_input(&amp;amp;filename);\n    let trimmed = data.trim();\n    let
        split_data: Vec&amp;lt;&amp;amp;str&amp;gt; = trimmed.split(&amp;quot;\\n\\n&amp;quot;).collect();\n    let
        p1 = part1(&amp;amp;split_data);\n    let p2 = part2(&amp;amp;split_data);\n    println!(&amp;quot;Part
        1: {p1}&amp;quot;);\n    println!(&amp;quot;Part 2: {p2}&amp;quot;);\n}\n\nfn
        part1(input: &amp;amp;Vec&amp;lt;&amp;amp;str&amp;gt;) -&amp;gt; i32 {\n    let
        v: Vec&amp;lt;i32&amp;gt; = input\n        .iter()\n        .map(|v| {\n            v.split(&amp;quot;\\n&amp;quot;)\n                .map(|v|
        v.parse::&amp;lt;i32&amp;gt;().unwrap())\n                .sum::&amp;lt;i32&amp;gt;()\n        })\n        .collect();\n\n    let
        largest = v.iter().max().unwrap();\n    return *largest;\n}\n\nfn part2(input:
        &amp;amp;Vec&amp;lt;&amp;amp;str&amp;gt;) -&amp;gt; i32 {\n    let mut v:
        Vec&amp;lt;i32&amp;gt; = input\n        .iter()\n        .map(|v| {\n            v.split(&amp;quot;\\n&amp;quot;)\n                .map(|v|
        v.parse::&amp;lt;i32&amp;gt;().unwrap())\n                .sum::&amp;lt;i32&amp;gt;()\n        })\n        .collect();\n\n    v.sort_by(|a,
        b| b.cmp(a));\n    return v[0..3].iter().sum::&amp;lt;i32&amp;gt;();\n}\n\nfn
        read_input(path: &amp;amp;str) -&amp;gt; String {\n    let result = std::fs::read_to_string(path);\n    return
        match result {\n        Ok(data) =&amp;gt; data,\n        Err(e) =&amp;gt;
        {\n            println!(&amp;quot;error fetching file at {path}: {e}&amp;quot;);\n            std::process::exit(0)\n        }\n    };\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhp7bp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhp7bp", "created":
        1669903947.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhpim5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vstepanyuk",
        "can_mod_post": false, "created_utc": 1669904101.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ae3n6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "```rust\n// Rust\n\nlet (mut heap, _) = format!(\"{}\\n\", include_str!(\"../inputs/day01.txt\"))\n    .split(\"\\n\")\n    .fold((BinaryHeap::new(),
        0), |(mut heap, curr), line| {\n        if line.is_empty() {\n            heap.push(curr);\n            return
        (heap, 0);\n        }\n\n        (heap, curr + line.parse::&lt;i32&gt;().unwrap())\n    });\n\nlet
        part1 = heap.pop().unwrap();\nprintln!(\"Part 1: {}\", part1);\nprintln!(\"Part
        2: {}\", part1 + heap.iter().take(2).sum::&lt;i32&gt;());\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;```rust\n// Rust&lt;/p&gt;\n\n&lt;p&gt;let
        (mut heap, _) = format!(&amp;quot;{}\\n&amp;quot;, include_str!(&amp;quot;../inputs/day01.txt&amp;quot;))\n    .split(&amp;quot;\\n&amp;quot;)\n    .fold((BinaryHeap::new(),
        0), |(mut heap, curr), line| {\n        if line.is_empty() {\n            heap.push(curr);\n            return
        (heap, 0);\n        }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    (heap, curr
        + line.parse::&amp;lt;i32&amp;gt;().unwrap())\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;let
        part1 = heap.pop().unwrap();\nprintln!(&amp;quot;Part 1: {}&amp;quot;, part1);\nprintln!(&amp;quot;Part
        2: {}&amp;quot;, part1 + heap.iter().take(2).sum::&amp;lt;i32&amp;gt;());\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhpim5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhpim5", "created":
        1669904101.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyuf1tj", "id": "iyuf1tj", "parent_id":
        "t1_iyhpim5", "depth": 1, "children": ["iyuf1tj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1677163594.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhrqsb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "spyr01d",
        "can_mod_post": false, "created_utc": 1669905147.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_cjheazgd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Kotlin\nhttps://github.com/spyroid/puzzles/blob/main/src/aoc/y2022/day1/day1.kt",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kotlin\n&lt;a href=\"https://github.com/spyroid/puzzles/blob/main/src/aoc/y2022/day1/day1.kt\"&gt;https://github.com/spyroid/puzzles/blob/main/src/aoc/y2022/day1/day1.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhrqsb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhrqsb", "created":
        1669905147.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyue9xq", "id": "iyue9xq", "parent_id":
        "t1_iyhrqsb", "depth": 1, "children": ["iyue9xq", "iyifbo6"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhs4pw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "VossBoss1207",
        "can_mod_post": false, "created_utc": 1669905325.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_8eeavprs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution in TypeScript :)\n\nhttps://github.com/VossFynn/advent-of-code-2022/blob/main/src/day-1.ts",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution in TypeScript
        :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/VossFynn/advent-of-code-2022/blob/main/src/day-1.ts\"&gt;https://github.com/VossFynn/advent-of-code-2022/blob/main/src/day-1.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhs4pw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhs4pw", "created":
        1669905325.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669953983.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyht2wb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vkasra",
        "can_mod_post": false, "created_utc": 1669905753.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6j5rw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++: [https://github.com/dhconnelly/advent-of-code-2022/blob/main/src/day1.cc](https://github.com/dhconnelly/advent-of-code-2022/blob/main/src/day1.cc)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++: &lt;a href=\"https://github.com/dhconnelly/advent-of-code-2022/blob/main/src/day1.cc\"&gt;https://github.com/dhconnelly/advent-of-code-2022/blob/main/src/day1.cc&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyht2wb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyht2wb", "created":
        1669905753.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhta1w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Teekeks",
        "can_mod_post": false, "created_utc": 1669905843.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6qm2n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Clojure: https://github.com/Teekeks/AoC2022/blob/master/src/de/teawork/aoc2022/day/01.clj",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Clojure: &lt;a href=\"https://github.com/Teekeks/AoC2022/blob/master/src/de/teawork/aoc2022/day/01.clj\"&gt;https://github.com/Teekeks/AoC2022/blob/master/src/de/teawork/aoc2022/day/01.clj&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhta1w/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhta1w", "created":
        1669905843.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhtfc5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jcbbjjttt",
        "can_mod_post": false, "created_utc": 1669905910.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6c1sw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Live Stream of myself working through Day 1 both parts in C#: [https://youtu.be/mvf5n\\_RucYQ?t=295](https://www.youtube.com/watch?v=mvf5n_RucYQ)\n\nSource
        Code: [https://github.com/jcollard/AdventOfCode2022](https://github.com/jcollard/AdventOfCode2022)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Live Stream of myself
        working through Day 1 both parts in C#: &lt;a href=\"https://www.youtube.com/watch?v=mvf5n_RucYQ\"&gt;https://youtu.be/mvf5n_RucYQ?t=295&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Source
        Code: &lt;a href=\"https://github.com/jcollard/AdventOfCode2022\"&gt;https://github.com/jcollard/AdventOfCode2022&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhtfc5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhtfc5", "created":
        1669905910.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyib3wv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pc_dummy",
        "can_mod_post": false, "created_utc": 1669913238.0, "send_replies": true,
        "parent_id": "t1_iyhtfc5", "score": 3, "author_fullname": "t2_dvxjz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Sorry to be THAT guy but your part1 has a bug whereby if the last set of
        numbers in the file is the largest sum of calories, it doesn''t  detect this
        correctly.\n\nIt''s because there''s no empty line after the last set of numbers
        and you use the empty line to denote the end of a group of numbers.\n\nLuckily,
        the largest set of numbers they provided isn''t the last in the group, so
        the answer was accepted.\n\nOnly pointing it out cos I made the same mistake
        :-)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sorry
        to be THAT guy but your part1 has a bug whereby if the last set of numbers
        in the file is the largest sum of calories, it doesn&amp;#39;t  detect this
        correctly.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s because there&amp;#39;s no empty
        line after the last set of numbers and you use the empty line to denote the
        end of a group of numbers.&lt;/p&gt;\n\n&lt;p&gt;Luckily, the largest set
        of numbers they provided isn&amp;#39;t the last in the group, so the answer
        was accepted.&lt;/p&gt;\n\n&lt;p&gt;Only pointing it out cos I made the same
        mistake :-)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyib3wv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyib3wv", "created":
        1669913238.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyiiasa", "id": "iyiiasa", "parent_id":
        "t1_iyib3wv", "depth": 2, "children": ["iyiiasa", "iyidcml"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhtniy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "particleflux-codes",
        "can_mod_post": false, "created_utc": 1669906012.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1pe0cv7z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PHP\n\n    &lt;?php\n    eval(''$c=[''.str_replace([\"\\n\\n\",\"\\n\"],['','',''+''],file_get_contents(''input'')).''0];'');\n    rsort($c);\n    echo$c[0].\"\\n\".$c[0]+$c[1]+$c[2];",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PHP&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\neval(&amp;#39;$c=[&amp;#39;.str_replace([&amp;quot;\\n\\n&amp;quot;,&amp;quot;\\n&amp;quot;],[&amp;#39;,&amp;#39;,&amp;#39;+&amp;#39;],file_get_contents(&amp;#39;input&amp;#39;)).&amp;#39;0];&amp;#39;);\nrsort($c);\necho$c[0].&amp;quot;\\n&amp;quot;.$c[0]+$c[1]+$c[2];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhtniy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhtniy", "created":
        1669906012.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhu377",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "shadowthehedghog",
        "can_mod_post": false, "created_utc": 1669906209.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_xkkuc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java using some layered architecture \n\nFirst time ever doing this :)\n\n[Link
        Here](https://github.com/papasj19/AoC_2k22)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Java using some layered architecture &lt;/p&gt;\n\n&lt;p&gt;First
        time ever doing this :)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/papasj19/AoC_2k22\"&gt;Link
        Here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhu377/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhu377", "created":
        1669906209.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhucho",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sebastianprehn",
        "can_mod_post": false, "created_utc": 1669906323.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_fg8ka1t4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**  \n[GitHub](https://github.com/SebastianPrehn/aoc/blob/main/2022/day01/Day01.py)\n\n    import
        os\n    import io\n    \n    def max_calories(input_file,elves_amount):\n        total
        = [0]\n        with io.open(input_file,\"r\") as input:\n            for line
        in input:\n                if line in os.linesep:\n                    total.append(0)\n                else:\n                    total[-1]
        += int(line)\n        total.sort(reverse=True)\n        print(f''Max calories:
        {sum(total[:elves_amount])}'')\n    \n    max_calories(\"inputSample.txt\",1)\n    max_calories(\"input.txt\",1)\n    max_calories(\"input.txt\",3)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;br/&gt;\n&lt;a
        href=\"https://github.com/SebastianPrehn/aoc/blob/main/2022/day01/Day01.py\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        os\nimport io\n\ndef max_calories(input_file,elves_amount):\n    total = [0]\n    with
        io.open(input_file,&amp;quot;r&amp;quot;) as input:\n        for line in input:\n            if
        line in os.linesep:\n                total.append(0)\n            else:\n                total[-1]
        += int(line)\n    total.sort(reverse=True)\n    print(f&amp;#39;Max calories:
        {sum(total[:elves_amount])}&amp;#39;)\n\nmax_calories(&amp;quot;inputSample.txt&amp;quot;,1)\nmax_calories(&amp;quot;input.txt&amp;quot;,1)\nmax_calories(&amp;quot;input.txt&amp;quot;,3)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhucho/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhucho", "created":
        1669906323.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhviwa",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "slim_toni",
        "can_mod_post": false, "created_utc": 1669906844.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5y65mo5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My first ever C++ code:\n\n\t#include &lt;iostream&gt;\n\t#include &lt;fstream&gt;\n\t#include
        &lt;string&gt;\n\t#include &lt;vector&gt;\n\t#include &lt;algorithm&gt;\n\t#include
        &lt;numeric&gt;\n\tusing namespace std;\n\n\tint main (int argc, char **argv)
        \n\t{\n\t\tifstream inFile(argv[1]);\n\t\tstring line;\n\t\tvector&lt;int&gt;
        allCalories {0};\n\t\tint currentCalories;\n\t\tint maxCalories = 0;\n\t\tint
        topThreeCalories = 0;\n\t\t\n\t\tif ( inFile.is_open() ) \n\t\t{\n\t\t\twhile
        ( getline(inFile,line) ) \n\t\t\t{\n\t\t\t\tif ( !line.empty() ) {\n\t\t\t\t\tallCalories.back()
        += stoi(line);\n\n\t\t\t\t\tcurrentCalories = allCalories.back();\n\t\t\t\t\tif
        ( currentCalories &gt; maxCalories ) {\n\t\t\t\t\t\tmaxCalories = currentCalories;\n\t\t\t\t\t}\n\t\t\t\t}
        else {\n\t\t\t\t\tallCalories.push_back(0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnth_element(allCalories.begin(),
        allCalories.begin() + 2, allCalories.end(), std::greater&lt;int&gt;());\n\t\t\t//
        for (int i = 0; i &lt; allCalories.size(); i++) { cout &lt;&lt; allCalories[i]
        &lt;&lt; endl;}\n\n\t\t\ttopThreeCalories = accumulate(allCalories.begin(),
        allCalories.begin()+3, 0);\n\n\t\t\tcout &lt;&lt; \"Solution to Part 1: \"
        &lt;&lt; maxCalories\n\t\t\t\t&lt;&lt; \"\\nSolution to Part 2: \" &lt;&lt;
        topThreeCalories;\n\t\t}\n\t}", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My first ever C++ code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;fstream&amp;gt;\n#include &amp;lt;string&amp;gt;\n#include
        &amp;lt;vector&amp;gt;\n#include &amp;lt;algorithm&amp;gt;\n#include &amp;lt;numeric&amp;gt;\nusing
        namespace std;\n\nint main (int argc, char **argv) \n{\n    ifstream inFile(argv[1]);\n    string
        line;\n    vector&amp;lt;int&amp;gt; allCalories {0};\n    int currentCalories;\n    int
        maxCalories = 0;\n    int topThreeCalories = 0;\n\n    if ( inFile.is_open()
        ) \n    {\n        while ( getline(inFile,line) ) \n        {\n            if
        ( !line.empty() ) {\n                allCalories.back() += stoi(line);\n\n                currentCalories
        = allCalories.back();\n                if ( currentCalories &amp;gt; maxCalories
        ) {\n                    maxCalories = currentCalories;\n                }\n            }
        else {\n                allCalories.push_back(0);\n            }\n        }\n\n        nth_element(allCalories.begin(),
        allCalories.begin() + 2, allCalories.end(), std::greater&amp;lt;int&amp;gt;());\n        //
        for (int i = 0; i &amp;lt; allCalories.size(); i++) { cout &amp;lt;&amp;lt;
        allCalories[i] &amp;lt;&amp;lt; endl;}\n\n        topThreeCalories = accumulate(allCalories.begin(),
        allCalories.begin()+3, 0);\n\n        cout &amp;lt;&amp;lt; &amp;quot;Solution
        to Part 1: &amp;quot; &amp;lt;&amp;lt; maxCalories\n            &amp;lt;&amp;lt;
        &amp;quot;\\nSolution to Part 2: &amp;quot; &amp;lt;&amp;lt; topThreeCalories;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhviwa/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhviwa", "created":
        1669906844.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhwhv8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "euidzero",
        "can_mod_post": false, "created_utc": 1669907269.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_b50hb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python.\n\n    #!/usr/bin/python3\n    \n    import fileinput\n    \n    t
        = 0\n    z = [0,0,0,0]\n    \n    for line in fileinput.input():\n        if
        line.strip():\n            t += int(line.strip())\n        else:\n            z[0]
        = t\n            z.sort()\n            t = 0\n    \n    print(z[3])\n    print(sum(z[1:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/python3\n\nimport
        fileinput\n\nt = 0\nz = [0,0,0,0]\n\nfor line in fileinput.input():\n    if
        line.strip():\n        t += int(line.strip())\n    else:\n        z[0] = t\n        z.sort()\n        t
        = 0\n\nprint(z[3])\nprint(sum(z[1:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhwhv8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhwhv8", "created":
        1669907269.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyj5qp2", "id": "iyj5qp2", "parent_id":
        "t1_iyhwhv8", "depth": 1, "children": ["iyj5qp2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670077348.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhwkux", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "idontknowwhattouse33",
        "can_mod_post": false, "created_utc": 1669907304.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1654ip", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "PowerShell - readable, not golfed.\n\nhttps://pastebin.com/9Uu7PiHj", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;PowerShell - readable, not golfed.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://pastebin.com/9Uu7PiHj\"&gt;https://pastebin.com/9Uu7PiHj&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhwkux/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhwkux", "created":
        1669907304.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq6i3g", "id": "iyq6i3g", "parent_id":
        "t1_iyhwkux", "depth": 1, "children": ["iyq6i3g"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi0vt0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nosekbk",
        "can_mod_post": false, "created_utc": 1669909099.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3uxl4kjr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Javascript**\n\n    let input = importFile(dir, filename)\n        .replace(/\\r/g,
        '''')\n        .split(''\\n\\n'')\n        .map(x =&gt; x\n            .split(''\\n'')\n            .map(Number)\n        )\n    \n    const
        part1 = () =&gt; {\n      let most = 0\n      for (const elf of input) {\n        const
        sum = elf.reduce((prev, curr) =&gt; prev + curr)\n        if (sum &gt; most)
        most = sum\n      }\n      return most\n    }\n    \n    const part2 = ()
        =&gt; {\n      let elfs = []\n      for (const elf of input) {\n        elfs.push(elf.reduce((prev,
        curr) =&gt; prev + curr))\n      }\n      return elfs\n        .sort((a, b)
        =&gt; b - a)\n        .slice(0, 3)\n        .reduce(((prev, curr) =&gt; prev
        + curr), 0)\n      return elfs\n    }\n\n[https://github.com/bartekkustra/adventofcode/tree/main/2022](https://github.com/bartekkustra/adventofcode/tree/main/2022)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Javascript&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        input = importFile(dir, filename)\n    .replace(/\\r/g, &amp;#39;&amp;#39;)\n    .split(&amp;#39;\\n\\n&amp;#39;)\n    .map(x
        =&amp;gt; x\n        .split(&amp;#39;\\n&amp;#39;)\n        .map(Number)\n    )\n\nconst
        part1 = () =&amp;gt; {\n  let most = 0\n  for (const elf of input) {\n    const
        sum = elf.reduce((prev, curr) =&amp;gt; prev + curr)\n    if (sum &amp;gt;
        most) most = sum\n  }\n  return most\n}\n\nconst part2 = () =&amp;gt; {\n  let
        elfs = []\n  for (const elf of input) {\n    elfs.push(elf.reduce((prev, curr)
        =&amp;gt; prev + curr))\n  }\n  return elfs\n    .sort((a, b) =&amp;gt; b
        - a)\n    .slice(0, 3)\n    .reduce(((prev, curr) =&amp;gt; prev + curr),
        0)\n  return elfs\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/bartekkustra/adventofcode/tree/main/2022\"&gt;https://github.com/bartekkustra/adventofcode/tree/main/2022&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi0vt0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi0vt0", "created":
        1669909099.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi2ubt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "HendrikPeter",
        "can_mod_post": false, "created_utc": 1669909900.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_vqmgr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Elixir**  \n[https://github.com/HendrikPetertje/advent\\_of\\_code\\_2022/blob/main/test/01/day\\_1\\_test.exs](https://github.com/HendrikPetertje/advent_of_code_2022/blob/main/test/01/day_1_test.exs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Elixir&lt;/strong&gt;&lt;br/&gt;\n&lt;a
        href=\"https://github.com/HendrikPetertje/advent_of_code_2022/blob/main/test/01/day_1_test.exs\"&gt;https://github.com/HendrikPetertje/advent_of_code_2022/blob/main/test/01/day_1_test.exs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi2ubt/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi2ubt", "created":
        1669909900.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi3voe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "llimllib",
        "can_mod_post": false, "created_utc": 1669910320.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_32r8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Nobody had posted **zig** yet, so here you go:\n\n    // run with: zig run
        a.zig\n    const std = @import(\"std\");\n    const testing = std.testing;\n    \n    const
        input = @embedFile(\"input.txt\");\n    \n    fn gt(_: void, lhs: usize, rhs:
        usize) bool {\n        return lhs &gt; rhs;\n    }\n    \n    pub fn calories(data:
        []const u8) ![3]usize {\n        var elves = std.mem.split(u8, data, \"\\n\\n\");\n    \n        var
        maxes = [_]usize{ 0, 0, 0 };\n        while (elves.next()) |elf| {\n            var
        foods = std.mem.tokenize(u8, elf, \"\\n\");\n            var sum: usize =
        0;\n            while (foods.next()) |food| {\n                sum += try
        std.fmt.parseInt(usize, food, 10);\n            }\n            if (sum &gt;
        maxes[2]) {\n                maxes[2] = sum;\n                std.sort.sort(usize,
        &amp;maxes, {}, gt);\n            }\n        }\n    \n        return maxes;\n    }\n    \n    pub
        fn main() !void {\n        var maxes = try calories(input);\n    \n        std.debug.print(\"part
        1: {}\\n\", .{maxes[0]});\n        std.debug.print(\"part 2: {}\\n\", .{maxes[0]
        + maxes[1] + maxes[2]});\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Nobody had posted &lt;strong&gt;zig&lt;/strong&gt;
        yet, so here you go:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// run with: zig
        run a.zig\nconst std = @import(&amp;quot;std&amp;quot;);\nconst testing =
        std.testing;\n\nconst input = @embedFile(&amp;quot;input.txt&amp;quot;);\n\nfn
        gt(_: void, lhs: usize, rhs: usize) bool {\n    return lhs &amp;gt; rhs;\n}\n\npub
        fn calories(data: []const u8) ![3]usize {\n    var elves = std.mem.split(u8,
        data, &amp;quot;\\n\\n&amp;quot;);\n\n    var maxes = [_]usize{ 0, 0, 0 };\n    while
        (elves.next()) |elf| {\n        var foods = std.mem.tokenize(u8, elf, &amp;quot;\\n&amp;quot;);\n        var
        sum: usize = 0;\n        while (foods.next()) |food| {\n            sum +=
        try std.fmt.parseInt(usize, food, 10);\n        }\n        if (sum &amp;gt;
        maxes[2]) {\n            maxes[2] = sum;\n            std.sort.sort(usize,
        &amp;amp;maxes, {}, gt);\n        }\n    }\n\n    return maxes;\n}\n\npub
        fn main() !void {\n    var maxes = try calories(input);\n\n    std.debug.print(&amp;quot;part
        1: {}\\n&amp;quot;, .{maxes[0]});\n    std.debug.print(&amp;quot;part 2: {}\\n&amp;quot;,
        .{maxes[0] + maxes[1] + maxes[2]});\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi3voe/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi3voe", "created":
        1669910320.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi5ph1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tenderspoon",
        "can_mod_post": false, "created_utc": 1669911066.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_rmz1kc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Clojure\n\n[Solution on GitHub](https://github.com/vollcheck/aoc/blob/master/src/y22/day01.clj)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Clojure&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/vollcheck/aoc/blob/master/src/y22/day01.clj\"&gt;Solution
        on GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi5ph1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi5ph1", "created":
        1669911066.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi61u1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tobytheghost",
        "can_mod_post": false, "created_utc": 1669911208.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_dzfh4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "One line JS solution (Part 1):\n\n```\nMath.max(...eval(`[${document.querySelector(''pre'').innerText.replace(/\\n\\n|\\n/g,
        m =&gt; m === ''\\n'' ? ''+'' : '','') + 0}]`))\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;One line JS solution (Part 1):&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nMath.max(...eval(`[${document.querySelector(&amp;#39;pre&amp;#39;).innerText.replace(/\\n\\n|\\n/g,
        m =&amp;gt; m === &amp;#39;\\n&amp;#39; ? &amp;#39;+&amp;#39; : &amp;#39;,&amp;#39;)
        + 0}]`))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi61u1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi61u1", "created":
        1669911208.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyi8oll", "id": "iyi8oll", "parent_id":
        "t1_iyi61u1", "depth": 1, "children": ["iyi8oll"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi7wuv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "b4ux1t3",
        "can_mod_post": false, "created_utc": 1669911960.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6bs49", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# and Rust: [https://gitlab.com/b4ux1t3/advent-of-code/-/tree/2022-day-one/2022](https://gitlab.com/b4ux1t3/advent-of-code/-/tree/2022-day-one/2022)\n\nI
        ended up using the same concept for both, and I''m probably moving forward
        with just rust, but I felt like starting off strong with C#, the language
        I use most (because I use it for work) on stream this morning.\n\nOne day
        I''ll implement a simple parser in C# (and probably rust) to keep from having
        to use Regex so heavily, but, eh, for now this works just fine!", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;C# and Rust: &lt;a href=\"https://gitlab.com/b4ux1t3/advent-of-code/-/tree/2022-day-one/2022\"&gt;https://gitlab.com/b4ux1t3/advent-of-code/-/tree/2022-day-one/2022&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        ended up using the same concept for both, and I&amp;#39;m probably moving
        forward with just rust, but I felt like starting off strong with C#, the language
        I use most (because I use it for work) on stream this morning.&lt;/p&gt;\n\n&lt;p&gt;One
        day I&amp;#39;ll implement a simple parser in C# (and probably rust) to keep
        from having to use Regex so heavily, but, eh, for now this works just fine!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi7wuv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi7wuv", "created":
        1669911960.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyi9xmp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kidthenick",
        "can_mod_post": false, "created_utc": 1669912777.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_12w9n8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "F#\n\nhttps://github.com/ntreu14/Advent-of-Code-2022/blob/master/day01/Program.fs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;F#&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/ntreu14/Advent-of-Code-2022/blob/master/day01/Program.fs\"&gt;https://github.com/ntreu14/Advent-of-Code-2022/blob/master/day01/Program.fs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyi9xmp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyi9xmp", "created":
        1669912777.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyj7pq2", "id": "iyj7pq2", "parent_id":
        "t1_iyi9xmp", "depth": 1, "children": ["iyj7pq2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyib1g3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "seaborgiumaggghhh",
        "can_mod_post": false, "created_utc": 1669913213.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4mww5jxy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Erlang:\n\n    parse_elves() -&gt;        \n        Lines = read_to_lines(),    \n        Lines_as_ints
        =         \n            lists:map(          \n                fun (X) -&gt;                   \n                    lists:map(                    \n                        fun
        (&lt;&lt;&gt;&gt;) -&gt; 0;                        \n                        (E)
        -&gt; \n                            binary_to_integer(E) end, X) end, Lines),    \n        lists:map(fun
        (X) -&gt; lists:sum(X) end, Lines_as_ints).\n    \n    solutionA() -&gt; \n        Elves
        = parse_elves(),\n        io:format(\"~p~n\", [lists:foldl(fun (Acc, Head)
        -&gt; max(Acc, Head) end, 0, Elves)]).\n    \n    solutionB() -&gt;\n        Elves
        = parse_elves(),\n        Top_elves = lists:sublist(lists:sort(fun (A, B)
        -&gt; A &gt; B end, Elves), 1, 3),\n        io:format(\"~p~n\", [lists:sum(Top_elves)]).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Erlang:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;parse_elves()
        -&amp;gt;        \n    Lines = read_to_lines(),    \n    Lines_as_ints =         \n        lists:map(          \n            fun
        (X) -&amp;gt;                   \n                lists:map(                    \n                    fun
        (&amp;lt;&amp;lt;&amp;gt;&amp;gt;) -&amp;gt; 0;                        \n                    (E)
        -&amp;gt; \n                        binary_to_integer(E) end, X) end, Lines),    \n    lists:map(fun
        (X) -&amp;gt; lists:sum(X) end, Lines_as_ints).\n\nsolutionA() -&amp;gt; \n    Elves
        = parse_elves(),\n    io:format(&amp;quot;~p~n&amp;quot;, [lists:foldl(fun
        (Acc, Head) -&amp;gt; max(Acc, Head) end, 0, Elves)]).\n\nsolutionB() -&amp;gt;\n    Elves
        = parse_elves(),\n    Top_elves = lists:sublist(lists:sort(fun (A, B) -&amp;gt;
        A &amp;gt; B end, Elves), 1, 3),\n    io:format(&amp;quot;~p~n&amp;quot;,
        [lists:sum(Top_elves)]).\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyib1g3/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyib1g3", "created": 1669913213.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyibwag", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "blazemas", "can_mod_post": false, "created_utc":
        1669913531.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_5tj9a", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "C#\n\n[https://github.com/jbush7401/AdventOfCodeCSharp/blob/master/AdventOfCode/2022/Day1.cs](https://github.com/jbush7401/AdventOfCodeCSharp/blob/master/AdventOfCode/2022/Day1.cs)\n\nI
        havent used c# in a bit so getting refreshed.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/jbush7401/AdventOfCodeCSharp/blob/master/AdventOfCode/2022/Day1.cs\"&gt;https://github.com/jbush7401/AdventOfCodeCSharp/blob/master/AdventOfCode/2022/Day1.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        havent used c# in a bit so getting refreshed.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyibwag/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyibwag", "created": 1669913531.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iyig8d3", "id": "iyig8d3", "parent_id": "t1_iyibwag", "depth": 1, "children":
        ["iyig8d3"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669914993.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyiev6x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Roganjoshua",
        "can_mod_post": false, "created_utc": 1669914667.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_626lo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Go/Golang solution\n\nBeen a stressful day at work so just wanted to bash
        something out without much thought. Could be much more efficient as a whole.\n\n[repo
        link](https://github.com/Roganjoshua98/advent-of-code/blob/main/2022/day01/main.go)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go/Golang solution&lt;/p&gt;\n\n&lt;p&gt;Been
        a stressful day at work so just wanted to bash something out without much
        thought. Could be much more efficient as a whole.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Roganjoshua98/advent-of-code/blob/main/2022/day01/main.go\"&gt;repo
        link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiev6x/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiev6x", "created":
        1669914667.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyifepj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mmaxharrison",
        "can_mod_post": false, "created_utc": 1669914879.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5kxbw8ah", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Haskell solution: [pastebin.com/zkZf4CFD](https://pastebin.com/zkZf4CFD)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Haskell solution:
        &lt;a href=\"https://pastebin.com/zkZf4CFD\"&gt;pastebin.com/zkZf4CFD&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyifepj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyifepj", "created":
        1669914879.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyig2js",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1669915133.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python \n\n[https://github.com/djotaku/adventofcode/blob/0cbe8bbc9ea18a66304c0c77bf8a48abc136bd3c/2022/Day\\_01/Python/solution.py](https://github.com/djotaku/adventofcode/blob/0cbe8bbc9ea18a66304c0c77bf8a48abc136bd3c/2022/Day_01/Python/solution.py)
        \n\nLooking back, I could have probably done process\\_elves() as a list comprehension,
        but wanted to get things done before heading to work.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/djotaku/adventofcode/blob/0cbe8bbc9ea18a66304c0c77bf8a48abc136bd3c/2022/Day_01/Python/solution.py\"&gt;https://github.com/djotaku/adventofcode/blob/0cbe8bbc9ea18a66304c0c77bf8a48abc136bd3c/2022/Day_01/Python/solution.py&lt;/a&gt;
        &lt;/p&gt;\n\n&lt;p&gt;Looking back, I could have probably done process_elves()
        as a list comprehension, but wanted to get things done before heading to work.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyig2js/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyig2js", "created":
        1669915133.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyig3lr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "agnul",
        "can_mod_post": false, "created_utc": 1669915145.0, "send_replies": false,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3dhe", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Clojure](https://privatebin.devol.it/?6f02072b5253bc2c#GQi9sCiytiC1tytUqrtCxkGruVa1nPrur7bp5Mr3EExe)
        because why not.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://privatebin.devol.it/?6f02072b5253bc2c#GQi9sCiytiC1tytUqrtCxkGruVa1nPrur7bp5Mr3EExe\"&gt;Clojure&lt;/a&gt;
        because why not.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyig3lr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyig3lr", "created":
        1669915145.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyih8nf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "p88h",
        "can_mod_post": false, "created_utc": 1669915582.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_w7wi5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C#** 1504 / 1608\n\n        public class Day01 : Solution {\n            public
        List&lt;int&gt; data = new List&lt;int&gt;() { 0 };\n            public List&lt;int&gt;
        sums = new List&lt;int&gt;();\n            public void parse(List&lt;string&gt;
        input) {\n                data = input.Select(s =&gt; (s.Length &gt; 0) ?
        int.Parse(s) : 0).ToList();\n            }\n    \n            public string
        part1() {\n                sums = new List&lt;int&gt;(data.Count) { 0 };\n                foreach
        (var n in data) if (n == 0) sums.Add(0); else sums[sums.Count - 1] += n;\n                return
        sums.Max().ToString();\n            }\n    \n            public string part2()
        {\n                return sums.OrderByDescending(n =&gt; n).Take(3).Sum().ToString();\n            }\n        }\n\n[github](https://github.com/p88h/aoc2022/blob/main/lib/day01.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C#&lt;/strong&gt;
        1504 / 1608&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    public class Day01 : Solution
        {\n        public List&amp;lt;int&amp;gt; data = new List&amp;lt;int&amp;gt;()
        { 0 };\n        public List&amp;lt;int&amp;gt; sums = new List&amp;lt;int&amp;gt;();\n        public
        void parse(List&amp;lt;string&amp;gt; input) {\n            data = input.Select(s
        =&amp;gt; (s.Length &amp;gt; 0) ? int.Parse(s) : 0).ToList();\n        }\n\n        public
        string part1() {\n            sums = new List&amp;lt;int&amp;gt;(data.Count)
        { 0 };\n            foreach (var n in data) if (n == 0) sums.Add(0); else
        sums[sums.Count - 1] += n;\n            return sums.Max().ToString();\n        }\n\n        public
        string part2() {\n            return sums.OrderByDescending(n =&amp;gt; n).Take(3).Sum().ToString();\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/p88h/aoc2022/blob/main/lib/day01.cs\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyih8nf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyih8nf", "created":
        1669915582.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyikovq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "C++ \n    #include &lt;iostream&gt;\n    #include &lt;string&gt;\n    #include
        &lt;fstream&gt;\n    \n    int main(int argc, char **argv) {\n    \tif(argc
        != 2) {\n    \t\treturn 1;\n    \t}\n    \tstd::ifstream file(argv[1]);\n    \tstd::string
        line;\n    \tint current = 0;\n    \tint max1 = -1;\n    \tint max2 = -1;\n    \tint
        max3 = -1;\n    \twhile(std::getline(file, line)) {\n    \t\tif(line.size()
        == 0) {\n    \t\t\tif(current &gt; max1) {\n    \t\t\t\tint temp1 = max1;\n    \t\t\t\tint
        temp2 = max2;\n    \t\t\t\tmax1 = current;\n    \t\t\t\tmax2 = temp1;\n    \t\t\t\tmax3
        = temp2;\t\n    \t\t\t} else if(current &gt; max2) {\n    \t\t\t\tint temp
        = max2;\n    \t\t\t\tmax2 = current;\n    \t\t\t\tmax3 = temp;\n    \t\t\t}
        else if(current &gt; max3) {\n    \t\t\t\tmax3 = current;\n    \t\t\t}\n    \t\t\tcurrent
        = 0;\n    \t\t} else {\n    \t\t\tcurrent += std::stoi(line);\n    \t\t}\n    \t}\n    \tstd::cout
        &lt;&lt; max1 + max2 + max3 &lt;&lt; std::endl;\n    \treturn 0;\n    }",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iyikovq",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C++
        \n    #include &amp;lt;iostream&amp;gt;\n    #include &amp;lt;string&amp;gt;\n    #include
        &amp;lt;fstream&amp;gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int main(int argc,
        char **argv) {\n    if(argc != 2) {\n        return 1;\n    }\n    std::ifstream
        file(argv[1]);\n    std::string line;\n    int current = 0;\n    int max1
        = -1;\n    int max2 = -1;\n    int max3 = -1;\n    while(std::getline(file,
        line)) {\n        if(line.size() == 0) {\n            if(current &amp;gt;
        max1) {\n                int temp1 = max1;\n                int temp2 = max2;\n                max1
        = current;\n                max2 = temp1;\n                max3 = temp2;   \n            }
        else if(current &amp;gt; max2) {\n                int temp = max2;\n                max2
        = current;\n                max3 = temp;\n            } else if(current &amp;gt;
        max3) {\n                max3 = current;\n            }\n            current
        = 0;\n        } else {\n            current += std::stoi(line);\n        }\n    }\n    std::cout
        &amp;lt;&amp;lt; max1 + max2 + max3 &amp;lt;&amp;lt; std::endl;\n    return
        0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyikovq/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1669916912.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1669916912.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyioig2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SorryTheory",
        "can_mod_post": false, "created_utc": 1669918409.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1e3wueym", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "(not very good) [haskell](https://github.com/rfaulhaber/aoc-2022/blob/main/1/app/Main.hs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;(not very good) &lt;a
        href=\"https://github.com/rfaulhaber/aoc-2022/blob/main/1/app/Main.hs\"&gt;haskell&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyioig2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyioig2", "created":
        1669918409.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669920213.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyip2ky", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Aromatic-Piccolo4321",
        "can_mod_post": false, "created_utc": 1669918630.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_826olxe2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "\ud83e\udd80\ud83e\udd80\ud83e\udd80 [my Rust solutions with unit tests](https://maebli.github.io/rust/2022/12/01/100rust-63.html)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;\ud83e\udd80\ud83e\udd80\ud83e\udd80
        &lt;a href=\"https://maebli.github.io/rust/2022/12/01/100rust-63.html\"&gt;my
        Rust solutions with unit tests&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyip2ky/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyip2ky", "created": 1669918630.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1670150135.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiptcs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fuckir",
        "can_mod_post": false, "created_utc": 1669918918.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_rme8hnz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Learnt working of heaps through this puzzle. Python 3.10\n\n    from helper
        import timeit\n    from heapq import heappush, heapify, heappop\n    read_text_file
        = lambda path: [x for x in open(path).read().split(''\\n'')]\n    calorie_list
        = tuple(read_text_file(\"day1.txt\"))\n    @timeit\n    def Day1 ():\n        calorie_sum=
        0  \n        heap = []\n        heapify(heap)    \n        for snack in calorie_list:\n            if
        snack != '''':\n                calorie_sum += int(snack)            \n            else:\n                heappush(heap,
        calorie_sum*-1)\n                calorie_sum = 0\n        \n        max_list
        = [heappop(heap)*-1,heappop(heap)*-1,heappop(heap)*-1]\n        print(f\"The
        solution to Day1 Part1 is {max_list[0]}\")\n        print(f\"The solution
        to Day1 Part2 is {sum(max_list)}\")            \n    Day1()", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Learnt working of heaps through this puzzle.
        Python 3.10&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from helper import timeit\nfrom
        heapq import heappush, heapify, heappop\nread_text_file = lambda path: [x
        for x in open(path).read().split(&amp;#39;\\n&amp;#39;)]\ncalorie_list = tuple(read_text_file(&amp;quot;day1.txt&amp;quot;))\n@timeit\ndef
        Day1 ():\n    calorie_sum= 0  \n    heap = []\n    heapify(heap)    \n    for
        snack in calorie_list:\n        if snack != &amp;#39;&amp;#39;:\n            calorie_sum
        += int(snack)            \n        else:\n            heappush(heap, calorie_sum*-1)\n            calorie_sum
        = 0\n\n    max_list = [heappop(heap)*-1,heappop(heap)*-1,heappop(heap)*-1]\n    print(f&amp;quot;The
        solution to Day1 Part1 is {max_list[0]}&amp;quot;)\n    print(f&amp;quot;The
        solution to Day1 Part2 is {sum(max_list)}&amp;quot;)            \nDay1()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiptcs/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiptcs", "created":
        1669918918.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq5o7j", "id": "iyq5o7j", "parent_id":
        "t1_iyiptcs", "depth": 1, "children": ["iyq5o7j"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiq59r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "stfuandkissmyturtle",
        "can_mod_post": false, "created_utc": 1669919047.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_sfwcmdx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[day1](https://stackblitz.com/edit/node-cxnkh5?file=index.js) My not as fancy
        as you JavaScript solution.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://stackblitz.com/edit/node-cxnkh5?file=index.js\"&gt;day1&lt;/a&gt;
        My not as fancy as you JavaScript solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiq59r/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyiq59r", "created": 1669919047.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyirah1", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "blazemas", "can_mod_post": false, "created_utc":
        1669919486.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_5tj9a", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "c++\n\n[https://github.com/jbush7401/AdventOfCodeCPP/blob/master/2022/Day1/day1.cpp](https://github.com/jbush7401/AdventOfCodeCPP/blob/master/2022/Day1/day1.cpp)\n\nI
        am doing c# too but only for a few days, I posted that solution a bit ago.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;c++&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jbush7401/AdventOfCodeCPP/blob/master/2022/Day1/day1.cpp\"&gt;https://github.com/jbush7401/AdventOfCodeCPP/blob/master/2022/Day1/day1.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        am doing c# too but only for a few days, I posted that solution a bit ago.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyirah1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyirah1", "created":
        1669919486.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyirrcf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "No_Handle_7130",
        "can_mod_post": false, "created_utc": 1669919669.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_aauprb7x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Seemed surprisingly fit for AWK, pretty happy with the result.\n\nhttps://pastebin.com/W4EG4ZLa",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Seemed surprisingly
        fit for AWK, pretty happy with the result.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/W4EG4ZLa\"&gt;https://pastebin.com/W4EG4ZLa&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyirrcf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyirrcf", "created":
        1669919669.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669920694.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyityzs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "h2oANALyst",
        "can_mod_post": false, "created_utc": 1669920514.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2rkukzac", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Solution using R\n\n    library(tidyverse)\n    text &lt;- readLines(\"2022
        1201 input.txt\")\n    data &lt;- tibble(\n        calories = text,\n        elf
        = 0\n    ) %&gt;%\n    mutate(\n        elf = ifelse(calories == \"\", elf
        + 1, elf),\n        elf_adj = paste0(\"elf \", cumsum(elf))\n    ) %&gt;%
        \n    filter(\n        calories != \"\"\n    ) %&gt;% \n    group_by(\n        elf_adj\n    )
        %&gt;% \n    summarise(\n        calories = sum(as.numeric(calories))\n    )
        %&gt;%\n    arrange(\n        desc(calories)\n    )\n    \n    pt_1 &lt;-
        slice_head(data)\n    pt_2 &lt;- slice(data, c(1:3)) %&gt;% summarise(sum(calories))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My Solution using R&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;library(tidyverse)\ntext
        &amp;lt;- readLines(&amp;quot;2022 1201 input.txt&amp;quot;)\ndata &amp;lt;-
        tibble(\n    calories = text,\n    elf = 0\n) %&amp;gt;%\nmutate(\n    elf
        = ifelse(calories == &amp;quot;&amp;quot;, elf + 1, elf),\n    elf_adj = paste0(&amp;quot;elf
        &amp;quot;, cumsum(elf))\n) %&amp;gt;% \nfilter(\n    calories != &amp;quot;&amp;quot;\n)
        %&amp;gt;% \ngroup_by(\n    elf_adj\n) %&amp;gt;% \nsummarise(\n    calories
        = sum(as.numeric(calories))\n) %&amp;gt;%\narrange(\n    desc(calories)\n)\n\npt_1
        &amp;lt;- slice_head(data)\npt_2 &amp;lt;- slice(data, c(1:3)) %&amp;gt;%
        summarise(sum(calories))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyityzs/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyityzs", "created": 1669920514.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669943619.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiu5e2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1669920583.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "##SWI Prolog\n\n    :- use_module(library(dcg/basics)).\n    :- use_module(library(pio)).\n    \n    elf([])
        --&gt; eol.\n    elf([Calories|Inventory]) --&gt; number(Calories), eol, elf(Inventory).\n\n    elves([])
        --&gt; eos.\n    elves([E|Elves]) --&gt; elf(Inv), {sum_list(Inv, E)}, elves(Elves).\n\n    main
        :-\n        File = ''C:/AdventOfCode/2022/input1.txt'',\n        phrase_from_file(elves(Es),
        File),\n        sort(0, @&gt;=, Es, [Part1,Elf2,Elf3|_]),\n        sum_list([Part1,Elf2,Elf3],
        Part2),\n        format(''Part 1: ~w~nPart2: ~w~n'', [Part1, Part2]).\n\nIt''s
        a grammar which reads a `number(Calories), eol` (end-of-line) as a snack in
        an elf''s inventory, followed by more snacks until an empty line which finishes
        that chain, then reads many of those elf inventory chains to make the whole
        inventory for all elves (and sum their inventory as it goes), until eos (end-of-stream
        I think).\n\nAnd then it applies the grammar to a file, sorts and pattern
        matches to unpack the first three, and uses those as the part1/part2 output,
        and format (prints to stdout) the results.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h2&gt;SWI Prolog&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;:-
        use_module(library(dcg/basics)).\n:- use_module(library(pio)).\n\nelf([])
        --&amp;gt; eol.\nelf([Calories|Inventory]) --&amp;gt; number(Calories), eol,
        elf(Inventory).\n\nelves([]) --&amp;gt; eos.\nelves([E|Elves]) --&amp;gt;
        elf(Inv), {sum_list(Inv, E)}, elves(Elves).\n\nmain :-\n    File = &amp;#39;C:/AdventOfCode/2022/input1.txt&amp;#39;,\n    phrase_from_file(elves(Es),
        File),\n    sort(0, @&amp;gt;=, Es, [Part1,Elf2,Elf3|_]),\n    sum_list([Part1,Elf2,Elf3],
        Part2),\n    format(&amp;#39;Part 1: ~w~nPart2: ~w~n&amp;#39;, [Part1, Part2]).\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&amp;#39;s
        a grammar which reads a &lt;code&gt;number(Calories), eol&lt;/code&gt; (end-of-line)
        as a snack in an elf&amp;#39;s inventory, followed by more snacks until an
        empty line which finishes that chain, then reads many of those elf inventory
        chains to make the whole inventory for all elves (and sum their inventory
        as it goes), until eos (end-of-stream I think).&lt;/p&gt;\n\n&lt;p&gt;And
        then it applies the grammar to a file, sorts and pattern matches to unpack
        the first three, and uses those as the part1/part2 output, and format (prints
        to stdout) the results.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiu5e2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiu5e2", "created":
        1669920583.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiuhlp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MarcusTL12",
        "can_mod_post": false, "created_utc": 1669920712.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_32ynqnu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Z80 Assembly on TI83:\n\n[github](https://github.com/MarcusTL12/AdventOfCodeTI83/tree/main/2022/day1)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Z80 Assembly on TI83:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/MarcusTL12/AdventOfCodeTI83/tree/main/2022/day1\"&gt;github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiuhlp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiuhlp", "created":
        1669920712.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iyiz9fh", "id": "iyiz9fh", "parent_id":
        "t1_iyiuhlp", "depth": 1, "children": ["iyiz9fh", "iyq594v"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiyv19",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Chrinkus",
        "can_mod_post": false, "created_utc": 1669922426.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_n38jn1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C\n\nHere is my [Topaz link](https://topaz.github.io/paste/#XQAAAQC8BAAAAAAAAAARmknGRw8TogB3OyPPwW//03/GflBUNtNPPGjwnHz/92E+7YzKe8EEt6uOXS0r0PcHTVH2BWBuCQytmWRLfME+ofHs75sxKEsoqsghffI2Ld9OfA4AZAPyRPoQhM7cWIG5XSce49yg36PTbfwPDbI4xKRczme7CDXz6SLXOggyGB/dNYBbFKhccVZf+Gc3JJrsik48H0DfQsvPIXhV+bZxeSG0UCH8vHrZyzDPlkcjz2kOCEQBIhYjMrPbKlPSuVuRt2gcNDBmSbwUH/k9wpYhiikSZ5SuuMKOD+2G4bKee08ME6MA8PmDh9+Tvyf30QgyrDE/FbDhyaKGwWMLKjfZuFGj1+ASLEirFkK3ZDpKPgR9ahAMxSA9kzE2wsYC/vzIa3eInzyN0p7JJi4JKybyzlX9R9/Pe/x4IP2RemuAPttmPFUo5m9tG0XKkaXr6IB3PFVB9omX8MxvkkNrSQz9scpQp0OytqdF+4KAZEf3xFxOg9G2EiJyG/suFy7EDVZP6T9lrduOGBUtg5/osG1PgGfn+lxjAxYphR97aH8PJHlz6QPZOBqlEAQ7uJaHA1NW9Jz+C02B050bp/RISLLFDBovN2J37YmLbnc0Vf8c02f8xGG5hpKtBGzNwaZi+wZsh/6ieoo=).
        So happy to get started on AoC again! Been working on my general C library
        off and on all year, excited to have the chance to use it!\n\n[Link to repo.](https://github.com/Chrinkus/advent-of-code/tree/main/2022)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;C&lt;/h1&gt;\n\n&lt;p&gt;Here
        is my &lt;a href=\"https://topaz.github.io/paste/#XQAAAQC8BAAAAAAAAAARmknGRw8TogB3OyPPwW//03/GflBUNtNPPGjwnHz/92E+7YzKe8EEt6uOXS0r0PcHTVH2BWBuCQytmWRLfME+ofHs75sxKEsoqsghffI2Ld9OfA4AZAPyRPoQhM7cWIG5XSce49yg36PTbfwPDbI4xKRczme7CDXz6SLXOggyGB/dNYBbFKhccVZf+Gc3JJrsik48H0DfQsvPIXhV+bZxeSG0UCH8vHrZyzDPlkcjz2kOCEQBIhYjMrPbKlPSuVuRt2gcNDBmSbwUH/k9wpYhiikSZ5SuuMKOD+2G4bKee08ME6MA8PmDh9+Tvyf30QgyrDE/FbDhyaKGwWMLKjfZuFGj1+ASLEirFkK3ZDpKPgR9ahAMxSA9kzE2wsYC/vzIa3eInzyN0p7JJi4JKybyzlX9R9/Pe/x4IP2RemuAPttmPFUo5m9tG0XKkaXr6IB3PFVB9omX8MxvkkNrSQz9scpQp0OytqdF+4KAZEf3xFxOg9G2EiJyG/suFy7EDVZP6T9lrduOGBUtg5/osG1PgGfn+lxjAxYphR97aH8PJHlz6QPZOBqlEAQ7uJaHA1NW9Jz+C02B050bp/RISLLFDBovN2J37YmLbnc0Vf8c02f8xGG5hpKtBGzNwaZi+wZsh/6ieoo=\"&gt;Topaz
        link&lt;/a&gt;. So happy to get started on AoC again! Been working on my general
        C library off and on all year, excited to have the chance to use it!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Chrinkus/advent-of-code/tree/main/2022\"&gt;Link
        to repo.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiyv19/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiyv19", "created":
        1669922426.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyk9nh7", "id": "iyk9nh7", "parent_id":
        "t1_iyiyv19", "depth": 1, "children": ["iyk9nh7"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670073324.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyizsac", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tV4Ybxw8",
        "can_mod_post": false, "created_utc": 1669922797.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_bocrg3dm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++\n\nI''m new to programming and this is my first time doing this, hopefully
        i can do it all.\n\n```\n\n    #include &lt;iostream&gt;\n    #include &lt;fstream&gt;\n    #include
        &lt;string&gt;\n    #include &lt;vector&gt;\n    #include &lt;algorithm&gt;\n    \n    int
        main(){\n        std::string fileName = \"input.txt\";\n        std::ifstream
        file {fileName};\n    \n        std::string calories;\n        std::vector&lt;std::string&gt;
        tempCalories;\n        std::vector&lt;std::vector&lt;std::string&gt;&gt; elfCalories;\n    \n        int
        calSum = 0;\n        std::vector&lt;int&gt; finalVec;\n    \n        while(std::getline(file,
        calories)){\n            if(calories == \"\"){\n                elfCalories.push_back(tempCalories);\n                tempCalories.clear();\n            }else{\n                tempCalories.push_back(calories);\n            }\n        }\n    \n        for(std::vector&lt;std::string&gt;
        tempVec: elfCalories){\n            for(std::string i: tempVec){\n                calSum
        += stoi(i);\n            }\n            finalVec.push_back(calSum);\n            calSum
        = 0;\n        }\n        std::sort(finalVec.begin(), finalVec.end());\n        calSum
        = finalVec[finalVec.size() - 1] + finalVec[finalVec.size() - 2] + finalVec[finalVec.size()
        - 3];\n        std::cout &lt;&lt; \"Top guy: \" &lt;&lt; finalVec[finalVec.size()
        - 1] &lt;&lt; ''\\n'';\n        std::cout &lt;&lt; \"Top three: \" &lt;&lt;
        calSum;\n    }      \n\n```\n\nEdit: Formatting", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C++&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m new to programming
        and this is my first time doing this, hopefully i can do it all.&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#include
        &amp;lt;iostream&amp;gt;\n#include &amp;lt;fstream&amp;gt;\n#include &amp;lt;string&amp;gt;\n#include
        &amp;lt;vector&amp;gt;\n#include &amp;lt;algorithm&amp;gt;\n\nint main(){\n    std::string
        fileName = &amp;quot;input.txt&amp;quot;;\n    std::ifstream file {fileName};\n\n    std::string
        calories;\n    std::vector&amp;lt;std::string&amp;gt; tempCalories;\n    std::vector&amp;lt;std::vector&amp;lt;std::string&amp;gt;&amp;gt;
        elfCalories;\n\n    int calSum = 0;\n    std::vector&amp;lt;int&amp;gt; finalVec;\n\n    while(std::getline(file,
        calories)){\n        if(calories == &amp;quot;&amp;quot;){\n            elfCalories.push_back(tempCalories);\n            tempCalories.clear();\n        }else{\n            tempCalories.push_back(calories);\n        }\n    }\n\n    for(std::vector&amp;lt;std::string&amp;gt;
        tempVec: elfCalories){\n        for(std::string i: tempVec){\n            calSum
        += stoi(i);\n        }\n        finalVec.push_back(calSum);\n        calSum
        = 0;\n    }\n    std::sort(finalVec.begin(), finalVec.end());\n    calSum
        = finalVec[finalVec.size() - 1] + finalVec[finalVec.size() - 2] + finalVec[finalVec.size()
        - 3];\n    std::cout &amp;lt;&amp;lt; &amp;quot;Top guy: &amp;quot; &amp;lt;&amp;lt;
        finalVec[finalVec.size() - 1] &amp;lt;&amp;lt; &amp;#39;\\n&amp;#39;;\n    std::cout
        &amp;lt;&amp;lt; &amp;quot;Top three: &amp;quot; &amp;lt;&amp;lt; calSum;\n}      \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;Edit:
        Formatting&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyizsac/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyizsac", "created":
        1669922797.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq4tz8", "id": "iyq4tz8", "parent_id":
        "t1_iyizsac", "depth": 1, "children": ["iyq4tz8"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyizv63",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pier4r",
        "can_mod_post": false, "created_utc": 1669922828.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ci7ay", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "### Puppet\n\nSolution here https://osdn.net/users/pier4r/pastebin/9133 (too
        long)\n\nCore of the solution (input removed)\n\n    $activate_debug = false\n    $array_of_sums
        = $input.reduce([0]) | $incremental_result, $value | {\n        # we go through
        the list, we build a sum for each series of elements that have numbers,\n        #
        then we create a new sum once we get the empty string\n        if $activate_debug
        {\n            notice($value) #nice function that I barely used in the past.\n            notice($incremental_result)
        #the incremental result new value will be visible only in the new iteration\n        }\n        if
        ($value == ''''){\n            #create a new element, append.\n            $incremental_result
        + [ 0 ] #leave the result for the next iteration\n        }\n        else
        {\n            #add the value to the last element\n            # $incremental_result[-1]
        = $incremental_result[-1] + $value #Illegal attempt to assign via [index/key].
        Not an assignable reference\n            $new_last = $incremental_result[-1]
        + Integer($value) #-1 , starting from the last element.\n            if $activate_debug
        { notice(\"newlast: ${new_last}\") }\n            $previous_array = delete_at($incremental_result,
        -1) #we need to replace the last element\n            if $activate_debug {
        notice(\"previous_array: ${previous_array}\" ) }\n            $previous_array
        + $new_last #leave the result for the next iteration\n        }\n    }\n    notice(max(*$array_of_sums))
        # use the max function splatting the array\n\n    # sort and get the sum of
        the top three\n    $sorted_array = sort($array_of_sums)\n    notice($sorted_array[-3,-1])\n    $top_three_sum
        = $sorted_array[-3,-1].reduce(0) | $incremental_result, $value | { $incremental_result
        + $value}\n        # note that the slice is starting from the back, picking
        3 elements, thus the third last (-3 ) and the last (-1)\n    notice($top_three_sum)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;Puppet&lt;/h3&gt;\n\n&lt;p&gt;Solution
        here &lt;a href=\"https://osdn.net/users/pier4r/pastebin/9133\"&gt;https://osdn.net/users/pier4r/pastebin/9133&lt;/a&gt;
        (too long)&lt;/p&gt;\n\n&lt;p&gt;Core of the solution (input removed)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$activate_debug
        = false\n$array_of_sums = $input.reduce([0]) | $incremental_result, $value
        | {\n    # we go through the list, we build a sum for each series of elements
        that have numbers,\n    # then we create a new sum once we get the empty string\n    if
        $activate_debug {\n        notice($value) #nice function that I barely used
        in the past.\n        notice($incremental_result) #the incremental result
        new value will be visible only in the new iteration\n    }\n    if ($value
        == &amp;#39;&amp;#39;){\n        #create a new element, append.\n        $incremental_result
        + [ 0 ] #leave the result for the next iteration\n    }\n    else {\n        #add
        the value to the last element\n        # $incremental_result[-1] = $incremental_result[-1]
        + $value #Illegal attempt to assign via [index/key]. Not an assignable reference\n        $new_last
        = $incremental_result[-1] + Integer($value) #-1 , starting from the last element.\n        if
        $activate_debug { notice(&amp;quot;newlast: ${new_last}&amp;quot;) }\n        $previous_array
        = delete_at($incremental_result, -1) #we need to replace the last element\n        if
        $activate_debug { notice(&amp;quot;previous_array: ${previous_array}&amp;quot;
        ) }\n        $previous_array + $new_last #leave the result for the next iteration\n    }\n}\nnotice(max(*$array_of_sums))
        # use the max function splatting the array\n\n# sort and get the sum of the
        top three\n$sorted_array = sort($array_of_sums)\nnotice($sorted_array[-3,-1])\n$top_three_sum
        = $sorted_array[-3,-1].reduce(0) | $incremental_result, $value | { $incremental_result
        + $value}\n    # note that the slice is starting from the back, picking 3
        elements, thus the third last (-3 ) and the last (-1)\nnotice($top_three_sum)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyizv63/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyizv63", "created":
        1669922828.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670089546.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj0pbg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Outrageous72",
        "can_mod_post": false, "created_utc": 1669923166.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_7yxaprto", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#\n\n    int Part1(string[] lines)\n    {\n        var calories = ToCalories(lines);\n        var
        max = calories.Select(x=&gt; x.Sum()).Max();\n        return max;\n    }\n    \n    int
        Part2(string[] lines)\n    {\n        var calories = ToCalories(lines);\n        var
        top3 = calories.Select(x=&gt; x.Sum()).OrderDescending().Take(3).Sum();\n        return
        top3;\n    }\n    \n    IEnumerable&lt;List&lt;int&gt;&gt; ToCalories(string[]
        lines)\n    {\n        var list = new List&lt;int&gt;();\n\n        foreach(var
        line in lines)\n        {\n            if (string.IsNullOrEmpty(line))\n            {\n                yield
        return list;\n                list = new();\n            }\n            else\n            {\n                list.Add(line.ToInt());\n            }\n        }\n    \n        if
        (list.Any())\n        {\n            yield return list;\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int
        Part1(string[] lines)\n{\n    var calories = ToCalories(lines);\n    var max
        = calories.Select(x=&amp;gt; x.Sum()).Max();\n    return max;\n}\n\nint Part2(string[]
        lines)\n{\n    var calories = ToCalories(lines);\n    var top3 = calories.Select(x=&amp;gt;
        x.Sum()).OrderDescending().Take(3).Sum();\n    return top3;\n}\n\nIEnumerable&amp;lt;List&amp;lt;int&amp;gt;&amp;gt;
        ToCalories(string[] lines)\n{\n    var list = new List&amp;lt;int&amp;gt;();\n\n    foreach(var
        line in lines)\n    {\n        if (string.IsNullOrEmpty(line))\n        {\n            yield
        return list;\n            list = new();\n        }\n        else\n        {\n            list.Add(line.ToInt());\n        }\n    }\n\n    if
        (list.Any())\n    {\n        yield return list;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj0pbg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj0pbg", "created":
        1669923166.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyq4rie", "id": "iyq4rie", "parent_id":
        "t1_iyj0pbg", "depth": 1, "children": ["iyq4rie", "iyjnghu"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669923858.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj12wv", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Wtfparadox",
        "can_mod_post": false, "created_utc": 1669923317.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ndow6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haskell. Got stuck for a while trying to parse the input\n\n\n    main ::
        IO ()\n    main = do\n           contents &lt;- readFile \u201cinput.txt\u201d\n           print
        . solvePartOne .   parseInput . lines $ contents\n           print . solvePartTwo
        . parseInput . lines $ contents\n\n    readInt :: String -&gt; Int\n    readInt
        = read\n\n    parseInput :: [String] -&gt; [[Int]]\n    parseInput [] = []\n    parseInput
        xs = map readInt (takeWhile (not . null) xs) : parseInput (drop 1 (dropWhile
        (not . null) xs))\n\n    solvePartOne :: [[Int]] -&gt; Int\n    solvePartOne
        = maximum . map sum\n\n    solvePartTwo :: [[Int]] -&gt; Int\n    solvePartTwo
        xs = fst\u2019 maxThree + snd\u2019 maxThree + thd maxThree\n        where\n            maxThree
        = foldr (updateTopThree . sum) (0, 0, 0) xs\n\n    fst\u2019 :: (a, a, a)
        -&gt; a\n    fst\u2019 (a, _, _) = a\n\n    snd\u2019 :: (a, a, a) -&gt; a\n    snd\u2019
        (_, a, _) = a\n\n    thd :: (a, a, a) -&gt; a\n    thd (_, _, a) = a\n\n    updateTopThree
        :: Ord a =&gt; a -&gt; (a,a,a) -&gt; (a, a, a)\n    updateTopThree e (b, c,
        d)\n        | d &gt; e  = (b, c, d)\n        | c &gt;= e = (b, c, e)\n        |
        b &gt;= e = (b, e, c)\n        | otherwise  = (e, b, c)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Haskell. Got stuck for a while trying to
        parse the input&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;main :: IO ()\nmain =
        do\n       contents &amp;lt;- readFile \u201cinput.txt\u201d\n       print
        . solvePartOne .   parseInput . lines $ contents\n       print . solvePartTwo
        . parseInput . lines $ contents\n\nreadInt :: String -&amp;gt; Int\nreadInt
        = read\n\nparseInput :: [String] -&amp;gt; [[Int]]\nparseInput [] = []\nparseInput
        xs = map readInt (takeWhile (not . null) xs) : parseInput (drop 1 (dropWhile
        (not . null) xs))\n\nsolvePartOne :: [[Int]] -&amp;gt; Int\nsolvePartOne =
        maximum . map sum\n\nsolvePartTwo :: [[Int]] -&amp;gt; Int\nsolvePartTwo xs
        = fst\u2019 maxThree + snd\u2019 maxThree + thd maxThree\n    where\n        maxThree
        = foldr (updateTopThree . sum) (0, 0, 0) xs\n\nfst\u2019 :: (a, a, a) -&amp;gt;
        a\nfst\u2019 (a, _, _) = a\n\nsnd\u2019 :: (a, a, a) -&amp;gt; a\nsnd\u2019
        (_, a, _) = a\n\nthd :: (a, a, a) -&amp;gt; a\nthd (_, _, a) = a\n\nupdateTopThree
        :: Ord a =&amp;gt; a -&amp;gt; (a,a,a) -&amp;gt; (a, a, a)\nupdateTopThree
        e (b, c, d)\n    | d &amp;gt; e  = (b, c, d)\n    | c &amp;gt;= e = (b, c,
        e)\n    | b &amp;gt;= e = (b, e, c)\n    | otherwise  = (e, b, c)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj12wv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj12wv", "created":
        1669923317.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669931160.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj1e8h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "chrismo80",
        "can_mod_post": false, "created_utc": 1669923442.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4tw1ximy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C#\n\nhttps://pastebin.com/AMsyysMt", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;C&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/AMsyysMt\"&gt;https://pastebin.com/AMsyysMt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj1e8h/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj1e8h", "created":
        1669923442.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iykhgmt", "id": "iykhgmt", "parent_id":
        "t1_iyj1e8h", "depth": 1, "children": ["iykhgmt"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj1jqy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "IdrisTheDragon",
        "can_mod_post": false, "created_utc": 1669923503.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_15sslf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A rust solution..\n\nThis took way too long setting up rust with a formal
        project structure.  https://github.com/IdrisTheDragon/Advent2022/blob/main/day_01/src/lib.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A rust solution..&lt;/p&gt;\n\n&lt;p&gt;This
        took way too long setting up rust with a formal project structure.  &lt;a
        href=\"https://github.com/IdrisTheDragon/Advent2022/blob/main/day_01/src/lib.rs\"&gt;https://github.com/IdrisTheDragon/Advent2022/blob/main/day_01/src/lib.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj1jqy/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj1jqy", "created":
        1669923503.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj4wrk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Own-Calligrapher5234",
        "can_mod_post": false, "created_utc": 1669924803.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_8mcubmzi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#:\n\n    internal class Day1 :Base, IBase\n    {\n        private List&lt;int&gt;
        reindeerCalories= new List&lt;int&gt;();\n        public Day1() : base($\"Day{DateTime.Now.Day}\")\n        {\n        }\n        public
        void Run()\n        {\n            ReadData();\n            Part1();\n            Part2();\n        }\n        public
        void Part1()\n        {\n            Display(resultPart1: reindeerCalories.Last().ToString());\n        }\n        public
        void Part2()\n        {\n            Display(resultPart2: reindeerCalories.GetRange(reindeerCalories.Count()-3,3).Sum().ToString());\n        }\n        public
        void ReadData()\n        {\n            var iterator = 0;\n            reindeerCalories
        = streamReader.ReadToEnd().Split(Environment.NewLine).Select(u =&gt; new\n            {\n            index
        = string.IsNullOrEmpty(u) ? ++iterator : iterator,\n            value = string.IsNullOrEmpty(u)
        ? 0: int.Parse(u)\n            }).GroupBy(u=&gt;u.index).Select(u=&gt;u.Sum(e=&gt;e.value)).OrderBy(u=&gt;u).ToList();\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;internal
        class Day1 :Base, IBase\n{\n    private List&amp;lt;int&amp;gt; reindeerCalories=
        new List&amp;lt;int&amp;gt;();\n    public Day1() : base($&amp;quot;Day{DateTime.Now.Day}&amp;quot;)\n    {\n    }\n    public
        void Run()\n    {\n        ReadData();\n        Part1();\n        Part2();\n    }\n    public
        void Part1()\n    {\n        Display(resultPart1: reindeerCalories.Last().ToString());\n    }\n    public
        void Part2()\n    {\n        Display(resultPart2: reindeerCalories.GetRange(reindeerCalories.Count()-3,3).Sum().ToString());\n    }\n    public
        void ReadData()\n    {\n        var iterator = 0;\n        reindeerCalories
        = streamReader.ReadToEnd().Split(Environment.NewLine).Select(u =&amp;gt; new\n        {\n        index
        = string.IsNullOrEmpty(u) ? ++iterator : iterator,\n        value = string.IsNullOrEmpty(u)
        ? 0: int.Parse(u)\n        }).GroupBy(u=&amp;gt;u.index).Select(u=&amp;gt;u.Sum(e=&amp;gt;e.value)).OrderBy(u=&amp;gt;u).ToList();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj4wrk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj4wrk", "created":
        1669924803.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669925513.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj68z1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Scibbie_",
        "can_mod_post": false, "created_utc": 1669925315.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_140zmc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Yet Another Rust Solution\n\n    pub fn solution(input: &amp;String, elf_count:
        i32) -&gt; i32 {\n        let lines = input.lines();\n        let mut elves:
        Vec&lt;i32&gt; = Vec::new();\n        elves.push(0);\n        for line in
        lines {\n            if line.len() == 0 {\n                elves.push(0);\n                continue;\n            }\n            let
        elf = elves.last_mut().unwrap();\n            let calories: i32 = line.trim().parse().expect(\"expected
        number.\");\n            *elf += calories;\n        }\n        elves.sort_by(|a,
        b| b.cmp(a));\n        let mut total: i32 = 0;\n        for i in 0..elf_count
        {\n            total += elves[i as usize];\n        }\n        total\n    }\n\nNew
        to Rust, it''s cool seeing the slight differences in the algorithm''s across
        languages / others'' implementations.\n\nalso reddit has the worst code blocks
        jeez", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yet
        Another Rust Solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pub fn solution(input:
        &amp;amp;String, elf_count: i32) -&amp;gt; i32 {\n    let lines = input.lines();\n    let
        mut elves: Vec&amp;lt;i32&amp;gt; = Vec::new();\n    elves.push(0);\n    for
        line in lines {\n        if line.len() == 0 {\n            elves.push(0);\n            continue;\n        }\n        let
        elf = elves.last_mut().unwrap();\n        let calories: i32 = line.trim().parse().expect(&amp;quot;expected
        number.&amp;quot;);\n        *elf += calories;\n    }\n    elves.sort_by(|a,
        b| b.cmp(a));\n    let mut total: i32 = 0;\n    for i in 0..elf_count {\n        total
        += elves[i as usize];\n    }\n    total\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;New
        to Rust, it&amp;#39;s cool seeing the slight differences in the algorithm&amp;#39;s
        across languages / others&amp;#39; implementations.&lt;/p&gt;\n\n&lt;p&gt;also
        reddit has the worst code blocks jeez&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj68z1/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyj68z1", "created": 1669925315.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 1, "name":
        "t1_iyq4pty", "id": "iyq4pty", "parent_id": "t1_iyj68z1", "depth": 1, "children":
        ["iyq4pty"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1670062332.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj82ao", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "connie5919",
        "can_mod_post": false, "created_utc": 1669925997.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_cz05sz45", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n\n    f = open(\"input.txt\", \"r\")\n    totalCalories = []\n    arr
        = f.read().split(\"\\n\")\n    indexOfLastStop = 0\n    total = 0\n    top3
        = 0\n    \n    for i in arr:\n        if i == \"\":\n            totalCalories.append(total)\n            total
        = 0\n        else:\n            total += int(i)\n    \n    totalCalories =
        sorted(totalCalories)\n    totalCalories.reverse()\n    print(totalCalories)\n    for
        i in range (0, 3): print(i) top3 += totalCalories[i]\n    print(top3)\n\nCould
        probably be done in a shorter way, but this was how I did it", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f
        = open(&amp;quot;input.txt&amp;quot;, &amp;quot;r&amp;quot;)\ntotalCalories
        = []\narr = f.read().split(&amp;quot;\\n&amp;quot;)\nindexOfLastStop = 0\ntotal
        = 0\ntop3 = 0\n\nfor i in arr:\n    if i == &amp;quot;&amp;quot;:\n        totalCalories.append(total)\n        total
        = 0\n    else:\n        total += int(i)\n\ntotalCalories = sorted(totalCalories)\ntotalCalories.reverse()\nprint(totalCalories)\nfor
        i in range (0, 3): print(i) top3 += totalCalories[i]\nprint(top3)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Could
        probably be done in a shorter way, but this was how I did it&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj82ao/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj82ao", "created":
        1669925997.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq4j38", "id": "iyq4j38", "parent_id":
        "t1_iyj82ao", "depth": 1, "children": ["iyq4j38"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670074345.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj8urz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DrDrunkestein",
        "can_mod_post": false, "created_utc": 1669926297.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2a7dmo7j", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Zig**\n```\n    pub fn main() !void {\n        var gpa = std.heap.GeneralPurposeAllocator(.{}){};\n        const
        allocator = gpa.allocator();\n        var calories_per_elf = std.ArrayList(u32).init(allocator);\n        defer
        calories_per_elf.deinit();\n\n        var calories: u32 = 0;\n        var
        lines = std.mem.split(u8, input, \"\\n\");\n        while (lines.next()) |entry|
        {\n            if (entry.len &gt; 0) {\n                calories += try std.fmt.parseUnsigned(u32,
        entry, 10);\n            } else {\n                try calories_per_elf.append(calories);\n                calories
        = 0;\n            }\n        }\n\n        var res = calories_per_elf.toOwnedSlice();\n        std.sort.sort(u32,
        res, {}, std.sort.desc(u32));\n        print(\"Sum: {d}\\n\", .{res[0] + res[1]
        + res[2]});\n    }\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Zig&lt;/strong&gt;\n```\n    pub
        fn main() !void {\n        var gpa = std.heap.GeneralPurposeAllocator(.{}){};\n        const
        allocator = gpa.allocator();\n        var calories_per_elf = std.ArrayList(u32).init(allocator);\n        defer
        calories_per_elf.deinit();&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    var calories:
        u32 = 0;\n    var lines = std.mem.split(u8, input, &amp;quot;\\n&amp;quot;);\n    while
        (lines.next()) |entry| {\n        if (entry.len &amp;gt; 0) {\n            calories
        += try std.fmt.parseUnsigned(u32, entry, 10);\n        } else {\n            try
        calories_per_elf.append(calories);\n            calories = 0;\n        }\n    }\n\n    var
        res = calories_per_elf.toOwnedSlice();\n    std.sort.sort(u32, res, {}, std.sort.desc(u32));\n    print(&amp;quot;Sum:
        {d}\\n&amp;quot;, .{res[0] + res[1] + res[2]});\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj8urz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj8urz", "created":
        1669926297.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq4fhf", "id": "iyq4fhf", "parent_id":
        "t1_iyj8urz", "depth": 1, "children": ["iyq4fhf"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670147547.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyja14o", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "chillymosh",
        "can_mod_post": false, "created_utc": 1669926719.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6yuw1li6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**    [https://github.com/chillymosh/AdventOfCode/tree/main/2022](https://github.com/chillymosh/AdventOfCode/tree/main/2022)\n\n    from
        itertools import groupby\n    \n    with open(\"AdventOfCode2022\\day1.txt\",
        \"r\") as f: \n        data = [line.strip() for line in f]\n    \n    # Part
        1\n    \n    print(max(sum(int(d) for d in sub)for ele, sub in groupby(data,
        key = bool) if ele))\n    \n    # Part 2 (Could have just done the below for
        part 1 and accessed last element but didn''t know there was going to be a
        part 2.)\n    \n    res = sorted([sum(int(d) for d in sub)for ele, sub in
        groupby(data, key = bool) if ele])\n    \n    print(sum(res[-3:]))\n    \n    #
        or if you want to 1 line part 2\n    print(sum(sorted([sum(int(d) for d in
        sub)for ele, sub in groupby(data, key = bool) if ele])[-3:]))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;    &lt;a
        href=\"https://github.com/chillymosh/AdventOfCode/tree/main/2022\"&gt;https://github.com/chillymosh/AdventOfCode/tree/main/2022&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        itertools import groupby\n\nwith open(&amp;quot;AdventOfCode2022\\day1.txt&amp;quot;,
        &amp;quot;r&amp;quot;) as f: \n    data = [line.strip() for line in f]\n\n#
        Part 1\n\nprint(max(sum(int(d) for d in sub)for ele, sub in groupby(data,
        key = bool) if ele))\n\n# Part 2 (Could have just done the below for part
        1 and accessed last element but didn&amp;#39;t know there was going to be
        a part 2.)\n\nres = sorted([sum(int(d) for d in sub)for ele, sub in groupby(data,
        key = bool) if ele])\n\nprint(sum(res[-3:]))\n\n# or if you want to 1 line
        part 2\nprint(sum(sorted([sum(int(d) for d in sub)for ele, sub in groupby(data,
        key = bool) if ele])[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyja14o/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyja14o", "created": 1669926719.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669928198.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjbqi4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "biscuitplacebo_jens",
        "can_mod_post": false, "created_utc": 1669927382.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ink5r82n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution in Groovy! Part 1 and 2 are very similiar.\n\n    // Part 1\n    println
        new File(\"input\")\n        .getText()\n            .split(\"\\r\\n\\r\\n\")\n                .collect
        {\n                    it.split(\"\\r\\n\")\n                        .collect
        {it.toInteger()}\n                .sum()\n            }.sort().last()\n    \n    //
        Part 2\n    println new File(\"input\")\n        .getText()\n            .split(\"\\r\\n\\r\\n\")\n                .collect
        {\n                    it.split(\"\\r\\n\")\n                        .collect
        {it.toInteger()}\n                .sum()\n            }.sort().reverse().subList(0,
        3).sum()", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Solution
        in Groovy! Part 1 and 2 are very similiar.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        Part 1\nprintln new File(&amp;quot;input&amp;quot;)\n    .getText()\n        .split(&amp;quot;\\r\\n\\r\\n&amp;quot;)\n            .collect
        {\n                it.split(&amp;quot;\\r\\n&amp;quot;)\n                    .collect
        {it.toInteger()}\n            .sum()\n        }.sort().last()\n\n// Part 2\nprintln
        new File(&amp;quot;input&amp;quot;)\n    .getText()\n        .split(&amp;quot;\\r\\n\\r\\n&amp;quot;)\n            .collect
        {\n                it.split(&amp;quot;\\r\\n&amp;quot;)\n                    .collect
        {it.toInteger()}\n            .sum()\n        }.sort().reverse().subList(0,
        3).sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjbqi4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjbqi4", "created":
        1669927382.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669931407.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjd08l", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BingoBangoWebDev",
        "can_mod_post": false, "created_utc": 1669927865.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_tfb4phv5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Node.JS\n\nFull repo here: [https://github.com/bwz3rbot/advent-of-code-2022](https://github.com/bwz3rbot/advent-of-code-2022)\n\n    //
        Read file input and replace all /r and /n characters\n    const getInput =
        async day =&gt; {\n    \tconst path = require(\"path\");\n    \tconst fs =
        require(\"fs/promises\");\n    \treturn (await fs.readFile(path.join(\"day\",
        day, \"input.txt\"), \"utf8\"))\n    \t\t.replace(/\\r\\n/g, \" \")\n    \t\t.split(\"
        \");\n    };\n    \n    /* Create a multidimensional array by iterating the
        rows and\n    \tif an empty string is found, create a new group. */\n    const
        makeGroups = array =&gt; {\n    \tconst groups = [];\n    \tlet group = [];\n    \tarray.forEach(value
        =&gt; {\n    \t\tif (value === \"\") {\n    \t\t\tgroups.push(group);\n    \t\t\tgroup
        = [];\n    \t\t} else {\n    \t\t\tgroup.push(value);\n    \t\t}\n    \t});\n    \tgroups.push(group);\n    \treturn
        groups;\n    };\n    (async () =&gt; {\n    \t// Read the file\n    \tconst
        input = await getInput(\"1\");\n    \n    \t// Create groups\n    \tconst
        groups = makeGroups(input);\n    \n    \tconst countTotalCaloriesCarried =
        itemsCarried =&gt;\n    \t\titemsCarried.reduce((prev, curr) =&gt; {\n    \t\t\treturn
        (prev += parseInt(curr));\n    \t\t}, 0);\n    \n    \t/* Count the total
        number of calories per group.\n    \tIf the total number of calories exceeds
        the previous total number of calories,\n    \tmake that the largest total
        until the entire list has been evaluated. */\n    \tlet largestTotalCarriedCalories
        = 0;\n    \tconst findLargestTotalCaloriesCarried = itemsCarried =&gt; {\n    \t\tconst
        totalCaloriesCarried = countTotalCaloriesCarried(itemsCarried);\n    \t\tif
        (totalCaloriesCarried &gt; largestTotalCarriedCalories)\n    \t\t\tlargestTotalCarriedCalories
        = totalCaloriesCarried;\n    \t};\n    \n    \t// Iterate the groups and find
        the largest total number of calories\n    \tfor (const group of groups) findLargestTotalCaloriesCarried(group);\n    \n    \t//
        Part 1 Answer:\n    \tconsole.log(largestTotalCarriedCalories);\n    \n    \t/*
        Count the total number of calories carried in a given group to find the top
        three\n    \tgreatest total of calories carried by any given elf */\n    \tlet
        topThree = [0, 0, 0];\n    \tconst findTopThreeLargestCalories = itemsCarried
        =&gt; {\n    \t\tconst totalCaloriesCarried = countTotalCaloriesCarried(itemsCarried);\n    \t\ttopThree
        = topThree.sort((a, b) =&gt; a - b);\n    \t\tif (totalCaloriesCarried &gt;
        topThree[0])\n    \t\t\ttopThree[0] = totalCaloriesCarried;\n    \t};\n    \n    \t//
        Iterate the groups to find the top three largest calories carried\n    \tfor
        (const group of groups) findTopThreeLargestCalories(group);\n    \n    \t//
        Count the total number of calories carried by the top three\n    \tconst totalCarriedBetweenTopThree
        = topThree.reduce(\n    \t\t(prev, curr) =&gt; (prev += curr),\n    \t\t0\n    \t);\n    \n    \t//
        Part 2 Answer:\n    \tconsole.log(totalCarriedBetweenTopThree);\n    })();",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Node.JS&lt;/h1&gt;\n\n&lt;p&gt;Full
        repo here: &lt;a href=\"https://github.com/bwz3rbot/advent-of-code-2022\"&gt;https://github.com/bwz3rbot/advent-of-code-2022&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//
        Read file input and replace all /r and /n characters\nconst getInput = async
        day =&amp;gt; {\n    const path = require(&amp;quot;path&amp;quot;);\n    const
        fs = require(&amp;quot;fs/promises&amp;quot;);\n    return (await fs.readFile(path.join(&amp;quot;day&amp;quot;,
        day, &amp;quot;input.txt&amp;quot;), &amp;quot;utf8&amp;quot;))\n        .replace(/\\r\\n/g,
        &amp;quot; &amp;quot;)\n        .split(&amp;quot; &amp;quot;);\n};\n\n/* Create
        a multidimensional array by iterating the rows and\n    if an empty string
        is found, create a new group. */\nconst makeGroups = array =&amp;gt; {\n    const
        groups = [];\n    let group = [];\n    array.forEach(value =&amp;gt; {\n        if
        (value === &amp;quot;&amp;quot;) {\n            groups.push(group);\n            group
        = [];\n        } else {\n            group.push(value);\n        }\n    });\n    groups.push(group);\n    return
        groups;\n};\n(async () =&amp;gt; {\n    // Read the file\n    const input
        = await getInput(&amp;quot;1&amp;quot;);\n\n    // Create groups\n    const
        groups = makeGroups(input);\n\n    const countTotalCaloriesCarried = itemsCarried
        =&amp;gt;\n        itemsCarried.reduce((prev, curr) =&amp;gt; {\n            return
        (prev += parseInt(curr));\n        }, 0);\n\n    /* Count the total number
        of calories per group.\n    If the total number of calories exceeds the previous
        total number of calories,\n    make that the largest total until the entire
        list has been evaluated. */\n    let largestTotalCarriedCalories = 0;\n    const
        findLargestTotalCaloriesCarried = itemsCarried =&amp;gt; {\n        const
        totalCaloriesCarried = countTotalCaloriesCarried(itemsCarried);\n        if
        (totalCaloriesCarried &amp;gt; largestTotalCarriedCalories)\n            largestTotalCarriedCalories
        = totalCaloriesCarried;\n    };\n\n    // Iterate the groups and find the
        largest total number of calories\n    for (const group of groups) findLargestTotalCaloriesCarried(group);\n\n    //
        Part 1 Answer:\n    console.log(largestTotalCarriedCalories);\n\n    /* Count
        the total number of calories carried in a given group to find the top three\n    greatest
        total of calories carried by any given elf */\n    let topThree = [0, 0, 0];\n    const
        findTopThreeLargestCalories = itemsCarried =&amp;gt; {\n        const totalCaloriesCarried
        = countTotalCaloriesCarried(itemsCarried);\n        topThree = topThree.sort((a,
        b) =&amp;gt; a - b);\n        if (totalCaloriesCarried &amp;gt; topThree[0])\n            topThree[0]
        = totalCaloriesCarried;\n    };\n\n    // Iterate the groups to find the top
        three largest calories carried\n    for (const group of groups) findTopThreeLargestCalories(group);\n\n    //
        Count the total number of calories carried by the top three\n    const totalCarriedBetweenTopThree
        = topThree.reduce(\n        (prev, curr) =&amp;gt; (prev += curr),\n        0\n    );\n\n    //
        Part 2 Answer:\n    console.log(totalCarriedBetweenTopThree);\n})();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjd08l/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjd08l", "created":
        1669927865.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjfcnq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Acehawk74",
        "can_mod_post": false, "created_utc": 1669928734.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_87pju", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3.10. First puzzle solved in a few years, wanted to commit to properly
        working through it this year! \n\n    # Import my puzzle input\n    with open(''d1_input.txt'')
        as f:\n        data = f.readlines()\n    \n    # Function to create a dictionary
        that quantifies each elf and the sum of carried calories based off my list.\n    def
        elf_calories(df):\n        calories = [i.strip() for i in df]\n        calories
        = [0 if i == '''' else int(i) for i in calories]\n        elves = {}\n        sum
        = 0\n        elf = 1\n        for x in calories:\n            if int(x) &gt;
        0:\n                sum += int(x)\n            elif x == 0:\n                elves[elf]
        = sum\n                sum = 0\n                elf += 1\n        return elves\n    \n    \n    #
        Solve Part 1: What''s the maximum calories carried by an elf?\n    \n    max(elf_calories(calories).values())\n    \n    #
        Solve Part 2: What''s the sum of the top 3 maximum calories carried by an
        elves?\n    \n    top_three = Counter(elves).most_common(3)\n    top_three[0][1]
        + top_three[1][1] + top_three[2][1]", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python 3.10. First puzzle solved in a few years,
        wanted to commit to properly working through it this year! &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#
        Import my puzzle input\nwith open(&amp;#39;d1_input.txt&amp;#39;) as f:\n    data
        = f.readlines()\n\n# Function to create a dictionary that quantifies each
        elf and the sum of carried calories based off my list.\ndef elf_calories(df):\n    calories
        = [i.strip() for i in df]\n    calories = [0 if i == &amp;#39;&amp;#39; else
        int(i) for i in calories]\n    elves = {}\n    sum = 0\n    elf = 1\n    for
        x in calories:\n        if int(x) &amp;gt; 0:\n            sum += int(x)\n        elif
        x == 0:\n            elves[elf] = sum\n            sum = 0\n            elf
        += 1\n    return elves\n\n\n# Solve Part 1: What&amp;#39;s the maximum calories
        carried by an elf?\n\nmax(elf_calories(calories).values())\n\n# Solve Part
        2: What&amp;#39;s the sum of the top 3 maximum calories carried by an elves?\n\ntop_three
        = Counter(elves).most_common(3)\ntop_three[0][1] + top_three[1][1] + top_three[2][1]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjfcnq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjfcnq", "created":
        1669928734.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjfjcb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LLBlumire",
        "can_mod_post": false, "created_utc": 1669928802.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1616da", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\nUsing `nom` for input parsing, and `itertools` to make my life
        easy\n\n    use itertools::Itertools;\n\n    struct ParsedInput {\n        elves:
        Vec&lt;Elf&gt;\n    }\n    \n    struct Elf {\n        inventory: Vec&lt;i32&gt;,\n    }\n    \n    impl
        Elf {\n        fn total_calories_carried(&amp;self) -&gt; i32 {       \n            self.inventory.iter().sum()\n        }\n    }\n    \n    fn
        parse(input: &amp;str) -&gt; ParseResult&lt;ParsedInput&gt; {\n        use
        nom::{character::complete::{i32 as number, line_ending}, combinator::map,
        multi::separated_list1, sequence::tuple};\n        \n        let elf = map(separated_list1(line_ending,
        number), |inventory| Elf { inventory });\n        let mut parser = map(separated_list1(tuple((line_ending,
        line_ending)), elf), |elves| ParsedInput { elves });\n        \n        parser(input)   \n    }\n    \n    fn
        task1(input: &amp;ParsedInput) -&gt; Result&lt;i32&gt; {\n        Ok(input.elves.iter().map(Elf::total_calories_carried).max().unwrap())\n    }\n    \n    fn
        task2(input: &amp;ParsedInput) -&gt; Result&lt;i32&gt; {\n        Ok(input.elves.iter().map(Elf::total_calories_carried).sorted_by(|a,
        b| b.cmp(a)).take(3).sum())\n    }", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Using
        &lt;code&gt;nom&lt;/code&gt; for input parsing, and &lt;code&gt;itertools&lt;/code&gt;
        to make my life easy&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use itertools::Itertools;\n\nstruct
        ParsedInput {\n    elves: Vec&amp;lt;Elf&amp;gt;\n}\n\nstruct Elf {\n    inventory:
        Vec&amp;lt;i32&amp;gt;,\n}\n\nimpl Elf {\n    fn total_calories_carried(&amp;amp;self)
        -&amp;gt; i32 {       \n        self.inventory.iter().sum()\n    }\n}\n\nfn
        parse(input: &amp;amp;str) -&amp;gt; ParseResult&amp;lt;ParsedInput&amp;gt;
        {\n    use nom::{character::complete::{i32 as number, line_ending}, combinator::map,
        multi::separated_list1, sequence::tuple};\n\n    let elf = map(separated_list1(line_ending,
        number), |inventory| Elf { inventory });\n    let mut parser = map(separated_list1(tuple((line_ending,
        line_ending)), elf), |elves| ParsedInput { elves });\n\n    parser(input)   \n}\n\nfn
        task1(input: &amp;amp;ParsedInput) -&amp;gt; Result&amp;lt;i32&amp;gt; {\n    Ok(input.elves.iter().map(Elf::total_calories_carried).max().unwrap())\n}\n\nfn
        task2(input: &amp;amp;ParsedInput) -&amp;gt; Result&amp;lt;i32&amp;gt; {\n    Ok(input.elves.iter().map(Elf::total_calories_carried).sorted_by(|a,
        b| b.cmp(a)).take(3).sum())\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjfjcb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjfjcb", "created":
        1669928802.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjfti2", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyjfti2", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjfti2/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669928907.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669928907.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq3tja", "id": "iyq3tja", "parent_id":
        "t1_iyjfti2", "depth": 1, "children": ["iyq3tja"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjg18i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "affjskedbd",
        "can_mod_post": false, "created_utc": 1669928989.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6fbjc95", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Scala 3\n\n    object Day1:\n      val input = scala.io.Source.fromResource(\"2022/day1.txt\").getLines()\n    \n      val
        parsed = input.foldLeft(List[Int]()){\n        case (acc, elem) =&gt; \n          if
        (elem.isBlank()) // new elf\n            0 +: acc\n          else\n            acc
        match\n              case head :: next =&gt; (head + elem.toInt) :: next\n              case
        Nil =&gt; List(elem.toInt)\n      }\n    \n      val sortedList = parsed.sortBy(-_)\n      val
        output = sortedList.head\n      val output2 = sortedList.take(3).sum\n    \n      @main\n      def
        main =\n        println(output)\n        println(output2)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Scala 3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;object
        Day1:\n  val input = scala.io.Source.fromResource(&amp;quot;2022/day1.txt&amp;quot;).getLines()\n\n  val
        parsed = input.foldLeft(List[Int]()){\n    case (acc, elem) =&amp;gt; \n      if
        (elem.isBlank()) // new elf\n        0 +: acc\n      else\n        acc match\n          case
        head :: next =&amp;gt; (head + elem.toInt) :: next\n          case Nil =&amp;gt;
        List(elem.toInt)\n  }\n\n  val sortedList = parsed.sortBy(-_)\n  val output
        = sortedList.head\n  val output2 = sortedList.take(3).sum\n\n  @main\n  def
        main =\n    println(output)\n    println(output2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjg18i/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjg18i", "created":
        1669928989.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjh0by",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Quillbert182",
        "can_mod_post": false, "created_utc": 1669929361.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_qtmmzwj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\nPart 1: https://github.com/Quillbert/AdventOfCode/blob/master/2022/day01a/src/main.rs\n\nPart
        2: https://github.com/Quillbert/AdventOfCode/blob/master/2022/day01b/src/main.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1: &lt;a href=\"https://github.com/Quillbert/AdventOfCode/blob/master/2022/day01a/src/main.rs\"&gt;https://github.com/Quillbert/AdventOfCode/blob/master/2022/day01a/src/main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2: &lt;a href=\"https://github.com/Quillbert/AdventOfCode/blob/master/2022/day01b/src/main.rs\"&gt;https://github.com/Quillbert/AdventOfCode/blob/master/2022/day01b/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjh0by/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjh0by", "created":
        1669929361.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjhb6d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SomePersonalData",
        "can_mod_post": false, "created_utc": 1669929478.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_smuvgp6a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#Python for part 1 and 2  \n\n    with open(\"input.txt\", ''r'') as f:\n        input_text
        = f.readlines()\n    \n    current_calories = 0\n    \n    top_calories =
        []\n    \n    for c in input_text:\n        this_calorie = c[:-1]\n        if
        not this_calorie:\n            if len(top_calories) &lt; 3:\n                top_calories.append(current_calories)\n            else:\n                if
        current_calories &gt; top_calories[0]:\n                    top_calories.insert(0,
        current_calories)\n                elif current_calories &gt; top_calories[1]:\n                    top_calories.insert(1,
        current_calories)\n                elif current_calories &gt; top_calories[2]:\n                    top_calories.insert(2,
        current_calories)\n    \n            if len(top_calories) &gt; 3:\n                top_calories
        = top_calories[:3]\n            current_calories = 0\n        else:\n            this_calorie
        = int(this_calorie)\n            current_calories += this_calorie\n    \n    print(f\"Top
        calories: {top_calories}\\nSum = {sum(top_calories)}\")", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;Python for part 1 and 2&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;input.txt&amp;quot;, &amp;#39;r&amp;#39;) as f:\n    input_text
        = f.readlines()\n\ncurrent_calories = 0\n\ntop_calories = []\n\nfor c in input_text:\n    this_calorie
        = c[:-1]\n    if not this_calorie:\n        if len(top_calories) &amp;lt;
        3:\n            top_calories.append(current_calories)\n        else:\n            if
        current_calories &amp;gt; top_calories[0]:\n                top_calories.insert(0,
        current_calories)\n            elif current_calories &amp;gt; top_calories[1]:\n                top_calories.insert(1,
        current_calories)\n            elif current_calories &amp;gt; top_calories[2]:\n                top_calories.insert(2,
        current_calories)\n\n        if len(top_calories) &amp;gt; 3:\n            top_calories
        = top_calories[:3]\n        current_calories = 0\n    else:\n        this_calorie
        = int(this_calorie)\n        current_calories += this_calorie\n\nprint(f&amp;quot;Top
        calories: {top_calories}\\nSum = {sum(top_calories)}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjhb6d/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjhb6d", "created":
        1669929478.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjhev8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "hetzenmat",
        "can_mod_post": false, "created_utc": 1669929518.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_144tta", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Racket**\n\nFinally, an excuse to put the [threading macros](https://docs.racket-lang.org/threading/index.html)
        by /u/lexi-lambda to good use.\n\n    #lang racket\n    \n    (require threading)\n    \n    (define
        (print-solution s)\n      (printf \"Part 1: ~a\\nPart 2: ~a\\n\" (car s) (cdr
        s)))\n    \n    (~&gt; (current-command-line-arguments)\n        (vector-ref
        0)\n        (open-input-file)\n        (port-&gt;string #:close? #t)\n        (string-split
        \"\\n\\n\")\n        (map (\u03bb~&gt;&gt; (string-split _ \"\\n\")\n                   (map
        string-&gt;number)\n                   (apply +)) _)\n        (sort &gt;)\n        (take
        3)\n        ((\u03bb (l) (cons (car l) (apply + l))))\n        (print-solution))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Racket&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Finally,
        an excuse to put the &lt;a href=\"https://docs.racket-lang.org/threading/index.html\"&gt;threading
        macros&lt;/a&gt; by &lt;a href=\"/u/lexi-lambda\"&gt;/u/lexi-lambda&lt;/a&gt;
        to good use.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#lang racket\n\n(require
        threading)\n\n(define (print-solution s)\n  (printf &amp;quot;Part 1: ~a\\nPart
        2: ~a\\n&amp;quot; (car s) (cdr s)))\n\n(~&amp;gt; (current-command-line-arguments)\n    (vector-ref
        0)\n    (open-input-file)\n    (port-&amp;gt;string #:close? #t)\n    (string-split
        &amp;quot;\\n\\n&amp;quot;)\n    (map (\u03bb~&amp;gt;&amp;gt; (string-split
        _ &amp;quot;\\n&amp;quot;)\n               (map string-&amp;gt;number)\n               (apply
        +)) _)\n    (sort &amp;gt;)\n    (take 3)\n    ((\u03bb (l) (cons (car l)
        (apply + l))))\n    (print-solution))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjhev8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjhev8", "created":
        1669929518.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjhii0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyjhii0", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjhii0/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669929556.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669929556.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyjugf9", "id": "iyjugf9", "parent_id":
        "t1_iyjhii0", "depth": 1, "children": ["iyjugf9", "iyq3kdi"]}}, {"kind": "t1",
        "data": {"author_cakeday": true, "subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": 1669930928.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjk8d1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wsrq",
        "can_mod_post": false, "created_utc": 1669930611.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3dd0tzk4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n    import os\n    import sys\n    from collections import
        defaultdict\n    \n    \n    file = os.path.join(sys.path[0], \"input.txt\")\n    #
        file = os.path.join(sys.path[0], \"test_input.txt\")\n    \n    with open(file)
        as f:\n        input_data = f.readlines()\n    \n    def create_dict(data):\n        d
        = defaultdict(int)\n        k = 1\n        for line in data:\n            if
        line != ''\\n'':\n                d[k] += int(line)\n            else:\n                k
        += 1\n        return d\n    \n    def part1(input_dict):\n        top_elf
        = max(input_dict, key=input_dict.get)\n        return input_dict[top_elf]\n    \n    def
        part2(input_dict):\n        top_three_sum = 0\n        for i in range(3):\n            top_elf
        = max(input_dict, key=input_dict.get)\n            top_three_sum += input_dict[top_elf]\n            input_dict.pop(top_elf)\n        return
        top_three_sum\n    \n    dictionary = create_dict(input_data)\n    print(part1(dictionary))\n    print(part2(dictionary))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        os\nimport sys\nfrom collections import defaultdict\n\n\nfile = os.path.join(sys.path[0],
        &amp;quot;input.txt&amp;quot;)\n# file = os.path.join(sys.path[0], &amp;quot;test_input.txt&amp;quot;)\n\nwith
        open(file) as f:\n    input_data = f.readlines()\n\ndef create_dict(data):\n    d
        = defaultdict(int)\n    k = 1\n    for line in data:\n        if line != &amp;#39;\\n&amp;#39;:\n            d[k]
        += int(line)\n        else:\n            k += 1\n    return d\n\ndef part1(input_dict):\n    top_elf
        = max(input_dict, key=input_dict.get)\n    return input_dict[top_elf]\n\ndef
        part2(input_dict):\n    top_three_sum = 0\n    for i in range(3):\n        top_elf
        = max(input_dict, key=input_dict.get)\n        top_three_sum += input_dict[top_elf]\n        input_dict.pop(top_elf)\n    return
        top_three_sum\n\ndictionary = create_dict(input_data)\nprint(part1(dictionary))\nprint(part2(dictionary))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjk8d1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjk8d1", "created":
        1669930611.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjkm2g",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "out_STAN_ding",
        "can_mod_post": false, "created_utc": 1669930761.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_pwxfl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "R \nhttps://github.com/jnt0009/advent_of_code_2022/blob/master/day_1/day_1.R",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;R \n&lt;a href=\"https://github.com/jnt0009/advent_of_code_2022/blob/master/day_1/day_1.R\"&gt;https://github.com/jnt0009/advent_of_code_2022/blob/master/day_1/day_1.R&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjkm2g/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjkm2g", "created":
        1669930761.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669931639.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjll1x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "red_shifter",
        "can_mod_post": false, "created_utc": 1669931146.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_n75u8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**R**\n\n    library(tidyverse)\n    \n    # Getting the input\n    input
        &lt;- read.table(''day-1-input.txt'', blank.lines.skip=FALSE)\n    input[is.na(input)]
        &lt;- 0\n    \n    # Formatting the input into dataframe with ELF_ID and ITEMS
        columns\n    ELF_ID &lt;- c()\n    ITEMS &lt;- c()\n    elf &lt;- 1\n    for
        (item in input$V1){\n      if (item==0){\n        elf &lt;- elf + 1\n      }
        else {\n        ELF_ID &lt;- append(ELF_ID, c(elf))\n        ITEMS &lt;- append(ITEMS,
        c(item))\n      }\n    }\n    elves_df &lt;- data.frame(ELF_ID, ITEMS)\n    \n    #
        Computing the sum of calories for each elf\n    cals_df &lt;- elves_df %&gt;%
        group_by(ELF_ID) %&gt;% summarize(calories=sum(ITEMS))\n    \n    # Getting
        a sorted vector of summed calories (descending)\n    calories &lt;- sort(cals_df$calories,
        decreasing=TRUE)\n    \n    # Solution to Part 1\n    calories[1]\n    # Solution
        to Part 2\n    sum(calories[1:3])", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;library(tidyverse)\n\n#
        Getting the input\ninput &amp;lt;- read.table(&amp;#39;day-1-input.txt&amp;#39;,
        blank.lines.skip=FALSE)\ninput[is.na(input)] &amp;lt;- 0\n\n# Formatting the
        input into dataframe with ELF_ID and ITEMS columns\nELF_ID &amp;lt;- c()\nITEMS
        &amp;lt;- c()\nelf &amp;lt;- 1\nfor (item in input$V1){\n  if (item==0){\n    elf
        &amp;lt;- elf + 1\n  } else {\n    ELF_ID &amp;lt;- append(ELF_ID, c(elf))\n    ITEMS
        &amp;lt;- append(ITEMS, c(item))\n  }\n}\nelves_df &amp;lt;- data.frame(ELF_ID,
        ITEMS)\n\n# Computing the sum of calories for each elf\ncals_df &amp;lt;-
        elves_df %&amp;gt;% group_by(ELF_ID) %&amp;gt;% summarize(calories=sum(ITEMS))\n\n#
        Getting a sorted vector of summed calories (descending)\ncalories &amp;lt;-
        sort(cals_df$calories, decreasing=TRUE)\n\n# Solution to Part 1\ncalories[1]\n#
        Solution to Part 2\nsum(calories[1:3])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjll1x/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjll1x", "created":
        1669931146.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670061081.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjlma8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Far-Fun1898",
        "can_mod_post": false, "created_utc": 1669931160.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ha0r8reg", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python** solution provided [here](https://topaz.github.io/paste/#XQAAAQDnAgAAAAAAAAAzHIoib6pcwaKP360l30+Fa+u1AFEoq1SPFxyHC3NnvLIpTnHdauVCsOjAJjvRZA5tQAf/UL7knwPBQ9v1MBaCwTpHMciHzq8kqqfWWzYnBWeHkQ8g1hIFWFpFCLogRU3ATo1XoH9+ktAAR5PccGmwDTatMiuGAXzBYvaauLm8qDnlPW0OH8jMxM8Z0ijVkw2yOJWsVaUUr7FT4FRxOOfdkSQ5J5v6hoHll3BS/TxnXfHt2AI7FjhSv4qO3oGz4PePPdMxuQkQfK6tLFjquoRvNTLEe9RVF6LeyMAtnssvIduPUdhU6lgDZ2OtD60YnfRRzRH6QTqGyWmwOgxM9sbDn6T51EMkodYbFY/sJxK9OmlE45tVDgOczdWXF17mCNBxBB5aZTquVfUAqJz3N/a1a8ldZQ3/8cHpSA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;
        solution provided &lt;a href=\"https://topaz.github.io/paste/#XQAAAQDnAgAAAAAAAAAzHIoib6pcwaKP360l30+Fa+u1AFEoq1SPFxyHC3NnvLIpTnHdauVCsOjAJjvRZA5tQAf/UL7knwPBQ9v1MBaCwTpHMciHzq8kqqfWWzYnBWeHkQ8g1hIFWFpFCLogRU3ATo1XoH9+ktAAR5PccGmwDTatMiuGAXzBYvaauLm8qDnlPW0OH8jMxM8Z0ijVkw2yOJWsVaUUr7FT4FRxOOfdkSQ5J5v6hoHll3BS/TxnXfHt2AI7FjhSv4qO3oGz4PePPdMxuQkQfK6tLFjquoRvNTLEe9RVF6LeyMAtnssvIduPUdhU6lgDZ2OtD60YnfRRzRH6QTqGyWmwOgxM9sbDn6T51EMkodYbFY/sJxK9OmlE45tVDgOczdWXF17mCNBxBB5aZTquVfUAqJz3N/a1a8ldZQ3/8cHpSA==\"&gt;here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjlma8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjlma8", "created":
        1669931160.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq3dfl", "id": "iyq3dfl", "parent_id":
        "t1_iyjlma8", "depth": 1, "children": ["iyq3dfl"]}}, {"kind": "more", "data":
        {"count": 495, "name": "t1_iyjmlnl", "id": "iyjmlnl", "parent_id": "t3_z9ezjb",
        "depth": 0, "children": ["iyjmlnl", "iyjoviq", "iyjmzei", "iyjtc5m", "iyjttql",
        "iyjsr7s", "iyjqdky", "iyk33x5", "iyjyxup", "iyk5zef", "iyjxybu", "iyk2msm",
        "iykeihg", "iyjuk4z", "iykhf2b", "iyk589m", "iylrdmd", "iyk8vik", "iykiwgh",
        "iykp93u", "iyk964p", "iyjz08s", "iyk2rga", "iykillk", "iykuhvk", "iykgq29",
        "iyl2era", "iykcmen", "iyk8tpt", "iyki2hv", "iynanji", "iykr360", "iyl6d5z",
        "iyhqtl8", "iymnxs4", "iygtn82", "iylpn1h", "iylbokf", "iykqwil", "iykih4i",
        "iykhrv4", "iyk142r", "iyk2sbf", "iykbd6u", "iykxscx", "iymm9y8", "iykukm3",
        "iylt0c2", "iygh4ev", "iyhwp80", "iyml7p5", "iylkrc2", "iygikhh", "iykqjpw",
        "iymtg1y", "iygrb24", "iyilrwd", "iyghyk7", "iygh7jy", "iylrykp", "iyhbnku",
        "iylvnvr", "iygjyh0", "iygjsuh", "iygi5po", "iygty01", "iyjpndh", "iyggqcs",
        "iyjo6pc", "iylvz2d", "iyhbekg", "iygh5ur", "iylvtwj", "iylbtc9", "iygi5xr",
        "iylsfbg", "iykv833", "iylbsbk", "iyippe0", "iyghf4q", "iykr6rb", "iyl15he",
        "iyik00f", "iyk5rz1", "iykhd3j", "iymeok0", "iyh2xk0", "iylofbp", "iylhx8m",
        "iygjpdu", "iyndnm7", "iygits6", "iygllw5", "iygnsdd", "iygogzm", "iygihp4",
        "iygizh5", "iygjzud", "iyilp2v", "iygiboc", "iyit8hi", "iyn5own", "iyh3qkb",
        "iyjes91", "iyh53if", "iygjuhs", "iygnrsm", "iygj91q", "iygrr0v", "iygxrp3",
        "iygh1vn", "iygpb55", "iyhclqb", "iyiew8r", "iygj0fa", "iylyrfw", "iyiuahb",
        "iyjca4f", "iyk1xr7", "iyghnsf", "iyh2jzk", "iyjrlwy", "iyh83ef", "iyj8sit",
        "iygk2q0", "iyglvip", "iygifp2", "iyj0l1g", "iyhfatq", "iyhg2qj", "iyjjk6w",
        "iygk3a4", "iyh9uw5", "iyglepl", "iygibn4", "iygld5k", "iyifjlg", "iyhcc5a",
        "iygmznb", "iygyccj", "iygidqj", "iygsprw", "iygnqq5", "iygot51", "iyh55x1",
        "iyghlbt", "iyicmdx", "iyh9v1e", "iygvdkc", "iygire9", "iygk5ym", "iygi2zb",
        "iygl9gz", "iyl3nhm", "iygqxbs", "iyghk2v", "iyhc157", "iygu7yp", "iygifh5",
        "iygiuk8", "iygjmjd", "iyifpzv", "iygiar9", "iyghs29", "iyjuml8", "iygi1lg",
        "iymrn28", "iyghgsh", "iygiuff", "iygikbe", "iym1oim", "iyhej8p", "iygretv",
        "iyh9vm9", "iygtowk", "iyhr51u", "iyjoxe5", "iylmebf", "iygvchv", "iyik796",
        "iylsah5", "iygo7is", "iyh40eu", "iygojh4", "iygkieb", "iygq9ex", "iyjqs6b",
        "iylruwg", "iyglca6", "iygj0gb", "iykl2k8", "iyjjlwa", "iyhnl8j", "iygnjv0",
        "iyjsuh9", "iyh94pi", "iyhp9bc", "iyjfvg4", "iyjr2fv", "iyiijcf", "iyh9s69",
        "iyhlomk", "iyjs7bn", "iyjrsrt", "iyjo0p4", "iyhu7hi", "iygqbgt", "iygtqba",
        "iykopsr", "iygzzzp", "iyh5f37", "iyj6m98", "iygk7ty", "iyjq2ke", "iyhdc65",
        "iygk71s", "iyjdyny", "iyjmvn5", "iyhd6hi", "iyj8hzx", "iyk0fpn", "iygx5l6",
        "iygl6mf", "iygipfe", "iyggvrp", "iygnie1", "iyl7t9c", "iyidtjc", "iyh0jn5",
        "iyl783x", "iylrvts", "iyk42v2", "iyjrdd3", "iyjo9dr", "iyh85kz", "iyi1l73",
        "iyi6v6k", "iyghrha", "iykf2rh", "iylrzr2", "iykca4b", "iyk2b5l", "iyh7ecp",
        "iyk38p6", "iyjpq76", "iyhhlqt", "iyh4msz", "iylrl58", "iyjtywa", "iyjt0id",
        "iyixtuz", "iyjp7up", "iyjon13", "iyh87eq", "iyggvx5", "iyiuevh", "iygnov1",
        "iyiwnvn", "iyid3mu", "iyh01nr", "iylenyb", "iyjjbuu", "iygilxa", "iyjj4z7",
        "iyjosmn", "iymoetz", "iyjqo0n", "iyhfzli", "iylldan", "iyi4yrd", "iyisc1l",
        "iyhjfge", "iygkf3o", "iygu4na", "iygk841", "iyju5na", "iyls2ng", "iygonqk",
        "iyk30jj", "iyj05dc", "iyna5us", "iyhnrc6", "iykjata", "iyitfmg", "iyjqxua",
        "iyghijn", "iyijotf", "iyhaofh", "iyj5tvu", "iyglpww", "iykh5as", "iyndflq",
        "iylahzo", "iygnnt2", "iykkyaf", "iygsonm", "iylr8nj", "iyh4jvk", "iyjphct",
        "iyiuj74", "iyigaiq", "iygnqw6", "iygtz22", "iygiahl", "iyll509", "iyizzou",
        "iyjcn65", "iyijtn7", "iyj6eg1", "iyilg4g", "iyifqq9", "iygwcfb", "iyk3370",
        "iyh7ico"]}}], true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_iyh48zd"]],
        [13, 14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"],
        [16, 17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:37 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:38 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=jxuk3xnkje10yGjBN5; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:37 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyjmlnl,iyjoviq,iyjmzei,iyjtc5m,iyjttql,iyjsr7s,iyjqdky,iyk33x5,iyjyxup,iyk5zef,iyjxybu,iyk2msm,iykeihg,iyjuk4z,iykhf2b,iyk589m,iylrdmd,iyk8vik,iykiwgh,iykp93u,iyk964p,iyjz08s,iyk2rga,iykillk,iykuhvk,iykgq29,iyl2era,iykcmen,iyk8tpt,iyki2hv,iynanji,iykr360,iyl6d5z,iyhqtl8,iymnxs4,iygtn82,iylpn1h,iylbokf,iykqwil,iykih4i,iykhrv4,iyk142r,iyk2sbf,iykbd6u,iykxscx,iymm9y8,iykukm3,iylt0c2,iygh4ev,iyhwp80,iyml7p5,iylkrc2,iygikhh,iykqjpw,iymtg1y,iygrb24,iyilrwd,iyghyk7,iygh7jy,iylrykp,iyhbnku,iylvnvr,iygjyh0,iygjsuh,iygi5po,iygty01,iyjpndh,iyggqcs,iyjo6pc,iylvz2d,iyhbekg,iygh5ur,iylvtwj,iylbtc9,iygi5xr,iylsfbg,iykv833,iylbsbk,iyippe0,iyghf4q,iykr6rb,iyl15he,iyik00f,iyk5rz1,iykhd3j,iymeok0,iyh2xk0,iylofbp,iylhx8m,iygjpdu,iyndnm7,iygits6,iygllw5,iygnsdd,iygogzm,iygihp4,iygizh5,iygjzud,iyilp2v,iygiboc,iyit8hi,iyn5own,iyh3qkb,iyjes91,iyh53if,iygjuhs,iygnrsm,iygj91q,iygrr0v,iygxrp3,iygh1vn,iygpb55,iyhclqb,iyiew8r,iygj0fa,iylyrfw,iyiuahb,iyjca4f,iyk1xr7,iyghnsf,iyh2jzk,iyjrlwy,iyh83ef,iyj8sit,iygk2q0,iyglvip,iygifp2,iyj0l1g,iyhfatq,iyhg2qj,iyjjk6w,iygk3a4,iyh9uw5,iyglepl,iygibn4,iygld5k,iyifjlg,iyhcc5a,iygmznb,iygyccj,iygidqj,iygsprw,iygnqq5,iygot51,iyh55x1,iyghlbt,iyicmdx,iyh9v1e,iygvdkc,iygire9,iygk5ym,iygi2zb,iygl9gz,iyl3nhm,iygqxbs,iyghk2v,iyhc157,iygu7yp,iygifh5,iygiuk8,iygjmjd,iyifpzv,iygiar9,iyghs29,iyjuml8,iygi1lg,iymrn28,iyghgsh,iygiuff,iygikbe,iym1oim,iyhej8p,iygretv,iyh9vm9,iygtowk,iyhr51u,iyjoxe5,iylmebf,iygvchv,iyik796,iylsah5,iygo7is,iyh40eu,iygojh4,iygkieb,iygq9ex,iyjqs6b,iylruwg,iyglca6,iygj0gb,iykl2k8,iyjjlwa,iyhnl8j,iygnjv0,iyjsuh9,iyh94pi,iyhp9bc,iyjfvg4,iyjr2fv,iyiijcf,iyh9s69,iyhlomk,iyjs7bn,iyjrsrt,iyjo0p4,iyhu7hi,iygqbgt,iygtqba,iykopsr,iygzzzp,iyh5f37,iyj6m98,iygk7ty,iyjq2ke,iyhdc65,iygk71s,iyjdyny,iyjmvn5,iyhd6hi,iyj8hzx,iyk0fpn,iygx5l6,iygl6mf,iygipfe,iyggvrp,iygnie1,iyl7t9c,iyidtjc,iyh0jn5,iyl783x,iylrvts,iyk42v2,iyjrdd3,iyjo9dr,iyh85kz,iyi1l73,iyi6v6k,iyghrha,iykf2rh,iylrzr2,iykca4b,iyk2b5l,iyh7ecp,iyk38p6,iyjpq76,iyhhlqt,iyh4msz,iylrl58,iyjtywa,iyjt0id,iyixtuz,iyjp7up,iyjon13,iyh87eq,iyggvx5,iyiuevh,iygnov1,iyiwnvn,iyid3mu,iyh01nr,iylenyb,iyjjbuu,iygilxa,iyjj4z7,iyjosmn,iymoetz,iyjqo0n,iyhfzli,iylldan,iyi4yrd,iyisc1l,iyhjfge,iygkf3o,iygu4na,iygk841,iyju5na,iyls2ng,iygonqk,iyk30jj,iyj05dc,iyna5us,iyhnrc6,iykjata,iyitfmg,iyjqxua,iyghijn,iyijotf,iyhaofh,iyj5tvu,iyglpww,iykh5as,iyndflq,iylahzo,iygnnt2,iykkyaf,iygsonm,iylr8nj,iyh4jvk,iyjphct,iyiuj74,iyigaiq,iygnqw6,iygtz22,iygiahl,iyll509,iyizzou,iyjcn65,iyijtn7,iyj6eg1,iyilg4g,iyifqq9,iygwcfb,iyk3370,iyh7ico
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '38522'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv3v6ca.2.1741472678142.Z0FBQUFBQm56TU9tWER1R1BpQjFmaDJFOGt4TDJSM3BwVnlGZ2NISmkyNG15LXV6OVg4TXFWemhiUW1WR2piQ1VBU0pBUWJ2b1ZpTDludGFmNkZ0bG1RWFJ5TWJIZXJuRHcxRzBvNXptczlDTUg1eVlGMjRRdnN2NkdELWN6b0NyR083dDB4LXBndkc;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:38
        GMT; secure, session_tracker=pkedjpfoaclegeainl.0.1741472678154.Z0FBQUFBQm56TU9tZjlTNWpRbFlpOXNnd1pKa3dBZ1YzbVVYOWxRWGViNDFRY01SWlpUeDN2cG1XcnJzRnFXVFhTZjVDTVNTNDVoUlJTNUxJUkR3WWNtU2pweEthYWJWRlVVdFJsSkFVUU5GcGRSNHJYdGluVTdxYW1ad290SHFvdlNacnd2M3I2ejg;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:38
        GMT; secure, edgebucket=bgka4ose8SgAvT3YuE; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '37'
      x-ratelimit-remaining:
      - '63.0'
      x-ratelimit-reset:
      - '321'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:38 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670179182.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjmlnl", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "r-_-l",
        "can_mod_post": false, "created_utc": 1669931548.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_15y147", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Golang\n\n    package advent\n    \n    import \"sort\"\n    \n    \n    type
        Iterable[T any] interface {\n\t    Next() bool\n\t    Val() T\n\t    Err()
        error\n\t    Close()\n    }\n    \n    // maxCalories returns an integer array
        of the top 3\n    // maximum sub-array sums from the given iterator.\n    func
        maxCalories(iterator Iterable[int]) []int {\n\t    defer iterator.Close()\n\t    localMax
        := 0\n\t    globalMaximums := []int{0, 0, 0}\n\t    var num int\n\t    var
        err error\n\t    var adjustMaximums func() = func() {\n\t\t    if localMax
        &gt; globalMaximums[0] {\n\t\t\t    globalMaximums[0] = localMax\n\t\t\t    sort.Ints(globalMaximums)\n\t\t    }\n\t    }\n    \n\t    for
        iterator.Next() {\n\t\t    num = iterator.Val()\n\t\t    err = iterator.Err()\n\t\t    if
        err != nil {\n\t\t\t    adjustMaximums()\n\t\t\t    localMax = 0\n\t\t    }
        else {\n\t\t\t    localMax += num\n\t\t    }\n\t    }\n    \n\t    adjustMaximums()\n    \n\t    return
        globalMaximums\n    }\n\n\nEdited for formatting.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Golang&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package
        advent\n\nimport &amp;quot;sort&amp;quot;\n\n\ntype Iterable[T any] interface
        {\n    Next() bool\n    Val() T\n    Err() error\n    Close()\n}\n\n// maxCalories
        returns an integer array of the top 3\n// maximum sub-array sums from the
        given iterator.\nfunc maxCalories(iterator Iterable[int]) []int {\n    defer
        iterator.Close()\n    localMax := 0\n    globalMaximums := []int{0, 0, 0}\n    var
        num int\n    var err error\n    var adjustMaximums func() = func() {\n        if
        localMax &amp;gt; globalMaximums[0] {\n            globalMaximums[0] = localMax\n            sort.Ints(globalMaximums)\n        }\n    }\n\n    for
        iterator.Next() {\n        num = iterator.Val()\n        err = iterator.Err()\n        if
        err != nil {\n            adjustMaximums()\n            localMax = 0\n        }
        else {\n            localMax += num\n        }\n    }\n\n    adjustMaximums()\n\n    return
        globalMaximums\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Edited for formatting.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjmlnl/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjmlnl", "created":
        1669931548.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq3cn2", "id": "iyq3cn2", "parent_id":
        "t1_iyjmlnl", "depth": 1, "children": ["iyq3cn2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjmzei",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ColonialDagger",
        "can_mod_post": false, "created_utc": 1669931699.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_df4xh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3. I know it''s not special, but it works.\n\n    def solve(data):\n        #
        Part 1\n        cal = []\n        n = 0\n        for i in data:\n            if
        i == ''\\n'':\n                cal.append(n)\n                n = 0\n            else:\n                n
        += int(i)\n        ans1 = max(cal)\n    \n        # Part 2\n        cal.sort()\n        ans2
        = sum(cal[-3:])\n    \n        return ans1, ans2\n    \n    if __name__ ==
        ''__main__'':\n        testing = False\n    \n        # Reads lines into a
        list input\n        print(''Counting data...'')\n        file = ''testinput.txt''
        if testing else ''input.txt''\n        with open(file) as f:\n            data
        = f.readlines()\n    \n        ans = solve(data)\n        print(f\"Part 1
        Solution: {ans[0]}\")\n        print(f\"Part 2 Solution: {ans[1]}\")", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3. I know it&amp;#39;s not special,
        but it works.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def solve(data):\n    #
        Part 1\n    cal = []\n    n = 0\n    for i in data:\n        if i == &amp;#39;\\n&amp;#39;:\n            cal.append(n)\n            n
        = 0\n        else:\n            n += int(i)\n    ans1 = max(cal)\n\n    #
        Part 2\n    cal.sort()\n    ans2 = sum(cal[-3:])\n\n    return ans1, ans2\n\nif
        __name__ == &amp;#39;__main__&amp;#39;:\n    testing = False\n\n    # Reads
        lines into a list input\n    print(&amp;#39;Counting data...&amp;#39;)\n    file
        = &amp;#39;testinput.txt&amp;#39; if testing else &amp;#39;input.txt&amp;#39;\n    with
        open(file) as f:\n        data = f.readlines()\n\n    ans = solve(data)\n    print(f&amp;quot;Part
        1 Solution: {ans[0]}&amp;quot;)\n    print(f&amp;quot;Part 2 Solution: {ans[1]}&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjmzei/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjmzei", "created":
        1669931699.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjvdsk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Similar_Lion_6342",
        "can_mod_post": false, "created_utc": 1669935238.0, "send_replies": true,
        "parent_id": "t1_iyjmzei", "score": 2, "author_fullname": "t2_20hd9arj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This has a bug in it. The last value (elf) is never appended to your \\`cal\\`
        list. If the last elf had the highest number of calories (part 1) or any of
        the top 3 amounts (part 2) you''d get incorrect results.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;This has a bug in it. The last value (elf)
        is never appended to your `cal` list. If the last elf had the highest number
        of calories (part 1) or any of the top 3 amounts (part 2) you&amp;#39;d get
        incorrect results.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjvdsk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjvdsk", "created":
        1669935238.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyjwfxf", "id": "iyjwfxf", "parent_id":
        "t1_iyjvdsk", "depth": 2, "children": ["iyjwfxf"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjoviq", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Swift  \n`getInput` is a small helper function which
        downloads the input for that specific day.\n\n```swift\nlet counts = try await
        getInput(.init(day: 1, year: 2022))\n            .components(separatedBy:
        .newlines)\n            .reduce(into: [[]]) { partialResult, input in\n                if
        input.isEmpty {\n                    partialResult.append([String]())\n                }
        else {\n                    partialResult[partialResult.count - 1].append(input)\n                }\n            }\n            .reduce(into:
        []) { partialResult, input in\n                partialResult.append(\n                    input\n                        .compactMap{
        Int($0) }\n                        .reduce(into: 0) { $0 += $1 }\n                )\n            }\n        \n        print(\"The
        top elf is carrying \\(counts.max() ?? 0) calories.\")\n        \n        let
        lastThree = counts\n            .sorted()\n            .suffix(3)\n            .reduce(into:
        0) { $0 += $1 }\n\n        print(\"The top three elves are carrying \\(lastThree)
        calories.\")\n```", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyjoviq", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Swift&lt;br/&gt;\n&lt;code&gt;getInput&lt;/code&gt;
        is a small helper function which downloads the input for that specific day.&lt;/p&gt;\n\n&lt;p&gt;```swift\nlet
        counts = try await getInput(.init(day: 1, year: 2022))\n            .components(separatedBy:
        .newlines)\n            .reduce(into: [[]]) { partialResult, input in\n                if
        input.isEmpty {\n                    partialResult.append([String]())\n                }
        else {\n                    partialResult[partialResult.count - 1].append(input)\n                }\n            }\n            .reduce(into:
        []) { partialResult, input in\n                partialResult.append(\n                    input\n                        .compactMap{
        Int($0) }\n                        .reduce(into: 0) { $0 += $1 }\n                )\n            }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    print(&amp;quot;The
        top elf is carrying \\(counts.max() ?? 0) calories.&amp;quot;)\n\n    let
        lastThree = counts\n        .sorted()\n        .suffix(3)\n        .reduce(into:
        0) { $0 += $1 }\n\n    print(&amp;quot;The top three elves are carrying \\(lastThree)
        calories.&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjoviq/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669932473.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669932473.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq3aiv", "id": "iyq3aiv", "parent_id":
        "t1_iyjoviq", "depth": 1, "children": ["iyq3aiv"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669933819.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjqdky", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sebb0z",
        "can_mod_post": false, "created_utc": 1669933107.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1ghdsllm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript (first time I participate, don''t grill me too hard plz)\n\n```\nconst
        highestCaloriesSum = caloriesInputString\n  .split(/\\n\\n/)\n  .map((group)
        =&gt; group.split(/\\n/).reduce((prev, curr) =&gt; prev + Number(curr), 0))\n  .sort((a,
        b) =&gt; b - a)\n  .slice(0, 3)\n  .reduce((prev, curr) =&gt; prev + curr,
        0);\n\nconsole.log(highestCaloriesSum);\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Javascript (first time I participate, don&amp;#39;t
        grill me too hard plz)&lt;/p&gt;\n\n&lt;p&gt;```\nconst highestCaloriesSum
        = caloriesInputString\n  .split(/\\n\\n/)\n  .map((group) =&amp;gt; group.split(/\\n/).reduce((prev,
        curr) =&amp;gt; prev + Number(curr), 0))\n  .sort((a, b) =&amp;gt; b - a)\n  .slice(0,
        3)\n  .reduce((prev, curr) =&amp;gt; prev + curr, 0);&lt;/p&gt;\n\n&lt;p&gt;console.log(highestCaloriesSum);\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjqdky/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjqdky", "created":
        1669933107.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq2hx2", "id": "iyq2hx2", "parent_id":
        "t1_iyjqdky", "depth": 1, "children": ["iyq2hx2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjsr7s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Koopabro",
        "can_mod_post": false, "created_utc": 1669934114.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4oliv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Node.JS\n\n```\nconst\u00a0fs\u00a0=\u00a0require(\"fs\"); \n const\u00a0rawInput\u00a0=\u00a0fs.readFileSync(\"./day1.txt\",\u00a0\"utf-8\");
        \n const\u00a0groupedInput\u00a0=\u00a0rawInput.split(/\\n\\n/); \n const\u00a0input\u00a0=\u00a0groupedInput.map((x)\u00a0=&gt;\u00a0x.split(/\\n/).map((y)\u00a0=&gt;\u00a0parseInt(y)));
        \n  \n //\u00a0Part\u00a01 \n const\u00a0part1\u00a0=\u00a0(input)\u00a0=&gt;\u00a0{
        \n \u00a0\u00a0return\u00a0input \n \u00a0\u00a0\u00a0\u00a0.map((x)\u00a0=&gt;\u00a0x.reduce((a,\u00a0b)\u00a0=&gt;\u00a0a\u00a0+\u00a0b,\u00a00))
        \n \u00a0\u00a0\u00a0\u00a0.sort((a,\u00a0b)\u00a0=&gt;\u00a0b\u00a0-\u00a0a)[0];
        \n }; \n const\u00a0part2\u00a0=\u00a0(input)\u00a0=&gt;\u00a0{ \n \u00a0\u00a0return\u00a0input
        \n \u00a0\u00a0\u00a0\u00a0.map((x)\u00a0=&gt;\u00a0x.reduce((a,\u00a0b)\u00a0=&gt;\u00a0a\u00a0+\u00a0b,\u00a00))
        \n \u00a0\u00a0\u00a0\u00a0.sort((a,\u00a0b)\u00a0=&gt;\u00a0b\u00a0-\u00a0a)
        \n \u00a0\u00a0\u00a0\u00a0.slice(0,\u00a03) \n \u00a0\u00a0\u00a0\u00a0.reduce((a,\u00a0b)\u00a0=&gt;\u00a0a\u00a0+\u00a0b,\u00a00);
        \n };", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Node.JS&lt;/h1&gt;\n\n&lt;p&gt;```\nconst\u00a0fs\u00a0=\u00a0require(&amp;quot;fs&amp;quot;);
        \n const\u00a0rawInput\u00a0=\u00a0fs.readFileSync(&amp;quot;./day1.txt&amp;quot;,\u00a0&amp;quot;utf-8&amp;quot;);
        \n const\u00a0groupedInput\u00a0=\u00a0rawInput.split(/\\n\\n/); \n const\u00a0input\u00a0=\u00a0groupedInput.map((x)\u00a0=&amp;gt;\u00a0x.split(/\\n/).map((y)\u00a0=&amp;gt;\u00a0parseInt(y)));
        &lt;/p&gt;\n\n&lt;p&gt;//\u00a0Part\u00a01 \n const\u00a0part1\u00a0=\u00a0(input)\u00a0=&amp;gt;\u00a0{
        \n \u00a0\u00a0return\u00a0input \n \u00a0\u00a0\u00a0\u00a0.map((x)\u00a0=&amp;gt;\u00a0x.reduce((a,\u00a0b)\u00a0=&amp;gt;\u00a0a\u00a0+\u00a0b,\u00a00))
        \n \u00a0\u00a0\u00a0\u00a0.sort((a,\u00a0b)\u00a0=&amp;gt;\u00a0b\u00a0-\u00a0a)[0];
        \n }; \n const\u00a0part2\u00a0=\u00a0(input)\u00a0=&amp;gt;\u00a0{ \n \u00a0\u00a0return\u00a0input
        \n \u00a0\u00a0\u00a0\u00a0.map((x)\u00a0=&amp;gt;\u00a0x.reduce((a,\u00a0b)\u00a0=&amp;gt;\u00a0a\u00a0+\u00a0b,\u00a00))
        \n \u00a0\u00a0\u00a0\u00a0.sort((a,\u00a0b)\u00a0=&amp;gt;\u00a0b\u00a0-\u00a0a)
        \n \u00a0\u00a0\u00a0\u00a0.slice(0,\u00a03) \n \u00a0\u00a0\u00a0\u00a0.reduce((a,\u00a0b)\u00a0=&amp;gt;\u00a0a\u00a0+\u00a0b,\u00a00);
        \n };&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjsr7s/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjsr7s", "created":
        1669934114.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq2di0", "id": "iyq2di0", "parent_id":
        "t1_iyjsr7s", "depth": 1, "children": ["iyq2di0"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjtc5m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Markavian",
        "can_mod_post": false, "created_utc": 1669934363.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_7uy5y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Node JS Solution:\n\n* [https://github.com/johnbeech/advent-of-code-2022/blob/main/solutions/day1/solution.js](https://github.com/johnbeech/advent-of-code-2022/blob/main/solutions/day1/solution.js)\n\nDusted
        off my repo template for another year; pretty clean implementation. I have
        a new born baby son to look after this year, so managed to squeeze in a solution
        near the end of the day. For part two I &gt;!tried sorting the list incorrectly;
        used return ta &lt; tb instead of return ta &lt; tb ? 1 : -1!&lt;", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Node JS Solution:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a
        href=\"https://github.com/johnbeech/advent-of-code-2022/blob/main/solutions/day1/solution.js\"&gt;https://github.com/johnbeech/advent-of-code-2022/blob/main/solutions/day1/solution.js&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Dusted
        off my repo template for another year; pretty clean implementation. I have
        a new born baby son to look after this year, so managed to squeeze in a solution
        near the end of the day. For part two I &lt;span class=\"md-spoiler-text\"&gt;tried
        sorting the list incorrectly; used return ta &amp;lt; tb instead of return
        ta &amp;lt; tb ? 1 : -1&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjtc5m/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyjtc5m", "created": 1669934363.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyjttql", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "TimeCannotErase", "can_mod_post": false,
        "created_utc": 1669934573.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_6e7db", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "**R** [Repo](https://github.com/DavidMcMorris/Advent-of-Code-2022/blob/main/Day%201/Day1.R)\n\n    input
        &lt;- readLines(\"Day_1_input.txt\")\n    input &lt;- as.numeric(input)\n\n\n    inds
        &lt;- c(1,which(is.na(input)))\n    input[which(is.na(input))]&lt;-0\n\n    calories
        &lt;- NULL\n\n    for(i in 1:(length(inds) - 2)){\n    \tcalories[i] &lt;-
        sum(input[inds[i]:inds[i+1]])\n    }\n\n    MaxCal &lt;- max(calories)\n    MaxThree
        &lt;- sum(rev(sort(calories))[1:3])", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; &lt;a href=\"https://github.com/DavidMcMorris/Advent-of-Code-2022/blob/main/Day%201/Day1.R\"&gt;Repo&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;input
        &amp;lt;- readLines(&amp;quot;Day_1_input.txt&amp;quot;)\ninput &amp;lt;-
        as.numeric(input)\n\n\ninds &amp;lt;- c(1,which(is.na(input)))\ninput[which(is.na(input))]&amp;lt;-0\n\ncalories
        &amp;lt;- NULL\n\nfor(i in 1:(length(inds) - 2)){\n    calories[i] &amp;lt;-
        sum(input[inds[i]:inds[i+1]])\n}\n\nMaxCal &amp;lt;- max(calories)\nMaxThree
        &amp;lt;- sum(rev(sort(calories))[1:3])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjttql/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjttql", "created":
        1669934573.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670075142.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjuk4z", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Lohikaarmeen_hanta",
        "can_mod_post": false, "created_utc": 1669934888.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4v846u0z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A Scala solution:\n\n    import scala.io.Source\n    import scala.collection.mutable._\n    \n    object
        Calorie extends App {\n      val calories = Source.fromFile(\"Inputs/calories.txt\")\n      var
        elfs = Map[Int, Int]()\n      var elf = 0\n    \n      for (line &lt;- calories.getLines)
        {\n        if (line.nonEmpty) {\n          if (elfs.contains(elf)) {\n            elfs(elf)
        += line.toInt\n          } else {\n            elfs(elf) = line.toInt\n          }\n        }
        else {\n          elf += 1\n        }\n      }\n    \n      calories.close\n    \n      println(\"PART
        1\")\n      println(elfs.values.max)\n      println(\"PART 2\")\n      println(elfs.values.toBuffer.sorted.takeRight(3).sum)\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A Scala solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        scala.io.Source\nimport scala.collection.mutable._\n\nobject Calorie extends
        App {\n  val calories = Source.fromFile(&amp;quot;Inputs/calories.txt&amp;quot;)\n  var
        elfs = Map[Int, Int]()\n  var elf = 0\n\n  for (line &amp;lt;- calories.getLines)
        {\n    if (line.nonEmpty) {\n      if (elfs.contains(elf)) {\n        elfs(elf)
        += line.toInt\n      } else {\n        elfs(elf) = line.toInt\n      }\n    }
        else {\n      elf += 1\n    }\n  }\n\n  calories.close\n\n  println(&amp;quot;PART
        1&amp;quot;)\n  println(elfs.values.max)\n  println(&amp;quot;PART 2&amp;quot;)\n  println(elfs.values.toBuffer.sorted.takeRight(3).sum)\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjuk4z/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjuk4z", "created":
        1669934888.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq0vl2", "id": "iyq0vl2", "parent_id":
        "t1_iyjuk4z", "depth": 1, "children": ["iyq0vl2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669936534.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjxybu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MichaelCG8",
        "can_mod_post": false, "created_utc": 1669936347.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_mpqjd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C++](https://github.com/MichaelCG8/aoc2022/blob/main/01/lib.cpp)\n\nPart
        1: 76us\n\nPart 2: 77us\n\nTimes best of 1000 runs.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/MichaelCG8/aoc2022/blob/main/01/lib.cpp\"&gt;C++&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        1: 76us&lt;/p&gt;\n\n&lt;p&gt;Part 2: 77us&lt;/p&gt;\n\n&lt;p&gt;Times best
        of 1000 runs.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjxybu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjxybu", "created":
        1669936347.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjyxup",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Steinrikur",
        "can_mod_post": false, "created_utc": 1669936782.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5et1x", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash. Assumes no zeros in input.\n\n    while read -r a; do\n        [[ -n
        $a ]] &amp;&amp; ((n+=a)) || X[$n]=1 n=0\n    done &lt; 01.txt \n    X[$n]=1
        # last line not done in loop \n    MAX=(${!X[*]}) \n    echo \"1A: ${MAX[-1]}\"
        \n    echo \"1B: $((MAX[-3]+MAX[-2]+MAX[-1]))\"\n\nGolfed to a bit over 100
        bytes.\n\n    while read a;do [ $a ]&amp;&amp;((n+=a))||X[$n]= n=;done&lt;1\n    X[$n]=;M=(${!X[*]});echo
        ${M[-1]} $((M[-3]+M[-2]+M[-1]))", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Bash. Assumes no zeros in input.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;while
        read -r a; do\n    [[ -n $a ]] &amp;amp;&amp;amp; ((n+=a)) || X[$n]=1 n=0\ndone
        &amp;lt; 01.txt \nX[$n]=1 # last line not done in loop \nMAX=(${!X[*]}) \necho
        &amp;quot;1A: ${MAX[-1]}&amp;quot; \necho &amp;quot;1B: $((MAX[-3]+MAX[-2]+MAX[-1]))&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Golfed
        to a bit over 100 bytes.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;while read a;do
        [ $a ]&amp;amp;&amp;amp;((n+=a))||X[$n]= n=;done&amp;lt;1\nX[$n]=;M=(${!X[*]});echo
        ${M[-1]} $((M[-3]+M[-2]+M[-1]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjyxup/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjyxup", "created":
        1669936782.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjz08s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "benz1n",
        "can_mod_post": false, "created_utc": 1669936811.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_13zypr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "No-brainer-not-fancy Kotlin solution:\n\n[https://github.com/gfioretti/AdventOfCode/blob/main/src/main/kotlin/year22/Day1.kt](https://github.com/gfioretti/AdventOfCode/blob/main/src/main/kotlin/year22/Day1.kt)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No-brainer-not-fancy
        Kotlin solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gfioretti/AdventOfCode/blob/main/src/main/kotlin/year22/Day1.kt\"&gt;https://github.com/gfioretti/AdventOfCode/blob/main/src/main/kotlin/year22/Day1.kt&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjz08s/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjz08s", "created":
        1669936811.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669939206.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyk142r", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kap89",
        "can_mod_post": false, "created_utc": 1669937737.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_40ydynyd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "#TypeScript\n\n**Solution here: [GitHub](https://github.com/caderek/aoc2022/blob/main/src/day01/index.ts)**\n\nFancy
        benchmark:\n\n    +--- AoC 2022 Day 01 - AOC TIMER --------------------+\n    |                                                    |\n    |
        Linux (x64) 8GB RAM                                |\n    | Intel(R) Core(TM)
        i7-3630QM CPU @ 2.40GHz          |\n    |                                                    |\n    |
        Language: TypeScript                               |\n    |                                                    |\n    |
        Time: 0.962ms                   Points: 1024       |\n    | Benchmark: 0.02%                Level:
        **********  |\n    |                                                    |\n    +-----------------------------------
        git.io/JL9Qu ---+\n\nMy template for JS and TS: [AoC Runner](https://github.com/caderek/aocrunner)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;TypeScript&lt;/h1&gt;\n\n&lt;p&gt;&lt;strong&gt;Solution
        here: &lt;a href=\"https://github.com/caderek/aoc2022/blob/main/src/day01/index.ts\"&gt;GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Fancy
        benchmark:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;+--- AoC 2022 Day 01 - AOC
        TIMER --------------------+\n|                                                    |\n|
        Linux (x64) 8GB RAM                                |\n| Intel(R) Core(TM)
        i7-3630QM CPU @ 2.40GHz          |\n|                                                    |\n|
        Language: TypeScript                               |\n|                                                    |\n|
        Time: 0.962ms                   Points: 1024       |\n| Benchmark: 0.02%                Level:
        **********  |\n|                                                    |\n+-----------------------------------
        git.io/JL9Qu ---+\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My template for JS
        and TS: &lt;a href=\"https://github.com/caderek/aocrunner\"&gt;AoC Runner&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk142r/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk142r", "created":
        1669937737.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk2jzo",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wizard_is",
        "can_mod_post": false, "created_utc": 1669938381.0, "send_replies": true,
        "parent_id": "t1_iyk142r", "score": 3, "author_fullname": "t2_gmau6hs6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "For a second I thought that code block was your solution LOL I did a double
        take", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For
        a second I thought that code block was your solution LOL I did a double take&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk2jzo/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk2jzo", "created":
        1669938381.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyk3xyt", "id": "iyk3xyt", "parent_id":
        "t1_iyk2jzo", "depth": 2, "children": ["iyk3xyt"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk2msm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sambonnell",
        "can_mod_post": false, "created_utc": 1669938415.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_dhiha15", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C++**\n\n[Github Repo](https://github.com/samJBonnell/AdventofCode/blob/main/2022/day01.cpp)\n\nCannot
        paste my code into the reddit text editor, regardless of markdown vs. fancy
        pants, etc.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/samJBonnell/AdventofCode/blob/main/2022/day01.cpp\"&gt;Github
        Repo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Cannot paste my code into the reddit
        text editor, regardless of markdown vs. fancy pants, etc.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk2msm/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk2msm", "created":
        1669938415.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyq0a6t", "id": "iyq0a6t", "parent_id":
        "t1_iyk2msm", "depth": 1, "children": ["iyq0a6t"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk2rga",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "olofj",
        "can_mod_post": false, "created_utc": 1669938473.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ldw3e", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust\n\n1a:\n\n    fn main() {\n        let input: Vec&lt;usize&gt; = include_str!(\"input.txt\")\n            .split(\"\\n\\n\")\n            .map(|b|
        \n                b.lines()\n                .map(|i| i.parse::&lt;usize&gt;().unwrap())\n                .sum()\n            )\n            .collect();\n    \n        let
        max = input.iter().max().unwrap();\n        println!(\"max {}\", max);\n    }\n\n1b:\n\n    fn
        main() {\n        let mut input: Vec&lt;usize&gt; = include_str!(\"input.txt\")\n            .split(\"\\n\\n\")\n            .map(|b|\n                b.lines()\n                    .map(|i|
        i.parse::&lt;usize&gt;().unwrap())\n                    .sum()\n            )\n            .collect();\n            \n        input.sort();\n        input.reverse();\n        input.truncate(3);\n        let
        sum:usize = input.iter().sum();\n        println!(\"sum {}\", sum);\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;p&gt;1a:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        main() {\n    let input: Vec&amp;lt;usize&amp;gt; = include_str!(&amp;quot;input.txt&amp;quot;)\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|b|
        \n            b.lines()\n            .map(|i| i.parse::&amp;lt;usize&amp;gt;().unwrap())\n            .sum()\n        )\n        .collect();\n\n    let
        max = input.iter().max().unwrap();\n    println!(&amp;quot;max {}&amp;quot;,
        max);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;1b:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn
        main() {\n    let mut input: Vec&amp;lt;usize&amp;gt; = include_str!(&amp;quot;input.txt&amp;quot;)\n        .split(&amp;quot;\\n\\n&amp;quot;)\n        .map(|b|\n            b.lines()\n                .map(|i|
        i.parse::&amp;lt;usize&amp;gt;().unwrap())\n                .sum()\n        )\n        .collect();\n\n    input.sort();\n    input.reverse();\n    input.truncate(3);\n    let
        sum:usize = input.iter().sum();\n    println!(&amp;quot;sum {}&amp;quot;,
        sum);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk2rga/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk2rga", "created":
        1669938473.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 6, "name": "t1_iylcrt9", "id": "iylcrt9", "parent_id":
        "t1_iyk2rga", "depth": 1, "children": ["iylcrt9", "iyk6umc"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670065969.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyk2sbf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bpersitz",
        "can_mod_post": false, "created_utc": 1669938484.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_1k2bwv8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "  Python solution. \n\n      finallist = []\r\n    uberlist = []\r\n    puzzle
        = puzzle.replace(\"\\n\", \"\")\r\n    elf_list = re.split(r\"(,,)\", puzzle)\r\n    for
        item in elf_list:\r\n        if item != \",,\":\r\n            newlist = item.split(\",\")\r\n            finallist.append(newlist)\r\n\r\n    for
        item in finallist:\r\n        for count, num in enumerate(item):\r\n            item[count]
        = int(num)\r\n        calories = sum(item)\r\n        uberlist.append(calories)\r\n\r\n    uberlist.sort(reverse=True)\r\n    print(uberlist[0])\r\n\r\n    print(uberlist[0]+uberlist[1]+uberlist[2])",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python solution. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  finallist
        = []\nuberlist = []\npuzzle = puzzle.replace(&amp;quot;\\n&amp;quot;, &amp;quot;&amp;quot;)\nelf_list
        = re.split(r&amp;quot;(,,)&amp;quot;, puzzle)\nfor item in elf_list:\n    if
        item != &amp;quot;,,&amp;quot;:\n        newlist = item.split(&amp;quot;,&amp;quot;)\n        finallist.append(newlist)\n\nfor
        item in finallist:\n    for count, num in enumerate(item):\n        item[count]
        = int(num)\n    calories = sum(item)\n    uberlist.append(calories)\n\nuberlist.sort(reverse=True)\nprint(uberlist[0])\n\nprint(uberlist[0]+uberlist[1]+uberlist[2])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk2sbf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk2sbf", "created":
        1669938484.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq03ej", "id": "iyq03ej", "parent_id":
        "t1_iyk2sbf", "depth": 1, "children": ["iyq03ej"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669939559.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyk33x5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Spepsium",
        "can_mod_post": false, "created_utc": 1669938629.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2a7j53ro", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[https://github.com/Spencer-Harrison/AdventOfCode/blob/main/main.cpp](https://github.com/Spencer-Harrison/AdventOfCode/blob/main/main.cpp)\n\nC++
        part 2.  \nAny input appreciated", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Spencer-Harrison/AdventOfCode/blob/main/main.cpp\"&gt;https://github.com/Spencer-Harrison/AdventOfCode/blob/main/main.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;C++
        part 2.&lt;br/&gt;\nAny input appreciated&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk33x5/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyk33x5", "created": 1669938629.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyk6fr8", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "tcbrindle", "can_mod_post": false, "created_utc":
        1669940125.0, "send_replies": true, "parent_id": "t1_iyk33x5", "score": 2,
        "author_fullname": "t2_r2bvf", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Nice work! A couple of comments:\n\n
        * You can use `str.empty()` to check for an empty string, which is a bit nicer
        than `str.compare(\"\")`\n * Rather than using a set, you could push the calorie
        totals into a `vector`. Then after you''ve read all the values you can sort
        the vector and sum up the three largest values (using `std::accumulate`, if
        you like)\n * You don''t need to call `infile.close()` at the end of the program,
        the fstream destructor will take care of it for you", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Nice work! A couple of comments:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;You
        can use &lt;code&gt;str.empty()&lt;/code&gt; to check for an empty string,
        which is a bit nicer than &lt;code&gt;str.compare(&amp;quot;&amp;quot;)&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Rather
        than using a set, you could push the calorie totals into a &lt;code&gt;vector&lt;/code&gt;.
        Then after you&amp;#39;ve read all the values you can sort the vector and
        sum up the three largest values (using &lt;code&gt;std::accumulate&lt;/code&gt;,
        if you like)&lt;/li&gt;\n&lt;li&gt;You don&amp;#39;t need to call &lt;code&gt;infile.close()&lt;/code&gt;
        at the end of the program, the fstream destructor will take care of it for
        you&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk6fr8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk6fr8", "created":
        1669940125.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 7, "name": "t1_iykarqc", "id": "iykarqc", "parent_id":
        "t1_iyk6fr8", "depth": 2, "children": ["iykarqc", "iyk7cey", "iyk6me0"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyk589m", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Prestonr83",
        "can_mod_post": false, "created_utc": 1669939581.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4gm8b", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Attempt at C#\n\n    var input = System.IO.File.ReadAllText(@\".\\input.txt\");\n    \n    var
        arrays = input.Split(new string[] { Environment.NewLine + Environment.NewLine
        },\n                                   StringSplitOptions.RemoveEmptyEntries);\n    \n    int[]
        summedCalories = new int[arrays.Length];\n    int index = 0;\n    \n    foreach
        (var array in arrays)\n    {\n        summedCalories[index] = (array.Split(Environment.NewLine).Select(s
        =&gt; Convert.ToInt32(s)).ToList().Sum());\n        index++;\n    }\n    \n    //
        Part 1\n    Console.WriteLine($\"Max Calories: {summedCalories.Max()}\");\n    \n    //
        Part 2\n    Console.WriteLine($\"Top 3 Total Max Calories: {summedCalories.OrderByDescending(x
        =&gt; x).Take(3).Sum()}\");", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        Attempt at C#&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var input = System.IO.File.ReadAllText(@&amp;quot;.\\input.txt&amp;quot;);\n\nvar
        arrays = input.Split(new string[] { Environment.NewLine + Environment.NewLine
        },\n                               StringSplitOptions.RemoveEmptyEntries);\n\nint[]
        summedCalories = new int[arrays.Length];\nint index = 0;\n\nforeach (var array
        in arrays)\n{\n    summedCalories[index] = (array.Split(Environment.NewLine).Select(s
        =&amp;gt; Convert.ToInt32(s)).ToList().Sum());\n    index++;\n}\n\n// Part
        1\nConsole.WriteLine($&amp;quot;Max Calories: {summedCalories.Max()}&amp;quot;);\n\n//
        Part 2\nConsole.WriteLine($&amp;quot;Top 3 Total Max Calories: {summedCalories.OrderByDescending(x
        =&amp;gt; x).Take(3).Sum()}&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk589m/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk589m", "created":
        1669939581.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk5rz1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "xoronth",
        "can_mod_post": false, "created_utc": 1669939827.0, "send_replies": false,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5rv44mya", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Late to posting, but [my solution in Crystal](https://github.com/ClementTsang/aoc_2022/blob/main/day_01/day_01.cr).\n\nGoing
        to try a new language I''ve never touched each day, so hopefully that goes
        smoothly...", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Late
        to posting, but &lt;a href=\"https://github.com/ClementTsang/aoc_2022/blob/main/day_01/day_01.cr\"&gt;my
        solution in Crystal&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Going to try a new language
        I&amp;#39;ve never touched each day, so hopefully that goes smoothly...&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk5rz1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk5rz1", "created":
        1669939827.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyla7z1", "id": "iyla7z1", "parent_id":
        "t1_iyk5rz1", "depth": 1, "children": ["iyla7z1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk5zef",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gobtron",
        "can_mod_post": false, "created_utc": 1669939921.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ry5kx4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    from collections import deque\n    \n    def solutionDay1():\n        f
        = open(\"input\", \"r\")\n        sum = 0\n        deq = deque(maxlen=3)\n    \n        for
        line in f.readlines():\n            calorie = line.strip()\n            if
        (len(calorie) == 0):\n                length = len(deq)\n                if
        not length:\n                    deq.append(sum)\n                else:\n                    if
        sum &gt;= deq[length-1]:\n                        deq.append(sum)\n                    if
        sum &gt;= deq[0] and sum &lt; deq[1]:\n                        deq.popleft()\n                        deq.appendleft(sum)\n                sum
        = 0\n            else:\n                sum += int(calorie)\n    \n        part1
        = deq[2]\n        part2 = deq[0] + deq[1] + deq[2]\n    \n        print(\"Part
        1:\", part1)\n        print(\"Part 2:\", part2)\n    \u00ad", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;from collections import deque\n\ndef
        solutionDay1():\n    f = open(&amp;quot;input&amp;quot;, &amp;quot;r&amp;quot;)\n    sum
        = 0\n    deq = deque(maxlen=3)\n\n    for line in f.readlines():\n        calorie
        = line.strip()\n        if (len(calorie) == 0):\n            length = len(deq)\n            if
        not length:\n                deq.append(sum)\n            else:\n                if
        sum &amp;gt;= deq[length-1]:\n                    deq.append(sum)\n                if
        sum &amp;gt;= deq[0] and sum &amp;lt; deq[1]:\n                    deq.popleft()\n                    deq.appendleft(sum)\n            sum
        = 0\n        else:\n            sum += int(calorie)\n\n    part1 = deq[2]\n    part2
        = deq[0] + deq[1] + deq[2]\n\n    print(&amp;quot;Part 1:&amp;quot;, part1)\n    print(&amp;quot;Part
        2:&amp;quot;, part2)\n\u00ad\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk5zef/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyk5zef", "created": 1669939921.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyk67ds", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "gobtron", "can_mod_post": false, "created_utc":
        1669940020.0, "send_replies": true, "parent_id": "t1_iyk5zef", "score": 2,
        "author_fullname": "t2_ry5kx4", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Python, using a deque container",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python, using a deque
        container&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk67ds/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk67ds", "created":
        1669940020.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670125555.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyk8tpt", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "search_and_deploy",
        "can_mod_post": false, "created_utc": 1669941209.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_eub32vxp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my Rust solution. I only got about 4 days into it last year, so I''m
        hoping to make it a bit longer this go around.\n\n[https://github.com/michael-long88/advent-of-code-2022/blob/main/src/bin/01.rs](https://github.com/michael-long88/advent_of_code_2022/blob/main/src/bin/01.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my Rust
        solution. I only got about 4 days into it last year, so I&amp;#39;m hoping
        to make it a bit longer this go around.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/michael-long88/advent_of_code_2022/blob/main/src/bin/01.rs\"&gt;https://github.com/michael-long88/advent-of-code-2022/blob/main/src/bin/01.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk8tpt/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk8tpt", "created":
        1669941209.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iypyxg2", "id": "iypyxg2", "parent_id":
        "t1_iyk8tpt", "depth": 1, "children": ["iypyxg2"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670078005.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyk8vik", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Swampspear",
        "can_mod_post": false, "created_utc": 1669941233.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_up8ov8l3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Aarch64 / Armv8.1 bootloader solution pt1 / pt2\n\n     \t_day1p1:\n\t     \tldr
        x0, =day1_input\n\t     \tclr4 x2, x3, x4, x5\n\t\t     \tsub w4, w4, 1  //
        eof = -1\n     \t_d1p1_loop:\n     \t     \t\t\tldr w1, [x0], 4\n     \t     \t\t\tcmp
        w4, w1\n\t\t     \t \tb.eq _d1p1_loop_eof\n\t\t     \t \tadd w2, w2, w1 //
        \n     \t     \t\t\tcbz w1, _d1p1_zero\n     \t     \t\t\tb _d1p1_loop\n     \t
        \t\t_d1p1_zero:\n     \t     \t\t\tcmp w2, w3\n\t     \t \t\tb.lt _smaller_than_max\n\t     \t
        \t\tmov w3, w2\n     \t_smaller_than_max:\n\t     \t \t\tclr w2\n\t     \t
        \t\tb _d1p1_loop\n     \t_d1p1_loop_eof:\n     \t\n     \tret\n\nRequires
        putting input in memory, empty lines have a `0`, `EOF` is denoted by `-1`
        aka `0xffffffff`. Since we''re still in a bootloader, there''s no print functions
        or any stack whatsoever; you have to read the value raw out of the `w3` register.
        Part 2 works in about the same way, but is ~40 lines, and is a bit too long
        to post here, see the [paste](https://topaz.github.io/paste/#XQAAAQB4AgAAAAAAAAAvmQgnyqwgj4+d/Dqq9Qx3DJHyunpsCg00hezrwu1HLxrMdLux9ufbU97JBPEIH9LCwDqa41gkt1TVLWyjOG+qTyUSe4t6nwuYG+0Vb4wk4EYtc2sMY0pDSJ3wS4A6g5Vpxl5tGTsF4spvizYOUZeKXKzB0fS00lN2y5D/S+zetyAXB/F6l4fuNlH8KD+AdeiMyy+wGSYhdm8FX/sRv+na2fcRLG3TjtmMmGBrzQvdAk6hoRIICxzNAdX6dJZqCsBUOgXJxQuvpJnvRE07iQc/g4ckyOBp3MYpCpTwdkIZ5njarggQvtv37PCvorfH5Sc0/cyiyDuiw+N3kjHWsHClZv389Tc=).
        One functional macro is used, `clr4`, which is just four chained `eor reg,
        reg, reg`. The macro `status_int` is just my signal to the VM that I want
        to read the register values.\n\nRuntime of part 1 is:    \n\n* 6 cycles in
        preamble\n* 3 cycles for `EOF`\n* 6 cycles per loop guaranteed\n* up to 4
        extra cycles per loop\n\nThere are as many loop iterations as there are individual
        lines of input, which is 2270 for my input.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Aarch64 / Armv8.1 bootloader solution pt1 / pt2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    _day1p1:\n        ldr
        x0, =day1_input\n        clr4 x2, x3, x4, x5\n            sub w4, w4, 1  //
        eof = -1\n    _d1p1_loop:\n                    ldr w1, [x0], 4\n                    cmp
        w4, w1\n                b.eq _d1p1_loop_eof\n                add w2, w2, w1
        // \n                    cbz w1, _d1p1_zero\n                    b _d1p1_loop\n            _d1p1_zero:\n                    cmp
        w2, w3\n                b.lt _smaller_than_max\n                mov w3, w2\n    _smaller_than_max:\n                clr
        w2\n                b _d1p1_loop\n    _d1p1_loop_eof:\n\n    ret\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Requires
        putting input in memory, empty lines have a &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;EOF&lt;/code&gt;
        is denoted by &lt;code&gt;-1&lt;/code&gt; aka &lt;code&gt;0xffffffff&lt;/code&gt;.
        Since we&amp;#39;re still in a bootloader, there&amp;#39;s no print functions
        or any stack whatsoever; you have to read the value raw out of the &lt;code&gt;w3&lt;/code&gt;
        register. Part 2 works in about the same way, but is ~40 lines, and is a bit
        too long to post here, see the &lt;a href=\"https://topaz.github.io/paste/#XQAAAQB4AgAAAAAAAAAvmQgnyqwgj4+d/Dqq9Qx3DJHyunpsCg00hezrwu1HLxrMdLux9ufbU97JBPEIH9LCwDqa41gkt1TVLWyjOG+qTyUSe4t6nwuYG+0Vb4wk4EYtc2sMY0pDSJ3wS4A6g5Vpxl5tGTsF4spvizYOUZeKXKzB0fS00lN2y5D/S+zetyAXB/F6l4fuNlH8KD+AdeiMyy+wGSYhdm8FX/sRv+na2fcRLG3TjtmMmGBrzQvdAk6hoRIICxzNAdX6dJZqCsBUOgXJxQuvpJnvRE07iQc/g4ckyOBp3MYpCpTwdkIZ5njarggQvtv37PCvorfH5Sc0/cyiyDuiw+N3kjHWsHClZv389Tc=\"&gt;paste&lt;/a&gt;.
        One functional macro is used, &lt;code&gt;clr4&lt;/code&gt;, which is just
        four chained &lt;code&gt;eor reg, reg, reg&lt;/code&gt;. The macro &lt;code&gt;status_int&lt;/code&gt;
        is just my signal to the VM that I want to read the register values.&lt;/p&gt;\n\n&lt;p&gt;Runtime
        of part 1 is:    &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;6 cycles in preamble&lt;/li&gt;\n&lt;li&gt;3
        cycles for &lt;code&gt;EOF&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;6 cycles per
        loop guaranteed&lt;/li&gt;\n&lt;li&gt;up to 4 extra cycles per loop&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;There
        are as many loop iterations as there are individual lines of input, which
        is 2270 for my input.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk8vik/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk8vik", "created":
        1669941233.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iypysux", "id": "iypysux", "parent_id":
        "t1_iyk8vik", "depth": 1, "children": ["iypysux"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669942975.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyk964p", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ka-splam",
        "can_mod_post": false, "created_utc": 1669941372.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_furr1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## PowerShell 7\n\n    (gc -raw .\\input1.txt) -split \"`r?`n`r?`n\" \n        |
        foreach { (-split $_ |measure -sum).Sum } |\n        Sort -Descending | select
        -first 1\n\nAnd for part 2, change the end to `select -first 3 | measure -sum`\n\nIt
        reads the file as a single string, regex splits on double-newline to get the
        elf groups, then `-splits` those on whitespace to get the inventory, sums
        with Measure-Object, sorts and outputs.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h2&gt;PowerShell 7&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;(gc
        -raw .\\input1.txt) -split &amp;quot;`r?`n`r?`n&amp;quot; \n    | foreach
        { (-split $_ |measure -sum).Sum } |\n    Sort -Descending | select -first
        1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And for part 2, change the end to
        &lt;code&gt;select -first 3 | measure -sum&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;It
        reads the file as a single string, regex splits on double-newline to get the
        elf groups, then &lt;code&gt;-splits&lt;/code&gt; those on whitespace to get
        the inventory, sums with Measure-Object, sorts and outputs.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk964p/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk964p", "created":
        1669941372.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykxgqd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FJCruisin",
        "can_mod_post": false, "created_utc": 1669952839.0, "send_replies": true,
        "parent_id": "t1_iyk964p", "score": 2, "author_fullname": "t2_4k66r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "witchcraft man. witchcraft. Here''s my less amazing PS code\n\n    foreach($line
        in get-content -path \"C:\\users\\user\\documents\\elves.txt\")\n    { \n     if
        ($line) \n    \t{\n    \t$a=($a+$line)\n      } else {\n      if ($a -gt $winner)\n      {$winner=$a}\n      $a=0}\n    }\n    write-output
        $winner", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;witchcraft
        man. witchcraft. Here&amp;#39;s my less amazing PS code&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($line
        in get-content -path &amp;quot;C:\\users\\user\\documents\\elves.txt&amp;quot;)\n{
        \n if ($line) \n    {\n    $a=($a+$line)\n  } else {\n  if ($a -gt $winner)\n  {$winner=$a}\n  $a=0}\n}\nwrite-output
        $winner\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykxgqd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykxgqd", "created":
        1669952839.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyl62sp", "id": "iyl62sp", "parent_id":
        "t1_iykxgqd", "depth": 2, "children": ["iyl62sp"]}}, {"kind": "more", "data":
        {"count": 1, "name": "t1_iyljett", "id": "iyljett", "parent_id": "t1_iyk964p",
        "depth": 1, "children": ["iyljett"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykbd6u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ffrkAnonymous",
        "can_mod_post": false, "created_utc": 1669942408.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_nxf5l", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby\n\n[paste](https://topaz.github.io/paste/#XQAAAQCKBQAAAAAAAAARiASoOj4/ciRIj+NxYWCy6lQf9mPnDK5CAX/5LUSjaGRoCwOECagD4pdhfOjag+mHd7J0GfD5/RzMs8t7nVVO02uGuqGxqjfNOIQxL04tT4uxyvOjdQWdAbjH/fsDLJwl8TFhodObdtpZid5F65e2dgzy0RfKvUyW4eTq6ysNblm64U8h1zwV3L3N/uqzCTKqLqkn5VyiphYa7Q1z+SBRl8oa18qY63RsYN+pqw3DdfXNjqkGE2+mFRCgpVlRnjqAJux1UHZuDvs4FOqoaNUVA6e4SoGC1m7ZGaWq6YxJDBELmlH3tJ/nj8D42QIANvauT41ybCETf2hzybGRZiCvcZFMWYmAD49BLnm7aDqnLvGVmno0RmWYLs+EdJCOEoQd2d4Zusp4byx09juLQa7VdvsbxHH/+Mzhzlvtt2bLVddp5pZXuSdYdRfR+PL315MQHE9J6c+hIvwb9h2ZoJrt6imETcaIE53ZO8rcNTTL3TkdYyFW8Co2EM/1GXeoFMaHXi5pr5ic+WNUoVIR+8eWP0amhEeFQeHQiUwsKFTWrXhqGx3ls35mAqmRO85HpmpEvwt71sI1BWPEjaK83/ylIAy0GDNd0P9sh9Ell60eNSKBNC9ShCAnSW0pwGS8ad0f7d55OXwJEncJLhQny7rqdoC4GgwukBp/Q7ZhzF+T8ZOcBgGMWV33I+O07FYg7JanqnbW5P/X3vy0)\n\nFirst
        time with Ruby.  Also learning TDD.  The tests are extra code practice.  Everything
        is more complicated than it needs to be.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Ruby&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQCKBQAAAAAAAAARiASoOj4/ciRIj+NxYWCy6lQf9mPnDK5CAX/5LUSjaGRoCwOECagD4pdhfOjag+mHd7J0GfD5/RzMs8t7nVVO02uGuqGxqjfNOIQxL04tT4uxyvOjdQWdAbjH/fsDLJwl8TFhodObdtpZid5F65e2dgzy0RfKvUyW4eTq6ysNblm64U8h1zwV3L3N/uqzCTKqLqkn5VyiphYa7Q1z+SBRl8oa18qY63RsYN+pqw3DdfXNjqkGE2+mFRCgpVlRnjqAJux1UHZuDvs4FOqoaNUVA6e4SoGC1m7ZGaWq6YxJDBELmlH3tJ/nj8D42QIANvauT41ybCETf2hzybGRZiCvcZFMWYmAD49BLnm7aDqnLvGVmno0RmWYLs+EdJCOEoQd2d4Zusp4byx09juLQa7VdvsbxHH/+Mzhzlvtt2bLVddp5pZXuSdYdRfR+PL315MQHE9J6c+hIvwb9h2ZoJrt6imETcaIE53ZO8rcNTTL3TkdYyFW8Co2EM/1GXeoFMaHXi5pr5ic+WNUoVIR+8eWP0amhEeFQeHQiUwsKFTWrXhqGx3ls35mAqmRO85HpmpEvwt71sI1BWPEjaK83/ylIAy0GDNd0P9sh9Ell60eNSKBNC9ShCAnSW0pwGS8ad0f7d55OXwJEncJLhQny7rqdoC4GgwukBp/Q7ZhzF+T8ZOcBgGMWV33I+O07FYg7JanqnbW5P/X3vy0\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;First
        time with Ruby.  Also learning TDD.  The tests are extra code practice.  Everything
        is more complicated than it needs to be.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykbd6u/", "subreddit_type":
        "public", "locked": false, "name": "t1_iykbd6u", "created": 1669942408.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iykcmen", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "GguineaDev", "can_mod_post": false, "created_utc":
        1669943010.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_4irdi0qa", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Elixir\n\n[Code](https://github.com/GGuinea/problems/blob/master/adventOfCode/2022/day1/day1_1.exs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Elixir&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/GGuinea/problems/blob/master/adventOfCode/2022/day1/day1_1.exs\"&gt;Code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykcmen/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykcmen", "created":
        1669943010.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykeihg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1669943904.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby\n\n[https://github.com/djotaku/adventofcode/blob/ac1bdb2c3549e214875d3387afcf897a24ea909b/2022/Day\\_01/Ruby/solution.rb](https://github.com/djotaku/adventofcode/blob/ac1bdb2c3549e214875d3387afcf897a24ea909b/2022/Day_01/Ruby/solution.rb)\n\nI
        tried to be as idiomatic as I could given my knowledge of Ruby. (Python is
        my primary language)", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/djotaku/adventofcode/blob/ac1bdb2c3549e214875d3387afcf897a24ea909b/2022/Day_01/Ruby/solution.rb\"&gt;https://github.com/djotaku/adventofcode/blob/ac1bdb2c3549e214875d3387afcf897a24ea909b/2022/Day_01/Ruby/solution.rb&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        tried to be as idiomatic as I could given my knowledge of Ruby. (Python is
        my primary language)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykeihg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykeihg", "created":
        1669943904.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq4rtz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "snowe2010",
        "can_mod_post": false, "created_utc": 1670052827.0, "send_replies": true,
        "parent_id": "t1_iykeihg", "score": 2, "author_fullname": "t2_53c7i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You can map + sum to be a bit more idiomatic. Here is my solution. I''m quite
        late to the party, I know. \nhttps://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2022/day01/day01.rb",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can map + sum to
        be a bit more idiomatic. Here is my solution. I&amp;#39;m quite late to the
        party, I know. \n&lt;a href=\"https://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2022/day01/day01.rb\"&gt;https://github.com/snowe2010/advent-of-code/blob/master/ruby_aoc/2022/day01/day01.rb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq4rtz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq4rtz", "created":
        1670052827.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iywszjr", "id": "iywszjr", "parent_id":
        "t1_iyq4rtz", "depth": 2, "children": ["iywszjr"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670463565.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykgq29", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "PositivelyLinda",
        "can_mod_post": false, "created_utc": 1669944960.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_5pla7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript: Kept it real old-school Node style today lol[https://github.com/lindakatcodes/aoc-22/blob/main/solutions/day01.js](https://github.com/lindakatcodes/aoc-22/blob/main/solutions/day01.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript: Kept it
        real old-school Node style today lol&lt;a href=\"https://github.com/lindakatcodes/aoc-22/blob/main/solutions/day01.js\"&gt;https://github.com/lindakatcodes/aoc-22/blob/main/solutions/day01.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykgq29/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykgq29", "created":
        1669944960.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1671481587.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iypyku4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670047994.0, "send_replies": true,
        "parent_id": "t1_iykgq29", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Please edit your post to [expand the full name of the programming language](/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_no_abbreviations)
        (`JavaScript`).  This makes it easier for folks to Ctrl-F the megathreads
        searching for solutions written in a specific programming language.~~  Edit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please
        edit your post to &lt;a href=\"/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_no_abbreviations\"&gt;expand
        the full name of the programming language&lt;/a&gt; (&lt;code&gt;JavaScript&lt;/code&gt;).  This
        makes it easier for folks to Ctrl-F the megathreads searching for solutions
        written in a specific programming language.&lt;/del&gt;  Edit: thanks for
        fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypyku4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iypyku4", "created":
        1670047994.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykhd3j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "g_equals_pi_squared",
        "can_mod_post": false, "created_utc": 1669945260.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ius1d7kq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C++\n\n[https://github.com/gequalspisquared/AoC2022/blob/main/src/d1b.cpp](https://github.com/gequalspisquared/AoC2022/blob/main/src/d1b.cpp)\n\nRelatively
        new to programming, so I''m pretty proud of this.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C++&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/gequalspisquared/AoC2022/blob/main/src/d1b.cpp\"&gt;https://github.com/gequalspisquared/AoC2022/blob/main/src/d1b.cpp&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Relatively
        new to programming, so I&amp;#39;m pretty proud of this.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykhd3j/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykhd3j", "created":
        1669945260.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykhf2b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "infogulch",
        "can_mod_post": false, "created_utc": 1669945285.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6hkwf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust with iterators:\n\nhttps://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=99c6c3f7fbbccaefcd26fd7b03107ca2",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rust with iterators:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2021&amp;amp;gist=99c6c3f7fbbccaefcd26fd7b03107ca2\"&gt;https://play.rust-lang.org/?version=stable&amp;amp;mode=debug&amp;amp;edition=2021&amp;amp;gist=99c6c3f7fbbccaefcd26fd7b03107ca2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykhf2b/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykhf2b", "created":
        1669945285.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1713956592.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykhrv4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ephemient",
        "can_mod_post": false, "created_utc": 1669945452.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3y2dr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This space intentionally left blank.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;This space intentionally left blank.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykhrv4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykhrv4", "created":
        1669945452.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyki2hv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "codertee",
        "can_mod_post": false, "created_utc": 1669945588.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_977ug760", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\nhttps://github.com/codertee/adventofcode/blob/main/adventofcode/solutions/y2022/d01.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python\n&lt;a href=\"https://github.com/codertee/adventofcode/blob/main/adventofcode/solutions/y2022/d01.py\"&gt;https://github.com/codertee/adventofcode/blob/main/adventofcode/solutions/y2022/d01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyki2hv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyki2hv", "created":
        1669945588.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykih4i",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tdude66",
        "can_mod_post": false, "created_utc": 1669945776.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_7t72h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Elixir\n\n    File.read!(\"day1.txt\")\n    |&gt; String.trim\n    |&gt;
        String.split(\"\\n\\n\")\n    |&gt; Enum.map(fn x -&gt;\n      String.split(x,
        \"\\n\")\n      |&gt; Enum.map(&amp;String.to_integer/1)\n      |&gt; Enum.reduce(&amp;Kernel.+/2)\n    end)\n    |&gt;
        Enum.sort\n    |&gt; Enum.take(-3)\n    |&gt; Enum.reduce(&amp;Kernel.+/2)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Elixir&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;File.read!(&amp;quot;day1.txt&amp;quot;)\n|&amp;gt;
        String.trim\n|&amp;gt; String.split(&amp;quot;\\n\\n&amp;quot;)\n|&amp;gt;
        Enum.map(fn x -&amp;gt;\n  String.split(x, &amp;quot;\\n&amp;quot;)\n  |&amp;gt;
        Enum.map(&amp;amp;String.to_integer/1)\n  |&amp;gt; Enum.reduce(&amp;amp;Kernel.+/2)\nend)\n|&amp;gt;
        Enum.sort\n|&amp;gt; Enum.take(-3)\n|&amp;gt; Enum.reduce(&amp;amp;Kernel.+/2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": true, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykih4i/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykih4i", "created":
        1669945776.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iykjvae", "id": "iykjvae", "parent_id":
        "t1_iykih4i", "depth": 1, "children": ["iykjvae"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykillk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bradcray",
        "can_mod_post": false, "created_utc": 1669945832.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6859z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[**Chapel**](https://chapel-lang.org)\n\n[Code](https://github.com/chapel-lang/chapel/tree/main/test/studies/adventOfCode/2022/day01/bradc)
        | [Blog Walkthrough](https://chapel-lang.org/blog/posts/aoc2022-day01-calories/)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://chapel-lang.org\"&gt;&lt;strong&gt;Chapel&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/chapel-lang/chapel/tree/main/test/studies/adventOfCode/2022/day01/bradc\"&gt;Code&lt;/a&gt;
        | &lt;a href=\"https://chapel-lang.org/blog/posts/aoc2022-day01-calories/\"&gt;Blog
        Walkthrough&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykillk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykillk", "created":
        1669945832.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykiwgh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sanjithpk",
        "can_mod_post": false, "created_utc": 1669945971.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4hvdnw3g", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Golang Solution\n\n[paste](https://topaz.github.io/paste/#XQAAAQDqAwAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDinguAj8sFyd/fs4fcP1q4v8OVlrCdhpTu2NE49/3kHCLffYmATDp57S0ugBAf6Sim/HVVRVmXHSImlf4lEvjtD3DWi9FHheOGpYCg4/uh5/5BjPJsGVWxtoSaSNBYTlCyjr2zLoIz/ofLAO+BJ44TgURJgsCMzo3Kcp37XizS8liX7SwcYaqFPbAsXupeT0YO4X5FbvcTljeGWgebSs3Xlb0U2B3pxoxEb6w8yH8C1man5YMUW65SeOtwxn+aWxNtBAwCNAiE1lyvcddF/rkF5EIyAEXoyOwOkMpV/IJlj5Z/Q+zIJ+e0jeFJ3B9OQo6MQ+HqWA4NRvU0KdZzDgCL4U+4MCsk4ny3wZkCMHASJ1YF4z1SIbAC5re3kTamHeCGLBAWWHQkP5MB0m8SbeGut8UgBgoMkdSDE4zjoffxfDSQVbYRDH6VTQ9hpCsqeBIJLwSlsJOi68lxLsdAKv9LzWYoR4LW4tdTSdUNAtThonRFu492St1tdf6H80tke3JjPp1/GQ/E+Ev8Vj23S23YxQluV3MjzArm47P6kYcNyXPD5LJjXAFOc0H5Eab4W67uSNI+M2z46WnPb/bQw1Ya//lY5CR)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Golang Solution&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQDqAwAAAAAAAAA4GEiZzRd1JAgz+whYRQxSFI7XvmlfhtGDinguAj8sFyd/fs4fcP1q4v8OVlrCdhpTu2NE49/3kHCLffYmATDp57S0ugBAf6Sim/HVVRVmXHSImlf4lEvjtD3DWi9FHheOGpYCg4/uh5/5BjPJsGVWxtoSaSNBYTlCyjr2zLoIz/ofLAO+BJ44TgURJgsCMzo3Kcp37XizS8liX7SwcYaqFPbAsXupeT0YO4X5FbvcTljeGWgebSs3Xlb0U2B3pxoxEb6w8yH8C1man5YMUW65SeOtwxn+aWxNtBAwCNAiE1lyvcddF/rkF5EIyAEXoyOwOkMpV/IJlj5Z/Q+zIJ+e0jeFJ3B9OQo6MQ+HqWA4NRvU0KdZzDgCL4U+4MCsk4ny3wZkCMHASJ1YF4z1SIbAC5re3kTamHeCGLBAWWHQkP5MB0m8SbeGut8UgBgoMkdSDE4zjoffxfDSQVbYRDH6VTQ9hpCsqeBIJLwSlsJOi68lxLsdAKv9LzWYoR4LW4tdTSdUNAtThonRFu492St1tdf6H80tke3JjPp1/GQ/E+Ev8Vj23S23YxQluV3MjzArm47P6kYcNyXPD5LJjXAFOc0H5Eab4W67uSNI+M2z46WnPb/bQw1Ya//lY5CR\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykiwgh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykiwgh", "created":
        1669945971.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iymotps", "id": "iymotps", "parent_id":
        "t1_iykiwgh", "depth": 1, "children": ["iymotps"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykp93u",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bsssh",
        "can_mod_post": false, "created_utc": 1669948882.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_up8np2tx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## TypeScript Type System\n\n[Part 1](https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&amp;useDefineForClassFields=true&amp;noUnusedLocals=true&amp;noUnusedParameters=true&amp;esModuleInterop=false&amp;declaration=false&amp;experimentalDecorators=false&amp;emitDecoratorMetadata=false&amp;target=99&amp;jsx=0&amp;pretty=true&amp;noErrorTruncation=true&amp;isolatedModules=false&amp;useUnknownInCatchVariables=true&amp;exactOptionalPropertyTypes=true&amp;noFallthroughCasesInSwitch=true&amp;noImplicitOverride=true&amp;noPropertyAccessFromIndexSignature=true&amp;ts=4.9.3#code/JYWwDg9gTgLgBAbzgQQCaoDRwLIEMAecAvnAGZQQhwDkMAzgLS5TAwAWIApjMAMbUBuAFBCYATzCc4wAHZgArvAC8cAAYBGAAzahAJm2ahAZgMiALKaEBWUwDZLAdlMAOUwE5LW06uEjxkuAB9ABV5MAAbTjx8AB5guE58GE4ZVDo4GXkQACNOKABtAF0sZF5eLISklLSMrNyoAD44FXjE5NT0-NlSPLgAMWAoOng26vTMnLysADpZ7t6AJU5hyvaaifqiwqE4XbgAfiDQiKiCGKXhrGiY0vKQLAGhmAaGnb2ALhQyrN9-KRCwpEAMpZOKrMa1SYFYpfO7gjqQ+pNFrwmpdGQ9KD9QYrUYIjZTOCzabzLEXEZVfF1PJbN67Q4Ak4gkDnZYwEroG7fe7Yp4vOlwT63H4iUQSKQAUXCADdljEAJJyRQlbmo9LDFgyADmRWRcEVCgpa3SqgAJAhSXAAArMI0QjWyLVEAA6Mld5st5KIqgFhylsrorMucHyxOFPJtsEKrz2gv1SrtCLNFoxvUjiZqDu1LpkPtjscOodm4aw6e2+Y+sJFYoCzIA8qQgY7IlLSGC8ZmYJqtSq4R3xtToXrWpSasnLQA5Cr9xF5HMe1Nktne31weuN5ucVtB9khsPcrBTkDRgWfEfGtQLzFwI9q2dQFcV+lHQGcZkxIvTEs3rIwzQxp9PkZYFQW-f9fnFOBW2CCAYFwcJA3Pe0u0dIpe2nUcByhXVmjgJCEXRa9HlxTC4CzHsiTmRc4HJO9yNpAsoPCUgYLghCdywT9v3XJttRbZiYmI3ddRPWMhW5CCAlbABheDoGAThWPg9IVGg2DlJif05VkQ1OOjPSGmEP4UBkOgAHdehUYDTliGS5JYRT1IQrBwKEAB6Ny9gAPX2IQgA)\n\n[Part
        2](https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&amp;useDefineForClassFields=true&amp;noUnusedLocals=true&amp;noUnusedParameters=true&amp;esModuleInterop=false&amp;declaration=false&amp;experimentalDecorators=false&amp;emitDecoratorMetadata=false&amp;target=99&amp;jsx=0&amp;pretty=true&amp;noErrorTruncation=true&amp;isolatedModules=false&amp;useUnknownInCatchVariables=true&amp;exactOptionalPropertyTypes=true&amp;noFallthroughCasesInSwitch=true&amp;noImplicitOverride=true&amp;noPropertyAccessFromIndexSignature=true&amp;ts=4.9.3#code/JYWwDg9gTgLgBAbzgQQCaoDRwLIEMAecAvnAGZQQhwDkMAzgLS5TAwAWIApjMAMbUBuAFBCYATzCc4wAHZgArvAC8cAAYBGAAzahAJm2ahAZgMiALKaEBWUwDZLAdlMAOUwE5LW06uGiJUgH0AFXkwABtOPHwAHiC4TnwYThlUOjgZeRAAI04oAG0AXSxkXl5M+MTk1PTMnKgAPjgVOISklLS82VJcuAAxYCg6eFaqtIzs3KwAOhmunoAlTiGKturxusKCoTgduAB+OGDQiKjoxaGsU5KykCx+wZh6+u3dgC4UUszfcUlDkPDOABlTKxFajGoTfJFD43MHtCF1RrNOHVToybpQPoDZYjeHrSZwGZTOaY87DSp42q5TYvHYHI4A4EgM5LGDFdDRa6ZO7Yx7PXZwd5ckDffxwACiYQAbktogBJOSKYqfKi46pDFgyADmhSRcAVCnJqzSqgAJAgSXAAArMI3gjWyLVEAA6Mld5stZKIqlp+wl0tlZKweSJwqwNtgBX5b31irt8LNFvRPQj8fVME1TtdPoFAoOIZmYettq2uZjwtFv0lpCZoLVaQd2uVsPrCOpUaacBaFOqictADlyq38VAXTIPcnSazvb6DtXa0G4AWpkXByAo773t3jWoJxi4GuUWMqaOc2W-QyIrXl6vMtDNNGy+9L0CQUWH5WpNWghAYLgwnQdY9g2GaOoUzZDsBbZQnq27gmi+73DiUGNlq0yzJOcBkkecCoTSeb+qQP5-gBLIXEuoYqlg84gkhbJLlGG4CkKKq+H4VZhKQADC-7QMAnDEf+aQqN+v5CdEkoyoBsiGsGUZyfUn5YmESRQEBO64DIYjgXAABq-7yJwEGqlBmnaR2yKtghPR0ehxKYWSpa7AcdE4fpYSGb6BH9CpuRkfR7mGcZj65u8Pmqf5WCBUZFGFlRWIPExMZwfCeTRU5ZYHEEXnliqIg-FIVpQJwUqdnkMglQSmhYOoWC6AUwgFdafAANY-mARiclAmLDieOnCjhI46VaEBpK2RUleVJ4FJ2uh6r6eQjXQM1WRVMpQBlfrCpuzW8G1EAddEOU7OFfnIN1xlTZCM0AD5-MckQEF1UBYA+CkYMdsUrvFL5XBdcAPkUn0TVKi2jZtikiOxUjIDIdAAO49CoL61larXtZ11Y8WEfECWJAHvQDkMAPTE7sAB6ewiEAA)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;TypeScript Type System&lt;/h2&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&amp;amp;useDefineForClassFields=true&amp;amp;noUnusedLocals=true&amp;amp;noUnusedParameters=true&amp;amp;esModuleInterop=false&amp;amp;declaration=false&amp;amp;experimentalDecorators=false&amp;amp;emitDecoratorMetadata=false&amp;amp;target=99&amp;amp;jsx=0&amp;amp;pretty=true&amp;amp;noErrorTruncation=true&amp;amp;isolatedModules=false&amp;amp;useUnknownInCatchVariables=true&amp;amp;exactOptionalPropertyTypes=true&amp;amp;noFallthroughCasesInSwitch=true&amp;amp;noImplicitOverride=true&amp;amp;noPropertyAccessFromIndexSignature=true&amp;amp;ts=4.9.3#code/JYWwDg9gTgLgBAbzgQQCaoDRwLIEMAecAvnAGZQQhwDkMAzgLS5TAwAWIApjMAMbUBuAFBCYATzCc4wAHZgArvAC8cAAYBGAAzahAJm2ahAZgMiALKaEBWUwDZLAdlMAOUwE5LW06uEjxkuAB9ABV5MAAbTjx8AB5guE58GE4ZVDo4GXkQACNOKABtAF0sZF5eLISklLSMrNyoAD44FXjE5NT0-NlSPLgAMWAoOng26vTMnLysADpZ7t6AJU5hyvaaifqiwqE4XbgAfiDQiKiCGKXhrGiY0vKQLAGhmAaGnb2ALhQyrN9-KRCwpEAMpZOKrMa1SYFYpfO7gjqQ+pNFrwmpdGQ9KD9QYrUYIjZTOCzabzLEXEZVfF1PJbN67Q4Ak4gkDnZYwEroG7fe7Yp4vOlwT63H4iUQSKQAUXCADdljEAJJyRQlbmo9LDFgyADmRWRcEVCgpa3SqgAJAhSXAAArMI0QjWyLVEAA6Mld5st5KIqgFhylsrorMucHyxOFPJtsEKrz2gv1SrtCLNFoxvUjiZqDu1LpkPtjscOodm4aw6e2+Y+sJFYoCzIA8qQgY7IlLSGC8ZmYJqtSq4R3xtToXrWpSasnLQA5Cr9xF5HMe1Nktne31weuN5ucVtB9khsPcrBTkDRgWfEfGtQLzFwI9q2dQFcV+lHQGcZkxIvTEs3rIwzQxp9PkZYFQW-f9fnFOBW2CCAYFwcJA3Pe0u0dIpe2nUcByhXVmjgJCEXRa9HlxTC4CzHsiTmRc4HJO9yNpAsoPCUgYLghCdywT9v3XJttRbZiYmI3ddRPWMhW5CCAlbABheDoGAThWPg9IVGg2DlJif05VkQ1OOjPSGmEP4UBkOgAHdehUYDTliGS5JYRT1IQrBwKEAB6Ny9gAPX2IQgA\"&gt;Part
        1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&amp;amp;useDefineForClassFields=true&amp;amp;noUnusedLocals=true&amp;amp;noUnusedParameters=true&amp;amp;esModuleInterop=false&amp;amp;declaration=false&amp;amp;experimentalDecorators=false&amp;amp;emitDecoratorMetadata=false&amp;amp;target=99&amp;amp;jsx=0&amp;amp;pretty=true&amp;amp;noErrorTruncation=true&amp;amp;isolatedModules=false&amp;amp;useUnknownInCatchVariables=true&amp;amp;exactOptionalPropertyTypes=true&amp;amp;noFallthroughCasesInSwitch=true&amp;amp;noImplicitOverride=true&amp;amp;noPropertyAccessFromIndexSignature=true&amp;amp;ts=4.9.3#code/JYWwDg9gTgLgBAbzgQQCaoDRwLIEMAecAvnAGZQQhwDkMAzgLS5TAwAWIApjMAMbUBuAFBCYATzCc4wAHZgArvAC8cAAYBGAAzahAJm2ahAZgMiALKaEBWUwDZLAdlMAOUwE5LW06uGiJUgH0AFXkwABtOPHwAHiC4TnwYThlUOjgZeRAAI04oAG0AXSxkXl5M+MTk1PTMnKgAPjgVOISklLS82VJcuAAxYCg6eFaqtIzs3KwAOhmunoAlTiGKturxusKCoTgduAB+OGDQiKjoxaGsU5KykCx+wZh6+u3dgC4UUszfcUlDkPDOABlTKxFajGoTfJFD43MHtCF1RrNOHVToybpQPoDZYjeHrSZwGZTOaY87DSp42q5TYvHYHI4A4EgM5LGDFdDRa6ZO7Yx7PXZwd5ckDffxwACiYQAbktogBJOSKYqfKi46pDFgyADmhSRcAVCnJqzSqgAJAgSXAAArMI3gjWyLVEAA6Mld5stZKIqlp+wl0tlZKweSJwqwNtgBX5b31irt8LNFvRPQj8fVME1TtdPoFAoOIZmYettq2uZjwtFv0lpCZoLVaQd2uVsPrCOpUaacBaFOqictADlyq38VAXTIPcnSazvb6DtXa0G4AWpkXByAo773t3jWoJxi4GuUWMqaOc2W-QyIrXl6vMtDNNGy+9L0CQUWH5WpNWghAYLgwnQdY9g2GaOoUzZDsBbZQnq27gmi+73DiUGNlq0yzJOcBkkecCoTSeb+qQP5-gBLIXEuoYqlg84gkhbJLlGG4CkKKq+H4VZhKQADC-7QMAnDEf+aQqN+v5CdEkoyoBsiGsGUZyfUn5YmESRQEBO64DIYjgXAABq-7yJwEGqlBmnaR2yKtghPR0ehxKYWSpa7AcdE4fpYSGb6BH9CpuRkfR7mGcZj65u8Pmqf5WCBUZFGFlRWIPExMZwfCeTRU5ZYHEEXnliqIg-FIVpQJwUqdnkMglQSmhYOoWC6AUwgFdafAANY-mARiclAmLDieOnCjhI46VaEBpK2RUleVJ4FJ2uh6r6eQjXQM1WRVMpQBlfrCpuzW8G1EAddEOU7OFfnIN1xlTZCM0AD5-MckQEF1UBYA+CkYMdsUrvFL5XBdcAPkUn0TVKi2jZtikiOxUjIDIdAAO49CoL61larXtZ11Y8WEfECWJAHvQDkMAPTE7sAB6ewiEAA\"&gt;Part
        2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykp93u/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykp93u", "created":
        1669948882.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iykx5qh", "id": "iykx5qh", "parent_id":
        "t1_iykp93u", "depth": 1, "children": ["iykx5qh"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669949721.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykqjpw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TheAfterPipe",
        "can_mod_post": false, "created_utc": 1669949482.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3nzp1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# C# With LINQ\n\n## Part 1:\n```\nConsole.WriteLine(File.ReadAllText(@\"./input.txt\").Split(\"\\r\\n\\r\\n\").ToList().Select(y
        =&gt; y.Split(\"\\r\\n\").ToList().Select(int.Parse).Sum()).Max());\n```\n\n##
        Part 2:\n```\nConsole.WriteLine(File.ReadAllText(@\"./input.txt\").Split(\"\\\\r\\\\n\\\\r\\\\n\").ToList().Select(y
        =&gt; y.Split(\"\\\\r\\\\n\").ToList().Select(int.Parse).Sum()).ToList().OrderByDescending(n
        =&gt; n).Take(3).Sum());\n```", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;C# With LINQ&lt;/h1&gt;\n\n&lt;h2&gt;Part 1:&lt;/h2&gt;\n\n&lt;p&gt;&lt;code&gt;\nConsole.WriteLine(File.ReadAllText(@&amp;quot;./input.txt&amp;quot;).Split(&amp;quot;\\r\\n\\r\\n&amp;quot;).ToList().Select(y
        =&amp;gt; y.Split(&amp;quot;\\r\\n&amp;quot;).ToList().Select(int.Parse).Sum()).Max());\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;h2&gt;Part
        2:&lt;/h2&gt;\n\n&lt;p&gt;&lt;code&gt;\nConsole.WriteLine(File.ReadAllText(@&amp;quot;./input.txt&amp;quot;).Split(&amp;quot;\\\\r\\\\n\\\\r\\\\n&amp;quot;).ToList().Select(y
        =&amp;gt; y.Split(&amp;quot;\\\\r\\\\n&amp;quot;).ToList().Select(int.Parse).Sum()).ToList().OrderByDescending(n
        =&amp;gt; n).Take(3).Sum());\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykqjpw/", "subreddit_type":
        "public", "locked": false, "name": "t1_iykqjpw", "created": 1669949482.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iykqwil", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "thedjotaku", "can_mod_post": false, "created_utc":
        1669949650.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_d7b8t", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Go / Golang solution. Would
        love suggestions on making it more idiomatic.\n\n[https://github.com/djotaku/adventofcode/blob/a2d66224f40c2e78741d3e599bba38687315baf0/2022/Day\\_01/Go/solution.go](https://github.com/djotaku/adventofcode/blob/a2d66224f40c2e78741d3e599bba38687315baf0/2022/Day_01/Go/solution.go)\n\nThanks!",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go / Golang solution.
        Would love suggestions on making it more idiomatic.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/djotaku/adventofcode/blob/a2d66224f40c2e78741d3e599bba38687315baf0/2022/Day_01/Go/solution.go\"&gt;https://github.com/djotaku/adventofcode/blob/a2d66224f40c2e78741d3e599bba38687315baf0/2022/Day_01/Go/solution.go&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykqwil/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykqwil", "created":
        1669949650.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iykwtbj", "id": "iykwtbj", "parent_id":
        "t1_iykqwil", "depth": 1, "children": ["iykwtbj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669950466.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykr360", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ShivJS",
        "can_mod_post": false, "created_utc": 1669949739.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_9x292x18", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript for Noobs like me, paste your puzzle input in a file called \"filename.txt\"\n\nIf
        anyone has comments on optimization lmk, always looking to learn.\n\n\n\nPart
        1\n\n    const readFileSync = require(\"fs\").readFileSync;\n    var input
        = readFileSync(\"./AOC01.txt\", { encoding: \"utf8\", flag: \"r\" }).trim();\n\n    let
        splitInput = input.split(\"\\n\");\n\n    function CalorieCounter(splitInput)
        {\n      let sum = 0;\n      let greatestNumber = 0;\n      for (let i = 0;
        i &lt; splitInput.length; ++i) {\n        if (Boolean(splitInput[i]) === true)
        {\n          sum += splitInput[i] * 1;\n        } else if (Boolean(splitInput[i])
        === false) {\n          greatestNumber = Math.max(sum, greatestNumber);\n          sum
        = 0;\n        }\n      }\n      return [sum, greatestNumber];\n    }\n\n    console.log(CalorieCounter(splitInput));
        \n\nPart 2\n\n    const readFileSync = require(\"fs\").readFileSync;\n    var
        input = readFileSync(\"./AOC01.txt\", { encoding: \"utf8\", flag: \"r\" }).trim();\n\n    let
        splitInput = input.split(\"\\n\");\n\n    function CalorieCounter(splitInput)
        {\n      let sum = 0;\n      let arrayOfSums = [];\n      for (let i = 0;
        i &lt; splitInput.length; ++i) {\n        if (Boolean(splitInput[i]) === true)
        {\n          sum += splitInput[i] * 1;\n        } else if (Boolean(splitInput[i])
        === false) {\n          arrayOfSums.push(sum);\n          sum = 0;\n        }\n      }\n      return
        arrayOfSums;\n    }\n\n    console.log(CalorieCounter(splitInput));\n\n    function
        compareNumbers(a, b) {\n      return b - a;\n    }\n\n    function threeElves(arrayInput)
        {\n      let arrayOfNumbers = [];\n      let sum = 0;\n      arrayOfNumbers
        = arrayInput.sort(compareNumbers);\n      console.log(arrayOfNumbers);\n      sum
        = arrayOfNumbers[0] + arrayOfNumbers[1] + arrayOfNumbers[2];\n      return
        sum;\n    }\n\n    console.log(threeElves(CalorieCounter(splitInput)));",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript for Noobs
        like me, paste your puzzle input in a file called &amp;quot;filename.txt&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;If
        anyone has comments on optimization lmk, always looking to learn.&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const readFileSync = require(&amp;quot;fs&amp;quot;).readFileSync;\nvar
        input = readFileSync(&amp;quot;./AOC01.txt&amp;quot;, { encoding: &amp;quot;utf8&amp;quot;,
        flag: &amp;quot;r&amp;quot; }).trim();\n\nlet splitInput = input.split(&amp;quot;\\n&amp;quot;);\n\nfunction
        CalorieCounter(splitInput) {\n  let sum = 0;\n  let greatestNumber = 0;\n  for
        (let i = 0; i &amp;lt; splitInput.length; ++i) {\n    if (Boolean(splitInput[i])
        === true) {\n      sum += splitInput[i] * 1;\n    } else if (Boolean(splitInput[i])
        === false) {\n      greatestNumber = Math.max(sum, greatestNumber);\n      sum
        = 0;\n    }\n  }\n  return [sum, greatestNumber];\n}\n\nconsole.log(CalorieCounter(splitInput));
        \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        readFileSync = require(&amp;quot;fs&amp;quot;).readFileSync;\nvar input =
        readFileSync(&amp;quot;./AOC01.txt&amp;quot;, { encoding: &amp;quot;utf8&amp;quot;,
        flag: &amp;quot;r&amp;quot; }).trim();\n\nlet splitInput = input.split(&amp;quot;\\n&amp;quot;);\n\nfunction
        CalorieCounter(splitInput) {\n  let sum = 0;\n  let arrayOfSums = [];\n  for
        (let i = 0; i &amp;lt; splitInput.length; ++i) {\n    if (Boolean(splitInput[i])
        === true) {\n      sum += splitInput[i] * 1;\n    } else if (Boolean(splitInput[i])
        === false) {\n      arrayOfSums.push(sum);\n      sum = 0;\n    }\n  }\n  return
        arrayOfSums;\n}\n\nconsole.log(CalorieCounter(splitInput));\n\nfunction compareNumbers(a,
        b) {\n  return b - a;\n}\n\nfunction threeElves(arrayInput) {\n  let arrayOfNumbers
        = [];\n  let sum = 0;\n  arrayOfNumbers = arrayInput.sort(compareNumbers);\n  console.log(arrayOfNumbers);\n  sum
        = arrayOfNumbers[0] + arrayOfNumbers[1] + arrayOfNumbers[2];\n  return sum;\n}\n\nconsole.log(threeElves(CalorieCounter(splitInput)));\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykr360/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykr360", "created":
        1669949739.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyku9aw", "id": "iyku9aw", "parent_id":
        "t1_iykr360", "depth": 1, "children": ["iyku9aw", "iymnzpo"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670135343.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykr6rb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dcrro",
        "can_mod_post": false, "created_utc": 1669949787.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ta0qgvut", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript Interactive Solution\n\n[Interactive solution to Part 1](https://mirio.org/recording/61)
        \n\n[Interactive solution to Part 2](https://mirio.org/recording/62)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript Interactive Solution&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://mirio.org/recording/61\"&gt;Interactive solution to Part 1&lt;/a&gt;
        &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://mirio.org/recording/62\"&gt;Interactive
        solution to Part 2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykr6rb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykr6rb", "created":
        1669949787.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iypx80o", "id": "iypx80o", "parent_id":
        "t1_iykr6rb", "depth": 1, "children": ["iypx80o"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykuhvk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SockInternal9389",
        "can_mod_post": false, "created_utc": 1669951391.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_uf2mf4ca", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[My bash/awk solution](https://raw.githubusercontent.com/prichrd/aoc/master/2022/01.sh)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://raw.githubusercontent.com/prichrd/aoc/master/2022/01.sh\"&gt;My
        bash/awk solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykuhvk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykuhvk", "created":
        1669951391.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669951630.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykukm3", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LogicalPitch3404",
        "can_mod_post": false, "created_utc": 1669951426.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_8ka38fpj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "## Python\nhttps://github.com/chiragpachori/advent_of_code/blob/main/2022/01/solution.py\n\nBeing
        a beginner data scientist my first thought was something like pandas but then
        decided I should try to have low dependency solutions throughout the challenge.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h2&gt;Python&lt;/h2&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/chiragpachori/advent_of_code/blob/main/2022/01/solution.py\"&gt;https://github.com/chiragpachori/advent_of_code/blob/main/2022/01/solution.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Being
        a beginner data scientist my first thought was something like pandas but then
        decided I should try to have low dependency solutions throughout the challenge.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykukm3/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykukm3", "created":
        1669951426.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669953379.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykv833", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "willsmith28",
        "can_mod_post": false, "created_utc": 1669951744.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_c7yux", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**python**\n\nSingle iteration solution without sorting\n\nhttps://github.com/willsmith28/advent-of-code-2022/blob/main/python/day01.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Single
        iteration solution without sorting&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/willsmith28/advent-of-code-2022/blob/main/python/day01.py\"&gt;https://github.com/willsmith28/advent-of-code-2022/blob/main/python/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykv833/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykv833", "created":
        1669951744.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykxscx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CSEcon",
        "can_mod_post": false, "created_utc": 1669953001.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ev2yext", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**ruby**\n\nlearning the language through this, so this is going to get nasty
        :D\n\n[gist](https://gist.github.com/mehryar-m/305fe8ee79a8fe94a5a6859c105bc14f)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;ruby&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;learning
        the language through this, so this is going to get nasty :D&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gist.github.com/mehryar-m/305fe8ee79a8fe94a5a6859c105bc14f\"&gt;gist&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykxscx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykxscx", "created":
        1669953001.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyl2era",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CheesecakeMediocre92",
        "can_mod_post": false, "created_utc": 1669955416.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_cv6cv4xa", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust**\n\n[solution here](https://github.com/jianghuawang/AoC2022/blob/master/src/bin/day1.rs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jianghuawang/AoC2022/blob/master/src/bin/day1.rs\"&gt;solution
        here&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyl2era/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyl2era", "created":
        1669955416.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyl3nhm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "devtailsxyz",
        "can_mod_post": false, "created_utc": 1669956103.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4zr6m7vn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**C**\n\nhttps://devtails.xyz/@adam/advent-of-code/2022/day/1", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://devtails.xyz/@adam/advent-of-code/2022/day/1\"&gt;https://devtails.xyz/@adam/advent-of-code/2022/day/1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyl3nhm/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyl3nhm", "created":
        1669956103.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyl6d5z",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SCP_radiantpoison",
        "can_mod_post": false, "created_utc": 1669957690.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_kzh0zwim", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python]\n\nAny insights?\n \n[Here''s my code](https://topaz.github.io/paste/#XQAAAQBEAQAAAAAAAAA7mkrvHeIvDZUizuOjUyaO/T/mxtOQup3SPZNXOr//JVMc9PdCFAec8WJmsEZRXUfCf2hfgbNhxhIyFpd5wZ3UHyBmQO+bXL34TtY5gnDhqtOjgJOlFq53FViEt4v9QF4IVSQNvaWF77T3DaGT+ui+czqg2CUvH4tu6bTNUvzS9v6dnU04R25N0JB1wOSViDJB+56yhT8j+gxIoPzNkT+S8qP+zuV5jKuULTN11rWM3pLrEvw4pq7FfzsadVfuelb+qUK7wJNF/lSDsspgDtlPPgc/n0WPQQ/el6n/bydgAA==)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[Python]&lt;/p&gt;\n\n&lt;p&gt;Any
        insights?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://topaz.github.io/paste/#XQAAAQBEAQAAAAAAAAA7mkrvHeIvDZUizuOjUyaO/T/mxtOQup3SPZNXOr//JVMc9PdCFAec8WJmsEZRXUfCf2hfgbNhxhIyFpd5wZ3UHyBmQO+bXL34TtY5gnDhqtOjgJOlFq53FViEt4v9QF4IVSQNvaWF77T3DaGT+ui+czqg2CUvH4tu6bTNUvzS9v6dnU04R25N0JB1wOSViDJB+56yhT8j+gxIoPzNkT+S8qP+zuV5jKuULTN11rWM3pLrEvw4pq7FfzsadVfuelb+qUK7wJNF/lSDsspgDtlPPgc/n0WPQQ/el6n/bydgAA==\"&gt;Here&amp;#39;s
        my code&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyl6d5z/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyl6d5z", "created":
        1669957690.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyltnhn", "id": "iyltnhn", "parent_id":
        "t1_iyl6d5z", "depth": 1, "children": ["iyltnhn", "iyltmeo", "iyltout"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1670050507.0,
        "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iylbokf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "leyanlo",
        "can_mod_post": false, "created_utc": 1669961104.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_87wgb", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript, 327/254\n\n[https://github.com/leyanlo/advent-of-code/blob/main/2022/day-01.js](https://github.com/leyanlo/advent-of-code/blob/main/2022/day-01.js)\n\n[https://www.youtube.com/watch?v=lcLR8PyCkwk](https://www.youtube.com/watch?v=lcLR8PyCkwk)\n\nUgh
        forgot to log in first.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript,
        327/254&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/leyanlo/advent-of-code/blob/main/2022/day-01.js\"&gt;https://github.com/leyanlo/advent-of-code/blob/main/2022/day-01.js&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://www.youtube.com/watch?v=lcLR8PyCkwk\"&gt;https://www.youtube.com/watch?v=lcLR8PyCkwk&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Ugh
        forgot to log in first.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylbokf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylbokf", "created":
        1669961104.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylbsbk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SpecificMachine1",
        "can_mod_post": false, "created_utc": 1669961177.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_167hax1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I am doing r7rs Scheme this year.\n\n[https://github.com/SpecificMachine1/AdventOfCode2022](https://github.com/SpecificMachine1/AdventOfCode2022)\n\nI
        tested my solution in the repl with Gauche. Using (srfi 1) throughout would
        have made the solutions much shorter- I am just warming up. There are better
        file loading functions to use, too (eg. call-with-input-file). I haven''t
        set this up to run from the command line.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I am doing r7rs Scheme this year.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SpecificMachine1/AdventOfCode2022\"&gt;https://github.com/SpecificMachine1/AdventOfCode2022&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        tested my solution in the repl with Gauche. Using (srfi 1) throughout would
        have made the solutions much shorter- I am just warming up. There are better
        file loading functions to use, too (eg. call-with-input-file). I haven&amp;#39;t
        set this up to run from the command line.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylbsbk/", "subreddit_type":
        "public", "locked": false, "name": "t1_iylbsbk", "created": 1669961177.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1670370049.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylbtc9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ilsubyeega",
        "can_mod_post": false, "created_utc": 1669961196.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4asef1px", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript\nhttps://github.com/ilsubyeega/aoc2022/blob/main/day01.js", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript\n&lt;a href=\"https://github.com/ilsubyeega/aoc2022/blob/main/day01.js\"&gt;https://github.com/ilsubyeega/aoc2022/blob/main/day01.js&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylbtc9/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylbtc9", "created":
        1669961196.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylhx8m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BadHumourInside",
        "can_mod_post": false, "created_utc": 1669965686.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_21mwdk19", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Rust:** [Day 01](https://github.com/v-shenoy/advent-of-code-2022/blob/main/src/solvers/day_01.rs)\n\nDecided
        to use AoC 2022 to learn some Rust.\n\nThanks to [https://github.com/Basicprogrammer10](https://github.com/Basicprogrammer10)
        for a nice template for the repository.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust:&lt;/strong&gt; &lt;a href=\"https://github.com/v-shenoy/advent-of-code-2022/blob/main/src/solvers/day_01.rs\"&gt;Day
        01&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Decided to use AoC 2022 to learn some Rust.&lt;/p&gt;\n\n&lt;p&gt;Thanks
        to &lt;a href=\"https://github.com/Basicprogrammer10\"&gt;https://github.com/Basicprogrammer10&lt;/a&gt;
        for a nice template for the repository.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylhx8m/", "subreddit_type":
        "public", "locked": false, "name": "t1_iylhx8m", "created": 1669965686.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iylkrc2", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Aragami1408", "can_mod_post": false, "created_utc":
        1669967989.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 2,
        "author_fullname": "t2_p4bpz3i", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "**Rust:** [Solution](https://github.com/Aragami1408/advent_of_code/blob/main/aoc2022/day01/src/main.rs)\n\nUsing
        Rust to beat AoC is not a bad idea!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Rust:&lt;/strong&gt; &lt;a href=\"https://github.com/Aragami1408/advent_of_code/blob/main/aoc2022/day01/src/main.rs\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Using
        Rust to beat AoC is not a bad idea!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylkrc2/", "subreddit_type":
        "public", "locked": false, "name": "t1_iylkrc2", "created": 1669967989.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iylofbp", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "SnowDropGardens", "can_mod_post": false,
        "created_utc": 1669971104.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 2, "author_fullname": "t2_9bvnl9yg", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "C#, iterative\n\n    string[]
        inputLines = File.ReadAllLines(@\"...\\input.txt\");\n    \n    List&lt;int&gt;
        elfSnacks = new List&lt;int&gt;();\n    \n    int snack = 0;\n    \n    foreach
        (string line in inputLines)\n    {\n        if (!string.IsNullOrEmpty(line))\n        {\n            snack
        += Int32.Parse(line);\n        }\n        else\n        {\n            elfSnacks.Add(snack);\n            snack
        = 0;\n        }\n    }\n    \n    int topElf;\n    int topElfSnack;\n    int
        topElvesSnacksTotal = 0;\n    \n    for (int i = 0; i &lt; 3; i++)\n    {\n        topElf
        = elfSnacks.IndexOf(elfSnacks.Max()) + 1;\n        topElfSnack = elfSnacks.Max();\n        topElvesSnacksTotal
        += topElfSnack;\n    \n        Console.WriteLine($\"Elf {topElf} is carrying
        {topElfSnack} calories.\\n\");\n        elfSnacks.Remove(elfSnacks.Max());\n    }\n    \n    Console.WriteLine($\"The
        top three elves are carrying {topElvesSnacksTotal} calories.\\n\");", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;C#, iterative&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;string[]
        inputLines = File.ReadAllLines(@&amp;quot;...\\input.txt&amp;quot;);\n\nList&amp;lt;int&amp;gt;
        elfSnacks = new List&amp;lt;int&amp;gt;();\n\nint snack = 0;\n\nforeach (string
        line in inputLines)\n{\n    if (!string.IsNullOrEmpty(line))\n    {\n        snack
        += Int32.Parse(line);\n    }\n    else\n    {\n        elfSnacks.Add(snack);\n        snack
        = 0;\n    }\n}\n\nint topElf;\nint topElfSnack;\nint topElvesSnacksTotal =
        0;\n\nfor (int i = 0; i &amp;lt; 3; i++)\n{\n    topElf = elfSnacks.IndexOf(elfSnacks.Max())
        + 1;\n    topElfSnack = elfSnacks.Max();\n    topElvesSnacksTotal += topElfSnack;\n\n    Console.WriteLine($&amp;quot;Elf
        {topElf} is carrying {topElfSnack} calories.\\n&amp;quot;);\n    elfSnacks.Remove(elfSnacks.Max());\n}\n\nConsole.WriteLine($&amp;quot;The
        top three elves are carrying {topElvesSnacksTotal} calories.\\n&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylofbp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylofbp", "created":
        1669971104.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670053832.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iylpn1h", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "senga_sc",
        "can_mod_post": false, "created_utc": 1669972184.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_10c5g5wi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Apps Scripts solution (JS for GSheets)\n\nPart 1&amp;2. Original data in
        column A\n\n    function elves(rows) {\n\n        let values = rows.reduce((result,
        row) =&gt; {\n        let calorieValue = parseInt(row[0]);\n        let lastIndex
        = result.length - 1;\n     if (isNaN(calorieValue)){\n        result.push(0);\n       }
        else {\n        result[lastIndex] = result[lastIndex] + calorieValue;\n      }\n      return
        result;\n\n      },[0])\n\n\n    let elf = 1;\n    let mostCalories = values[0];\n\n    for(var
        i=0;i&lt;values.length;i++) {\n      if (values[i] &gt; mostCalories){\n        elf
        = i+1;\n         mostCalories = values[i];\n     }\n\n    }\n\n    return
        [[elf, mostCalories]]\n\n    }\n\n\n    function elves2(rows) {\n\n      let
        values = rows.reduce((result, row) =&gt; {\n      let calorieValue = parseInt(row[0]);\n      let
        lastIndex = result.length - 1;\n     if (isNaN(calorieValue)){\n        result.push(0);\n     }
        else {\n       result[lastIndex] = result[lastIndex] + calorieValue;\n     }\n     return
        result;\n\n    },[0])\n\n    values = values.sort(function (a, b) {  return
        b-a;  })\n    let total = values[0]+ values[1] + values[2];\n\n    return
        total\n\n     }", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Apps
        Scripts solution (JS for GSheets)&lt;/p&gt;\n\n&lt;p&gt;Part 1&amp;amp;2.
        Original data in column A&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function elves(rows)
        {\n\n    let values = rows.reduce((result, row) =&amp;gt; {\n    let calorieValue
        = parseInt(row[0]);\n    let lastIndex = result.length - 1;\n if (isNaN(calorieValue)){\n    result.push(0);\n   }
        else {\n    result[lastIndex] = result[lastIndex] + calorieValue;\n  }\n  return
        result;\n\n  },[0])\n\n\nlet elf = 1;\nlet mostCalories = values[0];\n\nfor(var
        i=0;i&amp;lt;values.length;i++) {\n  if (values[i] &amp;gt; mostCalories){\n    elf
        = i+1;\n     mostCalories = values[i];\n }\n\n}\n\nreturn [[elf, mostCalories]]\n\n}\n\n\nfunction
        elves2(rows) {\n\n  let values = rows.reduce((result, row) =&amp;gt; {\n  let
        calorieValue = parseInt(row[0]);\n  let lastIndex = result.length - 1;\n if
        (isNaN(calorieValue)){\n    result.push(0);\n } else {\n   result[lastIndex]
        = result[lastIndex] + calorieValue;\n }\n return result;\n\n},[0])\n\nvalues
        = values.sort(function (a, b) {  return b-a;  })\nlet total = values[0]+ values[1]
        + values[2];\n\nreturn total\n\n }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylpn1h/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylpn1h", "created":
        1669972184.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iypowbj", "id": "iypowbj", "parent_id":
        "t1_iylpn1h", "depth": 1, "children": ["iypowbj"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylrdmd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ecco256",
        "can_mod_post": false, "created_utc": 1669973751.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6b5f9h9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Haskell\n\n    main = do\n      xs &lt;- reverse . sort . map (sum . map
        (read @Int) . words) . splitOn \"\\n\\n\" &lt;$&gt; readFile \"2022/data/day01.txt\"\n      print
        (sum . take 1 $ xs, sum . take 3 $ xs)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Haskell&lt;/h1&gt;\n\n&lt;pre&gt;&lt;code&gt;main
        = do\n  xs &amp;lt;- reverse . sort . map (sum . map (read @Int) . words)
        . splitOn &amp;quot;\\n\\n&amp;quot; &amp;lt;$&amp;gt; readFile &amp;quot;2022/data/day01.txt&amp;quot;\n  print
        (sum . take 1 $ xs, sum . take 3 $ xs)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylrdmd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylrdmd", "created":
        1669973751.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylsfbg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Western_Pollution526",
        "can_mod_post": false, "created_utc": 1669974684.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_95yf3dg4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    C# LINQPAD\n    \n    void Main()\n        {\n            var c = 0;\n            input.Select(i
        =&gt; {\n                    if (string.IsNullOrWhiteSpace(i))\n                    {\n                        return
        (c++, 0);\n                    }\n                    return (c, Convert.ToInt32(i));\n                })\n                .GroupBy(i
        =&gt; i.Item1)\n                .Select(g =&gt; g.Select(x =&gt; x.Item2).Sum())\n                .OrderByDescending(x
        =&gt; x)\n                .Take(3)\n                .Sum()\n                .Dump();\n    \n            PART1();\n        }\n    \n    void
        PART1()\n        {\n            var c = 0;\n            input.Select(i =&gt;\n                {\n                    if
        (string.IsNullOrWhiteSpace(i))\n                    {\n                        return
        (c++, 0);\n                    }\n                    return (c, Convert.ToInt32(i));\n                })\n                .GroupBy(i
        =&gt; i.Item1)\n                .Select(g =&gt; g.Select(x =&gt; x.Item2).Sum())\n                .Max()\n                .Dump();\n        }\n    \n        IEnumerable&lt;string&gt;
        input = @\"PUZZLE_INPUT\".SplitOnNewLinesAndTrim().ToList();", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;C# LINQPAD\n\nvoid Main()\n    {\n        var
        c = 0;\n        input.Select(i =&amp;gt; {\n                if (string.IsNullOrWhiteSpace(i))\n                {\n                    return
        (c++, 0);\n                }\n                return (c, Convert.ToInt32(i));\n            })\n            .GroupBy(i
        =&amp;gt; i.Item1)\n            .Select(g =&amp;gt; g.Select(x =&amp;gt; x.Item2).Sum())\n            .OrderByDescending(x
        =&amp;gt; x)\n            .Take(3)\n            .Sum()\n            .Dump();\n\n        PART1();\n    }\n\nvoid
        PART1()\n    {\n        var c = 0;\n        input.Select(i =&amp;gt;\n            {\n                if
        (string.IsNullOrWhiteSpace(i))\n                {\n                    return
        (c++, 0);\n                }\n                return (c, Convert.ToInt32(i));\n            })\n            .GroupBy(i
        =&amp;gt; i.Item1)\n            .Select(g =&amp;gt; g.Select(x =&amp;gt; x.Item2).Sum())\n            .Max()\n            .Dump();\n    }\n\n    IEnumerable&amp;lt;string&amp;gt;
        input = @&amp;quot;PUZZLE_INPUT&amp;quot;.SplitOnNewLinesAndTrim().ToList();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylsfbg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylsfbg", "created":
        1669974684.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylt0c2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "micod",
        "can_mod_post": false, "created_utc": 1669975216.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_13860o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Smalltalk\n\nI tried to use Pharo Smalltalk for AoC last year and it proved
        to be really fun and productive, so I''m doing it again.\n\nSolution for day
        1: https://github.com/micod-liron/advent-of-code/blob/main/AdventOfCode2022/Day01of2022.class.st",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Smalltalk&lt;/p&gt;\n\n&lt;p&gt;I
        tried to use Pharo Smalltalk for AoC last year and it proved to be really
        fun and productive, so I&amp;#39;m doing it again.&lt;/p&gt;\n\n&lt;p&gt;Solution
        for day 1: &lt;a href=\"https://github.com/micod-liron/advent-of-code/blob/main/AdventOfCode2022/Day01of2022.class.st\"&gt;https://github.com/micod-liron/advent-of-code/blob/main/AdventOfCode2022/Day01of2022.class.st&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylt0c2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylt0c2", "created":
        1669975216.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylvnvr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "streetRAT_za",
        "can_mod_post": false, "created_utc": 1669977588.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2vyesv9o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript\n\n[part one](https://github.com/putintin420/AOC/blob/master/dayOne/partOne.js)\n\n[part
        two](https://github.com/putintin420/AOC/blob/master/dayOne/partTwo.js)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Javascript&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/putintin420/AOC/blob/master/dayOne/partOne.js\"&gt;part
        one&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/putintin420/AOC/blob/master/dayOne/partTwo.js\"&gt;part
        two&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylvnvr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylvnvr", "created":
        1669977588.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylvtwj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "careyi4",
        "can_mod_post": false, "created_utc": 1669977736.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_hu46v6a9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Ruby\n\nCode: [https://github.com/careyi3/aoc\\_2022/tree/master/solutions/1](https://github.com/careyi3/aoc_2022/tree/master/solutions/1)\n\nWalkthrough
        Video: [https://youtu.be/mMbvnYTfleQ](https://youtu.be/mMbvnYTfleQ)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Ruby&lt;/p&gt;\n\n&lt;p&gt;Code: &lt;a href=\"https://github.com/careyi3/aoc_2022/tree/master/solutions/1\"&gt;https://github.com/careyi3/aoc_2022/tree/master/solutions/1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Walkthrough
        Video: &lt;a href=\"https://youtu.be/mMbvnYTfleQ\"&gt;https://youtu.be/mMbvnYTfleQ&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylvtwj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylvtwj", "created":
        1669977736.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylvz2d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "apparentorder",
        "can_mod_post": false, "created_utc": 1669977859.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2ybttmyo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Terraform / HCL \ud83d\ude43\n\n[https://github.com/apparentorder/aoc/blob/master/2022/day01.tf](https://github.com/apparentorder/aoc/blob/master/2022/day01.tf)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Terraform / HCL \ud83d\ude43&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/apparentorder/aoc/blob/master/2022/day01.tf\"&gt;https://github.com/apparentorder/aoc/blob/master/2022/day01.tf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylvz2d/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylvz2d", "created":
        1669977859.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iymm1z3",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dionysus-oss",
        "can_mod_post": false, "created_utc": 1669993313.0, "send_replies": true,
        "parent_id": "t1_iylvz2d", "score": 2, "author_fullname": "t2_te65ciwx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Haha, I love it. Any particular reason to use HCL or just to see if you can?
        :)", "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haha, I love it. Any
        particular reason to use HCL or just to see if you can? :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymm1z3/",
        "subreddit_type": "public", "locked": false, "name": "t1_iymm1z3", "created":
        1669993313.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyqecgs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "apparentorder",
        "can_mod_post": false, "created_utc": 1670061218.0, "send_replies": true,
        "parent_id": "t1_iymm1z3", "score": 2, "author_fullname": "t2_2ybttmyo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''m doing the puzzles in Python (they are in the repository too).\n\nTrying
        some puzzles in TF is just a crazy idea to see how far it can go. I use TF
        at $dayjob, so I was curious. And AoC is a nice way to learn limits and intimate
        details of a language.\n\nFor example, attempting Day 2 has taught me that
        \\`range()\\` cannot produce more than 1024 entries.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I&amp;#39;m doing the puzzles in Python (they are
        in the repository too).&lt;/p&gt;\n\n&lt;p&gt;Trying some puzzles in TF is
        just a crazy idea to see how far it can go. I use TF at $dayjob, so I was
        curious. And AoC is a nice way to learn limits and intimate details of a language.&lt;/p&gt;\n\n&lt;p&gt;For
        example, attempting Day 2 has taught me that `range()` cannot produce more
        than 1024 entries.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyqecgs/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyqecgs", "created":
        1670061218.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iysjeaf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dionysus-oss",
        "can_mod_post": false, "created_utc": 1670100489.0, "send_replies": true,
        "parent_id": "t1_iyqecgs", "score": 2, "author_fullname": "t2_te65ciwx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Very cool, yeah definitely creative to use a configuration language to solve
        these problems. I work with Terraform too but I''d be scratching my head trying
        to sovle these with it!\n\nI''ve followed your repo, I look forward to seeing
        any more solutions you manage to create with it :)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Very cool, yeah definitely creative to use a configuration
        language to solve these problems. I work with Terraform too but I&amp;#39;d
        be scratching my head trying to sovle these with it!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve
        followed your repo, I look forward to seeing any more solutions you manage
        to create with it :)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iysjeaf/",
        "subreddit_type": "public", "locked": false, "name": "t1_iysjeaf", "created":
        1670100489.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669980418.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iylyrfw", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jpsoares106",
        "can_mod_post": false, "created_utc": 1669980160.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_59itk2lw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Clojure\n\n## Part 1\n\n    (require ''[clojure.string :as string])\n    (-&gt;&gt;
        input\n      (re-seq #\"(\\d*)\\n\")\n      (map second)\n      (map #(if
        (string/blank? %) nil (Integer/parseInt %)))\n      (partition-by nil?)\n      (remove
        #{''(nil)})\n      (map #(apply + %))\n      (apply max))\n\n## Part 2\n\n    (-&gt;&gt;
        input\n      (re-seq #\"(\\d*)\\n{0,1}\")\n      (map second)\n      (map
        #(if (string/blank? %) nil (Integer/parseInt %)))\n      (partition-by nil?)\n      (remove
        #{''(nil)})\n      (map #(apply + %))\n      (sort)\n      (reverse)\n      (take
        3)\n      (apply +))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Clojure&lt;/h1&gt;\n\n&lt;h2&gt;Part
        1&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;(require &amp;#39;[clojure.string :as
        string])\n(-&amp;gt;&amp;gt; input\n  (re-seq #&amp;quot;(\\d*)\\n&amp;quot;)\n  (map
        second)\n  (map #(if (string/blank? %) nil (Integer/parseInt %)))\n  (partition-by
        nil?)\n  (remove #{&amp;#39;(nil)})\n  (map #(apply + %))\n  (apply max))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;h2&gt;Part
        2&lt;/h2&gt;\n\n&lt;pre&gt;&lt;code&gt;(-&amp;gt;&amp;gt; input\n  (re-seq
        #&amp;quot;(\\d*)\\n{0,1}&amp;quot;)\n  (map second)\n  (map #(if (string/blank?
        %) nil (Integer/parseInt %)))\n  (partition-by nil?)\n  (remove #{&amp;#39;(nil)})\n  (map
        #(apply + %))\n  (sort)\n  (reverse)\n  (take 3)\n  (apply +))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylyrfw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylyrfw", "created":
        1669980160.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669982702.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iym1oim", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mschaap",
        "can_mod_post": false, "created_utc": 1669982349.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_13dwf0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Raku**.  As usual, an easy start.\n\n    my @cal-counts = $inputfile.split(/\\n\\n/)\u00bb.words\u00bb.sum;\n    say
        \"Part 1: \", @cal-counts.max;\n    say \"Part 2: \", @cal-counts.sort(-*).head(3).sum;\n\n[@GitHub](https://github.com/mscha/aoc/blob/master/aoc2022/aoc01)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Raku&lt;/strong&gt;.  As
        usual, an easy start.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;my @cal-counts =
        $inputfile.split(/\\n\\n/)\u00bb.words\u00bb.sum;\nsay &amp;quot;Part 1: &amp;quot;,
        @cal-counts.max;\nsay &amp;quot;Part 2: &amp;quot;, @cal-counts.sort(-*).head(3).sum;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mscha/aoc/blob/master/aoc2022/aoc01\"&gt;@GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iym1oim/",
        "subreddit_type": "public", "locked": false, "name": "t1_iym1oim", "created":
        1669982349.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iymeok0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Perska_",
        "can_mod_post": false, "created_utc": 1669989900.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_h9flk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# https://github.com/Perska/AoC2022/blob/master/AoC2022/Days/Day01.cs\n\nback
        at my nonsense", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#
        &lt;a href=\"https://github.com/Perska/AoC2022/blob/master/AoC2022/Days/Day01.cs\"&gt;https://github.com/Perska/AoC2022/blob/master/AoC2022/Days/Day01.cs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;back
        at my nonsense&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymeok0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iymeok0", "created":
        1669989900.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyml7p5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dionysus-oss",
        "can_mod_post": false, "created_utc": 1669992947.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_te65ciwx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My fairly functional Rust solution, for part 2\n\n\n    elf_calories.sort();\n\n    let
        top_elves: i32 = elf_calories.iter()\n        .rev()\n        .take(3)\n        .sum();\n\nFull
        code here https://github.com/dionysus-oss/advent-of-code-2022/blob/main/day-1/src/main.rs
        and solution explanation https://youtu.be/i5HXzoyTULU", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My fairly functional Rust solution, for part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;elf_calories.sort();\n\nlet
        top_elves: i32 = elf_calories.iter()\n    .rev()\n    .take(3)\n    .sum();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Full
        code here &lt;a href=\"https://github.com/dionysus-oss/advent-of-code-2022/blob/main/day-1/src/main.rs\"&gt;https://github.com/dionysus-oss/advent-of-code-2022/blob/main/day-1/src/main.rs&lt;/a&gt;
        and solution explanation &lt;a href=\"https://youtu.be/i5HXzoyTULU\"&gt;https://youtu.be/i5HXzoyTULU&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyml7p5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyml7p5", "created":
        1669992947.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669993625.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iymm9y8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "One-Morning-6926",
        "can_mod_post": false, "created_utc": 1669993409.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_b5xrduvp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript for part 2\n\n    const {readFileSync, promises: fsPromises} =
        require(''fs'');\n    \n    const answer = readFileSync(''./aocinput1.txt'',
        ''utf-8'')\n        .trimEnd()\n        .split(''\\r\\n'')\n        .map(elf
        =&gt; elf.split(''\\n'').reduce((sum, x) =&gt; sum + Number(x), 0))\n        .sort((a,
        b) =&gt; b - a)\n        .slice(0, 3)\n        .reduce((sum, x) =&gt; sum
        + x, 0)\n    \n    console.log(answer)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Javascript for part 2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        {readFileSync, promises: fsPromises} = require(&amp;#39;fs&amp;#39;);\n\nconst
        answer = readFileSync(&amp;#39;./aocinput1.txt&amp;#39;, &amp;#39;utf-8&amp;#39;)\n    .trimEnd()\n    .split(&amp;#39;\\r\\n&amp;#39;)\n    .map(elf
        =&amp;gt; elf.split(&amp;#39;\\n&amp;#39;).reduce((sum, x) =&amp;gt; sum +
        Number(x), 0))\n    .sort((a, b) =&amp;gt; b - a)\n    .slice(0, 3)\n    .reduce((sum,
        x) =&amp;gt; sum + x, 0)\n\nconsole.log(answer)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymm9y8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iymm9y8", "created":
        1669993409.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iymnxs4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "zurkog",
        "can_mod_post": false, "created_utc": 1669994122.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_3ngly", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Bash:\n\npart 1:\n\n    TOT=0; while read line; do if [ -z $line ]; then
        echo $TOT; TOT=0; else TOT=`expr $TOT + $line`; fi; done &lt; day01_input.txt
        | sort -rn | head -n1\n\npart 2:\n\n    TOT=0; while read line; do if [ -z
        $line ]; then echo $TOT; TOT=0; else TOT=`expr $TOT + $line`; fi; done &lt;
        day01_input.txt | sort -rn | head -n3 | awk ''{TOT+=$0} END{print TOT}''",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bash:&lt;/p&gt;\n\n&lt;p&gt;part
        1:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;TOT=0; while read line; do if [ -z
        $line ]; then echo $TOT; TOT=0; else TOT=`expr $TOT + $line`; fi; done &amp;lt;
        day01_input.txt | sort -rn | head -n1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;part
        2:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;TOT=0; while read line; do if [ -z
        $line ]; then echo $TOT; TOT=0; else TOT=`expr $TOT + $line`; fi; done &amp;lt;
        day01_input.txt | sort -rn | head -n3 | awk &amp;#39;{TOT+=$0} END{print TOT}&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymnxs4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iymnxs4", "created":
        1669994122.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iymrn28",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "nawill81",
        "can_mod_post": false, "created_utc": 1669995613.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_d4kxzmzx", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# using LinqPad. I pulled in MoreLINQ for this one to use the \\`.Split()\\`
        method:\n\n    var input = File.ReadAllLines(\"day1input.txt\")\n                    .Split(x
        =&gt; x == \"\", y =&gt; y.Sum(int.Parse));\n    \n    input.Max().Dump(\"Day
        1 Part 1\");\n    \n    input.OrderDescending().Take(3).Sum().Dump(\"Day 1
        Part 2\");", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#
        using LinqPad. I pulled in MoreLINQ for this one to use the `.Split()` method:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var
        input = File.ReadAllLines(&amp;quot;day1input.txt&amp;quot;)\n                .Split(x
        =&amp;gt; x == &amp;quot;&amp;quot;, y =&amp;gt; y.Sum(int.Parse));\n\ninput.Max().Dump(&amp;quot;Day
        1 Part 1&amp;quot;);\n\ninput.OrderDescending().Take(3).Sum().Dump(&amp;quot;Day
        1 Part 2&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymrn28/", "subreddit_type":
        "public", "locked": false, "name": "t1_iymrn28", "created": 1669995613.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1670054553.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iymtg1y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tampix77",
        "can_mod_post": false, "created_utc": 1669996350.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_gr59z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Simple solution in Clojure\n\n    (ns aoc.d1\n      (:require [clojure.string
        :as str]\n                [aoc.util :as util]))\n    \n    (defn day1\n      []\n      (let
        [calories (-&gt;&gt; (str/split (util/read-input 1) #\"\\n\\n\")\n                          (map
        #(transduce (map parse-long)\n                                           +\n                                           (str/split-lines
        %))))]\n        ;; part1\n        (println (reduce max calories))\n        ;;
        part2\n        (-&gt; (comp (util/xf-sort #(compare %2 %1))\n                  (take
        3))\n            (transduce + calories)\n            println)))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Simple solution in Clojure&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns
        aoc.d1\n  (:require [clojure.string :as str]\n            [aoc.util :as util]))\n\n(defn
        day1\n  []\n  (let [calories (-&amp;gt;&amp;gt; (str/split (util/read-input
        1) #&amp;quot;\\n\\n&amp;quot;)\n                      (map #(transduce (map
        parse-long)\n                                       +\n                                       (str/split-lines
        %))))]\n    ;; part1\n    (println (reduce max calories))\n    ;; part2\n    (-&amp;gt;
        (comp (util/xf-sort #(compare %2 %1))\n              (take 3))\n        (transduce
        + calories)\n        println)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymtg1y/",
        "subreddit_type": "public", "locked": false, "name": "t1_iymtg1y", "created":
        1669996350.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iypnvfj", "id": "iypnvfj", "parent_id":
        "t1_iymtg1y", "depth": 1, "children": ["iypnvfj"]}}, {"kind": "t1", "data":
        {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1671322970.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyn5own", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Deno using Rambda\n\n\n    import * as R from \"https://esm.sh/rambda@7.1.4\"\n\n    let
        input = Deno.readTextFileSync(\"./inputs/main\")\n\n    let inventories =
        R.pipe(\n      R.split(\"\\n\\n\"),\n      R.map(R.split(\"\\n\")),\n      R.map(R.map(Number)),\n    )(input)\n\n    let
        partOne = R.pipe(\n      R.map(R.sum),\n      R.reduce(R.max, -1),\n    )(inventories)\n\n    let
        partTwo = R.pipe(\n      R.map(R.sum),\n      R.sort(R.subtract),\n      R.reverse&lt;number&gt;,\n      R.curry(R.take)(3),\n      R.sum,\n    )(inventories)\n\n    console.log(partOne,
        partTwo)\n\nhttps://github.com/tomasantonelli/advent-of-code-2022/tree/main/src/day-1",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iyn5own",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Deno
        using Rambda&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import * as R from &amp;quot;https://esm.sh/rambda@7.1.4&amp;quot;\n\nlet
        input = Deno.readTextFileSync(&amp;quot;./inputs/main&amp;quot;)\n\nlet inventories
        = R.pipe(\n  R.split(&amp;quot;\\n\\n&amp;quot;),\n  R.map(R.split(&amp;quot;\\n&amp;quot;)),\n  R.map(R.map(Number)),\n)(input)\n\nlet
        partOne = R.pipe(\n  R.map(R.sum),\n  R.reduce(R.max, -1),\n)(inventories)\n\nlet
        partTwo = R.pipe(\n  R.map(R.sum),\n  R.sort(R.subtract),\n  R.reverse&amp;lt;number&amp;gt;,\n  R.curry(R.take)(3),\n  R.sum,\n)(inventories)\n\nconsole.log(partOne,
        partTwo)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/tomasantonelli/advent-of-code-2022/tree/main/src/day-1\"&gt;https://github.com/tomasantonelli/advent-of-code-2022/tree/main/src/day-1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyn5own/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1670001233.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1670001233.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iypnux1", "id": "iypnux1", "parent_id":
        "t1_iyn5own", "depth": 1, "children": ["iypnux1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670110656.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iynanji", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "middayc",
        "can_mod_post": false, "created_utc": 1670003164.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_32tih", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Solution for part 1 and part 2 in Ryelang.\n\n    read %calories.txt \n    |split
        \"\\n\\n\" \n    |map { .load .sum } :sums\n    |max\n    ; part 1 result\n    \n    sums
        .sort! .tail 3 |sum\n    ; part 2 result", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Solution for part 1 and part 2 in Ryelang.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;read
        %calories.txt \n|split &amp;quot;\\n\\n&amp;quot; \n|map { .load .sum } :sums\n|max\n;
        part 1 result\n\nsums .sort! .tail 3 |sum\n; part 2 result\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iynanji/",
        "subreddit_type": "public", "locked": false, "name": "t1_iynanji", "created":
        1670003164.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iypnucc", "id": "iypnucc", "parent_id":
        "t1_iynanji", "depth": 1, "children": ["iypnucc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyndnm7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "myhf",
        "can_mod_post": false, "created_utc": 1670004356.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_45m7k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Data-Oriented Python with Numpy, Numba, or Taichi**\n\n[Notebook on GitHub](https://github.com/jjclark1982/adventofcode/blob/master/2022/01%20Calorie%20Counting/Day01.ipynb)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Data-Oriented
        Python with Numpy, Numba, or Taichi&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/jjclark1982/adventofcode/blob/master/2022/01%20Calorie%20Counting/Day01.ipynb\"&gt;Notebook
        on GitHub&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyndnm7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyndnm7", "created":
        1670004356.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygrb24", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        4, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[removed]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygrb24", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygrb24/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669878620.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669878620.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 4}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygvsrc", "id": "iygvsrc", "parent_id":
        "t1_iygrb24", "depth": 1, "children": ["iygvsrc"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygtn82",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "JerreST",
        "can_mod_post": false, "created_utc": 1669880521.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_iomwgn", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python solution focussing in readability and expandability of the code. \n\nhttps://gitlab.com/JeroenStiers/advent-of-code-2022/-/blob/d1f52588aa89a494945ed9ce7a4ef628f8d3b323/src/day1/main.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python solution focussing
        in readability and expandability of the code. &lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://gitlab.com/JeroenStiers/advent-of-code-2022/-/blob/d1f52588aa89a494945ed9ce7a4ef628f8d3b323/src/day1/main.py\"&gt;https://gitlab.com/JeroenStiers/advent-of-code-2022/-/blob/d1f52588aa89a494945ed9ce7a4ef628f8d3b323/src/day1/main.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtn82/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygtn82", "created":
        1669880521.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyik00f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "UnikMask",
        "can_mod_post": false, "created_utc": 1669916650.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 3, "author_fullname": "t2_qi5qp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Scratch\n\nhttps://scratch.mit.edu/projects/770514110\n\nPicked a language
        that is easy to use. It is not.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Scratch&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://scratch.mit.edu/projects/770514110\"&gt;https://scratch.mit.edu/projects/770514110&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Picked
        a language that is easy to use. It is not.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyik00f/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyik00f", "created": 1669916650.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iyjw4hh", "id": "iyjw4hh", "parent_id": "t1_iyik00f", "depth": 1, "children":
        ["iyjw4hh", "iyjp0lv"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 4, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyjpndh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Marlstar", "can_mod_post": false, "created_utc":
        1669932802.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 4,
        "author_fullname": "t2_55qoz42w", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "I used python.\n\nHere is
        my original solution:\n\n    elves = open(\"inputs/day1.txt\", \"r\").read().split(\"\\n\\n\")\n    totals
        = []\n    for elf in elves: \n        totals.append(sum([int(x) for x in elf.split(\"\\n\")]))\n    print(\"Part
        1:\", max(totals))\n    #Added this line for part 2:\n    print(\"Part 2:\",
        sum(sorted(totals)[-3:]))\n\nAnd here is my horrendous, ugly, inefficient
        yet beautiful 1 line solution:\n\n    print(\"Part 1: {1} \\nPart 2: {0}\".format(sum(list(sorted([sum(map(int,
        l)) for l in [y.split(\"\\n\") for y in open(\"inputs/day1.txt\", \"r\").read().split(\"\\n\\n\")]]))[-3:]),
        list(sorted([sum(map(int, l)) for l in [y.split(\"\\n\") for y in open(\"inputs/day1.txt\",
        \"r\").read().split(\"\\n\\n\")]]))[-1]))", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;I used python.&lt;/p&gt;\n\n&lt;p&gt;Here is my original
        solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;elves = open(&amp;quot;inputs/day1.txt&amp;quot;,
        &amp;quot;r&amp;quot;).read().split(&amp;quot;\\n\\n&amp;quot;)\ntotals =
        []\nfor elf in elves: \n    totals.append(sum([int(x) for x in elf.split(&amp;quot;\\n&amp;quot;)]))\nprint(&amp;quot;Part
        1:&amp;quot;, max(totals))\n#Added this line for part 2:\nprint(&amp;quot;Part
        2:&amp;quot;, sum(sorted(totals)[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And
        here is my horrendous, ugly, inefficient yet beautiful 1 line solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;print(&amp;quot;Part
        1: {1} \\nPart 2: {0}&amp;quot;.format(sum(list(sorted([sum(map(int, l)) for
        l in [y.split(&amp;quot;\\n&amp;quot;) for y in open(&amp;quot;inputs/day1.txt&amp;quot;,
        &amp;quot;r&amp;quot;).read().split(&amp;quot;\\n\\n&amp;quot;)]]))[-3:]),
        list(sorted([sum(map(int, l)) for l in [y.split(&amp;quot;\\n&amp;quot;) for
        y in open(&amp;quot;inputs/day1.txt&amp;quot;, &amp;quot;r&amp;quot;).read().split(&amp;quot;\\n\\n&amp;quot;)]]))[-1]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjpndh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjpndh", "created":
        1669932802.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669872547.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygiar9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TheJoshster",
        "can_mod_post": false, "created_utc": 1669872310.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_4kvnh4r", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java, 30/205.\n\npublic String part1() {\r  \n\tint best = 0;\r  \n\tfor(String
        s : input.split(\"\\\\r\\\\n\\\\r\\\\n\")) {\r  \n\t\t//total each section,
        keeping track of maximum\r  \n\t\tint total = 0;\r  \n\t\tfor(String t : s.split(\"\\\\r\\\\n\"))\r  \n\t\t\ttotal
        += Integer.parseInt(t);\r  \n\t\tbest = Math.max(best,total);\r  \n\t}\r  \n\treturn
        Integer.toString(best);\r  \n}\r  \n\r  \n\rpublic String part2() {\r  \n\t//keep
        track of all totals\r  \n\tArrayList&lt;Integer&gt; cals = new ArrayList&lt;Integer&gt;();\r  \n\tfor(String
        s : input.split(\"\\\\r\\\\n\\\\r\\\\n\")) {\r  \n\t\tint total = 0;\r  \n\t\tfor(String
        t : s.split(\"\\\\r\\\\n\"))\r  \n\t\t\ttotal += Integer.parseInt(t);\r  \n\t\tcals.add(total);\r  \n\t}\r  \n\t//sort
        least to greatest, then reverse\r  \n\tCollections.sort(cals);\r  \n\tCollections.reverse(cals);\r  \n\t//get
        total of best 3\r  \n\treturn Integer.toString((cals.get(0) + cals.get(1)
        + cals.get(2)));\r  \n}\n\nlost the most valuable 30 seconds of my life forgetting
        that arrays sort increasing rather than decreasing. proud to finally be on
        the leaderboard though, and I hope I can keep it up! 2021 was my first year,
        and I had no idea what I was doing. After doing it and going back to do all
        previous years, I definitely feel skilled enough to push for leaderboard positions
        though!\n\ni wonder if any of the other regularly high-placing people use
        java? from what I''ve seen, it''s almost all python with a smattering of C
        and other languages, but even java solutions period are hard to find.\n\n\\-------------------------------------------------\n\n352
        solutions and counting to AOC 2015-2022 in Java over on [github](https://github.com/joshuaruegge/adventofcode)
        , feel free to check it out, utilize it, and reach out with questions or bugs!\n\n(I''m
        currently working through refactoring and revisions on all of my pre-2022
        code, but once I have that done in the next few days, I''ll start pushing
        my 2022 solutions day-of for anyone needing to take a peek)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Java, 30/205.&lt;/p&gt;\n\n&lt;p&gt;public
        String part1() {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;int best = 0;\n\nfor(String
        s : input.split(&amp;quot;\\\\r\\\\n\\\\r\\\\n&amp;quot;)) {\n\n    //total
        each section, keeping track of maximum\n\n    int total = 0;\n\n    for(String
        t : s.split(&amp;quot;\\\\r\\\\n&amp;quot;))\n\n        total += Integer.parseInt(t);\n\n    best
        = Math.max(best,total);\n\n}\n\nreturn Integer.toString(best);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;public
        String part2() {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//keep track of all totals\n\nArrayList&amp;lt;Integer&amp;gt;
        cals = new ArrayList&amp;lt;Integer&amp;gt;();\n\nfor(String s : input.split(&amp;quot;\\\\r\\\\n\\\\r\\\\n&amp;quot;))
        {\n\n    int total = 0;\n\n    for(String t : s.split(&amp;quot;\\\\r\\\\n&amp;quot;))\n\n        total
        += Integer.parseInt(t);\n\n    cals.add(total);\n\n}\n\n//sort least to greatest,
        then reverse\n\nCollections.sort(cals);\n\nCollections.reverse(cals);\n\n//get
        total of best 3\n\nreturn Integer.toString((cals.get(0) + cals.get(1) + cals.get(2)));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;lost
        the most valuable 30 seconds of my life forgetting that arrays sort increasing
        rather than decreasing. proud to finally be on the leaderboard though, and
        I hope I can keep it up! 2021 was my first year, and I had no idea what I
        was doing. After doing it and going back to do all previous years, I definitely
        feel skilled enough to push for leaderboard positions though!&lt;/p&gt;\n\n&lt;p&gt;i
        wonder if any of the other regularly high-placing people use java? from what
        I&amp;#39;ve seen, it&amp;#39;s almost all python with a smattering of C and
        other languages, but even java solutions period are hard to find.&lt;/p&gt;\n\n&lt;p&gt;-------------------------------------------------&lt;/p&gt;\n\n&lt;p&gt;352
        solutions and counting to AOC 2015-2022 in Java over on &lt;a href=\"https://github.com/joshuaruegge/adventofcode\"&gt;github&lt;/a&gt;
        , feel free to check it out, utilize it, and reach out with questions or bugs!&lt;/p&gt;\n\n&lt;p&gt;(I&amp;#39;m
        currently working through refactoring and revisions on all of my pre-2022
        code, but once I have that done in the next few days, I&amp;#39;ll start pushing
        my 2022 solutions day-of for anyone needing to take a peek)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygiar9/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygiar9", "created":
        1669872310.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygyfkl", "id": "iygyfkl", "parent_id":
        "t1_iygiar9", "depth": 1, "children": ["iygyfkl", "iygkjbz"]}}, {"kind": "t1",
        "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670151444.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyh2xk0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daysleeperx",
        "can_mod_post": false, "created_utc": 1669888845.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_2weyptv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Idris2\n\n[Github](https://github.com/daysleeperx/Advent-Of-Code-2022/blob/main/day01/CalorieCounting.idr)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Idris2&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/daysleeperx/Advent-Of-Code-2022/blob/main/day01/CalorieCounting.idr\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh2xk0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh2xk0", "created":
        1669888845.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyugl9b", "id": "iyugl9b", "parent_id":
        "t1_iyh2xk0", "depth": 1, "children": ["iyugl9b", "iyjgwfw"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670098947.0, "mod_reason_by": null,
        "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhbekg", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyhbekg", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhbekg/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669895924.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669895924.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 4, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhcnmz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "MyTinyHappyPlace",
        "can_mod_post": false, "created_utc": 1669896811.0, "send_replies": true,
        "parent_id": "t1_iyhbekg", "score": 4, "author_fullname": "t2_4qv22pcy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Good job! It surely looks like a lot of code, so here are some suggestions:\n\n-
        If you''re coding under linux, consider using getline with std::cin, and run
        your program with \"yourprogram &lt; input\". This helps, especially in later
        challenges, where test input data is given or you might want to do pre-processing
        the input ith other tools.\n\n- (nitpick) Consider passing high load parameters
        such as your list of elves as (const) references. Like:\n\n    void part2(const
        list&lt;Elf&gt; &amp;elves)\n\n    In your current code, this is not easily
        done, since you modify the list. But that''s another thing. Consider sorting
        right away, the initial order is irrelevant. And pop()ing the most caloric
        elves out of the list is a bit too destructive for my taste. Maybe use array
        indices (therefore, using something like a vector) instead and save the for-loop
        altogether.\n\n\nNon-C++-things:\n\n- Do you really need a structure of each
        elf? All you need is the sum of calories and you can distinct between elves
        by their position in your list. And you would save code about sorting.\n\n\nMy
        code is somewhere down here, have a look if you want :)", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Good job! It surely looks like a lot of
        code, so here are some suggestions:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;If
        you&amp;#39;re coding under linux, consider using getline with std::cin, and
        run your program with &amp;quot;yourprogram &amp;lt; input&amp;quot;. This
        helps, especially in later challenges, where test input data is given or you
        might want to do pre-processing the input ith other tools.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;(nitpick)
        Consider passing high load parameters such as your list of elves as (const)
        references. Like:&lt;/p&gt;\n\n&lt;p&gt;void part2(const list&amp;lt;Elf&amp;gt;
        &amp;amp;elves)&lt;/p&gt;\n\n&lt;p&gt;In your current code, this is not easily
        done, since you modify the list. But that&amp;#39;s another thing. Consider
        sorting right away, the initial order is irrelevant. And pop()ing the most
        caloric elves out of the list is a bit too destructive for my taste. Maybe
        use array indices (therefore, using something like a vector) instead and save
        the for-loop altogether.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Non-C++-things:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Do
        you really need a structure of each elf? All you need is the sum of calories
        and you can distinct between elves by their position in your list. And you
        would save code about sorting.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;My code
        is somewhere down here, have a look if you want :)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhcnmz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhcnmz", "created":
        1669896811.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhe4tu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iyhcnmz", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyhe4tu", "collapsed": true, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhe4tu/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669897803.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669897803.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhfe3o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MyTinyHappyPlace",
        "can_mod_post": false, "created_utc": 1669898609.0, "send_replies": true,
        "parent_id": "t1_iyhe4tu", "score": 3, "author_fullname": "t2_4qv22pcy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "That\u2019s, the neat part: with a const reference, you cannot accidentally
        modify the list. It\u2019s not needed for this challenge, but it will speed
        up things in later ones.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That\u2019s,
        the neat part: with a const reference, you cannot accidentally modify the
        list. It\u2019s not needed for this challenge, but it will speed up things
        in later ones.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhfe3o/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhfe3o", "created":
        1669898609.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyho4hn", "id": "iyho4hn", "parent_id":
        "t1_iyhfe3o", "depth": 4, "children": ["iyho4hn"]}}, {"kind": "more", "data":
        {"count": 2, "name": "t1_iyhyoqn", "id": "iyhyoqn", "parent_id": "t1_iyhbekg",
        "depth": 1, "children": ["iyhyoqn"]}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1670246297.0, "mod_reason_by": null, "banned_by": null, "ups":
        2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhqtl8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "GrazianoS86",
        "can_mod_post": false, "created_utc": 1669904721.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_hn819it", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My [solution](https://github.com/Akallabet/aoc-clojure/blob/main/day-1/day-1.clj)
        in clojure (with babashka)\n\n    (ns aoc22.day01\n      (:require #?(:clj
        [clojure.java.io :as io]\n                  :cljs [nbb.core :refer [slurp
        await]])\n                [clojure.string :as str]\n                #?(:cljs
        [promesa.core :as p])))\n\n    (defn most-calories\n      [calories]\n      (-&gt;&gt;
        (str/split calories #\"\\n\\n\")\n          (map #(str/split % #\"\\n\"))\n          (map
        #(map parse-long %))\n          (map #(reduce + %))\n          (apply max)))\n\n    (defn
        top-three-most-calories\n      [calories]\n      (-&gt;&gt; (str/split calories
        #\"\\n\\n\")\n          (map #(str/split % #\"\\n\"))\n          (map #(map
        parse-long %))\n          (map #(reduce + %))\n          (sort &gt;)\n          (take
        3)\n          (apply +)))\n\n    (def input \"1000\\n2000\\n3000\\n\\n4000\\n\\n5000\\n6000\\n\\n7000\\n8000\\n9000\\n\\n10000\")\n\n    (comment\n      (most-calories
        input)\n      (most-calories (slurp (io/resource \"aoc22/day01.txt\")))\n      (top-three-most-calories
        input)\n      (top-three-most-calories (slurp (io/resource \"aoc22/day01.txt\"))))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My &lt;a href=\"https://github.com/Akallabet/aoc-clojure/blob/main/day-1/day-1.clj\"&gt;solution&lt;/a&gt;
        in clojure (with babashka)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;(ns aoc22.day01\n  (:require
        #?(:clj [clojure.java.io :as io]\n              :cljs [nbb.core :refer [slurp
        await]])\n            [clojure.string :as str]\n            #?(:cljs [promesa.core
        :as p])))\n\n(defn most-calories\n  [calories]\n  (-&amp;gt;&amp;gt; (str/split
        calories #&amp;quot;\\n\\n&amp;quot;)\n      (map #(str/split % #&amp;quot;\\n&amp;quot;))\n      (map
        #(map parse-long %))\n      (map #(reduce + %))\n      (apply max)))\n\n(defn
        top-three-most-calories\n  [calories]\n  (-&amp;gt;&amp;gt; (str/split calories
        #&amp;quot;\\n\\n&amp;quot;)\n      (map #(str/split % #&amp;quot;\\n&amp;quot;))\n      (map
        #(map parse-long %))\n      (map #(reduce + %))\n      (sort &amp;gt;)\n      (take
        3)\n      (apply +)))\n\n(def input &amp;quot;1000\\n2000\\n3000\\n\\n4000\\n\\n5000\\n6000\\n\\n7000\\n8000\\n9000\\n\\n10000&amp;quot;)\n\n(comment\n  (most-calories
        input)\n  (most-calories (slurp (io/resource &amp;quot;aoc22/day01.txt&amp;quot;)))\n  (top-three-most-calories
        input)\n  (top-three-most-calories (slurp (io/resource &amp;quot;aoc22/day01.txt&amp;quot;))))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhqtl8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhqtl8", "created":
        1669904721.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhr74h",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oantolin",
        "can_mod_post": false, "created_utc": 1669904896.0, "send_replies": true,
        "parent_id": "t1_iyhqtl8", "score": 3, "author_fullname": "t2_3fxjo", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Indented for readability:\n\n    #!/usr/bin/env bb\n\n    (require ''[clojure.string
        :as str])\n\n    (defn most-calories\n      [calories]\n      (-&gt;&gt; (str/split
        calories #\"\\n\\n\")\n           (map #(str/split % #\"\\n\"))\n           (map
        #(map parse-long %))\n           (map #(reduce + %))\n           (apply max)))\n\n    (defn
        top-three-most-calories\n      [calories]\n      (-&gt;&gt; (str/split calories
        #\"\\n\\n\")\n           (map #(str/split % #\"\\n\"))\n           (map #(map
        parse-long %))\n           (map #(reduce + %))\n           (sort &gt;)\n           (take
        3)\n           (apply +)))\n\n    (def input \"1000\\n2000\\n3000\\n\\n4000\\n\\n5000\\n6000\\n\\n7000\\n8000\\n9000\\n\\n10000\")\n\n    (comment\n      (most-calories
        input)\n      (most-calories (slurp \"./input.txt\"))\n      (top-three-most-calories
        input)\n      (top-three-most-calories (slurp \"./input.txt\")))", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Indented for readability:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;#!/usr/bin/env
        bb\n\n(require &amp;#39;[clojure.string :as str])\n\n(defn most-calories\n  [calories]\n  (-&amp;gt;&amp;gt;
        (str/split calories #&amp;quot;\\n\\n&amp;quot;)\n       (map #(str/split
        % #&amp;quot;\\n&amp;quot;))\n       (map #(map parse-long %))\n       (map
        #(reduce + %))\n       (apply max)))\n\n(defn top-three-most-calories\n  [calories]\n  (-&amp;gt;&amp;gt;
        (str/split calories #&amp;quot;\\n\\n&amp;quot;)\n       (map #(str/split
        % #&amp;quot;\\n&amp;quot;))\n       (map #(map parse-long %))\n       (map
        #(reduce + %))\n       (sort &amp;gt;)\n       (take 3)\n       (apply +)))\n\n(def
        input &amp;quot;1000\\n2000\\n3000\\n\\n4000\\n\\n5000\\n6000\\n\\n7000\\n8000\\n9000\\n\\n10000&amp;quot;)\n\n(comment\n  (most-calories
        input)\n  (most-calories (slurp &amp;quot;./input.txt&amp;quot;))\n  (top-three-most-calories
        input)\n  (top-three-most-calories (slurp &amp;quot;./input.txt&amp;quot;)))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhr74h/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhr74h", "created":
        1669904896.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 8, "name": "t1_iyhrjx4", "id": "iyhrjx4", "parent_id":
        "t1_iyhr74h", "depth": 2, "children": ["iyhrjx4"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670275927.0, "mod_reason_by": null,
        "banned_by": null, "ups": 2, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyuen6e", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670133655.0, "send_replies": true,
        "parent_id": "t1_iyhqtl8", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.~~\n\nEdit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: thanks
        for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuen6e/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyuen6e", "created":
        1670133655.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_iyzxvks", "id": "iyzxvks",
        "parent_id": "t1_iyuen6e", "depth": 2, "children": ["iyzxvks"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyicmdx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Adder12",
        "can_mod_post": false, "created_utc": 1669913803.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_ennrs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java day 1: [https://github.com/adder12/AdventofCode2022/blob/main/AdventofCode1/src/main/java/org/example/Main.java](https://github.com/adder12/AdventofCode2022/blob/main/AdventofCode1/src/main/java/org/example/Main.java)  \n\n\nDefinitely
        not as elegant as some other solutions but it works", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Java day 1: &lt;a href=\"https://github.com/adder12/AdventofCode2022/blob/main/AdventofCode1/src/main/java/org/example/Main.java\"&gt;https://github.com/adder12/AdventofCode2022/blob/main/AdventofCode1/src/main/java/org/example/Main.java&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Definitely
        not as elegant as some other solutions but it works&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyicmdx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyicmdx", "created":
        1669913803.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiuahb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "reinermartin",
        "can_mod_post": false, "created_utc": 1669920638.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_6dvq0nvv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "In Julia:\n\n    function day01(fname)\n        A = [0]\n        for line
        in eachline(fname)\n            if length(strip(line)) == 0\n                push!(A,
        0)\n            else\n                A[end] += parse(Int, line)\n            end\n        end\n        sort!(A)\n        A[end],
        sum(A[end-2:end])\n    end\n    \n    @show day01(\"input01.txt\")", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;In Julia:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function
        day01(fname)\n    A = [0]\n    for line in eachline(fname)\n        if length(strip(line))
        == 0\n            push!(A, 0)\n        else\n            A[end] += parse(Int,
        line)\n        end\n    end\n    sort!(A)\n    A[end], sum(A[end-2:end])\nend\n\n@show
        day01(&amp;quot;input01.txt&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiuahb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiuahb", "created":
        1669920638.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk1xr7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "French__Canadian",
        "can_mod_post": false, "created_utc": 1669938103.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_kst0k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Compile time Nim solution. It does everything at compile time, even write
        the answer to an output file. If you run the binary, all it does is insult
        you.\n\n    import strutils, sequtils, math, std/algorithm, strformat\n\n    const
        rawInput: string = staticRead(\"i/01\")\n\n    proc parseElf(elf: string):
        int =\n       sum elf.split(\"\\n\").map(parseInt)\n\n    const elves: seq[int]
        = rawInput.split(\"\\n\\n\").map(parseElf)\n\n    const part1: int = max elves\n    const
        part2: int = sum elves.sorted(SortOrder.Descending)[0..2]\n\n    static:\n        writeFile(\"o/01_compileTimeNim\",
        &amp;\"{part1} {part2}\")\n\n    echo \"Why are you running this? It already
        wrote the output at compile time, you dummy!\"", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Compile time Nim solution. It does everything at
        compile time, even write the answer to an output file. If you run the binary,
        all it does is insult you.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import strutils,
        sequtils, math, std/algorithm, strformat\n\nconst rawInput: string = staticRead(&amp;quot;i/01&amp;quot;)\n\nproc
        parseElf(elf: string): int =\n   sum elf.split(&amp;quot;\\n&amp;quot;).map(parseInt)\n\nconst
        elves: seq[int] = rawInput.split(&amp;quot;\\n\\n&amp;quot;).map(parseElf)\n\nconst
        part1: int = max elves\nconst part2: int = sum elves.sorted(SortOrder.Descending)[0..2]\n\nstatic:\n    writeFile(&amp;quot;o/01_compileTimeNim&amp;quot;,
        &amp;amp;&amp;quot;{part1} {part2}&amp;quot;)\n\necho &amp;quot;Why are you
        running this? It already wrote the output at compile time, you dummy!&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk1xr7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk1xr7", "created":
        1669938103.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyl15he",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mendelmunkis",
        "can_mod_post": false, "created_utc": 1669954730.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_96rj7khp", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "APL\n\n    sort\u2190{(\u2282\u2352\u2375)\u2337\u2375}\n    \u2283sort +/\u2191input
        \u235d part 1\n    +/3\u2374sort +/\u2191input \u235d part 2\n\n\n(Assumes
        input has had parens added between elves)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;APL&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;sort\u2190{(\u2282\u2352\u2375)\u2337\u2375}\n\u2283sort
        +/\u2191input \u235d part 1\n+/3\u2374sort +/\u2191input \u235d part 2\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(Assumes
        input has had parens added between elves)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyl15he/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyl15he", "created": 1669954730.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669922610.0, "mod_reason_by": null, "banned_by": null, "ups": 2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhbnku",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TrisMcC",
        "can_mod_post": false, "created_utc": 1669896103.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_h630", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Both parts in [Nix](https://nixos.org/manual/nix/stable/language/index.html).\n\n    let\n      lib
        = import &lt;nixpkgs/lib&gt;;\n    \n      inherit (builtins) readFile split
        filter foldl'' lessThan sort;\n      inherit (lib) toInt drop;\n    \n      getLines
        = file:\n        let\n          input = readFile file;\n          all = split
        \"\\n\" input;\n        in filter (x: x != [ ]) all;\n    \n      lines =
        getLines ./01.txt;\n    \n      partOne = { }:\n        let\n          computeCalories
        = acc: calories:\n            if (calories == \"\") then {\n              max
        = if acc.current &gt; acc.max then acc.current else acc.max;\n              current
        = 0;\n            } else\n              acc // { current = acc.current + toInt
        calories; };\n    \n        in (foldl'' computeCalories {\n          max =
        0;\n          current = 0;\n        } lines).max;\n    \n      partTwo = {
        }:\n        let\n          getTopThree = list: test: drop 1 (sort lessThan
        (list ++ [ test ]));\n    \n          computeCalories = acc: calories:\n            if
        (calories == \"\") then {\n              max = getTopThree acc.max acc.current;\n              current
        = 0;\n            } else\n              acc // { current = acc.current + toInt
        calories; };\n    \n          max = (foldl'' computeCalories {\n            max
        = [ 0 0 0 ];\n            current = 0;\n          } lines).max;\n    \n        in
        foldl'' (x: y: x + y) 0 max;\n    \n    in \"Part 1: ${toString (partOne {
        })}, Part 2: ${toString (partTwo { })}\"\n\nEDIT: Didn''t think I''d get downvoted
        negative for posting a solution. Sorry!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Both parts in &lt;a href=\"https://nixos.org/manual/nix/stable/language/index.html\"&gt;Nix&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let\n  lib
        = import &amp;lt;nixpkgs/lib&amp;gt;;\n\n  inherit (builtins) readFile split
        filter foldl&amp;#39; lessThan sort;\n  inherit (lib) toInt drop;\n\n  getLines
        = file:\n    let\n      input = readFile file;\n      all = split &amp;quot;\\n&amp;quot;
        input;\n    in filter (x: x != [ ]) all;\n\n  lines = getLines ./01.txt;\n\n  partOne
        = { }:\n    let\n      computeCalories = acc: calories:\n        if (calories
        == &amp;quot;&amp;quot;) then {\n          max = if acc.current &amp;gt; acc.max
        then acc.current else acc.max;\n          current = 0;\n        } else\n          acc
        // { current = acc.current + toInt calories; };\n\n    in (foldl&amp;#39;
        computeCalories {\n      max = 0;\n      current = 0;\n    } lines).max;\n\n  partTwo
        = { }:\n    let\n      getTopThree = list: test: drop 1 (sort lessThan (list
        ++ [ test ]));\n\n      computeCalories = acc: calories:\n        if (calories
        == &amp;quot;&amp;quot;) then {\n          max = getTopThree acc.max acc.current;\n          current
        = 0;\n        } else\n          acc // { current = acc.current + toInt calories;
        };\n\n      max = (foldl&amp;#39; computeCalories {\n        max = [ 0 0 0
        ];\n        current = 0;\n      } lines).max;\n\n    in foldl&amp;#39; (x:
        y: x + y) 0 max;\n\nin &amp;quot;Part 1: ${toString (partOne { })}, Part 2:
        ${toString (partTwo { })}&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT:
        Didn&amp;#39;t think I&amp;#39;d get downvoted negative for posting a solution.
        Sorry!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhbnku/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhbnku", "created":
        1669896103.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyug1mo", "id": "iyug1mo", "parent_id":
        "t1_iyhbnku", "depth": 1, "children": ["iyug1mo", "j0es6a5", "iyj9yed"]}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1669873155.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyghyk7", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Hephlathio",
        "can_mod_post": false, "created_utc": 1669872103.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_b7e7t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# F# 708/464 \n\nI had written input and parsing ahead of time, only had
        to tweak it by adding the pElf parser for handling the groups. Excited for
        jungle adventures!\n\n[paste](https://topaz.github.io/paste/#XQAAAQCAAgAAAAAAAAA2m8ixrhLu7WoIz+VUH+SpssxiIA+OZ62ZvJfUjf+aB36oZhfY3tQFCUJHNco0hO/YQtIagUDRUqD6zDHefvbrnV0teBMtxgxCEBKiLp8FHobOs+57tuuBCGxecySWdkukSHMZnVKOEzbI1xS1mtTxFmN2jrv1i99dw+OF2v0Od7/bd2ierfvWPTLbJiQXekJ8z7ZefMrmPxo/POiG6dCzp6P/mNafM6vRFIDhRJcSkUgx1J4RceUiNnrQMeIistyvlMWspdjp8JoHpYtSEKwpiaOvb3YtrMpN/RtgHyVlKTkNy6lT/3yH0bNHuzWAHn5A7nqYFpHcX15XrYziAfi8WtJxfw1WeGPiTgxCixtILiR8xIXP9/QZVOiHEj9ZeyrWyOBf/6cKOoG7CAID/29byAA=)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;F# 708/464&lt;/h1&gt;\n\n&lt;p&gt;I
        had written input and parsing ahead of time, only had to tweak it by adding
        the pElf parser for handling the groups. Excited for jungle adventures!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCAAgAAAAAAAAA2m8ixrhLu7WoIz+VUH+SpssxiIA+OZ62ZvJfUjf+aB36oZhfY3tQFCUJHNco0hO/YQtIagUDRUqD6zDHefvbrnV0teBMtxgxCEBKiLp8FHobOs+57tuuBCGxecySWdkukSHMZnVKOEzbI1xS1mtTxFmN2jrv1i99dw+OF2v0Od7/bd2ierfvWPTLbJiQXekJ8z7ZefMrmPxo/POiG6dCzp6P/mNafM6vRFIDhRJcSkUgx1J4RceUiNnrQMeIistyvlMWspdjp8JoHpYtSEKwpiaOvb3YtrMpN/RtgHyVlKTkNy6lT/3yH0bNHuzWAHn5A7nqYFpHcX15XrYziAfi8WtJxfw1WeGPiTgxCixtILiR8xIXP9/QZVOiHEj9ZeyrWyOBf/6cKOoG7CAID/29byAA=\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghyk7/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghyk7", "created":
        1669872103.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyitfmg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "BillySquid",
        "can_mod_post": false, "created_utc": 1669920309.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_8b6zf", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust solution via high-order functions\n\n    \n    use std::fs;\nuse regex::Regex;\n\nfn
        main() {\n\n    let contents = fs::read_to_string(\"input/01-p1\").expect(\"problem
        with the file\");\n\n    let re = Regex::new(r\"\\n{2,}\").unwrap();\n    let
        loads= re.split(&amp;contents).collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n   \n    \n    //
        Part 1: max calories holder\n\n    let max_load = loads.iter().map( |l| \n        l.split(\"\\n\").map(|s|
        \n                           s.parse::&lt;i32&gt;().unwrap()\n        ).sum::&lt;i32&gt;()).max().unwrap();\n\n        println!(\"Max
        Calories carried {}\", max_load);\n\n\n    // Part 2: three max calories holders
        (Sum of)\n\n    let mut loads = loads.iter().map( |l| \n        l.split(\"\\n\").map(|s|
        \n                           s.parse::&lt;i32&gt;().unwrap()\n        ).sum::&lt;i32&gt;()).collect::&lt;Vec&lt;i32&gt;&gt;();\n\n    loads.sort();\n    loads.reverse();\n    let
        top_three  = loads[0..3].iter().sum::&lt;i32&gt;();\n\n    println!(\"Calories
        carried by top 3 elfs {}\", top_three);\n\n}\n\n[https://github.com/billyto/AoC-2022/blob/main/aoc22/src/main.rs](https://github.com/billyto/AoC-2022/blob/main/aoc22/src/main.rs)\n\nps.
        that little piece of regex took me an hour, duh.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust solution via high-order functions&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::fs;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;use regex::Regex;&lt;/p&gt;\n\n&lt;p&gt;fn
        main() {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let contents = fs::read_to_string(&amp;quot;input/01-p1&amp;quot;).expect(&amp;quot;problem
        with the file&amp;quot;);\n\nlet re = Regex::new(r&amp;quot;\\n{2,}&amp;quot;).unwrap();\nlet
        loads= re.split(&amp;amp;contents).collect::&amp;lt;Vec&amp;lt;&amp;amp;str&amp;gt;&amp;gt;();\n\n\n//
        Part 1: max calories holder\n\nlet max_load = loads.iter().map( |l| \n    l.split(&amp;quot;\\n&amp;quot;).map(|s|
        \n                       s.parse::&amp;lt;i32&amp;gt;().unwrap()\n    ).sum::&amp;lt;i32&amp;gt;()).max().unwrap();\n\n    println!(&amp;quot;Max
        Calories carried {}&amp;quot;, max_load);\n\n\n// Part 2: three max calories
        holders (Sum of)\n\nlet mut loads = loads.iter().map( |l| \n    l.split(&amp;quot;\\n&amp;quot;).map(|s|
        \n                       s.parse::&amp;lt;i32&amp;gt;().unwrap()\n    ).sum::&amp;lt;i32&amp;gt;()).collect::&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;();\n\nloads.sort();\nloads.reverse();\nlet
        top_three  = loads[0..3].iter().sum::&amp;lt;i32&amp;gt;();\n\nprintln!(&amp;quot;Calories
        carried by top 3 elfs {}&amp;quot;, top_three);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/billyto/AoC-2022/blob/main/aoc22/src/main.rs\"&gt;https://github.com/billyto/AoC-2022/blob/main/aoc22/src/main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;ps.
        that little piece of regex took me an hour, duh.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyitfmg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyitfmg", "created":
        1669920309.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iyq5alm", "id": "iyq5alm", "parent_id":
        "t1_iyitfmg", "depth": 1, "children": ["iyq5alm"]}}, {"kind": "more", "data":
        {"count": 316, "name": "t1_iygot51", "id": "iygot51", "parent_id": "t3_z9ezjb",
        "depth": 0, "children": ["iygot51", "iyh9v1e", "iygh4ev", "iyit8hi", "iyhwp80",
        "iyjca4f", "iygi5xr", "iygi1lg", "iyghs29", "iygire9", "iyghgsh", "iygh1vn",
        "iyghlbt", "iygh7jy", "iyggqcs", "iygsprw", "iyilp2v", "iyifpzv", "iyggvx5",
        "iyggvrp", "iygifp2", "iyhc157", "iygiuff", "iygiahl", "iygjmjd", "iygmznb",
        "iygojh4", "iygvchv", "iygk5ym", "iygl9gz", "iygk7ty", "iygjpdu", "iygits6",
        "iygsonm", "iygiuk8", "iygtowk", "iygikbe", "iyghrha", "iyh40eu", "iygibn4",
        "iygjuhs", "iygikhh", "iyippe0", "iyjjk6w", "iygxrp3", "iyglca6", "iygi2zb",
        "iyghijn", "iygifh5", "iyghf4q", "iyghnsf", "iyilrwd", "iygj0fa", "iyjo6pc",
        "iygizh5", "iygh5ur", "iyghk2v", "iygnnt2", "iyjo9dr", "iyhej8p", "iygx5l6",
        "iygu4na", "iygj0gb", "iygnqq5", "iygj91q", "iygu7yp", "iygnsdd", "iygnjv0",
        "iyjpq76", "iygvdkc", "iyjjbuu", "iyhnrc6", "iyjjlwa", "iyiijcf", "iyhaofh",
        "iyh4jvk", "iyglpww", "iygqxbs", "iyk3370", "iygllw5", "iygjzud", "iygjyh0",
        "iygk841", "iyh83ef", "iyiuj74", "iyjsuh9", "iygo7is", "iyik796", "iyhhlqt",
        "iyh9s69", "iygipfe", "iyhd6hi", "iygty01", "iyj8sit", "iyhu7hi", "iygk71s",
        "iygidqj", "iygnqw6", "iygkf3o", "iyh01nr", "iyglvip", "iygl6mf", "iygihp4",
        "iyh55x1", "iygjsuh", "iyj5tvu", "iyigaiq", "iygnie1", "iyiuevh", "iyh53if",
        "iygiboc", "iygk2q0", "iyh9uw5", "iyh3qkb", "iygk3a4", "iygnrsm", "iyhg2qj",
        "iyglepl", "iyjdyny", "iyl7t9c", "iygzzzp", "iygi5po", "iyjo0p4", "iyjon13",
        "iyhlomk", "iygkieb", "iygretv", "iyh87eq", "iyhnl8j", "iygogzm", "iygilxa",
        "iyj6eg1", "iyhjfge", "iyjfvg4", "iylmebf", "iyk42v2", "iygyccj", "iylahzo",
        "iylsah5", "iygqbgt", "iygwcfb", "iygld5k", "iyjs7bn", "iyk2b5l", "iyh94pi",
        "iylenyb", "iyjoxe5", "iyifjlg", "iyna5us", "iyjt0id", "iylrvts", "iyjphct",
        "iyjmvn5", "iyj6m98", "iyjp7up", "iyjq2ke", "iyh5f37", "iyj05dc", "iyjr2fv",
        "iyhclqb", "iyndflq", "iygonqk", "iyll509", "iyh0jn5", "iyjtywa", "iyh85kz",
        "iygq9ex", "iygpb55", "iyilg4g", "iyj8hzx", "iyl783x", "iyjcn65", "iyju5na",
        "iyhfzli", "iyhr51u", "iyiwnvn", "iyjrlwy", "iyjosmn", "iylruwg", "iyhdc65",
        "iyi6v6k", "iyh7ecp", "iykkyaf", "iyjj4z7", "iyijotf", "iykca4b", "iykjata",
        "iyjqo0n", "iyjrdd3", "iyjrsrt", "iyifqq9", "iygtz22", "iyiew8r", "iylrzr2",
        "iyh4msz", "iyhp9bc", "iyijtn7", "iyls2ng", "iygtqba", "iyjqxua", "iyhcc5a",
        "iyk30jj", "iyjqs6b", "iyj0l1g", "iyjes91", "iyk38p6", "iylldan", "iykl2k8",
        "iyk0fpn", "iylrl58", "iyhfatq", "iygrr0v", "iyh2jzk", "iygnov1", "iyi4yrd",
        "iykopsr", "iylr8nj", "iyi1l73", "iyid3mu", "iyisc1l", "iyh7ico", "iyh9vm9",
        "iymoetz", "iyixtuz", "iyizzou", "iykh5as", "iyidtjc", "iykf2rh", "iyjuml8"]}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_iyjmlnl"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:38 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:38 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=U4ydgq6bTt05vGlxgr; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:38 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iygot51,iyh9v1e,iygh4ev,iyit8hi,iyhwp80,iyjca4f,iygi5xr,iygi1lg,iyghs29,iygire9,iyghgsh,iygh1vn,iyghlbt,iygh7jy,iyggqcs,iygsprw,iyilp2v,iyifpzv,iyggvx5,iyggvrp,iygifp2,iyhc157,iygiuff,iygiahl,iygjmjd,iygmznb,iygojh4,iygvchv,iygk5ym,iygl9gz,iygk7ty,iygjpdu,iygits6,iygsonm,iygiuk8,iygtowk,iygikbe,iyghrha,iyh40eu,iygibn4,iygjuhs,iygikhh,iyippe0,iyjjk6w,iygxrp3,iyglca6,iygi2zb,iyghijn,iygifh5,iyghf4q,iyghnsf,iyilrwd,iygj0fa,iyjo6pc,iygizh5,iygh5ur,iyghk2v,iygnnt2,iyjo9dr,iyhej8p,iygx5l6,iygu4na,iygj0gb,iygnqq5,iygj91q,iygu7yp,iygnsdd,iygnjv0,iyjpq76,iygvdkc,iyjjbuu,iyhnrc6,iyjjlwa,iyiijcf,iyhaofh,iyh4jvk,iyglpww,iygqxbs,iyk3370,iygllw5,iygjzud,iygjyh0,iygk841,iyh83ef,iyiuj74,iyjsuh9,iygo7is,iyik796,iyhhlqt,iyh9s69,iygipfe,iyhd6hi,iygty01,iyj8sit,iyhu7hi,iygk71s,iygidqj,iygnqw6,iygkf3o,iyh01nr,iyglvip,iygl6mf,iygihp4,iyh55x1,iygjsuh,iyj5tvu,iyigaiq,iygnie1,iyiuevh,iyh53if,iygiboc,iygk2q0,iyh9uw5,iyh3qkb,iygk3a4,iygnrsm,iyhg2qj,iyglepl,iyjdyny,iyl7t9c,iygzzzp,iygi5po,iyjo0p4,iyjon13,iyhlomk,iygkieb,iygretv,iyh87eq,iyhnl8j,iygogzm,iygilxa,iyj6eg1,iyhjfge,iyjfvg4,iylmebf,iyk42v2,iygyccj,iylahzo,iylsah5,iygqbgt,iygwcfb,iygld5k,iyjs7bn,iyk2b5l,iyh94pi,iylenyb,iyjoxe5,iyifjlg,iyna5us,iyjt0id,iylrvts,iyjphct,iyjmvn5,iyj6m98,iyjp7up,iyjq2ke,iyh5f37,iyj05dc,iyjr2fv,iyhclqb,iyndflq,iygonqk,iyll509,iyh0jn5,iyjtywa,iyh85kz,iygq9ex,iygpb55,iyilg4g,iyj8hzx,iyl783x,iyjcn65,iyju5na,iyhfzli,iyhr51u,iyiwnvn,iyjrlwy,iyjosmn,iylruwg,iyhdc65,iyi6v6k,iyh7ecp,iykkyaf,iyjj4z7,iyijotf,iykca4b,iykjata,iyjqo0n,iyjrdd3,iyjrsrt,iyifqq9,iygtz22,iyiew8r,iylrzr2,iyh4msz,iyhp9bc,iyijtn7,iyls2ng,iygtqba,iyjqxua,iyhcc5a,iyk30jj,iyjqs6b,iyj0l1g,iyjes91,iyk38p6,iylldan,iykl2k8,iyk0fpn,iylrl58,iyhfatq,iygrr0v,iyh2jzk,iygnov1,iyi4yrd,iykopsr,iylr8nj,iyi1l73,iyid3mu,iyisc1l,iyh7ico,iyh9vm9,iymoetz,iyixtuz,iyizzou,iykh5as,iyidtjc,iykf2rh,iyjuml8
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '28538'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv416vi.2.1741472678924.Z0FBQUFBQm56TU9uMEswX2NmNjJibGtUdmxrT0VnczlDdHNxUTdxX1NqRVJPQTcyWE1FUlVtN2tjMTBXVzVlVTlDU3ltS1Y2bFY2REs3dXpzRHdrSG1HcmdGWVB6aFdaMkJVVWlpeWc1YUNBNmlzYzNoeTljYmx6b1RiWUF6SHJQVlZERFhqblFZWTM;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:39
        GMT; secure, session_tracker=okkalcfmqdpipbjpfg.0.1741472678936.Z0FBQUFBQm56TU9uSlZjeGIyRjRYUWNjZ3dETHByQUpCV0h2aU44OTd4aEZHNS01RnZGZUNHeTh3V2E3bmpLYzA0bmE5bkIzUDVnNktCQ1p5Y2UwZGV2Y3lMbU1oSE1zLXU4LWx1QmJacUxmZVJncHVrcjZxdktST2laZVJoaDkyaGNxaGY1am1HQ0E;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:39
        GMT; secure, edgebucket=zvnh51T8l5VuB8UNoB; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '38'
      x-ratelimit-remaining:
      - '62.0'
      x-ratelimit-reset:
      - '321'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:39 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygot51",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "RF960",
        "can_mod_post": false, "created_utc": 1669876723.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_yv9bwjm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[C++](https://github.com/coolguy1842/adventofcode/tree/master/2022)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/coolguy1842/adventofcode/tree/master/2022\"&gt;C++&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygot51/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygot51", "created":
        1669876723.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669896606.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhc157", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Killavus",
        "can_mod_post": false, "created_utc": 1669896374.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_b6xf5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My approach to this probem, in Rust:\n\nhttps://github.com/Killavus/Advent-of-Code-2022/commits/main/1-calorie-counting/src/main.rs\n\n    use
        std::io::stdin;\n    use std::io::BufReader;\n\n    use std::io::prelude::*;\n\n    type
        AppResult&lt;T&gt; = Result&lt;T, Box&lt;dyn std::error::Error&gt;&gt;;\n\n    struct
        ElfCarryIter {\n        reader: Box&lt;dyn BufRead&gt;,\n        line: String,\n    }\n\n    impl
        ElfCarryIter {\n        fn new(reader: impl BufRead + ''static) -&gt; Self
        {\n            Self {\n                reader: Box::new(reader),\n                line:
        String::with_capacity(12),\n            }\n        }\n    }\n\n    impl Iterator
        for ElfCarryIter {\n        type Item = usize;\n\n        fn next(&amp;mut
        self) -&gt; Option&lt;Self::Item&gt; {\n            let mut elf_calories =
        0;\n\n            loop {\n                let bytes_read = self.reader.read_line(&amp;mut
        self.line);\n                match bytes_read {\n                    Ok(0)
        =&gt; break None,\n                    Ok(_) =&gt; {\n                        let
        content = self.line.trim();\n                        if content.is_empty()
        {\n                            break Some(elf_calories);\n                        }
        else {\n                            let calories: usize = content.parse().expect(\"input
        should be valid\");\n                            elf_calories += calories;\n                        }\n                        self.line.truncate(0);\n                    }\n                    Err(_)
        =&gt; break None,\n                }\n            }\n        }\n    }\n\n    fn
        most_calories_k_elves_carry(reader: impl BufRead + ''static, k: usize) -&gt;
        AppResult&lt;usize&gt; {\n        let iter = ElfCarryIter::new(reader);\n        let
        mut result = Vec::with_capacity(k);\n        let mut current_min_idx = 0;\n\n        for
        elf_calories in iter {\n            if result.len() &lt; k {\n                result.push(elf_calories);\n                current_min_idx
        = result\n                    .iter()\n                    .enumerate()\n                    .min_by_key(|(_,
        value)| *value)\n                    .unwrap()\n                    .0;\n\n                continue;\n            }\n\n            if
        elf_calories &gt; result[current_min_idx] {\n                result[current_min_idx]
        = elf_calories;\n                current_min_idx = result\n                    .iter()\n                    .enumerate()\n                    .min_by_key(|(_,
        value)| *value)\n                    .unwrap()\n                    .0;\n            }\n        }\n\n        Ok(result.into_iter().sum())\n    }\n\n    fn
        main() {\n        // println!(\n        //     \"Elf carry at most {} calories\",\n        //     most_calories_k_elves_carry(BufReader::new(stdin()),
        1).expect(\"input should be valid\")\n        // );\n        println!(\n            \"Three
        elves carry at most {} calories\",\n            most_calories_k_elves_carry(BufReader::new(stdin()),
        3).expect(\"input should be valid\")\n        )\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My approach to this probem, in Rust:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Killavus/Advent-of-Code-2022/commits/main/1-calorie-counting/src/main.rs\"&gt;https://github.com/Killavus/Advent-of-Code-2022/commits/main/1-calorie-counting/src/main.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use
        std::io::stdin;\nuse std::io::BufReader;\n\nuse std::io::prelude::*;\n\ntype
        AppResult&amp;lt;T&amp;gt; = Result&amp;lt;T, Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt;;\n\nstruct
        ElfCarryIter {\n    reader: Box&amp;lt;dyn BufRead&amp;gt;,\n    line: String,\n}\n\nimpl
        ElfCarryIter {\n    fn new(reader: impl BufRead + &amp;#39;static) -&amp;gt;
        Self {\n        Self {\n            reader: Box::new(reader),\n            line:
        String::with_capacity(12),\n        }\n    }\n}\n\nimpl Iterator for ElfCarryIter
        {\n    type Item = usize;\n\n    fn next(&amp;amp;mut self) -&amp;gt; Option&amp;lt;Self::Item&amp;gt;
        {\n        let mut elf_calories = 0;\n\n        loop {\n            let bytes_read
        = self.reader.read_line(&amp;amp;mut self.line);\n            match bytes_read
        {\n                Ok(0) =&amp;gt; break None,\n                Ok(_) =&amp;gt;
        {\n                    let content = self.line.trim();\n                    if
        content.is_empty() {\n                        break Some(elf_calories);\n                    }
        else {\n                        let calories: usize = content.parse().expect(&amp;quot;input
        should be valid&amp;quot;);\n                        elf_calories += calories;\n                    }\n                    self.line.truncate(0);\n                }\n                Err(_)
        =&amp;gt; break None,\n            }\n        }\n    }\n}\n\nfn most_calories_k_elves_carry(reader:
        impl BufRead + &amp;#39;static, k: usize) -&amp;gt; AppResult&amp;lt;usize&amp;gt;
        {\n    let iter = ElfCarryIter::new(reader);\n    let mut result = Vec::with_capacity(k);\n    let
        mut current_min_idx = 0;\n\n    for elf_calories in iter {\n        if result.len()
        &amp;lt; k {\n            result.push(elf_calories);\n            current_min_idx
        = result\n                .iter()\n                .enumerate()\n                .min_by_key(|(_,
        value)| *value)\n                .unwrap()\n                .0;\n\n            continue;\n        }\n\n        if
        elf_calories &amp;gt; result[current_min_idx] {\n            result[current_min_idx]
        = elf_calories;\n            current_min_idx = result\n                .iter()\n                .enumerate()\n                .min_by_key(|(_,
        value)| *value)\n                .unwrap()\n                .0;\n        }\n    }\n\n    Ok(result.into_iter().sum())\n}\n\nfn
        main() {\n    // println!(\n    //     &amp;quot;Elf carry at most {} calories&amp;quot;,\n    //     most_calories_k_elves_carry(BufReader::new(stdin()),
        1).expect(&amp;quot;input should be valid&amp;quot;)\n    // );\n    println!(\n        &amp;quot;Three
        elves carry at most {} calories&amp;quot;,\n        most_calories_k_elves_carry(BufReader::new(stdin()),
        3).expect(&amp;quot;input should be valid&amp;quot;)\n    )\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhc157/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhc157", "created":
        1669896374.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 3, "name": "t1_iyhcr2a", "id": "iyhcr2a", "parent_id":
        "t1_iyhc157", "depth": 1, "children": ["iyhcr2a"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhwp80",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "olepedersen01",
        "can_mod_post": false, "created_utc": 1669907355.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_3lgk2hvi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Part one solved in python, with a single line of code:\n\n    import os,
        sys\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    print(max([sum([int(c)
        for c in l.split(\"\\n\")]) for l in open(sys.argv[1] if len(sys.argv) &gt;
        1 else \"input.in\", \"r\").read().split(\"\\n\\n\")]))\n\nPart two is written
        in three lines of code to not make It completely unreadable. The code is available
        [here](https://github.com/GabrielTorland/advent_of_code/tree/main/2022/day01).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part one solved in python,
        with a single line of code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import os,
        sys\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt;
        == &amp;quot;&lt;strong&gt;main&lt;/strong&gt;&amp;quot;:\n    print(max([sum([int(c)
        for c in l.split(&amp;quot;\\n&amp;quot;)]) for l in open(sys.argv[1] if len(sys.argv)
        &amp;gt; 1 else &amp;quot;input.in&amp;quot;, &amp;quot;r&amp;quot;).read().split(&amp;quot;\\n\\n&amp;quot;)]))&lt;/p&gt;\n\n&lt;p&gt;Part
        two is written in three lines of code to not make It completely unreadable.
        The code is available &lt;a href=\"https://github.com/GabrielTorland/advent_of_code/tree/main/2022/day01\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhwp80/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhwp80", "created":
        1669907355.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyihpvc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1669915762.0, "send_replies": true,
        "parent_id": "t1_iyhwp80", "score": 2, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "haha, that''s awesome!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;haha,
        that&amp;#39;s awesome!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyihpvc/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyihpvc", "created":
        1669915762.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyll775",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rico_code",
        "can_mod_post": false, "created_utc": 1669968354.0, "send_replies": true,
        "parent_id": "t1_iyhwp80", "score": 2, "author_fullname": "t2_r2ceih9b", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "For part 2 you don''t need \\[n-3:n\\] to get the last three elements of
        the sorted list. You could just go with \\[-3:\\]. Then you don''t need the
        len() command and it''s a little more doable to get it into a line.\n\n\nThis
        is my part 2 solution:\n\n```\nprint(sum(sorted(list([sum([int(c) for c in
        l.split(\"\\n\")]) for l in open(\"input.txt\", \"r\").read().split(\"\\n\\n\")]))[-3:]))\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For part 2 you don&amp;#39;t
        need [n-3:n] to get the last three elements of the sorted list. You could
        just go with [-3:]. Then you don&amp;#39;t need the len() command and it&amp;#39;s
        a little more doable to get it into a line.&lt;/p&gt;\n\n&lt;p&gt;This is
        my part 2 solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nprint(sum(sorted(list([sum([int(c)
        for c in l.split(&amp;quot;\\n&amp;quot;)]) for l in open(&amp;quot;input.txt&amp;quot;,
        &amp;quot;r&amp;quot;).read().split(&amp;quot;\\n\\n&amp;quot;)]))[-3:]))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyll775/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyll775", "created":
        1669968354.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyifpzv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "wxipp",
        "can_mod_post": false, "created_utc": 1669915002.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_f3ckh48o", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My Day 1 solution made in Java. This is my first year participating in Advent
        of Code. Good luck everyone!\n\n~~~\npublic static void main(String[] args)
        {\n    try (Stream&lt;String&gt; lines = Files.lines(Path.of(\"Day1/elves.txt\"),
        StandardCharsets.UTF_8)) {\n        List&lt;Integer&gt; calories = Arrays.stream(lines\n                .collect(Collectors.joining(\",\"))\n                .split(\",,\"))\n                .map(line
        -&gt; Arrays\n                        .stream(line.split(\",\"))\n                        .mapToInt(Integer::parseInt)\n                        .sum()\n                )\n                .sorted(Comparator.reverseOrder())\n                .toList();\n        \n        System.out.println(\"Answers:\");\n        System.out.println(\"
        Part 1: \" + calories.get(0));\n        System.out.println(\" Part 2: \" +
        calories.get(0) + calories.get(1) + calories.get(2));\n    } catch (IOException
        exception) {\n        exception.printStackTrace();\n    }\n}\n~~~", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;My Day 1 solution made in Java. This is
        my first year participating in Advent of Code. Good luck everyone!&lt;/p&gt;\n\n&lt;p&gt;~~~\npublic
        static void main(String[] args) {\n    try (Stream&amp;lt;String&amp;gt; lines
        = Files.lines(Path.of(&amp;quot;Day1/elves.txt&amp;quot;), StandardCharsets.UTF_8))
        {\n        List&amp;lt;Integer&amp;gt; calories = Arrays.stream(lines\n                .collect(Collectors.joining(&amp;quot;,&amp;quot;))\n                .split(&amp;quot;,,&amp;quot;))\n                .map(line
        -&amp;gt; Arrays\n                        .stream(line.split(&amp;quot;,&amp;quot;))\n                        .mapToInt(Integer::parseInt)\n                        .sum()\n                )\n                .sorted(Comparator.reverseOrder())\n                .toList();&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    System.out.println(&amp;quot;Answers:&amp;quot;);\n    System.out.println(&amp;quot;
        Part 1: &amp;quot; + calories.get(0));\n    System.out.println(&amp;quot;
        Part 2: &amp;quot; + calories.get(0) + calories.get(1) + calories.get(2));\n}
        catch (IOException exception) {\n    exception.printStackTrace();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n~~~&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyifpzv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyifpzv", "created":
        1669915002.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq5wfl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670053786.0, "send_replies": true,
        "parent_id": "t1_iyifpzv", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; This is my first year participating in Advent of Code.\n\nWelcome!  We''re
        happy to have ya!\n\nPlease edit your post to use the [four-spaces Markdown
        syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block, not triple tildes.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;This is my first year participating
        in Advent of Code.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Welcome!  We&amp;#39;re
        happy to have ya!&lt;/p&gt;\n\n&lt;p&gt;Please edit your post to use the &lt;a
        href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block, not triple tildes.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq5wfl/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq5wfl", "created":
        1670053786.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1670080102.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyilp2v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "yiatko",
        "can_mod_post": false, "created_utc": 1669917298.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_rxpoday6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "TypeScript (Deno)\n\n    import { sum } from \"../math.ts\";\n    \n    type
        Calories = number;\n    type Snack = Calories;\n    type Snacks = Snack[];\n    type
        ElfInventory = Snacks;\n    type ElfInventories = ElfInventory[];\n    \n    function
        parse(input: string): ElfInventories {\n      return input.split(\"\\n\\n\").map((inventory)
        =&gt;\n        inventory.split(\"\\n\").map(Number)\n      );\n    }\n    \n    function
        totalCalories(snacks: Snacks): Calories {\n      return sum(...snacks);\n    }\n    \n    function
        part1(input: string) {\n      return Math.max(...parse(input).map(totalCalories));\n    }\n    \n    function
        compareCalories(a: Calories, b: Calories) {\n      return b - a;\n    }\n    \n    function
        part2(input: string) {\n      return sum(\n        ...parse(input).map(totalCalories).sort(compareCalories).slice(0,
        3),\n      );\n    }\n    \n    export default { part1, part2 };\n\n[https://github.com/aod/advent-of-deno/blob/main/src/2022/day01.ts](https://github.com/aod/advent-of-deno/blob/main/src/2022/day01.ts)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;TypeScript (Deno)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        { sum } from &amp;quot;../math.ts&amp;quot;;\n\ntype Calories = number;\ntype
        Snack = Calories;\ntype Snacks = Snack[];\ntype ElfInventory = Snacks;\ntype
        ElfInventories = ElfInventory[];\n\nfunction parse(input: string): ElfInventories
        {\n  return input.split(&amp;quot;\\n\\n&amp;quot;).map((inventory) =&amp;gt;\n    inventory.split(&amp;quot;\\n&amp;quot;).map(Number)\n  );\n}\n\nfunction
        totalCalories(snacks: Snacks): Calories {\n  return sum(...snacks);\n}\n\nfunction
        part1(input: string) {\n  return Math.max(...parse(input).map(totalCalories));\n}\n\nfunction
        compareCalories(a: Calories, b: Calories) {\n  return b - a;\n}\n\nfunction
        part2(input: string) {\n  return sum(\n    ...parse(input).map(totalCalories).sort(compareCalories).slice(0,
        3),\n  );\n}\n\nexport default { part1, part2 };\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/aod/advent-of-deno/blob/main/src/2022/day01.ts\"&gt;https://github.com/aod/advent-of-deno/blob/main/src/2022/day01.ts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyilp2v/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyilp2v", "created":
        1669917298.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykmxqm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "yiatko",
        "can_mod_post": false, "created_utc": 1669947826.0, "send_replies": true,
        "parent_id": "t1_iyilp2v", "score": 2, "author_fullname": "t2_rxpoday6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thought I give it a try with an actual FP library, not the best but it''s
        shorter I suppose:\n\n    import * as R from \"https://deno.land/x/ramda@v0.27.2/mod.ts\";\n    \n    const
        elves = R.split(\"\\n\\n\");\n    const invs = R.compose(R.map(R.split(\"\\n\")),
        elves);\n    const cals = R.compose(R.map(R.map(Number)), invs);\n    const
        sumCals = R.compose(R.map(R.sum), cals);\n    const part1 = R.compose(R.apply(Math.max),
        sumCals);\n    const part2 = R.compose(\n      R.sum,\n      R.take(3),\n      R.sort(R.comparator(R.gt)),\n      sumCals,\n    );\n    \n    export
        default { part1, part2 };", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thought
        I give it a try with an actual FP library, not the best but it&amp;#39;s shorter
        I suppose:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import * as R from &amp;quot;https://deno.land/x/ramda@v0.27.2/mod.ts&amp;quot;;\n\nconst
        elves = R.split(&amp;quot;\\n\\n&amp;quot;);\nconst invs = R.compose(R.map(R.split(&amp;quot;\\n&amp;quot;)),
        elves);\nconst cals = R.compose(R.map(R.map(Number)), invs);\nconst sumCals
        = R.compose(R.map(R.sum), cals);\nconst part1 = R.compose(R.apply(Math.max),
        sumCals);\nconst part2 = R.compose(\n  R.sum,\n  R.take(3),\n  R.sort(R.comparator(R.gt)),\n  sumCals,\n);\n\nexport
        default { part1, part2 };\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykmxqm/", "subreddit_type":
        "public", "locked": false, "name": "t1_iykmxqm", "created": 1669947826.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1671481898.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq5qwt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670053656.0, "send_replies": true,
        "parent_id": "t1_iyilp2v", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "~~Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.~~  Edit:
        thanks for fixing it!  &lt;3", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/del&gt;  Edit: thanks for fixing it!  &amp;lt;3&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq5qwt/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq5qwt", "created":
        1670053656.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyilrwd", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "decisive_squirrel",
        "can_mod_post": false, "created_utc": 1669917328.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_qjs9k9p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Java 19**\n\nBasically streams.\n\n    public class Puzzle1 {\n        private
        static final String DATA_FILE = \"C:\\\\Workspaces\\\\jre11test\\\\aoc\\\\y2022\\\\puzzle1.dat\";\n        private
        static final String EOL = \"\\\\r\\\\n\";\n\n        private List&lt;Integer&gt;
        readData() throws IOException {\n            var content = new String(Files.readAllBytes(Paths.get(DATA_FILE)));\n\n            return
        Arrays.stream(content.split(EOL+EOL))\n                    .map(elf -&gt;
        Arrays.stream(elf.split(EOL)).mapToInt(Integer::parseInt).sum())\n                    .sorted(Collections.reverseOrder())\n                    .collect(Collectors.toList());\n        }\n\n        private
        void solve() throws IOException {\n            var dataList = readData();\n            System.out.println(String.format(\"Part
        1: %d\", dataList.get(0)));\n            var total = IntStream.range(0, 3).map(i
        -&gt; dataList.get(i)).sum();\n            System.out.println(String.format(\"Part
        2: %d\", total));\n        }\n\n        public static void main(String[] args)
        {\n            var puzzle = new Puzzle1();\n            try {\n                puzzle.solve();\n            }
        catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Java 19&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Basically
        streams.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public class Puzzle1 {\n    private
        static final String DATA_FILE = &amp;quot;C:\\\\Workspaces\\\\jre11test\\\\aoc\\\\y2022\\\\puzzle1.dat&amp;quot;;\n    private
        static final String EOL = &amp;quot;\\\\r\\\\n&amp;quot;;\n\n    private List&amp;lt;Integer&amp;gt;
        readData() throws IOException {\n        var content = new String(Files.readAllBytes(Paths.get(DATA_FILE)));\n\n        return
        Arrays.stream(content.split(EOL+EOL))\n                .map(elf -&amp;gt;
        Arrays.stream(elf.split(EOL)).mapToInt(Integer::parseInt).sum())\n                .sorted(Collections.reverseOrder())\n                .collect(Collectors.toList());\n    }\n\n    private
        void solve() throws IOException {\n        var dataList = readData();\n        System.out.println(String.format(&amp;quot;Part
        1: %d&amp;quot;, dataList.get(0)));\n        var total = IntStream.range(0,
        3).map(i -&amp;gt; dataList.get(i)).sum();\n        System.out.println(String.format(&amp;quot;Part
        2: %d&amp;quot;, total));\n    }\n\n    public static void main(String[] args)
        {\n        var puzzle = new Puzzle1();\n        try {\n            puzzle.solve();\n        }
        catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyilrwd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyilrwd", "created":
        1669917328.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyippe0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "e4ds",
        "can_mod_post": false, "created_utc": 1669918876.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_empiv8dh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python solution with unit-tests\n\nhttps://github.com/julian-west/adventofcode/blob/master/2022/day\\_1/d1\\_solution.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python solution with
        unit-tests&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/julian-west/adventofcode/blob/master/2022/day%5C_1/d1%5C_solution.py\"&gt;https://github.com/julian-west/adventofcode/blob/master/2022/day\\_1/d1\\_solution.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyippe0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyippe0", "created":
        1669918876.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq5pre",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670053629.0, "send_replies": true,
        "parent_id": "t1_iyippe0", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "FYI: your [link is borked](https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links)
        on old.reddit and some mobile Reddit apps.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;FYI: your &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links\"&gt;link
        is borked&lt;/a&gt; on old.reddit and some mobile Reddit apps.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq5pre/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq5pre", "created":
        1670053629.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"total_awards_received": 0, "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyit8hi", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Trying to use Rust this year: [My solution to part 1](https://github.com/neelakantankk/Advent_of_Code_2022/blob/main/day_01/src/lib.rs).",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iyit8hi",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Trying
        to use Rust this year: &lt;a href=\"https://github.com/neelakantankk/Advent_of_Code_2022/blob/main/day_01/src/lib.rs\"&gt;My
        solution to part 1&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason":
        null, "distinguished": null, "associated_award": null, "stickied": false,
        "can_gild": false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyit8hi/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1669920231.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1669920231.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjjk6w",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "m_r_k",
        "can_mod_post": false, "created_utc": 1669930349.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_vvmj4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "no_std, no_alloc Rust targetting 8-bit 6502 platforms (like atari800, c64):\n\nhttps://github.com/mrk-its/aoc2022/blob/main/day01/src/main.rs",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;no_std, no_alloc Rust
        targetting 8-bit 6502 platforms (like atari800, c64):&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mrk-its/aoc2022/blob/main/day01/src/main.rs\"&gt;https://github.com/mrk-its/aoc2022/blob/main/day01/src/main.rs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjjk6w/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjjk6w", "created":
        1669930349.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjca4f",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MineMoebsie",
        "can_mod_post": false, "created_utc": 1669927588.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 0, "author_fullname": "t2_ijvqaj1p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Pure python code, no libraries\n\nd1.txt contains the input\n\nmight not
        be the best but ehhhh  \n\n\n`with open(\"d1.txt\") as f:`\r  \n`unformatted
        = f.read()`\r  \n  \n`formatted = [[]]`\r  \n`cur_index_add = 0`\r  \n`i =
        0`\r  \n\r  \n`while i &lt;= len(unformatted) -1:`\r  \n`if unformatted[i-1]
        == \"\\n\" and unformatted[i] == \"\\n\":`\r  \n`formatted.append([])`\r  \n`cur_index_add
        += 1`\r  \n`i += 1`\r  \n`else:`\r  \n`num_start = i`\r  \n`num_end = i #
        we dont know that one yet`\r  \n  \n`while unformatted[num_end] != \"\\n\":`\r  \n`#
        print(unformatted[num_end])`\r  \n`num_end += 1`\r  \n`if num_end &gt;= len(unformatted)
        - 1:`\r  \n`break`\r  \n  \n`number = unformatted[num_start:num_end]`\r  \n`formatted[cur_index_add].append(int(number))`\r  \n`i
        += num_end - num_start + 1`\r  \n  \n`biggest_cal = 0`\r  \n`biggest_i = 0`\r  \n`for
        i, x in enumerate(formatted):`\r  \n`if sum(x) &gt; biggest_cal:`\r  \n`biggest_cal
        = sum(x)`\r  \n`biggest_i = i`\r  \n  \n`print(i)`\r  \n`print(biggest_cal)`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pure python code, no
        libraries&lt;/p&gt;\n\n&lt;p&gt;d1.txt contains the input&lt;/p&gt;\n\n&lt;p&gt;might
        not be the best but ehhhh  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;with open(&amp;quot;d1.txt&amp;quot;)
        as f:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;unformatted = f.read()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;formatted
        = [[]]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;cur_index_add = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;i
        = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;while i &amp;lt;= len(unformatted)
        -1:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if unformatted[i-1] ==
        &amp;quot;\\n&amp;quot; and unformatted[i] == &amp;quot;\\n&amp;quot;:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;formatted.append([])&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;cur_index_add
        += 1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;i += 1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;else:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;num_start
        = i&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;num_end = i # we dont know
        that one yet&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;while unformatted[num_end]
        != &amp;quot;\\n&amp;quot;:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;#
        print(unformatted[num_end])&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;num_end
        += 1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if num_end &amp;gt;= len(unformatted)
        - 1:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;break&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;number
        = unformatted[num_start:num_end]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;formatted[cur_index_add].append(int(number))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;i
        += num_end - num_start + 1&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;biggest_cal
        = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;biggest_i = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for
        i, x in enumerate(formatted):&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if
        sum(x) &amp;gt; biggest_cal:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;biggest_cal
        = sum(x)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;biggest_i = i&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(i)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(biggest_cal)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjca4f/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjca4f", "created":
        1669927588.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq4eb5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670052515.0, "send_replies": true,
        "parent_id": "t1_iyjca4f", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Inlined code is intended for `short snippets` of code only.  Your code \"block\"
        right now is unreadable;  it''s all on one line and gets cut off at the edge
        of the screen because it is not horizontally scrollable.\n\nPlease edit your
        post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Inlined code is intended
        for &lt;code&gt;short snippets&lt;/code&gt; of code only.  Your code &amp;quot;block&amp;quot;
        right now is unreadable;  it&amp;#39;s all on one line and gets cut off at
        the edge of the screen because it is not horizontally scrollable.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq4eb5/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq4eb5", "created": 1670052515.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 0,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjo6pc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "lbreede",
        "can_mod_post": false, "created_utc": 1669932188.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 0, "author_fullname": "t2_4jl9zkr4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python\n```python\nwith open(\"input.txt\") as fp:\n    c = sorted([sum([int(y)
        for y in x.split(\"\\n\")]) for x in fp.read().split(\"\\n\\n\")])\nprint(\"Part
        1:\", c[-1], \"\\nPart 2:\", sum(c[-3:]))\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python\n&lt;code&gt;python\nwith open(&amp;quot;input.txt&amp;quot;)
        as fp:\n    c = sorted([sum([int(y) for y in x.split(&amp;quot;\\n&amp;quot;)])
        for x in fp.read().split(&amp;quot;\\n\\n&amp;quot;)])\nprint(&amp;quot;Part
        1:&amp;quot;, c[-1], &amp;quot;\\nPart 2:&amp;quot;, sum(c[-3:]))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjo6pc/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjo6pc", "created":
        1669932188.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669991148.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyggqcs", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "maneatingape",
        "can_mod_post": false, "created_utc": 1669871366.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_6mzqyuze", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Scala](https://github.com/maneatingape/advent-of-code/blob/main/src/main/scala/AdventOfCode2022/Day01.scala)
        (2385 / 1651)\n\n    object Day01:\n      def parse(input: String): Seq[Int]
        =\n        input.split(\"\\n\\n\").map(_.split(\"\\n\").map(_.toInt).sum).toSeq\n\n      def
        part1(input: String): Int = parse(input).max\n\n      def part2(input: String):
        Int = parse(input).sorted.takeRight(3).sum", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/maneatingape/advent-of-code/blob/main/src/main/scala/AdventOfCode2022/Day01.scala\"&gt;Scala&lt;/a&gt;
        (2385 / 1651)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;object Day01:\n  def parse(input:
        String): Seq[Int] =\n    input.split(&amp;quot;\\n\\n&amp;quot;).map(_.split(&amp;quot;\\n&amp;quot;).map(_.toInt).sum).toSeq\n\n  def
        part1(input: String): Int = parse(input).max\n\n  def part2(input: String):
        Int = parse(input).sorted.takeRight(3).sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggqcs/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggqcs", "created":
        1669871366.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggvrp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "LtHummus",
        "can_mod_post": false, "created_utc": 1669871456.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_4n38i", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Scala**\n\nForgot to reverse the sorted list on the second part (for part
        one i just did `.max`). Slightly cleaned up code here:\n\n    object Day1
        {\n      def main(args: Array[String]): Unit = {\n        val lines = AdventOfCodeInput.rawInput(2022,
        1).split(\"\\n\\n\")\n        val sorted = lines.map(p =&gt; p.split(\"\\n\").map(_.toInt).sum).sorted.reverse\n        println(sorted.head)\n        println(sorted.take(3).sum)\n      }\n    }",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Scala&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Forgot
        to reverse the sorted list on the second part (for part one i just did &lt;code&gt;.max&lt;/code&gt;).
        Slightly cleaned up code here:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;object
        Day1 {\n  def main(args: Array[String]): Unit = {\n    val lines = AdventOfCodeInput.rawInput(2022,
        1).split(&amp;quot;\\n\\n&amp;quot;)\n    val sorted = lines.map(p =&amp;gt;
        p.split(&amp;quot;\\n&amp;quot;).map(_.toInt).sum).sorted.reverse\n    println(sorted.head)\n    println(sorted.take(3).sum)\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggvrp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggvrp", "created":
        1669871456.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyggvx5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Kehvarl",
        "can_mod_post": false, "created_utc": 1669871459.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_nymy1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3 2943 / 2435\n\nNothing inspired in my approach, but it worked well
        enough.   Hats off to all of you under-two-minutes folks,  I think it took
        me that long just to read the puzzle!\n\n[paste](https://topaz.github.io/paste/#XQAAAQBJAQAAAAAAAAA7mkrvHeIvDZUizuO2LI0KXEPUFLLgeIPRqbv/z+nmNU31q2Yp4MqlHxknHTpOqshkhrB0IkloQyUAAfOOzkuZD28haTMVCeAD9jzel5V6C/PV2HeoO6tgBZAaISP3WB0oIHuGafg4mE6CtkLiCHjG61lmoURDmt5HpnEfO4Ox711SKFI52scQ7QqSUXh4y7QZTJojU23GMLuXB2RN6Raqp6tnoLouDF6W3jzDTIotEvYczrybCCc7iCvAEiD18T3abt407pgivIeWj//LnPIA)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3 2943 / 2435&lt;/p&gt;\n\n&lt;p&gt;Nothing
        inspired in my approach, but it worked well enough.   Hats off to all of you
        under-two-minutes folks,  I think it took me that long just to read the puzzle!&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQBJAQAAAAAAAAA7mkrvHeIvDZUizuO2LI0KXEPUFLLgeIPRqbv/z+nmNU31q2Yp4MqlHxknHTpOqshkhrB0IkloQyUAAfOOzkuZD28haTMVCeAD9jzel5V6C/PV2HeoO6tgBZAaISP3WB0oIHuGafg4mE6CtkLiCHjG61lmoURDmt5HpnEfO4Ox711SKFI52scQ7QqSUXh4y7QZTJojU23GMLuXB2RN6Raqp6tnoLouDF6W3jzDTIotEvYczrybCCc7iCvAEiD18T3abt407pgivIeWj//LnPIA\"&gt;paste&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyggvx5/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyggvx5", "created":
        1669871459.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygh4ev",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Camelpilot33",
        "can_mod_post": false, "created_utc": 1669871598.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_8mkl3vq5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "498/1552\nTOP 500 letsgo\n```\nconst input = require(''fs'').readFileSync(String(__dirname)\n    .replace(/\\\\/g,''/'')+\"/inputs/day1.txt\",
        \"utf8\").replace(/\\r/g,'''')\n    .split(\"\\n\\n\").map(e=&gt;e.split(\"\\n\").map(Number).reduce((ps,
        a) =&gt; ps + a, 0))\nlet l=[0,0,0]\nfor (let i of input) {\n    if (i&gt;l[0])
        {\n        l[2]=l[1]\n        l[1]=l[0]\n        l[0]=i\n    } else if (i&gt;l[1])
        {\n        l[2]=l[1]\n        l[1]=i\n    } else if (i&gt;l[2]) {\n        l[2]=i\n    }\n}\nconsole.log(Math.max(...input))\nconsole.log(l.reduce((ps,
        a) =&gt; ps + a, 0))\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;498/1552\nTOP
        500 letsgo\n&lt;code&gt;\nconst input = require(&amp;#39;fs&amp;#39;).readFileSync(String(__dirname)\n    .replace(/\\\\/g,&amp;#39;/&amp;#39;)+&amp;quot;/inputs/day1.txt&amp;quot;,
        &amp;quot;utf8&amp;quot;).replace(/\\r/g,&amp;#39;&amp;#39;)\n    .split(&amp;quot;\\n\\n&amp;quot;).map(e=&amp;gt;e.split(&amp;quot;\\n&amp;quot;).map(Number).reduce((ps,
        a) =&amp;gt; ps + a, 0))\nlet l=[0,0,0]\nfor (let i of input) {\n    if (i&amp;gt;l[0])
        {\n        l[2]=l[1]\n        l[1]=l[0]\n        l[0]=i\n    } else if (i&amp;gt;l[1])
        {\n        l[2]=l[1]\n        l[1]=i\n    } else if (i&amp;gt;l[2]) {\n        l[2]=i\n    }\n}\nconsole.log(Math.max(...input))\nconsole.log(l.reduce((ps,
        a) =&amp;gt; ps + a, 0))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygh4ev/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygh4ev", "created": 1669871598.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygh5ur", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "CMDRskejeton", "can_mod_post": false,
        "created_utc": 1669871623.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_to926cg6", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "scrambled this in  1
        minute:\n\n`document.body.innerText.split(\"\\n\\n\").map(e =&gt; e.split(\"\\n\").map(j
        =&gt; parseInt(j)).reduce((a, b) =&gt; a + b)).sort((a, b) =&gt; a - b)`\n\nfor
        part 2 just manually summed up the last elements", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;scrambled this in  1 minute:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;document.body.innerText.split(&amp;quot;\\n\\n&amp;quot;).map(e
        =&amp;gt; e.split(&amp;quot;\\n&amp;quot;).map(j =&amp;gt; parseInt(j)).reduce((a,
        b) =&amp;gt; a + b)).sort((a, b) =&amp;gt; a - b)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;for
        part 2 just manually summed up the last elements&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygh5ur/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygh5ur", "created":
        1669871623.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygh7jy",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Cpt__Cookie",
        "can_mod_post": false, "created_utc": 1669871652.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_6lb4msar", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "python:\n\n    def parse_data(puzzle_input: str) -&gt; list[str]:\n        elf_package
        = []\n        for elf in puzzle_input.split(\"\\n\\n\"):\n            elf_package.append([int(n)
        for n in elf.splitlines()])\n        return elf_package\n\n\n    def solution_1(puzzle_input:
        str) -&gt; int:\n        elf_packages = parse_data(puzzle_input)\n        return
        max([sum(e) for e in elf_packages])\n\n\n    def solution_2(puzzle_input:
        str) -&gt; int:\n        elf_packages = parse_data(puzzle_input)\n        return
        sum(sorted([sum(e) for e in elf_packages])[-3:])", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def parse_data(puzzle_input:
        str) -&amp;gt; list[str]:\n    elf_package = []\n    for elf in puzzle_input.split(&amp;quot;\\n\\n&amp;quot;):\n        elf_package.append([int(n)
        for n in elf.splitlines()])\n    return elf_package\n\n\ndef solution_1(puzzle_input:
        str) -&amp;gt; int:\n    elf_packages = parse_data(puzzle_input)\n    return
        max([sum(e) for e in elf_packages])\n\n\ndef solution_2(puzzle_input: str)
        -&amp;gt; int:\n    elf_packages = parse_data(puzzle_input)\n    return sum(sorted([sum(e)
        for e in elf_packages])[-3:])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygh7jy/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygh7jy", "created": 1669871652.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyghf4q", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "bunceandbean", "can_mod_post": false,
        "created_utc": 1669871781.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_8n8m52as", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "My Python3 solution.
        Pretty disappointed in my performance. I failed to read the first part right
        for a solid 5 minutes. Bummed, but hopeful for tomorrow. Merry code-mas y''all!\n\n```\nwith
        open(\"input.txt\") as f:\n    content = f.read().split(\"\\n\")[:~0]\n\nmax_cals
        = 0\ntotal = 0\ntop_three = [0,0,0]\nfor i in range(len(content)):\n    if
        content[i] != \"\":\n        total += int(content[i])\n    else:\n        for
        j in range(len(top_three)):\n            if total &gt; top_three[j]:\n                top_three[j]
        = total\n                top_three = sorted(top_three)\n                break\n        total
        = 0\n\nanswer_one = top_three[~0]\nanswer_two = sum(top_three)\nprint(\"p1:\",
        answer_one)\nprint(\"p2:\", answer_two)\n\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My Python3 solution. Pretty disappointed in my performance.
        I failed to read the first part right for a solid 5 minutes. Bummed, but hopeful
        for tomorrow. Merry code-mas y&amp;#39;all!&lt;/p&gt;\n\n&lt;p&gt;```\nwith
        open(&amp;quot;input.txt&amp;quot;) as f:\n    content = f.read().split(&amp;quot;\\n&amp;quot;)[:~0]&lt;/p&gt;\n\n&lt;p&gt;max_cals
        = 0\ntotal = 0\ntop_three = [0,0,0]\nfor i in range(len(content)):\n    if
        content[i] != &amp;quot;&amp;quot;:\n        total += int(content[i])\n    else:\n        for
        j in range(len(top_three)):\n            if total &amp;gt; top_three[j]:\n                top_three[j]
        = total\n                top_three = sorted(top_three)\n                break\n        total
        = 0&lt;/p&gt;\n\n&lt;p&gt;answer_one = top_three[~0]\nanswer_two = sum(top_three)\nprint(&amp;quot;p1:&amp;quot;,
        answer_one)\nprint(&amp;quot;p2:&amp;quot;, answer_two)&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghf4q/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghf4q", "created":
        1669871781.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyghgsh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "matrayzz",
        "can_mod_post": false, "created_utc": 1669871809.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_pxlom", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java:\n\nPart 1\n\n    Arrays.stream(all.split(\"\\n\\n\"))\r\n        .mapToLong(s
        -&gt; Arrays.stream(s.split(\"\\n\"))\r\n                .mapToLong(Long::parseLong)\r\n                .sum())\r\n        .max()\r\n            .getAsLong()\n\nPart
        2\n\n    Arrays.stream(all.split(\"\\n\\n\"))\r\n        .map(s -&gt; Arrays.stream(s.split(\"\\n\"))\r\n                .mapToLong(Long::parseLong)\r\n                .sum())\r\n        .sorted(Comparator.reverseOrder())\r\n        .mapToLong(Long::longValue)\r\n        .limit(3)\r\n        .sum()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java:&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Arrays.stream(all.split(&amp;quot;\\n\\n&amp;quot;))\n    .mapToLong(s
        -&amp;gt; Arrays.stream(s.split(&amp;quot;\\n&amp;quot;))\n            .mapToLong(Long::parseLong)\n            .sum())\n    .max()\n        .getAsLong()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Arrays.stream(all.split(&amp;quot;\\n\\n&amp;quot;))\n    .map(s
        -&amp;gt; Arrays.stream(s.split(&amp;quot;\\n&amp;quot;))\n            .mapToLong(Long::parseLong)\n            .sum())\n    .sorted(Comparator.reverseOrder())\n    .mapToLong(Long::longValue)\n    .limit(3)\n    .sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghgsh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghgsh", "created":
        1669871809.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyghijn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "simonbaars",
        "can_mod_post": false, "created_utc": 1669871839.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_11dlo0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java:\n\nPart 1\n\n```\nreturn Arrays.stream(day().split(\"\\n\\n\")).mapToLong(s
        -&gt; Arrays.stream(s.split(\"\\n\")).map(String::trim).mapToLong(e -&gt;
        Long.parseLong(e)).sum()).max().getAsLong();\n```\n\nPart 2\n```\nlong nums
        = Arrays.stream(day().split(\"\\n\\n\")).mapToLong(s -&gt; Arrays.stream(s.split(\"\\n\")).map(String::trim).mapToLong(e
        -&gt; Long.parseLong(e)).sum()).sorted().toArray();\nreturn nums[nums.length-1]
        + nums[nums.length-2] + nums[nums.length-3];\n```\n\n[See it on GitHub here.](https://github.com/SimonBaars/AdventOfCode-Java/blob/master/src/main/java/com/sbaars/adventofcode/year22/days/Day1.java)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Java:&lt;/p&gt;\n\n&lt;p&gt;Part
        1&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nreturn Arrays.stream(day().split(&amp;quot;\\n\\n&amp;quot;)).mapToLong(s
        -&amp;gt; Arrays.stream(s.split(&amp;quot;\\n&amp;quot;)).map(String::trim).mapToLong(e
        -&amp;gt; Long.parseLong(e)).sum()).max().getAsLong();\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2\n&lt;code&gt;\nlong nums = Arrays.stream(day().split(&amp;quot;\\n\\n&amp;quot;)).mapToLong(s
        -&amp;gt; Arrays.stream(s.split(&amp;quot;\\n&amp;quot;)).map(String::trim).mapToLong(e
        -&amp;gt; Long.parseLong(e)).sum()).sorted().toArray();\nreturn nums[nums.length-1]
        + nums[nums.length-2] + nums[nums.length-3];\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/SimonBaars/AdventOfCode-Java/blob/master/src/main/java/com/sbaars/adventofcode/year22/days/Day1.java\"&gt;See
        it on GitHub here.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghijn/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghijn", "created":
        1669871839.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyghlbt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Conceptizual",
        "can_mod_post": false, "created_utc": 1669871885.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_f996y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Hey! This is the best I''ve ever done (on Part 1)! I used Python. My previous
        best was 360 in 2020 Day 23 Part 2, and last year I was in the thousands/tens
        of thousands. \n\nFor part 2, I slowed down because I spliced from the wrong
        end and it took me a minute to catch.\n\n329/1739 \n\nhttps://github.com/ElizabethViera/AdventOfCode/blob/main/AdventOfCode2022/Day%201/Day1.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey! This is the best
        I&amp;#39;ve ever done (on Part 1)! I used Python. My previous best was 360
        in 2020 Day 23 Part 2, and last year I was in the thousands/tens of thousands.
        &lt;/p&gt;\n\n&lt;p&gt;For part 2, I slowed down because I spliced from the
        wrong end and it took me a minute to catch.&lt;/p&gt;\n\n&lt;p&gt;329/1739
        &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/ElizabethViera/AdventOfCode/blob/main/AdventOfCode2022/Day%201/Day1.py\"&gt;https://github.com/ElizabethViera/AdventOfCode/blob/main/AdventOfCode2022/Day%201/Day1.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghlbt/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghlbt", "created":
        1669871885.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyghrha",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Solarmew",
        "can_mod_post": false, "created_utc": 1669871986.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_351u8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "```\ndata = open(path, \"r\").read()\n\ncals = sorted([sum(list(map(int,
        x.split(''\\n'')))) for x in data.split(''\\n\\n'')])\n\nprint(max(cals))\nprint(sum(cals[-3:]))\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;```\ndata = open(path,
        &amp;quot;r&amp;quot;).read()&lt;/p&gt;\n\n&lt;p&gt;cals = sorted([sum(list(map(int,
        x.split(&amp;#39;\\n&amp;#39;)))) for x in data.split(&amp;#39;\\n\\n&amp;#39;)])&lt;/p&gt;\n\n&lt;p&gt;print(max(cals))\nprint(sum(cals[-3:]))\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghrha/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghrha", "created":
        1669871986.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyghs29",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "smokebath",
        "can_mod_post": false, "created_utc": 1669871996.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_81tbl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "python\n\n    data = open(''days/1.in'').read()\n    \n    data = sorted([sum([int(i)
        for i in re.split(r''\\D+'', x)]) for x in data.split(''\\n\\n'')], reverse=True)\n    print(data[0])        #
        day1_part1\n    print(sum(data[0:3])) # day1_part2", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;python&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data =
        open(&amp;#39;days/1.in&amp;#39;).read()\n\ndata = sorted([sum([int(i) for
        i in re.split(r&amp;#39;\\D+&amp;#39;, x)]) for x in data.split(&amp;#39;\\n\\n&amp;#39;)],
        reverse=True)\nprint(data[0])        # day1_part1\nprint(sum(data[0:3])) #
        day1_part2\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyghs29/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyghs29", "created":
        1669871996.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygi1lg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tslater2006",
        "can_mod_post": false, "created_utc": 1669872154.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_9q53a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# LINQ:\n\n    public Day01()\n    {\n        elveLists = File.ReadAllText(InputFilePath).Split(\"\\r\\n\\r\\n\");\n    }\n    \n    public
        override ValueTask&lt;string&gt; Solve_1() {\n    \n        return new(elveLists.Select(list
        =&gt; list.Split(\"\\r\\n\").Select(s =&gt; int.Parse(s)).Sum()).Max().ToString());\n        \n    }\n    public
        override ValueTask&lt;string&gt; Solve_2()\n    {\n        return new(elveLists.Select(list
        =&gt; list.Split(\"\\r\\n\").Select(s =&gt; int.Parse(s)).Sum()).OrderByDescending(x
        =&gt; x).Take(3).Sum().ToString());\n    }", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;C# LINQ:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public
        Day01()\n{\n    elveLists = File.ReadAllText(InputFilePath).Split(&amp;quot;\\r\\n\\r\\n&amp;quot;);\n}\n\npublic
        override ValueTask&amp;lt;string&amp;gt; Solve_1() {\n\n    return new(elveLists.Select(list
        =&amp;gt; list.Split(&amp;quot;\\r\\n&amp;quot;).Select(s =&amp;gt; int.Parse(s)).Sum()).Max().ToString());\n\n}\npublic
        override ValueTask&amp;lt;string&amp;gt; Solve_2()\n{\n    return new(elveLists.Select(list
        =&amp;gt; list.Split(&amp;quot;\\r\\n&amp;quot;).Select(s =&amp;gt; int.Parse(s)).Sum()).OrderByDescending(x
        =&amp;gt; x).Take(3).Sum().ToString());\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygi1lg/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygi1lg", "created":
        1669872154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygi2zb",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "muffinsnack",
        "can_mod_post": false, "created_utc": 1669872179.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_8ymr6amc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "OCaml, something like 1K/3K\n\nHaving ended up just outside of top 100 global
        participants last year in Python, I figured I''d spare my sleep schedule this
        year and learn a new language instead of aiming for the leaderboard. I''d
        appreciate any feedback on my code, I know it isn''t super efficient.\n\n[Github](https://github.com/grawlixes/aoc/blob/mainline/2022/bin/1/main.ml)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OCaml, something like
        1K/3K&lt;/p&gt;\n\n&lt;p&gt;Having ended up just outside of top 100 global
        participants last year in Python, I figured I&amp;#39;d spare my sleep schedule
        this year and learn a new language instead of aiming for the leaderboard.
        I&amp;#39;d appreciate any feedback on my code, I know it isn&amp;#39;t super
        efficient.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/grawlixes/aoc/blob/mainline/2022/bin/1/main.ml\"&gt;Github&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygi2zb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygi2zb", "created":
        1669872179.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669874923.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygi5po", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "AppanKarKeVekhaya",
        "can_mod_post": false, "created_utc": 1669872227.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_2v2x6hn1", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[python](https://pastebin.com/PPjMBPvD)\n\nMan you guys were fast!\n\nTook
        a lot of time in part 2.  Hope to do better tomorrow.\n\n1021/2680", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://pastebin.com/PPjMBPvD\"&gt;python&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Man
        you guys were fast!&lt;/p&gt;\n\n&lt;p&gt;Took a lot of time in part 2.  Hope
        to do better tomorrow.&lt;/p&gt;\n\n&lt;p&gt;1021/2680&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygi5po/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygi5po", "created":
        1669872227.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygi5xr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Cloudan29",
        "can_mod_post": false, "created_utc": 1669872230.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_jp811tl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3 (2227/2853)\n\nA bit slow for my liking, but I also kind of goofed
        with inputs for a bit longer than I should have. Bit rusty on doing input.\n\nhttps://github.com/BetterBelle/AdventOfCode/blob/master/2022/Python/day01.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3 (2227/2853)&lt;/p&gt;\n\n&lt;p&gt;A
        bit slow for my liking, but I also kind of goofed with inputs for a bit longer
        than I should have. Bit rusty on doing input.&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/BetterBelle/AdventOfCode/blob/master/2022/Python/day01.py\"&gt;https://github.com/BetterBelle/AdventOfCode/blob/master/2022/Python/day01.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygi5xr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygi5xr", "created":
        1669872230.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygiahl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ri7chy",
        "can_mod_post": false, "created_utc": 1669872305.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_57s35ssj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python](https://topaz.github.io/paste/#XQAAAQCOAQAAAAAAAAA0m0pnuFI8c/sCZpj3k5SeOWmxAojiVYRlR4q4Sv827HLzozpmWr827Ga7HzSYa9jySlfR0yfj8AGohW5lyu8tZokN3jti3JR1WIEPsYzbXSI4RUAqbgoozXN5PdNFPhcZHT1/1gbB20C86QzfXF1+EeBcgs2mUG5QO6Zy316+sqe5wUW8WdU0vK+jLA5SabepBUU8LR1tjSWRw+eNnKQ18e2XBH6HQz14FdcJrWBhj+51GcFWwkpMJb2U3nXRJGZT8szICdKH9j7BTHtHAoCldctEMCCYToo4bUNkmkn3U+vB7fwViQ4=)\n\nI''m
        excited  ... AOC22 !!! yeah!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQCOAQAAAAAAAAA0m0pnuFI8c/sCZpj3k5SeOWmxAojiVYRlR4q4Sv827HLzozpmWr827Ga7HzSYa9jySlfR0yfj8AGohW5lyu8tZokN3jti3JR1WIEPsYzbXSI4RUAqbgoozXN5PdNFPhcZHT1/1gbB20C86QzfXF1+EeBcgs2mUG5QO6Zy316+sqe5wUW8WdU0vK+jLA5SabepBUU8LR1tjSWRw+eNnKQ18e2XBH6HQz14FdcJrWBhj+51GcFWwkpMJb2U3nXRJGZT8szICdKH9j7BTHtHAoCldctEMCCYToo4bUNkmkn3U+vB7fwViQ4=\"&gt;Python&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        excited  ... AOC22 !!! yeah!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygiahl/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygiahl", "created":
        1669872305.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygibn4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "PerturbedHamster",
        "can_mod_post": false, "created_utc": 1669872326.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_46ky7kqj", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "command line, including multiple awk:\n\nawk ''{val=$0+0;if (val==0){print(tot);tot=0}else{tot=tot+val}}
        END{print(tot)}'' &lt; input\\_dec\\_1.txt  | sort -n | tail -n 3 | awk ''{tot=tot+$0}END{print(tot)}''",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;command line, including
        multiple awk:&lt;/p&gt;\n\n&lt;p&gt;awk &amp;#39;{val=$0+0;if (val==0){print(tot);tot=0}else{tot=tot+val}}
        END{print(tot)}&amp;#39; &amp;lt; input_dec_1.txt  | sort -n | tail -n 3 |
        awk &amp;#39;{tot=tot+$0}END{print(tot)}&amp;#39;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygibn4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygibn4", "created":
        1669872326.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygiboc", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygiboc", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygiboc/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669872326.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669872326.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygooag",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kristallnachte",
        "can_mod_post": false, "created_utc": 1669876624.0, "send_replies": true,
        "parent_id": "t1_iygiboc", "score": 1, "author_fullname": "t2_cborr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "The for loop should really be refactored. No need for all the mutations.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The for loop should
        really be refactored. No need for all the mutations.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygooag/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygooag", "created":
        1669876624.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygidqj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "semicolonator",
        "can_mod_post": false, "created_utc": 1669872361.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_11inux", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Python, 6 lines](https://github.com/r0f1/adventofcode2022/blob/master/day01/main.py)\n\n```\nwith
        open(\"input.txt\") as f:\n    cals = f.read().rstrip()\n\nelves = [sum(int(c)
        for c in e.split(\"\\n\")) for e in cals.split(\"\\n\\n\")]\nprint(max(elves))\nprint(sum(sorted(elves,
        reverse=True)[:3]))\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/r0f1/adventofcode2022/blob/master/day01/main.py\"&gt;Python,
        6 lines&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;```\nwith open(&amp;quot;input.txt&amp;quot;)
        as f:\n    cals = f.read().rstrip()&lt;/p&gt;\n\n&lt;p&gt;elves = [sum(int(c)
        for c in e.split(&amp;quot;\\n&amp;quot;)) for e in cals.split(&amp;quot;\\n\\n&amp;quot;)]\nprint(max(elves))\nprint(sum(sorted(elves,
        reverse=True)[:3]))\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygidqj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygidqj", "created":
        1669872361.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygip8w", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t1_iygidqj", "score":
        2, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "We had the same exact solution. Short and concise. \ud83d\ude42",
        "awarders": [], "downs": 0, "author_flair_css_class": null, "name": "t1_iygip8w",
        "collapsed": false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We
        had the same exact solution. Short and concise. \ud83d\ude42&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygip8w/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669872560.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669872560.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iygj2yv", "id": "iygj2yv", "parent_id":
        "t1_iygip8w", "depth": 2, "children": ["iygj2yv"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygifp2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "timatlee",
        "can_mod_post": false, "created_utc": 1669872395.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_5cpwz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**TypeScript**\n\nFirst time learning TS.\n\n```\nexport function Day1p1(filename:string):number
        {\n    // Read the file\n    let datas:Array&lt;string&gt; = ReadDataFile(__dirname
        + ''/'' + filename)\n\n    let lastMax = -1\n    let elfNumber = 0\n    let
        elfCalorie = 0\n    for (let data of datas) {\n        if (data.trim().length
        &gt; 0) {\n            let calCount = Number(data)\n            elfCalorie
        += calCount\n        } else {\n            // Next elf...\n            if
        (elfCalorie &gt; lastMax) {\n                lastMax = elfCalorie\n            }\n            elfCalorie
        = 0\n\n        }\n    }\n\n    return lastMax\n}\n\n\nexport function Day1p2(filename:string):number
        {\n    // Read the file\n    let datas:Array&lt;string&gt; = ReadDataFile(__dirname
        + ''/'' + filename)\n\n    let maxes:number[] = []\n    let elfNumber = 0\n    let
        elfCalorie = 0\n    for (let data of datas) {\n        if (data.trim().length
        &gt; 0) {\n            let calCount = Number(data)\n            elfCalorie
        += calCount\n        } else {\n            // Next elf...\n            maxes.push(elfCalorie)\n            elfCalorie
        = 0\n        }\n    }\n    // edge case - last elf needs ot be added.\n    maxes.push(elfCalorie)\n\n    maxes.sort((x,
        y) =&gt; x &gt; y ? 1 : x &lt; y ? -1 : 0)\n\n    const result = maxes.slice(-3).reduce((accumulator,
        current) =&gt; {\n        return accumulator + current;\n      }, 0);\n\n    return
        result\n}\n```\n\nScrolling through the other solutions in other languages,
        I''m sure there''s a faster way to do this...", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;First
        time learning TS.&lt;/p&gt;\n\n&lt;p&gt;```\nexport function Day1p1(filename:string):number
        {\n    // Read the file\n    let datas:Array&amp;lt;string&amp;gt; = ReadDataFile(__dirname
        + &amp;#39;/&amp;#39; + filename)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        lastMax = -1\nlet elfNumber = 0\nlet elfCalorie = 0\nfor (let data of datas)
        {\n    if (data.trim().length &amp;gt; 0) {\n        let calCount = Number(data)\n        elfCalorie
        += calCount\n    } else {\n        // Next elf...\n        if (elfCalorie
        &amp;gt; lastMax) {\n            lastMax = elfCalorie\n        }\n        elfCalorie
        = 0\n\n    }\n}\n\nreturn lastMax\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;export
        function Day1p2(filename:string):number {\n    // Read the file\n    let datas:Array&amp;lt;string&amp;gt;
        = ReadDataFile(__dirname + &amp;#39;/&amp;#39; + filename)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        maxes:number[] = []\nlet elfNumber = 0\nlet elfCalorie = 0\nfor (let data
        of datas) {\n    if (data.trim().length &amp;gt; 0) {\n        let calCount
        = Number(data)\n        elfCalorie += calCount\n    } else {\n        // Next
        elf...\n        maxes.push(elfCalorie)\n        elfCalorie = 0\n    }\n}\n//
        edge case - last elf needs ot be added.\nmaxes.push(elfCalorie)\n\nmaxes.sort((x,
        y) =&amp;gt; x &amp;gt; y ? 1 : x &amp;lt; y ? -1 : 0)\n\nconst result = maxes.slice(-3).reduce((accumulator,
        current) =&amp;gt; {\n    return accumulator + current;\n  }, 0);\n\nreturn
        result\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n\n&lt;p&gt;Scrolling
        through the other solutions in other languages, I&amp;#39;m sure there&amp;#39;s
        a faster way to do this...&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygifp2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygifp2", "created":
        1669872395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669935933.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygihp4", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pdxbuckets",
        "can_mod_post": false, "created_utc": 1669872430.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_qqcrq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Kotlin](https://github.com/nbanman/Play2022/blob/master/src/main/kotlin/org/gristle/adventOfCode/y2022/d1/Y2022D1.kt)\n\nMy
        original version relied on sorting a list, but I made a priority queue version
        to save a couple ms. Obviously can''t wait for these to get harder.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/nbanman/Play2022/blob/master/src/main/kotlin/org/gristle/adventOfCode/y2022/d1/Y2022D1.kt\"&gt;Kotlin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My
        original version relied on sorting a list, but I made a priority queue version
        to save a couple ms. Obviously can&amp;#39;t wait for these to get harder.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygihp4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygihp4", "created":
        1669872430.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygikbe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "kingmrlapiz",
        "can_mod_post": false, "created_utc": 1669872474.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_53bpmsbw", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "670/736\n\n```js\nconst lines = file.split(''\\n\\n'').map(x =&gt; x.split(''\\n'').map(Number).reduce((a,
        b) =&gt; a + b)).sort((a, b) =&gt; b - a);\n\nconsole.log(\"Part1: \" + lines[0]);\nconsole.log(\"Part2:
        \" + lines.slice(0, 3).reduce((a, b) =&gt; a + b));\n```", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;670/736&lt;/p&gt;\n\n&lt;p&gt;```js\nconst
        lines = file.split(&amp;#39;\\n\\n&amp;#39;).map(x =&amp;gt; x.split(&amp;#39;\\n&amp;#39;).map(Number).reduce((a,
        b) =&amp;gt; a + b)).sort((a, b) =&amp;gt; b - a);&lt;/p&gt;\n\n&lt;p&gt;console.log(&amp;quot;Part1:
        &amp;quot; + lines[0]);\nconsole.log(&amp;quot;Part2: &amp;quot; + lines.slice(0,
        3).reduce((a, b) =&amp;gt; a + b));\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygikbe/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygikbe", "created": 1669872474.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669872917.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygikhh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Mobichobael",
        "can_mod_post": false, "created_utc": 1669872477.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_9ww60", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3 (5,263 | 4,651)\n\nlist comprehension for days!\n\n    from aocd
        import get_data\n    from typing import Any\n    \n    def get_solution(input:Any)
        -&gt; tuple: \n        nested = [x.split(''\\n'') for x in input]\n        totals
        = [sum([int(y) for y in x]) for x in nested]\n        a =max(totals)\n        b
        = sum(sorted(totals,reverse=True)[:3])\n        \n        return a,b\n    \n    if
        __name__ == ''__main__'':\n        d = get_data(day=1, year=2022).split(''\\n\\n'')\n        a,b
        = get_solution( input = d)\n        print(a,b)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python3 (5,263 | 4,651)&lt;/p&gt;\n\n&lt;p&gt;list
        comprehension for days!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from aocd import
        get_data\nfrom typing import Any\n\ndef get_solution(input:Any) -&amp;gt;
        tuple: \n    nested = [x.split(&amp;#39;\\n&amp;#39;) for x in input]\n    totals
        = [sum([int(y) for y in x]) for x in nested]\n    a =max(totals)\n    b =
        sum(sorted(totals,reverse=True)[:3])\n\n    return a,b\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n    d
        = get_data(day=1, year=2022).split(&amp;#39;\\n\\n&amp;#39;)\n    a,b = get_solution(
        input = d)\n    print(a,b)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygikhh/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygikhh", "created": 1669872477.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygilxa", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "mine248", "can_mod_post": false, "created_utc":
        1669872502.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_rhmof", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "# Python\n\nPart 1:\n\n```python\nf
        = open(\"input.txt\", ''r'')\ninput = f.read().splitlines()\n\nmaxCal = 0\ncurTotal
        = 0\nfor line in input:\n    line = line.strip()\n    print(line)\n    if
        line == '''':\n        maxCal = max(maxCal, curTotal)\n        curTotal =
        0\n    else:\n        curTotal += int(line)\n\nprint(maxCal)\n```\n\nPart
        2 (got lazy with trying to do things efficiently, as I dont think there were
        that many to go through anyways, if I wasn''t in a rush I''d do another way):\n\n```python\nf
        = open(\"input.txt\", ''r'')\ninput = f.read().splitlines()\n\ncals = []\ntotal
        = 0\ncurTotal = 0\nfor line in input:\n    line = line.strip()\n    if line
        == '''':\n        cals.append(curTotal)\n        curTotal = 0\n    else:\n        curTotal
        += int(line)\ncals.sort()\nfor i in range(len(cals) - 1, len(cals) - 4, -1):\n    print(cals[i])\n    total
        += cals[i]\n\nprint(total)\n```", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;Part 1:&lt;/p&gt;\n\n&lt;p&gt;```python\nf
        = open(&amp;quot;input.txt&amp;quot;, &amp;#39;r&amp;#39;)\ninput = f.read().splitlines()&lt;/p&gt;\n\n&lt;p&gt;maxCal
        = 0\ncurTotal = 0\nfor line in input:\n    line = line.strip()\n    print(line)\n    if
        line == &amp;#39;&amp;#39;:\n        maxCal = max(maxCal, curTotal)\n        curTotal
        = 0\n    else:\n        curTotal += int(line)&lt;/p&gt;\n\n&lt;p&gt;print(maxCal)\n```&lt;/p&gt;\n\n&lt;p&gt;Part
        2 (got lazy with trying to do things efficiently, as I dont think there were
        that many to go through anyways, if I wasn&amp;#39;t in a rush I&amp;#39;d
        do another way):&lt;/p&gt;\n\n&lt;p&gt;```python\nf = open(&amp;quot;input.txt&amp;quot;,
        &amp;#39;r&amp;#39;)\ninput = f.read().splitlines()&lt;/p&gt;\n\n&lt;p&gt;cals
        = []\ntotal = 0\ncurTotal = 0\nfor line in input:\n    line = line.strip()\n    if
        line == &amp;#39;&amp;#39;:\n        cals.append(curTotal)\n        curTotal
        = 0\n    else:\n        curTotal += int(line)\ncals.sort()\nfor i in range(len(cals)
        - 1, len(cals) - 4, -1):\n    print(cals[i])\n    total += cals[i]&lt;/p&gt;\n\n&lt;p&gt;print(total)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygilxa/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygilxa", "created":
        1669872502.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygipfe",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Cheezmeister",
        "can_mod_post": false, "created_utc": 1669872563.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_3v2zr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JS in browser console on page just for funs.\n\n\n```\nlocalStorage[''input'']
        = input = ''REDACTED'';\nsums = input.split(/\\n\\n/).map(s =&gt; (s.split(''\\n'').reduce((a,
        b) =&gt; a + Number(b), 0)));\nanswer = sums.sort((a, b) =&gt; a &lt; b)[0];\ndocument.querySelector(''input[name=\"answer\"]'').value
        = answer;\ndocument.forms[0].submit();\n// (click, refresh)\ninput = localStorage[''input''];\nsums
        = input.split(/\\n\\n/).map(s =&gt; (s.split(''\\n'').reduce((a, b) =&gt;
        a + Number(b), 0)));\nanswer = sums.sort((a, b) =&gt; a &lt; b).slice(0,3).reduce((a,b)
        =&gt; a+b);\ndocument.querySelector(''input[name=\"answer\"]'').value = answer;\ndocument.forms[0].submit();\n```\n\nDay
        1 is so chill and pleasant ^_^", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;JS in browser console on page just for funs.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nlocalStorage[&amp;#39;input&amp;#39;]
        = input = &amp;#39;REDACTED&amp;#39;;\nsums = input.split(/\\n\\n/).map(s
        =&amp;gt; (s.split(&amp;#39;\\n&amp;#39;).reduce((a, b) =&amp;gt; a + Number(b),
        0)));\nanswer = sums.sort((a, b) =&amp;gt; a &amp;lt; b)[0];\ndocument.querySelector(&amp;#39;input[name=&amp;quot;answer&amp;quot;]&amp;#39;).value
        = answer;\ndocument.forms[0].submit();\n// (click, refresh)\ninput = localStorage[&amp;#39;input&amp;#39;];\nsums
        = input.split(/\\n\\n/).map(s =&amp;gt; (s.split(&amp;#39;\\n&amp;#39;).reduce((a,
        b) =&amp;gt; a + Number(b), 0)));\nanswer = sums.sort((a, b) =&amp;gt; a &amp;lt;
        b).slice(0,3).reduce((a,b) =&amp;gt; a+b);\ndocument.querySelector(&amp;#39;input[name=&amp;quot;answer&amp;quot;]&amp;#39;).value
        = answer;\ndocument.forms[0].submit();\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Day
        1 is so chill and pleasant &lt;sup&gt;_^&lt;/sup&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygipfe/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygipfe", "created":
        1669872563.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669872780.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygire9", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "PendragonDaGreat",
        "can_mod_post": false, "created_utc": 1669872598.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_7nqwk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C#/CSharp [Code Here](https://github.com/Bpendragon/AdventOfCodeCSharp/blob/0d8f0/AdventOfCode/Solutions/Year2022/Day01-Solution.cs)\n\nBog
        standard iteration to create the list, use Linq to sort and select the answers.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C#/CSharp &lt;a href=\"https://github.com/Bpendragon/AdventOfCodeCSharp/blob/0d8f0/AdventOfCode/Solutions/Year2022/Day01-Solution.cs\"&gt;Code
        Here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Bog standard iteration to create the
        list, use Linq to sort and select the answers.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygire9/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygire9", "created": 1669872598.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669875601.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygits6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Multipl",
        "can_mod_post": false, "created_utc": 1669872640.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_mi3bz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\nSuper slow for a day 1. Had a bug in my parsing which threw
        me off for a couple of minutes. Clearly wasn''t prepared at all for the first
        day! Will implement in Go later for practice.\n\n    def solve_part_1(elves):\n        return
        max(sum(calories) for calories in elves)\n\n    def solve_part_2(elves):\n        return
        sum(sorted([sum(calories) for calories in elves])[-3:])\n\n    if __name__
        == ''__main__'':\n        with open(''input_01.txt'') as f:\n            elves
        = []\n            for group in f.read().split(''\\n\\n''):\n                elves.append(list(map(int,group.split(''\\n''))))\n\n            print(''Part
        1:'', solve_part_1(elves))\n            print(''Part 2:'', solve_part_2(elves))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Super
        slow for a day 1. Had a bug in my parsing which threw me off for a couple
        of minutes. Clearly wasn&amp;#39;t prepared at all for the first day! Will
        implement in Go later for practice.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def
        solve_part_1(elves):\n    return max(sum(calories) for calories in elves)\n\ndef
        solve_part_2(elves):\n    return sum(sorted([sum(calories) for calories in
        elves])[-3:])\n\nif __name__ == &amp;#39;__main__&amp;#39;:\n    with open(&amp;#39;input_01.txt&amp;#39;)
        as f:\n        elves = []\n        for group in f.read().split(&amp;#39;\\n\\n&amp;#39;):\n            elves.append(list(map(int,group.split(&amp;#39;\\n&amp;#39;))))\n\n        print(&amp;#39;Part
        1:&amp;#39;, solve_part_1(elves))\n        print(&amp;#39;Part 2:&amp;#39;,
        solve_part_2(elves))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygits6/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygits6", "created": 1669872640.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygiuff", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jjstatman", "can_mod_post": false, "created_utc":
        1669872651.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_136epa", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Python  \n\n\nOne-liner.
        Not too difficult and probably not the best way to do it, but it works...
        Haven''t really done one-line stuff in python that much\n\n&amp;#x200B;\n\n    import
        numpy as np\n    \n    if __name__ == \"__main__\":\n        with open(\"day1.txt\")
        as f:\n            (sol1, sol2) = [(totalcal[0], np.sum(totalcal[:3])) for
        totalcal in [sorted([np.sum([int(cal) for cal in elf.split(''\\n'')]) for
        elf in f.read().split(''\\n\\n'')],reverse=True)]][0]\n        print(''Solution
        1:'', sol1)\n        print(''Solution 2:'', sol2)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python  &lt;/p&gt;\n\n&lt;p&gt;One-liner. Not too
        difficult and probably not the best way to do it, but it works... Haven&amp;#39;t
        really done one-line stuff in python that much&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import
        numpy as np\n\nif __name__ == &amp;quot;__main__&amp;quot;:\n    with open(&amp;quot;day1.txt&amp;quot;)
        as f:\n        (sol1, sol2) = [(totalcal[0], np.sum(totalcal[:3])) for totalcal
        in [sorted([np.sum([int(cal) for cal in elf.split(&amp;#39;\\n&amp;#39;)])
        for elf in f.read().split(&amp;#39;\\n\\n&amp;#39;)],reverse=True)]][0]\n    print(&amp;#39;Solution
        1:&amp;#39;, sol1)\n    print(&amp;#39;Solution 2:&amp;#39;, sol2)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygiuff/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygiuff", "created":
        1669872651.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygizh5",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "michaelgallagher",
        "can_mod_post": false, "created_utc": 1669872741.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_9hr7h", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Python\n\n[Happy to be doing another AoC!](https://github.com/michaeljgallagher/Advent-of-Code/blob/master/2022/01.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Python&lt;/h1&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/michaeljgallagher/Advent-of-Code/blob/master/2022/01.py\"&gt;Happy
        to be doing another AoC!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": true, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygizh5/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygizh5", "created": 1669872741.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygj0fa", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "770grappenmaker", "can_mod_post": false,
        "created_utc": 1669872758.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_793zn197", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "# Kotlin [375/776]\n\nForgot
        to convert the strings to ints for part two, which ended up costing me to
        redo part two, costing a lot of time.\n\n    val elves = input\r\n        .split(\"\\n\\n\")\r\n        .map
        { it.lines().map(String::toInt).sum() }\r\n        .sortedDescending()\r\n\r\n    partOne
        = elves.first().s()\r\n    partTwo = (elves[0] + elves[1] + elves[2]).s()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Kotlin [375/776]&lt;/h1&gt;\n\n&lt;p&gt;Forgot
        to convert the strings to ints for part two, which ended up costing me to
        redo part two, costing a lot of time.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;val
        elves = input\n    .split(&amp;quot;\\n\\n&amp;quot;)\n    .map { it.lines().map(String::toInt).sum()
        }\n    .sortedDescending()\n\npartOne = elves.first().s()\npartTwo = (elves[0]
        + elves[1] + elves[2]).s()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygj0fa/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygj0fa", "created": 1669872758.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygj0gb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "beansparrow132", "can_mod_post": false,
        "created_utc": 1669872759.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_76xfwjmf", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "[Python](https://github.com/BeanSparrow/Advent-Of-Code-2022/blob/main/Day%201/day-1.ipynb)\n\nHere
        is my python solution.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://github.com/BeanSparrow/Advent-Of-Code-2022/blob/main/Day%201/day-1.ipynb\"&gt;Python&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Here
        is my python solution.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygj0gb/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygj0gb", "created":
        1669872759.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygj91q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "_AngelOnFira_",
        "can_mod_post": false, "created_utc": 1669872911.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_rcysv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Rust](https://github.com/AngelOnFira/advent-of-code/blob/fb227a6aefebad54f64e235bcc4297d22980605b/2022/src/day1.rs#L4)\n\nWasn''t
        super clean on the solve, but refactored to just use iterator functions.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/AngelOnFira/advent-of-code/blob/fb227a6aefebad54f64e235bcc4297d22980605b/2022/src/day1.rs#L4\"&gt;Rust&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Wasn&amp;#39;t
        super clean on the solve, but refactored to just use iterator functions.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygj91q/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygj91q", "created":
        1669872911.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygjmjd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WhipsAndMarkovChains",
        "can_mod_post": false, "created_utc": 1669873150.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_4vbfm8gy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python.\n\n    with open(\"inputs/day01.txt\") as f:\n        elf_inventories
        = f.read().split(\"\\n\\n\")\n        elf_inventories = [\n            [int(snack)
        for snack in elf.split(\"\\n\")] for elf in elf_inventories\n        ]\n    \n    calories_carried
        = sorted([sum(elf) for elf in elf_inventories], reverse=True)\n    \n    #
        Part 1 solution.\n    print(f\"The elf carrying the most calories is carrying
        {calories_carried[0]} calories.\")\n    \n    # Part 2 solution.\n    print(f\"The
        top three elves are carrying {sum(calories_carried[:3])} calories.\")", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;quot;inputs/day01.txt&amp;quot;) as f:\n    elf_inventories = f.read().split(&amp;quot;\\n\\n&amp;quot;)\n    elf_inventories
        = [\n        [int(snack) for snack in elf.split(&amp;quot;\\n&amp;quot;)]
        for elf in elf_inventories\n    ]\n\ncalories_carried = sorted([sum(elf) for
        elf in elf_inventories], reverse=True)\n\n# Part 1 solution.\nprint(f&amp;quot;The
        elf carrying the most calories is carrying {calories_carried[0]} calories.&amp;quot;)\n\n#
        Part 2 solution.\nprint(f&amp;quot;The top three elves are carrying {sum(calories_carried[:3])}
        calories.&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjmjd/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygjmjd", "created": 1669873150.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iygjsuh", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "x3nophus", "can_mod_post": false, "created_utc":
        1669873261.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_399k2n2n", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "[TypeScript](https://topaz.github.io/paste/#XQAAAQAUBAAAAAAAAAAxm8oZxjYXx5KZA91ANgimkUYCxgV9nFCkuZw9PcIFyR5r395+Vj57td7jtJctl3LS0NliLR88jAxuqIuub2l4kb4HKJAgPljiL1/7dkv7TnrlNC/nNPj/49QfIC4oNbEJ0PdezWdkNGXGAaMxq0XKELgR8t5FvBeaTKOtQ92pBJ/6/fDWSSvP/ij4ycrm+kusqJgnMQOpVaKSk05wx+Xj/zrWXRdFcEeIXhZ3gav4lkxqtLBoDZYw9fSlLX0KkRTCgFf5qgEfNmS8u6i5n/o4NR5y2zhKYy4a2OjIYu5dJKZe7HChlWWANCikRKVS6QmyAekCPqOygTWKkeC3+wVQIKOlAA2EHD59Su/bi+7ByPih6FXz/8hToR4=)\n\nNice
        and verbose", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"https://topaz.github.io/paste/#XQAAAQAUBAAAAAAAAAAxm8oZxjYXx5KZA91ANgimkUYCxgV9nFCkuZw9PcIFyR5r395+Vj57td7jtJctl3LS0NliLR88jAxuqIuub2l4kb4HKJAgPljiL1/7dkv7TnrlNC/nNPj/49QfIC4oNbEJ0PdezWdkNGXGAaMxq0XKELgR8t5FvBeaTKOtQ92pBJ/6/fDWSSvP/ij4ycrm+kusqJgnMQOpVaKSk05wx+Xj/zrWXRdFcEeIXhZ3gav4lkxqtLBoDZYw9fSlLX0KkRTCgFf5qgEfNmS8u6i5n/o4NR5y2zhKYy4a2OjIYu5dJKZe7HChlWWANCikRKVS6QmyAekCPqOygTWKkeC3+wVQIKOlAA2EHD59Su/bi+7ByPih6FXz/8hToR4=\"&gt;TypeScript&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nice
        and verbose&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjsuh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjsuh", "created":
        1669873261.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygjuhs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Puzzled_Programmer97",
        "can_mod_post": false, "created_utc": 1669873290.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_meijasun", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Java https://github.com/martenhernebring/aoc2022/tree/solution", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Java &lt;a href=\"https://github.com/martenhernebring/aoc2022/tree/solution\"&gt;https://github.com/martenhernebring/aoc2022/tree/solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjuhs/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjuhs", "created":
        1669873290.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669873772.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygjyh0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Cpt__Cookie",
        "can_mod_post": false, "created_utc": 1669873362.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_6lb4msar", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "my rust [solution](https://github.com/CptCookie/AOC/blob/master/Rust/2022/Day1/src/main.rs).
        I guess my rust is a bit rusty.... I am sorry :D", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;my rust &lt;a href=\"https://github.com/CptCookie/AOC/blob/master/Rust/2022/Day1/src/main.rs\"&gt;solution&lt;/a&gt;.
        I guess my rust is a bit rusty.... I am sorry :D&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjyh0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjyh0", "created":
        1669873362.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygjzud",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Grygon",
        "can_mod_post": false, "created_utc": 1669873386.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_53jc7", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Typescript](https://github.com/Grygon/advent-of-code/blob/main/years/2022/01/index.ts)\n\nNothing
        fancy, but I think TS will come in handy later over JS.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/Grygon/advent-of-code/blob/main/years/2022/01/index.ts\"&gt;Typescript&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Nothing
        fancy, but I think TS will come in handy later over JS.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygjzud/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygjzud", "created":
        1669873386.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygk2q0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "blodgrahm",
        "can_mod_post": false, "created_utc": 1669873439.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_8u7ex", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Rust](https://github.com/natemcintosh/aoc\\_2022/blob/main/examples/day01.rs)\n\nSetup
        took 155 \u00b5s\n\nPart 1 took 4 \u00b5s\n\nPart 2 took 11 \u00b5s", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://github.com/natemcintosh/aoc_2022/blob/main/examples/day01.rs\"&gt;Rust&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Setup
        took 155 \u00b5s&lt;/p&gt;\n\n&lt;p&gt;Part 1 took 4 \u00b5s&lt;/p&gt;\n\n&lt;p&gt;Part
        2 took 11 \u00b5s&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygk2q0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygk2q0", "created":
        1669873439.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iygwqbe", "id": "iygwqbe", "parent_id":
        "t1_iygk2q0", "depth": 1, "children": ["iygwqbe"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygk3a4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CamoN1nja",
        "can_mod_post": false, "created_utc": 1669873449.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_ada2rq0k", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Language: Python\n\n&amp;#x200B;\n\nPart 1: [https://github.com/wmt1276/advent-of-code-2022/blob/main/1a.py](https://github.com/wmt1276/advent-of-code-2022/blob/main/1a.py)\n\nPart
        2: [https://github.com/wmt1276/advent-of-code-2022/blob/main/1b.py](https://github.com/wmt1276/advent-of-code-2022/blob/main/1b.py)\n\n&amp;#x200B;\n\nBoth
        completed in the top dozen-hundred of the global leaderboard, which I believe
        is my best result.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Language:
        Python&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Part 1: &lt;a
        href=\"https://github.com/wmt1276/advent-of-code-2022/blob/main/1a.py\"&gt;https://github.com/wmt1276/advent-of-code-2022/blob/main/1a.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Part
        2: &lt;a href=\"https://github.com/wmt1276/advent-of-code-2022/blob/main/1b.py\"&gt;https://github.com/wmt1276/advent-of-code-2022/blob/main/1b.py&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Both
        completed in the top dozen-hundred of the global leaderboard, which I believe
        is my best result.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygk3a4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygk3a4", "created":
        1669873449.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygk5ym",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Ryles1",
        "can_mod_post": false, "created_utc": 1669873498.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_jiltd", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "python 3\n\nused the built in sorted function to save myself a bunch of time.  good
        warmup\n\n[Day 1](https://github.com/Ryles1/AdventofCode/blob/main/2022/day1.py)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;python 3&lt;/p&gt;\n\n&lt;p&gt;used
        the built in sorted function to save myself a bunch of time.  good warmup&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Ryles1/AdventofCode/blob/main/2022/day1.py\"&gt;Day
        1&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygk5ym/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygk5ym", "created":
        1669873498.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669942350.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygk71s", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fudgebucket27",
        "can_mod_post": false, "created_utc": 1669873517.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_5rhrs", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Language: C#\n\nPart 1:https://github.com/fudgebucket27/AdventOfCode2022/tree/master/Day1Part1\n\n    List&lt;Elf&gt;
        elves = new List&lt;Elf&gt;();\n    Elf elf = new Elf();\n    foreach (string
        line in System.IO.File.ReadLines(\"input.txt\"))\n    { \n        if(string.IsNullOrEmpty(line))\n        {\n            elf.TotalCalories
        = elf.Calories!.Sum();\n            elves.Add(elf);\n            elf = new
        Elf();\n        }\n        else\n        {\n         \n            elf.Calories!.Add(Int32.Parse(line));\n        }\n    }\n    \n    var
        highestCalories = elves.Max(t=&gt; t.TotalCalories);\n    Console.WriteLine($\"Elf
        with highest calories has {highestCalories} calories\");   \n\nPart 2:https://github.com/fudgebucket27/AdventOfCode2022/tree/master/Day1Part2\n\n    \n    List&lt;Elf&gt;
        elves = new List&lt;Elf&gt;();\n    Elf elf = new Elf();\n    foreach (string
        line in System.IO.File.ReadLines(\"input.txt\"))\n    {\n        if (string.IsNullOrEmpty(line))\n        {\n            elf.TotalCalories
        = elf.Calories!.Sum();\n            elves.Add(elf);\n            elf = new
        Elf();\n        }\n        else\n        {\n    \n            elf.Calories!.Add(Int32.Parse(line));\n        }\n    }\n    \n    var
        elvesSorted = elves.OrderByDescending(x=&gt;x.TotalCalories).ToList();\n    int
        highestCaloriesTop3 = elvesSorted[0].TotalCalories + elvesSorted[1].TotalCalories
        + elvesSorted[2].TotalCalories;\n    Console.WriteLine($\"Top 3 elves hold
        {highestCaloriesTop3} calories\");", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Language: C#&lt;/p&gt;\n\n&lt;p&gt;Part 1:&lt;a href=\"https://github.com/fudgebucket27/AdventOfCode2022/tree/master/Day1Part1\"&gt;https://github.com/fudgebucket27/AdventOfCode2022/tree/master/Day1Part1&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;List&amp;lt;Elf&amp;gt;
        elves = new List&amp;lt;Elf&amp;gt;();\nElf elf = new Elf();\nforeach (string
        line in System.IO.File.ReadLines(&amp;quot;input.txt&amp;quot;))\n{ \n    if(string.IsNullOrEmpty(line))\n    {\n        elf.TotalCalories
        = elf.Calories!.Sum();\n        elves.Add(elf);\n        elf = new Elf();\n    }\n    else\n    {\n\n        elf.Calories!.Add(Int32.Parse(line));\n    }\n}\n\nvar
        highestCalories = elves.Max(t=&amp;gt; t.TotalCalories);\nConsole.WriteLine($&amp;quot;Elf
        with highest calories has {highestCalories} calories&amp;quot;);   \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part
        2:&lt;a href=\"https://github.com/fudgebucket27/AdventOfCode2022/tree/master/Day1Part2\"&gt;https://github.com/fudgebucket27/AdventOfCode2022/tree/master/Day1Part2&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;List&amp;lt;Elf&amp;gt;
        elves = new List&amp;lt;Elf&amp;gt;();\nElf elf = new Elf();\nforeach (string
        line in System.IO.File.ReadLines(&amp;quot;input.txt&amp;quot;))\n{\n    if
        (string.IsNullOrEmpty(line))\n    {\n        elf.TotalCalories = elf.Calories!.Sum();\n        elves.Add(elf);\n        elf
        = new Elf();\n    }\n    else\n    {\n\n        elf.Calories!.Add(Int32.Parse(line));\n    }\n}\n\nvar
        elvesSorted = elves.OrderByDescending(x=&amp;gt;x.TotalCalories).ToList();\nint
        highestCaloriesTop3 = elvesSorted[0].TotalCalories + elvesSorted[1].TotalCalories
        + elvesSorted[2].TotalCalories;\nConsole.WriteLine($&amp;quot;Top 3 elves
        hold {highestCaloriesTop3} calories&amp;quot;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygk71s/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygk71s", "created":
        1669873517.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669874394.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygk7ty", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ShrimpHeavenNow",
        "can_mod_post": false, "created_utc": 1669873530.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_amopd2q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python:\n\n    with open(''calories.txt'') as f:\n       sweeps = [line.rstrip().split(\"\\n\\n\")
        for line in f]  #  This variable name is from day one of 2021\n\n    entry
        =[]\n    entries = []\n    for x in sweeps:  #  I KNOW theres a way to do
        this in the with loop and I think I''ve done it before.\n    if x[0] != \"\":\n        entry.append(int(x[0]))\n    else:\n        entries.append(entry)\n        entry
        = []\n\n    totals = []\n        for x in entries:\n        current = 0\n        for
        y in x:\n            current += y\n        totals.append(current)\n    print(\"Part
        One: \", max(totals))  \n    totals.sort()\n    totals.reverse()\n    print(\"Part
        Two: \", totals[0]+totals[1]+totals[2])\n\nI need to learn to parse better
        and I feel like the sorting/ reversing is a real cheap way of doing it and
        there''s probably a much more elegant way, but It works and I can''t complain.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;with
        open(&amp;#39;calories.txt&amp;#39;) as f:\n   sweeps = [line.rstrip().split(&amp;quot;\\n\\n&amp;quot;)
        for line in f]  #  This variable name is from day one of 2021\n\nentry =[]\nentries
        = []\nfor x in sweeps:  #  I KNOW theres a way to do this in the with loop
        and I think I&amp;#39;ve done it before.\nif x[0] != &amp;quot;&amp;quot;:\n    entry.append(int(x[0]))\nelse:\n    entries.append(entry)\n    entry
        = []\n\ntotals = []\n    for x in entries:\n    current = 0\n    for y in
        x:\n        current += y\n    totals.append(current)\nprint(&amp;quot;Part
        One: &amp;quot;, max(totals))  \ntotals.sort()\ntotals.reverse()\nprint(&amp;quot;Part
        Two: &amp;quot;, totals[0]+totals[1]+totals[2])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        need to learn to parse better and I feel like the sorting/ reversing is a
        real cheap way of doing it and there&amp;#39;s probably a much more elegant
        way, but It works and I can&amp;#39;t complain.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygk7ty/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygk7ty", "created":
        1669873530.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygl9hx",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "eatin_gushers",
        "can_mod_post": false, "created_utc": 1669874219.0, "send_replies": true,
        "parent_id": "t1_iygk7ty", "score": 3, "author_fullname": "t2_a3mzh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I think the most pythonic way is negative indices:\n\n\ntotals.sort()\n  \nprint(\u201c2:\u201d,
        sum(totals[-3:]))", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        think the most pythonic way is negative indices:&lt;/p&gt;\n\n&lt;p&gt;totals.sort()&lt;/p&gt;\n\n&lt;p&gt;print(\u201c2:\u201d,
        sum(totals[-3:]))&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygl9hx/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygl9hx", "created":
        1669874219.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyglhr1", "id": "iyglhr1", "parent_id":
        "t1_iygl9hx", "depth": 2, "children": ["iyglhr1"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygknmh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "WhipsAndMarkovChains",
        "can_mod_post": false, "created_utc": 1669873817.0, "send_replies": true,
        "parent_id": "t1_iygk7ty", "score": 3, "author_fullname": "t2_4vbfm8gy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt; sorting/ reversing is a real cheap way of doing it and there''s probably
        a much more elegant way\n\nIt looks like a lot of us did that but used `totals
        = sorted(totals, reverse=True)`.", "awarders": [], "top_awarded_type": null,
        "author_flair_css_class": null, "author_patreon_flair": false, "downs": 0,
        "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;sorting/ reversing is a real
        cheap way of doing it and there&amp;#39;s probably a much more elegant way&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It
        looks like a lot of us did that but used &lt;code&gt;totals = sorted(totals,
        reverse=True)&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygknmh/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygknmh", "created":
        1669873817.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 1, "name": "t1_iygkx41", "id": "iygkx41", "parent_id":
        "t1_iygknmh", "depth": 2, "children": ["iygkx41"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygk841",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "sceadu",
        "can_mod_post": false, "created_utc": 1669873535.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_3h1m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    import cytoolz.curried as cc\n    import sys\n    from pprint import
        pprint as pp\n\n    sys.displayhook = lambda x: exec([''_=x; pp(x)'',''pass''][x
        is None])\n\n    input_data = cc.pipe(\n        # open(''day1-test.txt'').read().splitlines()\n        open(''day1-input.txt'').read().splitlines()\n        ,
        cc.partitionby(lambda s: s == '''')\n        , cc.filter(lambda seq: seq[0]
        != '''')\n        , cc.map(lambda seq: sum([int(s) for s in seq]))\n        ,
        sorted\n    )\n\n    max_cals_p1 = input_data[-1]\n    max_cals_p2 = sum(input_data[-3:])",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;import
        cytoolz.curried as cc\nimport sys\nfrom pprint import pprint as pp\n\nsys.displayhook
        = lambda x: exec([&amp;#39;_=x; pp(x)&amp;#39;,&amp;#39;pass&amp;#39;][x is
        None])\n\ninput_data = cc.pipe(\n    # open(&amp;#39;day1-test.txt&amp;#39;).read().splitlines()\n    open(&amp;#39;day1-input.txt&amp;#39;).read().splitlines()\n    ,
        cc.partitionby(lambda s: s == &amp;#39;&amp;#39;)\n    , cc.filter(lambda
        seq: seq[0] != &amp;#39;&amp;#39;)\n    , cc.map(lambda seq: sum([int(s) for
        s in seq]))\n    , sorted\n)\n\nmax_cals_p1 = input_data[-1]\nmax_cals_p2
        = sum(input_data[-3:])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygk841/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygk841", "created": 1669873535.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669933153.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygkf3o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "willkill07",
        "can_mod_post": false, "created_utc": 1669873661.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_7j0ca", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# [Python](https://github.com/willkill07/AdventOfCode2022/blob/main/python/Day01.py)
        and [Modern C++ with POSIX](https://github.com/willkill07/AdventOfCode2022/blob/main/days/Day01.cpp)
        , 540 / 678\n\nTo keep track of the top three, you can do some clever state
        variable updates OR just do a partial sort. No need to fully sort the aggregated
        calories :)\n\nC++ solution runs in under 35 microseconds.", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;h1&gt;&lt;a href=\"https://github.com/willkill07/AdventOfCode2022/blob/main/python/Day01.py\"&gt;Python&lt;/a&gt;
        and &lt;a href=\"https://github.com/willkill07/AdventOfCode2022/blob/main/days/Day01.cpp\"&gt;Modern
        C++ with POSIX&lt;/a&gt; , 540 / 678&lt;/h1&gt;\n\n&lt;p&gt;To keep track
        of the top three, you can do some clever state variable updates OR just do
        a partial sort. No need to fully sort the aggregated calories :)&lt;/p&gt;\n\n&lt;p&gt;C++
        solution runs in under 35 microseconds.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygkf3o/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygkf3o", "created": 1669873661.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyglca6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "youaremean_YAM", "can_mod_post": false,
        "created_utc": 1669874271.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_14969o", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Pretty excited for
        AoC starting and all the daily headaches i''m gonna be having. [Today''s Javascript
        solution](https://github.com/agardes/adventOfCode2022/blob/main/day01.js)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pretty excited for AoC
        starting and all the daily headaches i&amp;#39;m gonna be having. &lt;a href=\"https://github.com/agardes/adventOfCode2022/blob/main/day01.js\"&gt;Today&amp;#39;s
        Javascript solution&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglca6/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyglca6", "created": 1669874271.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "more", "data": {"count": 2, "name":
        "t1_iygrsn2", "id": "iygrsn2", "parent_id": "t1_iyglca6", "depth": 1, "children":
        ["iygrsn2"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc":
        null, "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygld5k", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "stokworks",
        "can_mod_post": false, "created_utc": 1669874286.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_qh67y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python oneliners for both parts\n\n    # Part 1\n    print(max([sum(map(int,
        l.split())) for l in open(''input.txt'').read().split(\"\\n\\n\")]))\n    \n    #
        Part 2\n    print(sum(sorted([sum(map(int, l.split())) for l in open(''input.txt'').read().split(\"\\n\\n\")])[-3:]))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python oneliners for
        both parts&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Part 1\nprint(max([sum(map(int,
        l.split())) for l in open(&amp;#39;input.txt&amp;#39;).read().split(&amp;quot;\\n\\n&amp;quot;)]))\n\n#
        Part 2\nprint(sum(sorted([sum(map(int, l.split())) for l in open(&amp;#39;input.txt&amp;#39;).read().split(&amp;quot;\\n\\n&amp;quot;)])[-3:]))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygld5k/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygld5k", "created":
        1669874286.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyglepl",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mebeim",
        "can_mod_post": false, "created_utc": 1669874315.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_121hf2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "116/396 - **[Python 3 solution](https://github.com/mebeim/aoc/blob/master/2022/solutions/day01.py)**
        - **[Walkthrough](https://github.com/mebeim/aoc/blob/master/2022/README.md#day-1---calorie-counting)**\n\nWould
        have easily gotten top 100 for part 2, if I hadn''t forgotten that Python''s
        `sort()` by default sorts in *ascending* order \\*facepalm*.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;116/396 - &lt;strong&gt;&lt;a href=\"https://github.com/mebeim/aoc/blob/master/2022/solutions/day01.py\"&gt;Python
        3 solution&lt;/a&gt;&lt;/strong&gt; - &lt;strong&gt;&lt;a href=\"https://github.com/mebeim/aoc/blob/master/2022/README.md#day-1---calorie-counting\"&gt;Walkthrough&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Would
        have easily gotten top 100 for part 2, if I hadn&amp;#39;t forgotten that
        Python&amp;#39;s &lt;code&gt;sort()&lt;/code&gt; by default sorts in &lt;em&gt;ascending&lt;/em&gt;
        order *facepalm*.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglepl/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyglepl", "created":
        1669874315.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygllw5", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "Python!\n\nSolution 1: [https://pastebin.com/zgPfM7KU](https://pastebin.com/zgPfM7KU)\n\nSolution
        2: [https://pastebin.com/EvFYV9Dz](https://pastebin.com/EvFYV9Dz)", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_iygllw5", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python!&lt;/p&gt;\n\n&lt;p&gt;Solution
        1: &lt;a href=\"https://pastebin.com/zgPfM7KU\"&gt;https://pastebin.com/zgPfM7KU&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Solution
        2: &lt;a href=\"https://pastebin.com/EvFYV9Dz\"&gt;https://pastebin.com/EvFYV9Dz&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "gildings": {}, "collapsed_reason": null, "distinguished": null, "associated_award":
        null, "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygllw5/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669874452.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669874452.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyglpww", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iyglpww", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyglpww/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669874527.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669874527.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygthiz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "rampant__spirit",
        "can_mod_post": false, "created_utc": 1669880387.0, "send_replies": true,
        "parent_id": "t1_iyglpww", "score": 2, "author_fullname": "t2_4hkv0pws", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "`sum(v:=sorted(sum(map(int,y.split()))for y in open(0).read().split(''\\n\\n''))[-3:]),v[2]`  \nI''ve
        golfed it. Would you know a way to perhaps remove the loop here?", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;sum(v:=sorted(sum(map(int,y.split()))for
        y in open(0).read().split(&amp;#39;\\n\\n&amp;#39;))[-3:]),v[2]&lt;/code&gt;&lt;br/&gt;\nI&amp;#39;ve
        golfed it. Would you know a way to perhaps remove the loop here?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygthiz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygthiz", "created":
        1669880387.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iygu2sg", "id": "iygu2sg", "parent_id":
        "t1_iygthiz", "depth": 2, "children": ["iygu2sg", "iygugm5"]}}, {"kind": "t1",
        "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygmznb", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iygmznb", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygmznb/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669875406.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669875406.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "more", "data": {"count": 5, "name": "t1_iygnohs", "id": "iygnohs", "parent_id":
        "t1_iygmznb", "depth": 1, "children": ["iygnohs"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669876499.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygnjv0", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Dullstar",
        "can_mod_post": false, "created_utc": 1669875806.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_oty64", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**[Python](https://github.com/Dullstar/Advent_Of_Code/blob/main/python/year2022/day01.py)**\n\nAs
        is tradition, I overengineer these early problems trying to keep things nice
        and organized because I have a bit of a habit of trying to leverage the type
        system (as much as the language will reasonably allow, anyway) to keep things
        organized. But hopefully it makes things nice and readable, particularly as
        the problems start getting harder. Half expecting to get a few complaints
        about it though on the early days; it happened last year.\n\n...although unfortunately
        there''s not really any way around all the timing stuff cluttering up main
        short of just removing it entirely.\n\nI thought about messing more with Rust
        this year, but I decided it was a bad idea. I kinda burned out earlier this
        year by eating through all my confidence in a short period of time putting
        myself out there on ye olde job market and so I ended up prioritizing other
        hobbies over coding as it had become somewhat of a reminder of my failures,
        so I think for now it''s best to stick with what I know and try to just write
        some code again.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;&lt;a
        href=\"https://github.com/Dullstar/Advent_Of_Code/blob/main/python/year2022/day01.py\"&gt;Python&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;As
        is tradition, I overengineer these early problems trying to keep things nice
        and organized because I have a bit of a habit of trying to leverage the type
        system (as much as the language will reasonably allow, anyway) to keep things
        organized. But hopefully it makes things nice and readable, particularly as
        the problems start getting harder. Half expecting to get a few complaints
        about it though on the early days; it happened last year.&lt;/p&gt;\n\n&lt;p&gt;...although
        unfortunately there&amp;#39;s not really any way around all the timing stuff
        cluttering up main short of just removing it entirely.&lt;/p&gt;\n\n&lt;p&gt;I
        thought about messing more with Rust this year, but I decided it was a bad
        idea. I kinda burned out earlier this year by eating through all my confidence
        in a short period of time putting myself out there on ye olde job market and
        so I ended up prioritizing other hobbies over coding as it had become somewhat
        of a reminder of my failures, so I think for now it&amp;#39;s best to stick
        with what I know and try to just write some code again.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnjv0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygnjv0", "created":
        1669875806.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygr77m",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pancakeQueue",
        "can_mod_post": false, "created_utc": 1669878536.0, "send_replies": true,
        "parent_id": "t1_iygnjv0", "score": 2, "author_fullname": "t2_lqqfisy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I decided to try Rust for the first time and use this to learn it.  I will
        say it already is pretty hard.  My most experience is with Python and python
        spoils you.  That said I was going to go with golang before I started reading
        the Rust documentation, like really good.  Great tool to dive into the language.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I decided to try Rust
        for the first time and use this to learn it.  I will say it already is pretty
        hard.  My most experience is with Python and python spoils you.  That said
        I was going to go with golang before I started reading the Rust documentation,
        like really good.  Great tool to dive into the language.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygr77m/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygr77m", "created":
        1669878536.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygnnt2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "asdf-user",
        "can_mod_post": false, "created_utc": 1669875884.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_80utk", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "A fairly dumb solution in Rust: https://phlaym.net/git/phlaym/aoc-2022/src/branch/main/src/day01/mod.rs\n\nI
        did *not* think to split it by `\\n\\n` first, so I got creative", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;A fairly dumb solution in Rust: &lt;a href=\"https://phlaym.net/git/phlaym/aoc-2022/src/branch/main/src/day01/mod.rs\"&gt;https://phlaym.net/git/phlaym/aoc-2022/src/branch/main/src/day01/mod.rs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I
        did &lt;em&gt;not&lt;/em&gt; think to split it by &lt;code&gt;\\n\\n&lt;/code&gt;
        first, so I got creative&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnnt2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygnnt2", "created":
        1669875884.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669876629.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygnov1", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "mc2thaH",
        "can_mod_post": false, "created_utc": 1669875905.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_4b4w0", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution using C# (5057/4380)\n\n    long highestCalories = input\n        .Split(\"\\n\\n\")\n        .Select(elf
        =&gt; elf\n            .Split(''\\n'', StringSplitOptions.RemoveEmptyEntries)\n            .Aggregate(0L,
        (acc, value) =&gt; acc + long.Parse(value)))\n        .Max();\n    \n    long
        highestThreeElves = input\n        .Split(\"\\n\\n\")\n        .Select(elf
        =&gt; elf\n            .Split(''\\n'', StringSplitOptions.RemoveEmptyEntries)\n            .Aggregate(0L,
        (acc, value) =&gt; acc + long.Parse(value)))\n        .OrderDescending()\n        .Take(3)\n        .Sum();\n\n[Source](https://github.com/mkchandler/advent-of-code-2022/blob/main/AdventOfCode.Day01/Program.cs)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution using C#
        (5057/4380)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;long highestCalories = input\n    .Split(&amp;quot;\\n\\n&amp;quot;)\n    .Select(elf
        =&amp;gt; elf\n        .Split(&amp;#39;\\n&amp;#39;, StringSplitOptions.RemoveEmptyEntries)\n        .Aggregate(0L,
        (acc, value) =&amp;gt; acc + long.Parse(value)))\n    .Max();\n\nlong highestThreeElves
        = input\n    .Split(&amp;quot;\\n\\n&amp;quot;)\n    .Select(elf =&amp;gt;
        elf\n        .Split(&amp;#39;\\n&amp;#39;, StringSplitOptions.RemoveEmptyEntries)\n        .Aggregate(0L,
        (acc, value) =&amp;gt; acc + long.Parse(value)))\n    .OrderDescending()\n    .Take(3)\n    .Sum();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/mkchandler/advent-of-code-2022/blob/main/AdventOfCode.Day01/Program.cs\"&gt;Source&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnov1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygnov1", "created":
        1669875905.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygnqw6",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "enelen",
        "can_mod_post": false, "created_utc": 1669875947.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 2, "author_fullname": "t2_t7yj3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "R / Rlang\n\n[Solution](https://github.com/AdroMine/AdventOfCode/tree/main/2022/Day01)\n\nThere''s
        probably a better way to parse this", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;R / Rlang&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/AdroMine/AdventOfCode/tree/main/2022/Day01\"&gt;Solution&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s
        probably a better way to parse this&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnqw6/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygnqw6", "created": 1669875947.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 2, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyh49c6", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Extreme-Ice7350", "can_mod_post": false,
        "created_utc": 1669890056.0, "send_replies": true, "parent_id": "t1_iygnqw6",
        "score": 2, "author_fullname": "t2_92jwdclh", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "R tidyverse solution\n\n    library(tidyverse)\n    \n    #
        Part 1\n    max(\n      unlist(\n        map(strsplit(data, \"\\n\\n\")[[1]],\n          ~{sum(\n              as.numeric(\n               unlist(\n                 strsplit(.x,\"\\n\"))\n              ))\n            })))\n    \n    #
        Part 2\n      unlist(\n        map(strsplit(data, \"\\n\\n\")[[1]],\n            ~{sum(\n              as.numeric(\n                unlist(\n                  strsplit(.x,\"\\n\"))\n              ))\n            }))
        %&gt;% \n        sort(decreasing = TRUE) %&gt;% \n        head(3) %&gt;% \n        sum()",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;R tidyverse solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;library(tidyverse)\n\n#
        Part 1\nmax(\n  unlist(\n    map(strsplit(data, &amp;quot;\\n\\n&amp;quot;)[[1]],\n      ~{sum(\n          as.numeric(\n           unlist(\n             strsplit(.x,&amp;quot;\\n&amp;quot;))\n          ))\n        })))\n\n#
        Part 2\n  unlist(\n    map(strsplit(data, &amp;quot;\\n\\n&amp;quot;)[[1]],\n        ~{sum(\n          as.numeric(\n            unlist(\n              strsplit(.x,&amp;quot;\\n&amp;quot;))\n          ))\n        }))
        %&amp;gt;% \n    sort(decreasing = TRUE) %&amp;gt;% \n    head(3) %&amp;gt;%
        \n    sum()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh49c6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh49c6", "created":
        1669890056.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 2, "name": "t1_iyh4kiu", "id": "iyh4kiu", "parent_id":
        "t1_iyh49c6", "depth": 2, "children": ["iyh4kiu"]}}, {"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygnrsm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "VikingsRoamTheEarth",
        "can_mod_post": false, "created_utc": 1669875965.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_xee5v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Swift** ([repo link](https://github.com/otto-schnurr/AdventOfCode/blob/main/2022/Day01.swift))\n\n    struct
        Input: Sequence, IteratorProtocol {\n        func next() -&gt; String? { return
        readLine() }\n    }\n    \n    let inventory = Input()\n        .map { Int($0)
        }\n        .split(separator: nil)\n        .map { $0.compactMap { $0 }.reduce(0,
        +) }\n        .sorted(by: &gt;)\n    \n    print(\"top one   : \\(inventory.first
        ?? 0)\")\n    print(\"top three : \\(inventory.prefix(3).reduce(0, +))\")",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt;
        (&lt;a href=\"https://github.com/otto-schnurr/AdventOfCode/blob/main/2022/Day01.swift\"&gt;repo
        link&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;struct Input: Sequence,
        IteratorProtocol {\n    func next() -&amp;gt; String? { return readLine()
        }\n}\n\nlet inventory = Input()\n    .map { Int($0) }\n    .split(separator:
        nil)\n    .map { $0.compactMap { $0 }.reduce(0, +) }\n    .sorted(by: &amp;gt;)\n\nprint(&amp;quot;top
        one   : \\(inventory.first ?? 0)&amp;quot;)\nprint(&amp;quot;top three : \\(inventory.prefix(3).reduce(0,
        +))&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnrsm/", "subreddit_type":
        "public", "locked": false, "name": "t1_iygnrsm", "created": 1669875965.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": 1669876397.0, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygnsdd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "oddolatry",
        "can_mod_post": false, "created_utc": 1669875977.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_sggc8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "###**PureScript**\n\n[Paste](https://tranzystorek-io.github.io/paste/#XQAAAQB7BwAAAAAAAAA9iImGVD/UQZfk9s7gJ6IZH736V079wXIAtb7VcfuQv/bUHiKjyLOiEGa270+i1/WnCOrDXCEUBnR0VmT7oBFFUDSEN4SergzHa9ODz86ic7zp/zjHRgwjbg7NogOLs3UDhRChOW9IFnZ3aSyMcefAZZoZoL2SVMO+SvUY2o/ill3IFkt8ALIitB8nsizLWfEwSMepP36s+RWYWVo1k9clod1nVZJPHNO/nvJ/a0YT6nEUsCJ0SJVTH0s8KWkEFH+Bow4G10PDBnIfDt1G8mMqKxVZyipQGpj9SLM5ZGoNkDaCYf2Bg1gE+rsF6FroaXdFEcc9XHOFWCJYGnehJe6n0pxusn16qS36LJ06VbEW8QXUrmSqqAZ2PHPj2/9aTcqdrx2VDvUtsW7xuCEpinITVhICPLGRCH/ZzD2rb7AgaoG/wFxYRLrVvGUTBBiY5GdY1Ny/IL5IANl3eHA1aYsTb7qKvDC6lhqvxJoHdmX10hIxfldBMbZNjtnChR377WA7cyEUNrgJsgIifXksVBXGVRC1o5sATImt6Q8lMne8RWRDn1PapskI8iwj8TAV0f0w8ahYi0s7EZGosvoo4hMO/c/1VPtgUqdbuEsi5Gh60JUMebOIQMSLNzs6mxXbyK+vtIeuxgH9Q37EId0hqqQPHu52ySN1y5bgL1Axna5joIVf3AOMrBAdtUzyYDkwnvwYwVcn3vE3uNXS3jLuf73co45HsKqNq6k2mpG9Gem8ti9FUDTtutsN3zF3DwpSCILKI0wn9aAeMOgNTTsK7wc8VFltPACc/poXyUf7lwCYbqKYF6oWPixCjGA4HQd9y2oaL86qWEwpcC4btmDOYAPFYsnbYY+rZVfSaqR+wLhM/pPzJxjdr9oA93h3JwR9/2e0i0aK6tvNJs3JIbynhq20JCnWA3Y78+TKkR2Jxc8X9LE5B4ylGJJ+4lWdD81kFPjAhGW0tslV1wHSVTFGCIuFcOJynPUBhUT1pGYyCukJqbOOiOpvze6zNlovF+6lalut1ME7fm90WO6GgJfSgP/QQN9c)\n\nIt
        wouldn''t be a Day 1 solution without a little trauma-induced over-engineering.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h3&gt;&lt;strong&gt;PureScript&lt;/strong&gt;&lt;/h3&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://tranzystorek-io.github.io/paste/#XQAAAQB7BwAAAAAAAAA9iImGVD/UQZfk9s7gJ6IZH736V079wXIAtb7VcfuQv/bUHiKjyLOiEGa270+i1/WnCOrDXCEUBnR0VmT7oBFFUDSEN4SergzHa9ODz86ic7zp/zjHRgwjbg7NogOLs3UDhRChOW9IFnZ3aSyMcefAZZoZoL2SVMO+SvUY2o/ill3IFkt8ALIitB8nsizLWfEwSMepP36s+RWYWVo1k9clod1nVZJPHNO/nvJ/a0YT6nEUsCJ0SJVTH0s8KWkEFH+Bow4G10PDBnIfDt1G8mMqKxVZyipQGpj9SLM5ZGoNkDaCYf2Bg1gE+rsF6FroaXdFEcc9XHOFWCJYGnehJe6n0pxusn16qS36LJ06VbEW8QXUrmSqqAZ2PHPj2/9aTcqdrx2VDvUtsW7xuCEpinITVhICPLGRCH/ZzD2rb7AgaoG/wFxYRLrVvGUTBBiY5GdY1Ny/IL5IANl3eHA1aYsTb7qKvDC6lhqvxJoHdmX10hIxfldBMbZNjtnChR377WA7cyEUNrgJsgIifXksVBXGVRC1o5sATImt6Q8lMne8RWRDn1PapskI8iwj8TAV0f0w8ahYi0s7EZGosvoo4hMO/c/1VPtgUqdbuEsi5Gh60JUMebOIQMSLNzs6mxXbyK+vtIeuxgH9Q37EId0hqqQPHu52ySN1y5bgL1Axna5joIVf3AOMrBAdtUzyYDkwnvwYwVcn3vE3uNXS3jLuf73co45HsKqNq6k2mpG9Gem8ti9FUDTtutsN3zF3DwpSCILKI0wn9aAeMOgNTTsK7wc8VFltPACc/poXyUf7lwCYbqKYF6oWPixCjGA4HQd9y2oaL86qWEwpcC4btmDOYAPFYsnbYY+rZVfSaqR+wLhM/pPzJxjdr9oA93h3JwR9/2e0i0aK6tvNJs3JIbynhq20JCnWA3Y78+TKkR2Jxc8X9LE5B4ylGJJ+4lWdD81kFPjAhGW0tslV1wHSVTFGCIuFcOJynPUBhUT1pGYyCukJqbOOiOpvze6zNlovF+6lalut1ME7fm90WO6GgJfSgP/QQN9c\"&gt;Paste&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It
        wouldn&amp;#39;t be a Day 1 solution without a little trauma-induced over-engineering.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygnsdd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygnsdd", "created":
        1669875977.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "more", "data": {"count": 197, "name": "t1_iygonqk", "id": "iygonqk", "parent_id":
        "t3_z9ezjb", "depth": 0, "children": ["iygonqk", "iygpb55", "iygqbgt", "iygq9ex",
        "iygrr0v", "iygretv", "iygty01", "iygqxbs", "iygtowk", "iygtqba", "iygxrp3",
        "iygsonm", "iygzzzp", "iygu4na", "iygyccj", "iyh4jvk", "iyh5f37", "iyhcc5a",
        "iygtz22", "iygvdkc", "iyh2jzk", "iyh0jn5", "iyh7ico", "iyh53if", "iygu7yp",
        "iyh94pi", "iyhej8p", "iygvchv", "iyifqq9", "iyhd6hi", "iyjes91", "iyhaofh",
        "iyhdc65", "iyixtuz", "iyh85kz", "iyidtjc", "iyhhlqt", "iyhp9bc", "iyiew8r",
        "iyh01nr", "iyh4msz", "iyijtn7", "iyiijcf", "iyh40eu", "iyh3qkb", "iyi1l73",
        "iyh9uw5", "iyh83ef", "iyik796", "iygx5l6", "iygwcfb", "iyi4yrd", "iyh9s69",
        "iyjqxua", "iyjfvg4", "iyisc1l", "iyhjfge", "iyilg4g", "iyjs7bn", "iyjo9dr",
        "iyiuj74", "iyjoxe5", "iyjosmn", "iyhclqb", "iyj0l1g", "iyhg2qj", "iyjsuh9",
        "iyjmvn5", "iyjp7up", "iyj5tvu", "iyj8hzx", "iyijotf", "iyj6eg1", "iyhr51u",
        "iyid3mu", "iyjj4z7", "iyi6v6k", "iyifjlg", "iyj8sit", "iyh7ecp", "iyjt0id",
        "iyh55x1", "iyjq2ke", "iyj05dc", "iyiuevh", "iyk38p6", "iyhlomk", "iyigaiq",
        "iyhfatq", "iyl7t9c", "iyjrsrt", "iylahzo", "iyjon13", "iyh9vm9", "iyiwnvn",
        "iyk3370", "iyjdyny", "iyh87eq", "iyjtywa", "iymoetz", "iyk30jj", "iyk2b5l",
        "iyl783x", "iyhfzli", "iyjr2fv", "iylmebf", "iyk42v2", "iyjjbuu", "iyhnl8j",
        "iykf2rh", "iykh5as", "iylenyb", "iylldan", "iyjo0p4", "iyjphct", "iykjata",
        "iyjpq76", "iylruwg", "iyna5us", "iyhnrc6", "iyj6m98", "iyjjlwa", "iylrl58",
        "iykopsr", "iyjqo0n", "iyju5na", "iyls2ng", "iyjrdd3", "iykl2k8", "iyndflq",
        "iylrzr2", "iyll509", "iyk0fpn", "iyjqs6b", "iylrvts", "iylsah5", "iyjuml8",
        "iyjcn65", "iyhu7hi", "iyizzou", "iyjrlwy", "iykca4b", "iykkyaf", "iylr8nj"]}}],
        true]], [0, 12, "attr", "things"], [12, 13, "call", ["t1_iygot51"]], [13,
        14, "attr", "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16,
        17, "call", ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:39 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:39 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=hR3eGCfpcD7FjOmuAl; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:39 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iygonqk,iygpb55,iygqbgt,iygq9ex,iygrr0v,iygretv,iygty01,iygqxbs,iygtowk,iygtqba,iygxrp3,iygsonm,iygzzzp,iygu4na,iygyccj,iyh4jvk,iyh5f37,iyhcc5a,iygtz22,iygvdkc,iyh2jzk,iyh0jn5,iyh7ico,iyh53if,iygu7yp,iyh94pi,iyhej8p,iygvchv,iyifqq9,iyhd6hi,iyjes91,iyhaofh,iyhdc65,iyixtuz,iyh85kz,iyidtjc,iyhhlqt,iyhp9bc,iyiew8r,iyh01nr,iyh4msz,iyijtn7,iyiijcf,iyh40eu,iyh3qkb,iyi1l73,iyh9uw5,iyh83ef,iyik796,iygx5l6,iygwcfb,iyi4yrd,iyh9s69,iyjqxua,iyjfvg4,iyisc1l,iyhjfge,iyilg4g,iyjs7bn,iyjo9dr,iyiuj74,iyjoxe5,iyjosmn,iyhclqb,iyj0l1g,iyhg2qj,iyjsuh9,iyjmvn5,iyjp7up,iyj5tvu,iyj8hzx,iyijotf,iyj6eg1,iyhr51u,iyid3mu,iyjj4z7,iyi6v6k,iyifjlg,iyj8sit,iyh7ecp,iyjt0id,iyh55x1,iyjq2ke,iyj05dc,iyiuevh,iyk38p6,iyhlomk,iyigaiq,iyhfatq,iyl7t9c,iyjrsrt,iylahzo,iyjon13,iyh9vm9,iyiwnvn,iyk3370,iyjdyny,iyh87eq,iyjtywa,iymoetz,iyk30jj,iyk2b5l,iyl783x,iyhfzli,iyjr2fv,iylmebf,iyk42v2,iyjjbuu,iyhnl8j,iykf2rh,iykh5as,iylenyb,iylldan,iyjo0p4,iyjphct,iykjata,iyjpq76,iylruwg,iyna5us,iyhnrc6,iyj6m98,iyjjlwa,iylrl58,iykopsr,iyjqo0n,iyju5na,iyls2ng,iyjrdd3,iykl2k8,iyndflq,iylrzr2,iyll509,iyk0fpn,iyjqs6b,iylrvts,iylsah5,iyjuml8,iyjcn65,iyhu7hi,iyizzou,iyjrlwy,iykca4b,iykkyaf,iylr8nj
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '14108'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv4785h.2.1741472679677.Z0FBQUFBQm56TU9vZ3NncFZuTER0YXlKMFRGWk5vZ3g1d2FpbVhHRmRGSTk3N3YtUWxNSXY0aWIxTGtmRnhaamwxWUZENjQ3YlVuOFRYYzdtTzJCTTU0VlEwbkRTaFRwbHFkYm1meVF3aVFhaU13Q3c5ZmVkM21CbjlXUkp2dmpzeVhiMHI3RElZNV8;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:40
        GMT; secure, session_tracker=bnnhabpqhoipbcpeal.0.1741472679690.Z0FBQUFBQm56TU9vNEJBZTdPMDY5YVdIdEIwbUptb3AwaWxQV2N3UUdPVm5pQlhrVFAwbGRQa25DQUlQbzdzQkxTbG5iR1EtVHItd1ZaZEJkMkROU015cWVYOFVTR05KQUItMEV2MWZwWUxOdTlDYkNzSWNoNThSZlNUcVpXWlJHTC1fUUdBUVk5ZU4;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:40
        GMT; secure, edgebucket=xoB0ro0phIDBILy1BH; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '39'
      x-ratelimit-remaining:
      - '61.0'
      x-ratelimit-reset:
      - '320'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:40 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669877544.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygpb55", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "gala0sup",
        "can_mod_post": false, "created_utc": 1669877096.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_16r2v2", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "too many calories\n\npython\n\n```\nfrom ..aoc import get_input\n\nprint((m
        := sorted([sum(map(int, i.split())) for i in get_input(1).split(\"\\n\\n\")]))[-1])\nprint(sum(m[-3:]))\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;too many calories&lt;/p&gt;\n\n&lt;p&gt;python&lt;/p&gt;\n\n&lt;p&gt;```\nfrom
        ..aoc import get_input&lt;/p&gt;\n\n&lt;p&gt;print((m := sorted([sum(map(int,
        i.split())) for i in get_input(1).split(&amp;quot;\\n\\n&amp;quot;)]))[-1])\nprint(sum(m[-3:]))\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygpb55/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygpb55", "created":
        1669877096.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygq9ex",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Any_Helicopter2990",
        "can_mod_post": false, "created_utc": 1669877811.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_t572l1tz", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust\n\n```Rust\nfn main() {\n    let input = include_str!(\"../input/input.txt\");\n\n    part_a(input);\n    part_b(input);\n}\n\nfn
        part_a(input: &amp;str) {\n    let elf_groups: Vec&lt;&amp;str&gt; = input.split(\"\\r\\n\\r\\n\").collect();\n    let
        mut most_calories = 0;\n\n    for group in elf_groups {\n        let mut calories:
        u32 = 0;\n        for calories_str in group.lines() {\n            calories
        += calories_str.parse::&lt;u32&gt;().unwrap();\n        }   \n        if calories
        &gt; most_calories {\n            most_calories = calories;\n        }\n    }\n\n    println!(\"The
        most calories carried is {}.\", most_calories);\n}\n\nfn part_b(input: &amp;str)
        {\n    let elf_groups: Vec&lt;&amp;str&gt; = input.split(\"\\r\\n\\r\\n\").collect();\n    let
        mut elf_calories: Vec&lt;u32&gt; = vec![];\n\n    for group in elf_groups
        {\n        let mut calories: u32 = 0;\n        for calories_str in group.lines()
        {\n            calories += calories_str.parse::&lt;u32&gt;().unwrap();\n        }\n        elf_calories.push(calories);\n    }\n\n    elf_calories.sort();\n\n    let
        most_three_calories = \n        elf_calories.pop().unwrap() + \n        elf_calories.pop().unwrap()
        + \n        elf_calories.pop().unwrap();\n\n    println!(\"The total calories
        of the top 3 elfs is {}.\", most_three_calories);\n}\n```", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Rust&lt;/p&gt;\n\n&lt;p&gt;```Rust\nfn main()
        {\n    let input = include_str!(&amp;quot;../input/input.txt&amp;quot;);&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;part_a(input);\npart_b(input);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;fn
        part_a(input: &amp;amp;str) {\n    let elf_groups: Vec&amp;lt;&amp;amp;str&amp;gt;
        = input.split(&amp;quot;\\r\\n\\r\\n&amp;quot;).collect();\n    let mut most_calories
        = 0;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for group in elf_groups {\n    let
        mut calories: u32 = 0;\n    for calories_str in group.lines() {\n        calories
        += calories_str.parse::&amp;lt;u32&amp;gt;().unwrap();\n    }   \n    if calories
        &amp;gt; most_calories {\n        most_calories = calories;\n    }\n}\n\nprintln!(&amp;quot;The
        most calories carried is {}.&amp;quot;, most_calories);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;fn
        part_b(input: &amp;amp;str) {\n    let elf_groups: Vec&amp;lt;&amp;amp;str&amp;gt;
        = input.split(&amp;quot;\\r\\n\\r\\n&amp;quot;).collect();\n    let mut elf_calories:
        Vec&amp;lt;u32&amp;gt; = vec![];&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for group
        in elf_groups {\n    let mut calories: u32 = 0;\n    for calories_str in group.lines()
        {\n        calories += calories_str.parse::&amp;lt;u32&amp;gt;().unwrap();\n    }\n    elf_calories.push(calories);\n}\n\nelf_calories.sort();\n\nlet
        most_three_calories = \n    elf_calories.pop().unwrap() + \n    elf_calories.pop().unwrap()
        + \n    elf_calories.pop().unwrap();\n\nprintln!(&amp;quot;The total calories
        of the top 3 elfs is {}.&amp;quot;, most_three_calories);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygq9ex/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygq9ex", "created":
        1669877811.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygretv",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Piggelinmannen",
        "can_mod_post": false, "created_utc": 1669878703.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_jqfnq", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Quick and dirty solution in ruby\n```\ncalorie_per_elf = DATA.read.split(/^$/).map
        { _1.lines.map(&amp;:to_i).sum }\np \"a: #{calorie_per_elf.max}\"\np \"b:
        #{calorie_per_elf.sort.last(3).sum}\"\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Quick and dirty solution in ruby\n&lt;code&gt;\ncalorie_per_elf
        = DATA.read.split(/^$/).map { _1.lines.map(&amp;amp;:to_i).sum }\np &amp;quot;a:
        #{calorie_per_elf.max}&amp;quot;\np &amp;quot;b: #{calorie_per_elf.sort.last(3).sum}&amp;quot;\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygretv/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygretv", "created":
        1669878703.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670186441.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iygrr0v", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "pancakeQueue",
        "can_mod_post": false, "created_utc": 1669878973.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_lqqfisy", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Rust - Part 2 solution\n```\n    use std::fs::File;\n    use std::io::{BufRead,
        BufReader};\n    \n    fn addNumToArray(n: i32, arr: &amp;mut [i32]) {\n        println!(\"Number
        to add: {}, Array {:?}\", n, arr); \n        //TODO Get this refactored into
        loop\n        if n &lt; arr[0]{\n            return;\n        }else if n &lt;=
        arr[1] {\n            arr[0] = n;\n       } else if n &lt;= arr[2] {\n           arr[0]
        = arr[1];\n           arr[1] = n;\n        } else {\n           arr[0] = arr[1];\n           arr[1]
        = arr[2];\n           arr[2] = n;\n        }\n    }\n    \n    fn sumArray(arr:
        &amp;[i32]) -&gt; i32 {\n        let mut maxSum = 0;\n        for i in 0..arr.len()
        {\n            maxSum += arr[i];\n        }\n        return maxSum;\n    }\n    \n    fn
        findElf(){\n        let filename = \"./input/problem1.txt\";\n        // Open
        the file in read-only mode (ignoring errors).\n        let file = File::open(filename).unwrap();\n        let
        reader = BufReader::new(file);\n    \n        let mut sum = 0;\n        //
        Replace this maxSum with a Array containing 3 spots, starting each with 0\n        let
        mut maxSumsArray: [i32; 3] = [0,0,0];\n        let mut maxSum = 0;\n        \n        //
        Read the file line by line using the lines() iterator from std::io::BufRead.\n        for
        (index, line) in reader.lines().enumerate() {\n            let line = line.unwrap();
        // Ignore errors.\n            if line.chars().count() == 0 {\n                println!(\"Finished
        Elf\");\n                addNumToArray(sum,&amp;mut maxSumsArray);\n                sum
        = 0;  // Sum should be restarted\n            } else {\n               sum
        += line.parse::&lt;i32&gt;().unwrap(); \n            }\n        }\n    \n        println!(\"Largest
        Sum Calories {}\", sumArray(&amp;maxSumsArray));\n    }\n    \n    fn main()
        {\n        findElf();\n    }\n```\nFirst time ever programming in Rust, and
        its been about 5 years since I programmed with C.  So I''m a little rusty
        (heh) on some lower level stuff.  Plus Python has spoiled me.  I''ll have
        to refactor it tomorrow, so I could pass in the input, clean up the prints,
        and some people have better sorting mine is messy.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Rust - Part 2 solution\n```\n    use std::fs::File;\n    use
        std::io::{BufRead, BufReader};&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fn addNumToArray(n:
        i32, arr: &amp;amp;mut [i32]) {\n    println!(&amp;quot;Number to add: {},
        Array {:?}&amp;quot;, n, arr); \n    //TODO Get this refactored into loop\n    if
        n &amp;lt; arr[0]{\n        return;\n    }else if n &amp;lt;= arr[1] {\n        arr[0]
        = n;\n   } else if n &amp;lt;= arr[2] {\n       arr[0] = arr[1];\n       arr[1]
        = n;\n    } else {\n       arr[0] = arr[1];\n       arr[1] = arr[2];\n       arr[2]
        = n;\n    }\n}\n\nfn sumArray(arr: &amp;amp;[i32]) -&amp;gt; i32 {\n    let
        mut maxSum = 0;\n    for i in 0..arr.len() {\n        maxSum += arr[i];\n    }\n    return
        maxSum;\n}\n\nfn findElf(){\n    let filename = &amp;quot;./input/problem1.txt&amp;quot;;\n    //
        Open the file in read-only mode (ignoring errors).\n    let file = File::open(filename).unwrap();\n    let
        reader = BufReader::new(file);\n\n    let mut sum = 0;\n    // Replace this
        maxSum with a Array containing 3 spots, starting each with 0\n    let mut
        maxSumsArray: [i32; 3] = [0,0,0];\n    let mut maxSum = 0;\n\n    // Read
        the file line by line using the lines() iterator from std::io::BufRead.\n    for
        (index, line) in reader.lines().enumerate() {\n        let line = line.unwrap();
        // Ignore errors.\n        if line.chars().count() == 0 {\n            println!(&amp;quot;Finished
        Elf&amp;quot;);\n            addNumToArray(sum,&amp;amp;mut maxSumsArray);\n            sum
        = 0;  // Sum should be restarted\n        } else {\n           sum += line.parse::&amp;lt;i32&amp;gt;().unwrap();
        \n        }\n    }\n\n    println!(&amp;quot;Largest Sum Calories {}&amp;quot;,
        sumArray(&amp;amp;maxSumsArray));\n}\n\nfn main() {\n    findElf();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;```\nFirst
        time ever programming in Rust, and its been about 5 years since I programmed
        with C.  So I&amp;#39;m a little rusty (heh) on some lower level stuff.  Plus
        Python has spoiled me.  I&amp;#39;ll have to refactor it tomorrow, so I could
        pass in the input, clean up the prints, and some people have better sorting
        mine is messy.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygrr0v/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygrr0v", "created":
        1669878973.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyuh20b",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670135314.0, "send_replies": true,
        "parent_id": "t1_iygrr0v", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuh20b/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyuh20b", "created": 1670135314.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygsonm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "No_Calligrapher7294",
        "can_mod_post": false, "created_utc": 1669879728.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_6wlwjjho", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My quick and dirty Elixir solution. Haven''t touched the language since last
        year''s calendar.\n\n```elixir\ndefmodule Aoc22.Day01 do\n  def solve() do\n    File.read!(\"inputs/i1.txt\")\n    |&gt;
        String.trim()\n    |&gt; String.split(\"\\n\\n\")\n    |&gt; Enum.map(fn elf
        -&gt;\n      elf |&gt; String.split(\"\\n\") |&gt; Enum.map(&amp;String.to_integer/1)
        |&gt; Enum.sum()\n    end)\n    |&gt; Enum.sort()\n    |&gt; Enum.take(-3)\n  end\n\n  def
        part1(), do: solve() |&gt; Enum.at(-1) |&gt; IO.puts()\n  def part2(), do:
        solve() |&gt; Enum.sum() |&gt; IO.puts()\nend\n\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;My quick and dirty Elixir solution. Haven&amp;#39;t
        touched the language since last year&amp;#39;s calendar.&lt;/p&gt;\n\n&lt;p&gt;```elixir\ndefmodule
        Aoc22.Day01 do\n  def solve() do\n    File.read!(&amp;quot;inputs/i1.txt&amp;quot;)\n    |&amp;gt;
        String.trim()\n    |&amp;gt; String.split(&amp;quot;\\n\\n&amp;quot;)\n    |&amp;gt;
        Enum.map(fn elf -&amp;gt;\n      elf |&amp;gt; String.split(&amp;quot;\\n&amp;quot;)
        |&amp;gt; Enum.map(&amp;amp;String.to_integer/1) |&amp;gt; Enum.sum()\n    end)\n    |&amp;gt;
        Enum.sort()\n    |&amp;gt; Enum.take(-3)\n  end&lt;/p&gt;\n\n&lt;p&gt;def
        part1(), do: solve() |&amp;gt; Enum.at(-1) |&amp;gt; IO.puts()\n  def part2(),
        do: solve() |&amp;gt; Enum.sum() |&amp;gt; IO.puts()\nend&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygsonm/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygsonm", "created":
        1669879728.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyuh090",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670135279.0, "send_replies": true,
        "parent_id": "t1_iygsonm", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuh090/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyuh090", "created": 1670135279.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1670177055.0, "mod_reason_by": null, "banned_by": null, "ups":
        1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygtqba",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "IWant2rideMyBike",
        "can_mod_post": false, "created_utc": 1669880590.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_aoqws457", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3\n\n    from functool import cache\n    from pathlib import Path\n    \n    example
        = \"\"\"1000\n    2000\n    3000\n    \n    4000\n    \n    5000\n    6000\n    \n    7000\n    8000\n    9000\n    \n    10000\"\"\"\n    \n    \n    @cache\n    def
        total_calories_per_elf(txt: str) -&gt; list[int]:\n        return [sum(map(int,
        c.split(\"\\n\"))) for c in txt.split(\"\\n\\n\")]\n    \n    \n    def part_1(txt:
        str) -&gt; int:\n        return max(total_calories_per_elf(txt))\n    \n    \n    def
        part_2(txt: str) -&gt; int:\n        return sum(sorted(total_calories_per_elf(txt))[-3:])\n    \n    \n    if
        __name__ == \"__main__\":\n        input_str = Path(\"inputs/day_1.txt\").read_text()\n    \n        assert
        part_1(example) == 24000\n        print(\"Part 1:\", part_1(input_str))\n    \n        assert
        part_2(example) == 45000\n        print(\"Part 2:\", part_2(input_str))",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        functool import cache\nfrom pathlib import Path\n\nexample = &amp;quot;&amp;quot;&amp;quot;1000\n2000\n3000\n\n4000\n\n5000\n6000\n\n7000\n8000\n9000\n\n10000&amp;quot;&amp;quot;&amp;quot;\n\n\n@cache\ndef
        total_calories_per_elf(txt: str) -&amp;gt; list[int]:\n    return [sum(map(int,
        c.split(&amp;quot;\\n&amp;quot;))) for c in txt.split(&amp;quot;\\n\\n&amp;quot;)]\n\n\ndef
        part_1(txt: str) -&amp;gt; int:\n    return max(total_calories_per_elf(txt))\n\n\ndef
        part_2(txt: str) -&amp;gt; int:\n    return sum(sorted(total_calories_per_elf(txt))[-3:])\n\n\nif
        __name__ == &amp;quot;__main__&amp;quot;:\n    input_str = Path(&amp;quot;inputs/day_1.txt&amp;quot;).read_text()\n\n    assert
        part_1(example) == 24000\n    print(&amp;quot;Part 1:&amp;quot;, part_1(input_str))\n\n    assert
        part_2(example) == 45000\n    print(&amp;quot;Part 2:&amp;quot;, part_2(input_str))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtqba/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygtqba", "created":
        1669880590.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyugz6x",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670135258.0, "send_replies": true,
        "parent_id": "t1_iygtqba", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyugz6x/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyugz6x", "created": 1670135258.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1669882516.0, "mod_reason_by": null, "banned_by": null, "ups":
        1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygtz22",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Mammoth_Spray_3451",
        "can_mod_post": false, "created_utc": 1669880796.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_hc7use18", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My quick swift solution (in a playground) with amount 0 for part one and
        amount 2 for part 2.\n\n```swift\n\npublic func dayOne(amount: Int, input:
        [String]) -&gt; Int {\n    return input.map {\n        $0.split(separator:
        \"\\n\").compactMap { Int($0) }.reduce(0, +)\n    }.sorted(by: &gt;)[0...amount].reduce(0,
        +)\n}\n\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My
        quick swift solution (in a playground) with amount 0 for part one and amount
        2 for part 2.&lt;/p&gt;\n\n&lt;p&gt;```swift&lt;/p&gt;\n\n&lt;p&gt;public
        func dayOne(amount: Int, input: [String]) -&amp;gt; Int {\n    return input.map
        {\n        $0.split(separator: &amp;quot;\\n&amp;quot;).compactMap { Int($0)
        }.reduce(0, +)\n    }.sorted(by: &amp;gt;)[0...amount].reduce(0, +)\n}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygtz22/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygtz22", "created":
        1669880796.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyugyhm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670135245.0, "send_replies": true,
        "parent_id": "t1_iygtz22", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyugyhm/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyugyhm", "created": 1670135245.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh01nr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FordyO_o",
        "can_mod_post": false, "created_utc": 1669886172.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_5ks9w", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Go**\n\n(and this is my first foray into using Go, so I expect I''ve missed
        lots of easier ways of doing things!)\n\n```\nfunc (p Day01) PartA(lines []string)
        any {\n\telves := getElves(lines)\n\t_, max := findMinMax(elves)\n\treturn
        max\n}\n\nfunc (p Day01) PartB(lines []string) any {\n\telves := getElves(lines)\n\tsort.Sort(sort.Reverse(sort.IntSlice(elves)))\n\ttopThree
        := elves[0:3]\n\tvar sum int\n\tfor _, i := range topThree {\n\t\tsum += i\n\t}\n\treturn
        sum\n}\n\nfunc getElves(lines []string) []int {\n\telves := make([]int, 0)\n\tvar
        calorieCount int\n\tfor _, line := range lines {\n\t\tif line == \"\\r\" {\n\t\t\telves
        = append(elves, calorieCount)\n\t\t\tcalorieCount = 0\n\t\t} else {\n\n\t\t\tcount,
        err := strconv.Atoi(strings.Replace(line, \"\\r\", \"\", 1))\n\t\t\tif err
        != nil {\n\t\t\t\tlogrus.Error(err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tcalorieCount
        += count\n\t\t}\n\t}\n\tif calorieCount &gt; 0 {\n\t\telves = append(elves,
        calorieCount)\n\t}\n\treturn elves\n}\n\nfunc findMinMax(elves []int) (min
        int, max int) {\n\tfor _, elf := range elves {\n\t\tif elf &lt; min {\n\t\t\tmin
        = elf\n\t\t}\n\t\tif elf &gt; max {\n\t\t\tmax = elf\n\t\t}\n\t}\n\treturn
        min, max\n}\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;(and
        this is my first foray into using Go, so I expect I&amp;#39;ve missed lots
        of easier ways of doing things!)&lt;/p&gt;\n\n&lt;p&gt;```\nfunc (p Day01)
        PartA(lines []string) any {\n    elves := getElves(lines)\n    _, max := findMinMax(elves)\n    return
        max\n}&lt;/p&gt;\n\n&lt;p&gt;func (p Day01) PartB(lines []string) any {\n    elves
        := getElves(lines)\n    sort.Sort(sort.Reverse(sort.IntSlice(elves)))\n    topThree
        := elves[0:3]\n    var sum int\n    for _, i := range topThree {\n        sum
        += i\n    }\n    return sum\n}&lt;/p&gt;\n\n&lt;p&gt;func getElves(lines []string)
        []int {\n    elves := make([]int, 0)\n    var calorieCount int\n    for _,
        line := range lines {\n        if line == &amp;quot;\\r&amp;quot; {\n            elves
        = append(elves, calorieCount)\n            calorieCount = 0\n        } else
        {&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;        count, err := strconv.Atoi(strings.Replace(line,
        &amp;quot;\\r&amp;quot;, &amp;quot;&amp;quot;, 1))\n        if err != nil
        {\n            logrus.Error(err)\n            continue\n        }\n        calorieCount
        += count\n    }\n}\nif calorieCount &amp;gt; 0 {\n    elves = append(elves,
        calorieCount)\n}\nreturn elves\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;func
        findMinMax(elves []int) (min int, max int) {\n    for _, elf := range elves
        {\n        if elf &amp;lt; min {\n            min = elf\n        }\n        if
        elf &amp;gt; max {\n            max = elf\n        }\n    }\n    return min,
        max\n}\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh01nr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh01nr", "created":
        1669886172.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyugoxh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670135067.0, "send_replies": true,
        "parent_id": "t1_iyh01nr", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyugoxh/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyugoxh", "created": 1670135067.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "more", "data": {"count": 3,
        "name": "t1_iyh3gpo", "id": "iyh3gpo", "parent_id": "t1_iyh01nr", "depth":
        1, "children": ["iyh3gpo"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyh2jzk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Upstairs-Fill9003", "can_mod_post": false,
        "created_utc": 1669888487.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_ui471w1l", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Python oneliner, no
        libraries, readfile included:\n\n`print(max(list(map(lambda x: sum([int(i)
        for i in x.split('','')]),'',''.join(list(map(lambda x: str(x[:-1]) if x!=
        ''\\n'' else \"-\",open(\"input.txt\", ''r'').readlines()))).split(\",-,\")))))`\n\n&amp;#x200B;\n\nAnd
        for the second problem:\n\n`print(sum(sorted(list(map(lambda x: sum([int(i)
        for i in x.split('','')]),'',''.join(list(map(lambda x: str(x[:-1]) if x!=
        ''\\n'' else \"-\",open(\"input.txt\", ''r'').readlines()))).split(\",-,\"))))[-3:]))`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python oneliner, no
        libraries, readfile included:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(max(list(map(lambda
        x: sum([int(i) for i in x.split(&amp;#39;,&amp;#39;)]),&amp;#39;,&amp;#39;.join(list(map(lambda
        x: str(x[:-1]) if x!= &amp;#39;\\n&amp;#39; else &amp;quot;-&amp;quot;,open(&amp;quot;input.txt&amp;quot;,
        &amp;#39;r&amp;#39;).readlines()))).split(&amp;quot;,-,&amp;quot;)))))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;And
        for the second problem:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(sum(sorted(list(map(lambda
        x: sum([int(i) for i in x.split(&amp;#39;,&amp;#39;)]),&amp;#39;,&amp;#39;.join(list(map(lambda
        x: str(x[:-1]) if x!= &amp;#39;\\n&amp;#39; else &amp;quot;-&amp;quot;,open(&amp;quot;input.txt&amp;quot;,
        &amp;#39;r&amp;#39;).readlines()))).split(&amp;quot;,-,&amp;quot;))))[-3:]))&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh2jzk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh2jzk", "created":
        1669888487.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyugmqg",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670135026.0, "send_replies": true,
        "parent_id": "t1_iyh2jzk", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Inlined code is intended for `short snippets` of code only.  Your code \"block\"
        right now is unreadable;  it''s all on one line and gets cut off at the edge
        of the screen because it is not horizontally scrollable.\n\nPlease edit your
        post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Inlined code is intended
        for &lt;code&gt;short snippets&lt;/code&gt; of code only.  Your code &amp;quot;block&amp;quot;
        right now is unreadable;  it&amp;#39;s all on one line and gets cut off at
        the edge of the screen because it is not horizontally scrollable.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyugmqg/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyugmqg", "created": 1670135026.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "more", "data": {"count": 1,
        "name": "t1_iyhkkro", "id": "iyhkkro", "parent_id": "t1_iyh2jzk", "depth":
        1, "children": ["iyhkkro"]}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyh40eu", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "sonusingh27", "can_mod_post": false, "created_utc":
        1669889838.0, "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1,
        "author_fullname": "t2_47ni5ikn", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "Golang\n\n```go\npackage
        main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"sort\"\n)\n\nfunc
        main() {\n\tfile, err := os.Open(\"./2022/01/input.txt\")\n\tif err != nil
        {\n\t\tpanic(err)\n\t}\n\tvar counts []int\n\n\tscanner := bufio.NewScanner(file)\n\tcount
        := 0\n\tfor scanner.Scan() {\n\t\tvar number int\n\t\t_, err := fmt.Sscanf(scanner.Text(),
        \"%d\", &amp;number)\n\t\tif err != nil &amp;&amp; err.Error() == \"EOF\"
        {\n\t\t\tcounts = append(counts, count)\n\t\t\tcount = 0\n\t\t\tcontinue\n\t\t}\n\t\tcount
        += number\n\t}\n\n\tsort.Slice(counts, func(i, j int) bool {\n\t\treturn counts[i]
        &gt; counts[j]\n\t})\n\n\tfmt.Println(\"Part 1:\", counts[0])\n\tfmt.Println(\"Part
        1:\", counts[0]+counts[1]+counts[2])\n}\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Golang&lt;/p&gt;\n\n&lt;p&gt;```go\npackage main&lt;/p&gt;\n\n&lt;p&gt;import
        (\n    &amp;quot;bufio&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;os&amp;quot;\n    &amp;quot;sort&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;func
        main() {\n    file, err := os.Open(&amp;quot;./2022/01/input.txt&amp;quot;)\n    if
        err != nil {\n        panic(err)\n    }\n    var counts []int&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;scanner
        := bufio.NewScanner(file)\ncount := 0\nfor scanner.Scan() {\n    var number
        int\n    _, err := fmt.Sscanf(scanner.Text(), &amp;quot;%d&amp;quot;, &amp;amp;number)\n    if
        err != nil &amp;amp;&amp;amp; err.Error() == &amp;quot;EOF&amp;quot; {\n        counts
        = append(counts, count)\n        count = 0\n        continue\n    }\n    count
        += number\n}\n\nsort.Slice(counts, func(i, j int) bool {\n    return counts[i]
        &amp;gt; counts[j]\n})\n\nfmt.Println(&amp;quot;Part 1:&amp;quot;, counts[0])\nfmt.Println(&amp;quot;Part
        1:&amp;quot;, counts[0]+counts[1]+counts[2])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh40eu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh40eu", "created":
        1669889838.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 0, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyugj9o",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670134960.0, "send_replies": true,
        "parent_id": "t1_iyh40eu", "score": 0, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyugj9o/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyugj9o", "created": 1670134960.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh83ef",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "plane000",
        "can_mod_post": false, "created_utc": 1669893395.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_f6iks", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JS\n\n```\nconst fs = require(''fs'');\n\nlet elfIndex = 0;\nconst calorieAmounts
        = fs.readFileSync(''1.input'').toString().split(`\\n`).reduce((a, c) =&gt;
        {\n    if (c == '''') {\n        elfIndex++;\n        a[elfIndex] = 0;\n        return
        a;\n    }\n\n    a[elfIndex] += parseInt(c);\n    return a;\n}, [0]);\n\nconst
        part1 = Math.max(...calorieAmounts);\nconsole.log(`PART 1: ${part1}`);\n\nconst
        sortedCalories = calorieAmounts.sort((a, b) =&gt; b - a);\nconsole.log(`PART
        2: ${sortedCalories[0] + sortedCalories[1] + sortedCalories[2]}`);\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JS&lt;/p&gt;\n\n&lt;p&gt;```\nconst
        fs = require(&amp;#39;fs&amp;#39;);&lt;/p&gt;\n\n&lt;p&gt;let elfIndex = 0;\nconst
        calorieAmounts = fs.readFileSync(&amp;#39;1.input&amp;#39;).toString().split(&lt;code&gt;\\n&lt;/code&gt;).reduce((a,
        c) =&amp;gt; {\n    if (c == &amp;#39;&amp;#39;) {\n        elfIndex++;\n        a[elfIndex]
        = 0;\n        return a;\n    }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a[elfIndex]
        += parseInt(c);\nreturn a;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}, [0]);&lt;/p&gt;\n\n&lt;p&gt;const
        part1 = Math.max(...calorieAmounts);\nconsole.log(&lt;code&gt;PART 1: ${part1}&lt;/code&gt;);&lt;/p&gt;\n\n&lt;p&gt;const
        sortedCalories = calorieAmounts.sort((a, b) =&amp;gt; b - a);\nconsole.log(&lt;code&gt;PART
        2: ${sortedCalories[0] + sortedCalories[1] + sortedCalories[2]}&lt;/code&gt;);\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh83ef/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh83ef", "created":
        1669893395.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyugekh",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670134869.0, "send_replies": true,
        "parent_id": "t1_iyh83ef", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyugekh/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyugekh", "created": 1670134869.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh85kz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jpgp94",
        "can_mod_post": false, "created_utc": 1669893444.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_5m2d8q8v", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3\n\n```\ndef calc_calories(filename):\n  with open(filename, \"r\")
        as f:\n    lines = f.read().splitlines()\n  elfcalories = {0 : 0}\n  elfidx
        = 0\n  for cal in lines:\n    if cal == \"\":\n      elfidx += 1\n      elfcalories[elfidx]
        = 0\n    else:\n      elfcalories[elfidx] += int(cal)\n  sortedelfcals = sorted(list(elfcalories.values()))\n  return(sortedelfcals[::-1])\n\n#
        p1\ntestpath = \"../data/day1-test.txt\"\nactualpath = \"../data/day1-actual.txt\"\nassert(calc_calories(testpath)[0]
        == 24000)\nprint(\"part 1 answer:\", calc_calories(actualpath)[0])\n\n# p2\nassert(sum(calc_calories(testpath)[0:3])
        == 45000)\nprint(\"part 2 answer:\", sum(calc_calories(actualpath)[0:3]))\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python3&lt;/p&gt;\n\n&lt;p&gt;```\ndef
        calc_calories(filename):\n  with open(filename, &amp;quot;r&amp;quot;) as
        f:\n    lines = f.read().splitlines()\n  elfcalories = {0 : 0}\n  elfidx =
        0\n  for cal in lines:\n    if cal == &amp;quot;&amp;quot;:\n      elfidx
        += 1\n      elfcalories[elfidx] = 0\n    else:\n      elfcalories[elfidx]
        += int(cal)\n  sortedelfcals = sorted(list(elfcalories.values()))\n  return(sortedelfcals[::-1])&lt;/p&gt;\n\n&lt;h1&gt;p1&lt;/h1&gt;\n\n&lt;p&gt;testpath
        = &amp;quot;../data/day1-test.txt&amp;quot;\nactualpath = &amp;quot;../data/day1-actual.txt&amp;quot;\nassert(calc_calories(testpath)[0]
        == 24000)\nprint(&amp;quot;part 1 answer:&amp;quot;, calc_calories(actualpath)[0])&lt;/p&gt;\n\n&lt;h1&gt;p2&lt;/h1&gt;\n\n&lt;p&gt;assert(sum(calc_calories(testpath)[0:3])
        == 45000)\nprint(&amp;quot;part 2 answer:&amp;quot;, sum(calc_calories(actualpath)[0:3]))\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh85kz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh85kz", "created":
        1669893444.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyug9ef",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670134772.0, "send_replies": true,
        "parent_id": "t1_iyh85kz", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyug9ef/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyug9ef", "created": 1670134772.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"author_cakeday":
        true, "subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyh9vm9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dannybres",
        "can_mod_post": false, "created_utc": 1669894790.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_av78z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# MATLAB\n```\n%% day1puzzle1 - Daniel Breslan - Advent Of Code 2022\ndata
        = readlines(\"input.txt\").double()\nout = bwconncomp(~isnan(data));\nfun
        = @(x) sum(data(x));\n \nday1puzzle1result = max(cellfun(fun,out.PixelIdxList))\n
        \n%% day1puzzle2 - Daniel Breslan - Advent Of Code 2022\ndata = readlines(\"input.txt\").double()\nout
        = bwconncomp(~isnan(data));\nfun = @(x) sum(data(x));\n \nday1puzzle2result
        = sum(maxk(cellfun(fun,out.PixelIdxList),3))\n```\n\n# MATLAB - 1 line solution\n\n```\nsum(maxk(cellfun(@(x)
        sum(string(x).split(\"sp\").double()),readlines(''input.txt'').join(\"sp\").split(\"spsp\")),3))\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;MATLAB&lt;/h1&gt;\n\n&lt;p&gt;```\n%%
        day1puzzle1 - Daniel Breslan - Advent Of Code 2022\ndata = readlines(&amp;quot;input.txt&amp;quot;).double()\nout
        = bwconncomp(~isnan(data));\nfun = @(x) sum(data(x));&lt;/p&gt;\n\n&lt;p&gt;day1puzzle1result
        = max(cellfun(fun,out.PixelIdxList))&lt;/p&gt;\n\n&lt;p&gt;%% day1puzzle2
        - Daniel Breslan - Advent Of Code 2022\ndata = readlines(&amp;quot;input.txt&amp;quot;).double()\nout
        = bwconncomp(~isnan(data));\nfun = @(x) sum(data(x));&lt;/p&gt;\n\n&lt;p&gt;day1puzzle2result
        = sum(maxk(cellfun(fun,out.PixelIdxList),3))\n```&lt;/p&gt;\n\n&lt;h1&gt;MATLAB
        - 1 line solution&lt;/h1&gt;\n\n&lt;p&gt;&lt;code&gt;\nsum(maxk(cellfun(@(x)
        sum(string(x).split(&amp;quot;sp&amp;quot;).double()),readlines(&amp;#39;input.txt&amp;#39;).join(&amp;quot;sp&amp;quot;).split(&amp;quot;spsp&amp;quot;)),3))\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyh9vm9/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyh9vm9", "created":
        1669894790.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyug3z4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670134666.0, "send_replies": true,
        "parent_id": "t1_iyh9vm9", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyug3z4/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyug3z4", "created": 1670134666.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1669899592.0, "mod_reason_by": null, "banned_by": null, "ups":
        1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhfzli",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ciocan42",
        "can_mod_post": false, "created_utc": 1669898981.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_j371s", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "javascript (Deno):\n\n```\nconst text = await Deno.readTextFile(\"./1.txt\");\n\nconst
        result = text.split(\"\\n\\n\")\n  .map(str =&gt; str.split(\"\\n\"))\n  .map(arr
        =&gt; arr.reduce((a,b) =&gt; Number(a) + Number(b), 0))\n  .sort((a,b) =&gt;
        b - a)\n  .slice(0,3)\n\nconsole.log(result[0])\nconsole.log(result.reduce((a,b)
        =&gt; a + b, 0))\n```", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;javascript
        (Deno):&lt;/p&gt;\n\n&lt;p&gt;```\nconst text = await Deno.readTextFile(&amp;quot;./1.txt&amp;quot;);&lt;/p&gt;\n\n&lt;p&gt;const
        result = text.split(&amp;quot;\\n\\n&amp;quot;)\n  .map(str =&amp;gt; str.split(&amp;quot;\\n&amp;quot;))\n  .map(arr
        =&amp;gt; arr.reduce((a,b) =&amp;gt; Number(a) + Number(b), 0))\n  .sort((a,b)
        =&amp;gt; b - a)\n  .slice(0,3)&lt;/p&gt;\n\n&lt;p&gt;console.log(result[0])\nconsole.log(result.reduce((a,b)
        =&amp;gt; a + b, 0))\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhfzli/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhfzli", "created":
        1669898981.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyuftsz",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670134468.0, "send_replies": true,
        "parent_id": "t1_iyhfzli", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuftsz/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyuftsz", "created": 1670134468.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhg2qj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "cat_emojis",
        "can_mod_post": false, "created_utc": 1669899035.0, "send_replies": false,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_884mqzte", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Swift\n\n```swift\npublic extension Sequence where Element: StringProtocol
        {\n  func maxCalories(count: Int = 1) -&gt; Int {\n    lazy.split(whereSeparator:
        \\.isEmpty)\n      .map(\\.calorieSum)\n      .max(count: count)\n      .sum!\n  }\n  \n  private
        var calorieSum: Int {\n    lazy.map { Int($0)! }.sum!\n  }\n}\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Swift&lt;/p&gt;\n\n&lt;p&gt;```swift\npublic
        extension Sequence where Element: StringProtocol {\n  func maxCalories(count:
        Int = 1) -&amp;gt; Int {\n    lazy.split(whereSeparator: .isEmpty)\n      .map(.calorieSum)\n      .max(count:
        count)\n      .sum!\n  }&lt;/p&gt;\n\n&lt;p&gt;private var calorieSum: Int
        {\n    lazy.map { Int($0)! }.sum!\n  }\n}\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhg2qj/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyhg2qj", "created": 1669899035.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyuftgc", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670134461.0, "send_replies": true, "parent_id": "t1_iyhg2qj",
        "score": 1, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Please edit your post
        to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuftgc/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyuftgc", "created": 1670134461.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": -2,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyvjob1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jessyatterwaul",
        "can_mod_post": false, "created_utc": 1670164695.0, "send_replies": true,
        "parent_id": "t1_iyuftgc", "score": -2, "author_fullname": "t2_119axc", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "No, that''s too much effort to bother with. Thanks for letting me know that
        it''s not worth posting code here though. You should make this more accessible.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No, that&amp;#39;s too
        much effort to bother with. Thanks for letting me know that it&amp;#39;s not
        worth posting code here though. You should make this more accessible.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyvjob1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyvjob1", "created":
        1670164695.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1670134447.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhnl8j", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fiddle_n",
        "can_mod_post": false, "created_utc": 1669903147.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_7is2d", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python 3 solution:\n\nhttps://github.com/Fiddle-N/advent-of-code-2022/blob/master/day_01/process.py",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python 3 solution:&lt;/p&gt;\n\n&lt;p&gt;&lt;a
        href=\"https://github.com/Fiddle-N/advent-of-code-2022/blob/master/day_01/process.py\"&gt;https://github.com/Fiddle-N/advent-of-code-2022/blob/master/day_01/process.py&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhnl8j/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhnl8j", "created":
        1669903147.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyuf6mq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670134026.0, "send_replies": true,
        "parent_id": "t1_iyhnl8j", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "FYI: your link is borked on old.reddit and some mobile Reddit apps.  [Please
        fix it](https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;FYI: your link is borked
        on old.reddit and some mobile Reddit apps.  &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links\"&gt;Please
        fix it&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuf6mq/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyuf6mq", "created":
        1670134026.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyhnrc6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "TheGoodBarn",
        "can_mod_post": false, "created_utc": 1669903235.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_e1kcsst", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here\u2019s my solution in go \ud83d\ude42 [GitHub](https://github.com/immannino/advent-of-go/blob/master/year2022/Day1.go)\n\n```\n\npackage
        year2022\n\nimport (\n\t\"advent-of-code/utils\"\n\t\"fmt\"\n\t\"sort\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nvar
        data string\nvar part1 int\nvar part2 int\nvar example string = `1000\n2000\n3000\n\n4000\n\n5000\n6000\n\n7000\n8000\n9000\n\n10000\n`\n\nfunc
        Day1() string {\n\tdata = utils.GetData(\"data/2022/day1.txt\")\n\t// data
        = example\n\trows := strings.Split(data, \"\\n\")\n\n\telves := []int{}\n\tcurrentElf
        := 0\n\n\tfor _, r := range rows {\n\t\tif r == \"\" {\n\t\t\telves = append(elves,
        currentElf)\n\t\t\tcurrentElf = 0\n\t\t\tcontinue\n\t\t}\n\n\t\tv, _ := strconv.ParseInt(r,
        10, 32)\n\n\t\tcurrentElf += int(v)\n\t}\n\n\tsort.Sort(sort.Reverse(sort.IntSlice(elves)))\n\n\tpart1
        = elves[0]\n\n\tpart2 = elves[0] + elves[1] + elves[2]\n\n\treturn fmt.Sprintf(\"---|
        Day 1 Calorie Counting - 1: %d 2: %d |---\\n\", part1, part2)\n}\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Here\u2019s my solution in go \ud83d\ude42
        &lt;a href=\"https://github.com/immannino/advent-of-go/blob/master/year2022/Day1.go\"&gt;GitHub&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;package
        year2022&lt;/p&gt;\n\n&lt;p&gt;import (\n    &amp;quot;advent-of-code/utils&amp;quot;\n    &amp;quot;fmt&amp;quot;\n    &amp;quot;sort&amp;quot;\n    &amp;quot;strconv&amp;quot;\n    &amp;quot;strings&amp;quot;\n)&lt;/p&gt;\n\n&lt;p&gt;var
        data string\nvar part1 int\nvar part2 int\nvar example string = `1000\n2000\n3000&lt;/p&gt;\n\n&lt;p&gt;4000&lt;/p&gt;\n\n&lt;p&gt;5000\n6000&lt;/p&gt;\n\n&lt;p&gt;7000\n8000\n9000&lt;/p&gt;\n\n&lt;p&gt;10000\n`&lt;/p&gt;\n\n&lt;p&gt;func
        Day1() string {\n    data = utils.GetData(&amp;quot;data/2022/day1.txt&amp;quot;)\n    //
        data = example\n    rows := strings.Split(data, &amp;quot;\\n&amp;quot;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;elves
        := []int{}\ncurrentElf := 0\n\nfor _, r := range rows {\n    if r == &amp;quot;&amp;quot;
        {\n        elves = append(elves, currentElf)\n        currentElf = 0\n        continue\n    }\n\n    v,
        _ := strconv.ParseInt(r, 10, 32)\n\n    currentElf += int(v)\n}\n\nsort.Sort(sort.Reverse(sort.IntSlice(elves)))\n\npart1
        = elves[0]\n\npart2 = elves[0] + elves[1] + elves[2]\n\nreturn fmt.Sprintf(&amp;quot;---|
        Day 1 Calorie Counting - 1: %d 2: %d |---\\n&amp;quot;, part1, part2)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhnrc6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhnrc6", "created":
        1669903235.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyuf3ym",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670133974.0, "send_replies": true,
        "parent_id": "t1_iyhnrc6", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuf3ym/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyuf3ym", "created": 1670133974.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1670153779.0, "mod_reason_by": null, "banned_by": null, "ups":
        1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhp9bc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Alligatronica",
        "can_mod_post": false, "created_utc": 1669903975.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_ehco4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "JavaScript  \n\n    const part1 = input =&gt; input.split(''\\\\n\\\\n'').reduce(  \n      (best,elf)=&gt;(\n        elf=elf.split(''\\\\n'').reduce((a,c)=&gt;a+Number(c),0),elf&gt;best?elf:best\n      ),0  \n    )  \n    const
        part2 = input =&gt; input.split(''\\\\n\\\\n'').map(  \n      elf=&gt;elf.split(''\\\\n'').reduce((a,c)=&gt;a+Number(c),0)  \n    ).sort((a,b)=&gt;a&gt;b?-1:1).slice(0,3).reduce((a,c)=&gt;a+c)",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;JavaScript  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const
        part1 = input =&amp;gt; input.split(&amp;#39;\\\\n\\\\n&amp;#39;).reduce(  \n  (best,elf)=&amp;gt;(\n    elf=elf.split(&amp;#39;\\\\n&amp;#39;).reduce((a,c)=&amp;gt;a+Number(c),0),elf&amp;gt;best?elf:best\n  ),0  \n)  \nconst
        part2 = input =&amp;gt; input.split(&amp;#39;\\\\n\\\\n&amp;#39;).map(  \n  elf=&amp;gt;elf.split(&amp;#39;\\\\n&amp;#39;).reduce((a,c)=&amp;gt;a+Number(c),0)  \n).sort((a,b)=&amp;gt;a&amp;gt;b?-1:1).slice(0,3).reduce((a,c)=&amp;gt;a+c)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhp9bc/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhp9bc", "created":
        1669903975.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyuf2jt",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670133947.0, "send_replies": true,
        "parent_id": "t1_iyhp9bc", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Inlined code is intended for `short snippets` of code only.  Your code \"block\"
        right now is unreadable;  it''s all on one line and gets cut off at the edge
        of the screen because it is not horizontally scrollable.\n\nPlease edit your
        post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Inlined code is intended
        for &lt;code&gt;short snippets&lt;/code&gt; of code only.  Your code &amp;quot;block&amp;quot;
        right now is unreadable;  it&amp;#39;s all on one line and gets cut off at
        the edge of the screen because it is not horizontally scrollable.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyuf2jt/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyuf2jt", "created": 1670133947.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1669914885.0, "mod_reason_by": null, "banned_by": null, "ups":
        1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyiew8r",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Skirlaxx",
        "can_mod_post": false, "created_utc": 1669914679.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_4mtypba3", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "    def load_file():  \n      with open(\"input.txt\") as f:  \n      ct
        = f.read()  \n      f.close()  \n      return ct  \n      \n      \n    class
        Part1:  \n      def __init__(self):  \n      self.content = load_file()  \n      print(self.solve())  \n      \n      def
        solve(self):  \n      split = self.content.split(\"\\n\\n\")  \n      return
        max([sum([int(y) for y in x.split(\"\\n\")]) for x in split])  \n      \n      \n    class
        Part2:  \n\n\n      def __init__(self):  \n      self.content = load_file()  \n      print(self.solve())  \n      \n      def
        solve(self):  \n      split = self.content.split(\"\\n\\n\")  \n      tops
        = []  \n      list_ = [sum([int(y) for y in x.split(\"\\n\")]) for x in split]  \n      for
        _ in range(3):  \n      max_ = max(list_)  \n      tops.append(max_)  \n      list_.remove(max_)  \n      return
        sum(tops)  \n      \n      \n    if __name__ == \"__main__\":  \n      Part1()  \n      Part2()\n\nI
        am sorry for the stupid formatting.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;def load_file():  \n  with open(&amp;quot;input.txt&amp;quot;)
        as f:  \n  ct = f.read()  \n  f.close()  \n  return ct  \n\n\nclass Part1:  \n  def
        __init__(self):  \n  self.content = load_file()  \n  print(self.solve())  \n\n  def
        solve(self):  \n  split = self.content.split(&amp;quot;\\n\\n&amp;quot;)  \n  return
        max([sum([int(y) for y in x.split(&amp;quot;\\n&amp;quot;)]) for x in split])  \n\n\nclass
        Part2:  \n\n\n  def __init__(self):  \n  self.content = load_file()  \n  print(self.solve())  \n\n  def
        solve(self):  \n  split = self.content.split(&amp;quot;\\n\\n&amp;quot;)  \n  tops
        = []  \n  list_ = [sum([int(y) for y in x.split(&amp;quot;\\n&amp;quot;)])
        for x in split]  \n  for _ in range(3):  \n  max_ = max(list_)  \n  tops.append(max_)  \n  list_.remove(max_)  \n  return
        sum(tops)  \n\n\nif __name__ == &amp;quot;__main__&amp;quot;:  \n  Part1()  \n  Part2()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I
        am sorry for the stupid formatting.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiew8r/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyiew8r", "created": 1669914679.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_z9ezjb", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "iyivbhm", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "[deleted]", "can_mod_post": false, "send_replies":
        true, "parent_id": "t1_iyiew8r", "score": 2, "approved_by": null, "mod_note":
        null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body": "You don''t
        need to close the file if you''re using a ''with'' context.", "awarders":
        [], "downs": 0, "author_flair_css_class": null, "name": "t1_iyivbhm", "collapsed":
        false, "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You
        don&amp;#39;t need to close the file if you&amp;#39;re using a &amp;#39;with&amp;#39;
        context.&lt;/p&gt;\n&lt;/div&gt;", "gildings": {}, "collapsed_reason": null,
        "distinguished": null, "associated_award": null, "stickied": false, "can_gild":
        false, "top_awarded_type": null, "unrepliable_reason": null, "author_flair_text_color":
        "dark", "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyivbhm/",
        "num_reports": null, "locked": false, "report_reasons": null, "created": 1669921034.0,
        "subreddit": "adventofcode", "author_flair_text": null, "treatment_tags":
        [], "created_utc": 1669921034.0, "subreddit_name_prefixed": "r/adventofcode",
        "controversiality": 0, "depth": 1, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 2}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq5x4y",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670053803.0, "send_replies": true,
        "parent_id": "t1_iyiew8r", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to [state which programming language this code is written
        in](/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        edit your post to &lt;a href=\"/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        which programming language this code is written in&lt;/a&gt;.  This makes
        it easier for folks who Ctrl-F the megathreads looking for a specific language.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq5x4y/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq5x4y", "created":
        1670053803.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 1, "name": "t1_j1nlrq0", "id": "j1nlrq0",
        "parent_id": "t1_iyq5x4y", "depth": 2, "children": ["j1nlrq0"]}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669965978.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyiijcf", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Oyalmli",
        "can_mod_post": false, "created_utc": 1669916086.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_fl5e6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "# Befunge 93 - Part 1\n```\n&gt;0vv     &lt;   &lt;\nv0&lt;0&gt;  $:|\n&gt;00v   &lt;
        $   0\n   v|!++&lt;v +&lt;:\n   ~\\  \\2&gt;\\:|$\nv1:&lt;2  **!* &gt;^\n+86v&gt;5*^6&gt;#\n_v
        &gt;*-:6^^\n &gt;$\\$&gt;-:0`v\n   &gt; ^.:$ _v\n   ^.:+*-10&lt;\n```\n&lt;https://esolangpark.vercel.app/ide/befunge93&gt;  \nedit:
        no more cheating", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;h1&gt;Befunge
        93 - Part 1&lt;/h1&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;0vv     &amp;lt;   &amp;lt;\nv0&amp;lt;0&amp;gt;  $:|\n00v   &amp;lt;
        $   0\n   v|!++&amp;lt;v +&amp;lt;:\n   ~\\  \\2&amp;gt;:|$\nv1:&amp;lt;2  **!*
        &amp;gt;^\n+86v&amp;gt;5&lt;em&gt;&lt;sup&gt;6&amp;gt;#&lt;/sup&gt;\n_v &amp;gt;&lt;/em&gt;-:6&lt;sup&gt;^&lt;/sup&gt;\n$\\$&amp;gt;-:0&lt;code&gt;v\n^.:$
        _v\n   ^.:+*-10&amp;lt;\n&lt;/code&gt;``\n&lt;a href=\"https://esolangpark.vercel.app/ide/befunge93\"&gt;https://esolangpark.vercel.app/ide/befunge93&lt;/a&gt;&lt;br/&gt;\nedit:
        no more cheating&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiijcf/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyiijcf", "created": 1669916086.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyq5tgw", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670053716.0, "send_replies": true, "parent_id": "t1_iyiijcf",
        "score": 1, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Please edit your post
        to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq5tgw/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq5tgw", "created": 1670053716.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_z9ezjb", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "iyisc1l", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_iyisc1l", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyisc1l/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669919886.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669919886.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq5bnp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670053294.0, "send_replies": true,
        "parent_id": "t1_iyisc1l", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Please edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq5bnp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq5bnp", "created":
        1670053294.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1670062651.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyiuj74", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Saitama088",
        "can_mod_post": false, "created_utc": 1669920729.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_gb079g5p", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**My C++ Solution**\n\n#include &lt;bits/stdc++.h&gt;**  \nusing namespace
        std;**  \nint main() {**  \n\t  std::ifstream file(\"input1.txt\");**  \n\t  std::string
        line;**  \n\t  nt current = 0;**  \n\t  \n    vector&lt;int&gt; res;**  \n\t  while(std::getline(file,
        line)) {**  \n    stringstream geek(line);**  \n    int x = 0;**  \n    geek
        &gt;&gt; x;**  \n\t\t     if(x == 0) {**  \n\t\t\t      res.push\\_back(current);**  \n\t\t\t      current
        = 0;**  \n\t\t    } else {**  \n\t\t\t        current += x;**  \n\t\t    }**  \n\t  }**  \n      cout&lt;&lt;\\*max\\_element(res.begin(),
        res.end())&lt;&lt;endl;**  \n\t  \n\t**return 0;**  \n**}**", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;My C++ Solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;h1&gt;include
        &amp;lt;bits/stdc++.h&amp;gt;**&lt;/h1&gt;\n\n&lt;p&gt;using namespace std;**&lt;br/&gt;\nint
        main() {**&lt;br/&gt;\n      std::ifstream file(&amp;quot;input1.txt&amp;quot;);**&lt;br/&gt;\n      std::string
        line;**&lt;br/&gt;\n      nt current = 0;**  &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;vector&amp;lt;int&amp;gt;
        res;**  \n  while(std::getline(file, line)) {**  \nstringstream geek(line);**  \nint
        x = 0;**  \ngeek &amp;gt;&amp;gt; x;**  \n         if(x == 0) {**  \n              res.push\\_back(current);**  \n              current
        = 0;**  \n        } else {**  \n                current += x;**  \n        }**  \n  }**  \n  cout&amp;lt;&amp;lt;\\*max\\_element(res.begin(),
        res.end())&amp;lt;&amp;lt;endl;**  \n\n**return 0;**  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;}&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyiuj74/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyiuj74", "created":
        1669920729.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq56fs",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670053171.0, "send_replies": true,
        "parent_id": "t1_iyiuj74", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Please edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq56fs/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq56fs", "created":
        1670053171.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "more", "data": {"count": 92, "name": "t1_iyj5tvu", "id": "iyj5tvu",
        "parent_id": "t3_z9ezjb", "depth": 0, "children": ["iyj5tvu", "iyj6eg1", "iyj8sit",
        "iyj8hzx", "iyj6m98", "iyjr2fv", "iyjdyny", "iyjfvg4", "iyjj4z7", "iyjphct",
        "iyjcn65", "iyk38p6", "iyk30jj", "iyjes91", "iyjoxe5", "iyjjbuu", "iyjo0p4",
        "iyjrlwy", "iyjjlwa", "iyjrsrt", "iyjqxua", "iyjmvn5", "iyjo9dr", "iyl783x",
        "iylmebf", "iyll509", "iykkyaf", "iyjq2ke", "iyjon13", "iyjt0id", "iyk0fpn",
        "iykf2rh", "iyjqo0n", "iyjpq76", "iykca4b", "iyjsuh9", "iyk3370", "iyjs7bn",
        "iyjqs6b", "iykopsr", "iylsah5", "iykh5as", "iyju5na", "iyjrdd3", "iyjosmn",
        "iyjp7up", "iylahzo", "iylrl58", "iyndflq", "iylrzr2", "iyna5us", "iylrvts",
        "iyl7t9c", "iymoetz", "iylldan", "iyls2ng", "iyjuml8", "iylr8nj", "iykl2k8",
        "iyk42v2", "iylruwg", "iylenyb", "iyjtywa", "iyk2b5l", "iykjata"]}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_iygpb55"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:40 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:40 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=N3ckWFoLm2HesVkgdq; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:40 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyj5tvu,iyj6eg1,iyj8sit,iyj8hzx,iyj6m98,iyjr2fv,iyjdyny,iyjfvg4,iyjj4z7,iyjphct,iyjcn65,iyk38p6,iyk30jj,iyjes91,iyjoxe5,iyjjbuu,iyjo0p4,iyjrlwy,iyjjlwa,iyjrsrt,iyjqxua,iyjmvn5,iyjo9dr,iyl783x,iylmebf,iyll509,iykkyaf,iyjq2ke,iyjon13,iyjt0id,iyk0fpn,iykf2rh,iyjqo0n,iyjpq76,iykca4b,iyjsuh9,iyk3370,iyjs7bn,iyjqs6b,iykopsr,iylsah5,iykh5as,iyju5na,iyjrdd3,iyjosmn,iyjp7up,iylahzo,iylrl58,iyndflq,iylrzr2,iyna5us,iylrvts,iyl7t9c,iymoetz,iylldan,iyls2ng,iyjuml8,iylr8nj,iykl2k8,iyk42v2,iylruwg,iylenyb,iyjtywa,iyk2b5l,iykjata
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '12628'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv4czx6.2.1741472680451.Z0FBQUFBQm56TU9vZmRrUS04aWlja3NGczNfZTdJWEdraC1STmxJcTN0b0FfU0lFSmVqSzctdFJiSURhY25vSU5QVUlUQUMySGtSelB6UndzRzBaXzQ0QlVIdDQ2U0JhTzR0NWd1UVc2UEpIUHo5Mm42S0FkS09hVldnaHQyM3AyU3BNSmQ4S0dXQmc;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:40
        GMT; secure, session_tracker=mhmhnnijghprochdrf.0.1741472680461.Z0FBQUFBQm56TU9vU3pnSm96SjY3Vm9ZUWFzbkc0UGY3TVh0ZjlmM0NneEFmc0FOWFVnNnAtZVZPVm4yb3JBdXhjVlVCRzNoMjBTUi1jSEZPeTZVeXVtQzdnc0prb3VFc0E0bENROGhCaENXNjNPb20xckFGRHhGR0hka01JdmRseVh3V0pjWWVxVVM;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:40
        GMT; secure, edgebucket=5riw3U7WNGZ2s5YJFn; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '40'
      x-ratelimit-remaining:
      - '60.0'
      x-ratelimit-reset:
      - '319'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:40 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": 1669925339.0, "mod_reason_by": null,
        "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type": "text",
        "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyj5tvu", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "bmain1345",
        "can_mod_post": false, "created_utc": 1669925158.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_hcs797z", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Very simple JS solution for part 2 and can be easily modified for part 1\n````\nconst
        { readFileSync } = require(''fs'');\nconst { resolve } = require(''path'')\n\nlet
        arrayOfCalories = [];\nlet index = 0;\nlet currCalories = 0;\nreadFileSync(resolve(__dirname,
        ''input.txt''), ''utf8'')\n    .toString()\n    .trim()\n    .split(''\\n'')\n    .forEach(x
        =&gt; {\n        const num = parseInt(x, 10);\n        if (isNaN(num)) {\n            arrayOfCalories[index]
        = currCalories;\n            currCalories = 0;\n            index++;\n        }
        else {\n            currCalories += num;\n        }\n    });\n\narrayOfCalories.sort((a,
        b) =&gt; b - a);\nconsole.log(arrayOfCalories[0] + arrayOfCalories[1] + arrayOfCalories[2]);\n````",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very simple JS solution
        for part 2 and can be easily modified for part 1\n````\nconst { readFileSync
        } = require(&amp;#39;fs&amp;#39;);\nconst { resolve } = require(&amp;#39;path&amp;#39;)&lt;/p&gt;\n\n&lt;p&gt;let
        arrayOfCalories = [];\nlet index = 0;\nlet currCalories = 0;\nreadFileSync(resolve(__dirname,
        &amp;#39;input.txt&amp;#39;), &amp;#39;utf8&amp;#39;)\n    .toString()\n    .trim()\n    .split(&amp;#39;\\n&amp;#39;)\n    .forEach(x
        =&amp;gt; {\n        const num = parseInt(x, 10);\n        if (isNaN(num))
        {\n            arrayOfCalories[index] = currCalories;\n            currCalories
        = 0;\n            index++;\n        } else {\n            currCalories +=
        num;\n        }\n    });&lt;/p&gt;\n\n&lt;p&gt;arrayOfCalories.sort((a, b)
        =&amp;gt; b - a);\nconsole.log(arrayOfCalories[0] + arrayOfCalories[1] + arrayOfCalories[2]);\n````&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj5tvu/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj5tvu", "created":
        1669925158.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq4q9q",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670052791.0, "send_replies": true,
        "parent_id": "t1_iyj5tvu", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq4q9q/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq4q9q", "created": 1670052791.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj6m98",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Jomy10",
        "can_mod_post": false, "created_utc": 1669925453.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_msu23", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "ShellScript (zsh)\n\n```zsh\n#!/usr/bin/env zsh\n\n# Total calories per elve\ntotal_calories=()\n\ncurrent_elve_cals=0\n\ncat
        \"$1\" | while read line; do\n  current_elve_cals=$(($line + $current_elve_cals))\n\n  if
        [[ $line == \"\" ]]; then\n    total_calories+=$current_elve_cals\n    current_elve_cals=0\n  fi\ndone\n\n#
        Add the last one\ntotal_calories+=$current_elve_cals\n\n# Sort O = reverse
        order, n = numerical sort (zsh only)\nsorted=(\"${(@nO)total_calories}\")\n\n#
        Part 1\nprintf ''Part 1: %s\\n'' \"${sorted[1]}\"\n\n# Part 2\nprintf ''Part
        2: %s\\n'' \"${$(($sorted[1] + $sorted[2] + $sorted[3]))}\"\n```\nEDIT: the
        input file is passed in as the first argument", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;ShellScript (zsh)&lt;/p&gt;\n\n&lt;p&gt;```zsh&lt;/p&gt;\n\n&lt;h1&gt;!/usr/bin/env
        zsh&lt;/h1&gt;\n\n&lt;h1&gt;Total calories per elve&lt;/h1&gt;\n\n&lt;p&gt;total_calories=()&lt;/p&gt;\n\n&lt;p&gt;current_elve_cals=0&lt;/p&gt;\n\n&lt;p&gt;cat
        &amp;quot;$1&amp;quot; | while read line; do\n  current_elve_cals=$(($line
        + $current_elve_cals))&lt;/p&gt;\n\n&lt;p&gt;if [[ $line == &amp;quot;&amp;quot;
        ]]; then\n    total_calories+=$current_elve_cals\n    current_elve_cals=0\n  fi\ndone&lt;/p&gt;\n\n&lt;h1&gt;Add
        the last one&lt;/h1&gt;\n\n&lt;p&gt;total_calories+=$current_elve_cals&lt;/p&gt;\n\n&lt;h1&gt;Sort
        O = reverse order, n = numerical sort (zsh only)&lt;/h1&gt;\n\n&lt;p&gt;sorted=(&amp;quot;${(@nO)total_calories}&amp;quot;)&lt;/p&gt;\n\n&lt;h1&gt;Part
        1&lt;/h1&gt;\n\n&lt;p&gt;printf &amp;#39;Part 1: %s\\n&amp;#39; &amp;quot;${sorted[1]}&amp;quot;&lt;/p&gt;\n\n&lt;h1&gt;Part
        2&lt;/h1&gt;\n\n&lt;p&gt;printf &amp;#39;Part 2: %s\\n&amp;#39; &amp;quot;${$(($sorted[1]
        + $sorted[2] + $sorted[3]))}&amp;quot;\n```\nEDIT: the input file is passed
        in as the first argument&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj6m98/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj6m98", "created":
        1669925453.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq4jnd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670052638.0, "send_replies": true,
        "parent_id": "t1_iyj6m98", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq4jnd/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq4jnd", "created": 1670052638.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": 1669926498.0, "mod_reason_by": null, "banned_by": null, "ups":
        1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyj8sit",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Gingerboiiiiiiiiii",
        "can_mod_post": false, "created_utc": 1669926273.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_14vuwevv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Python**\n\n    from itertools import groupby\n    data = open(''input.txt'',''r'')
        split = data.read().splitlines()\n    \n    def replace_values(list_to_replace,
        item_to_replace, item_to_replace_with): \n        return [item_to_replace_with
        if item == item_to_replace else item for item in list_to_replace]\n    \n    split
        = replace_values(split, '''', ''0'') \n    split = list(map(int, split))\n    \n    def
        split_condition(x): \n        return x in {0}\n    \n    def group(): grouper
        = groupby(split, key=split_condition) res = dict(enumerate((list(j) for i,
        j in grouper if not i), 1))\n        for x in res:\n            res[x] = sum(res[x])\n    \n        res
        = {k: v for k, v in sorted(res.items(), key=lambda item:   item[1])}\n        return
        res\n    \n    def top(): \n        group top = [] \n        top_3 = [] for
        x in     \n        list(reversed(list(res.values())))[0:1]: \n            top.append(x)
        \n        for x in list(reversed(list(res.values())))[0:3]: \n            top_3.append(x)\n        top_3
        = sum(top_3)\n        top = sum(top)\n        print(f''\\n Part 1: The elf
        carrying the most carries {top} calories \\n Part 2: The three elves carrying
        the most carry a cumulative {top_3} calories'') \n    \n    top()\n\nCould
        definitely be written in fewer lines, but this is what I did", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;from
        itertools import groupby\ndata = open(&amp;#39;input.txt&amp;#39;,&amp;#39;r&amp;#39;)
        split = data.read().splitlines()\n\ndef replace_values(list_to_replace, item_to_replace,
        item_to_replace_with): \n    return [item_to_replace_with if item == item_to_replace
        else item for item in list_to_replace]\n\nsplit = replace_values(split, &amp;#39;&amp;#39;,
        &amp;#39;0&amp;#39;) \nsplit = list(map(int, split))\n\ndef split_condition(x):
        \n    return x in {0}\n\ndef group(): grouper = groupby(split, key=split_condition)
        res = dict(enumerate((list(j) for i, j in grouper if not i), 1))\n    for
        x in res:\n        res[x] = sum(res[x])\n\n    res = {k: v for k, v in sorted(res.items(),
        key=lambda item:   item[1])}\n    return res\n\ndef top(): \n    group top
        = [] \n    top_3 = [] for x in     \n    list(reversed(list(res.values())))[0:1]:
        \n        top.append(x) \n    for x in list(reversed(list(res.values())))[0:3]:
        \n        top_3.append(x)\n    top_3 = sum(top_3)\n    top = sum(top)\n    print(f&amp;#39;\\n
        Part 1: The elf carrying the most carries {top} calories \\n Part 2: The three
        elves carrying the most carry a cumulative {top_3} calories&amp;#39;) \n\ntop()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Could
        definitely be written in fewer lines, but this is what I did&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyj8sit/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyj8sit", "created":
        1669926273.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjcn65",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "DoOm101DoN",
        "can_mod_post": false, "created_utc": 1669927725.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_avlhr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Javascript\n\n```\n  const calories = inputString.split(''\\n'');\n\n  let
        highestCalories = [0, 0, 0];\n\n  let lastEmptyIndex = 0;\n\n  for (let i
        = 0; i &lt; calories.length; i++) {\n    let currentCalories = 0;\n    for
        (let j = lastEmptyIndex + 1; j &lt; calories.length; j++) {\n      if (calories[j]
        == '''') {\n        lastEmptyIndex = j;\n        break;\n      }\n      currentCalories
        += Number(calories[j]);\n    }\n\n    for (let c = 0; c &lt; highestCalories.length
        - 1; c++) {\n      if (currentCalories &gt; highestCalories[c]) {\n        if
        (c &lt; highestCalories.length - 1)\n          highestCalories[c + 1] = highestCalories[c];\n        highestCalories[c]
        = currentCalories;\n        break;\n      }\n    }\n  }\n\n  let sum = 0;\n  highestCalories.forEach((e)
        =&gt; (sum += e));\n  return sum;\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Javascript&lt;/p&gt;\n\n&lt;p&gt;```\n  const calories
        = inputString.split(&amp;#39;\\n&amp;#39;);&lt;/p&gt;\n\n&lt;p&gt;let highestCalories
        = [0, 0, 0];&lt;/p&gt;\n\n&lt;p&gt;let lastEmptyIndex = 0;&lt;/p&gt;\n\n&lt;p&gt;for
        (let i = 0; i &amp;lt; calories.length; i++) {\n    let currentCalories =
        0;\n    for (let j = lastEmptyIndex + 1; j &amp;lt; calories.length; j++)
        {\n      if (calories[j] == &amp;#39;&amp;#39;) {\n        lastEmptyIndex
        = j;\n        break;\n      }\n      currentCalories += Number(calories[j]);\n    }&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for
        (let c = 0; c &amp;lt; highestCalories.length - 1; c++) {\n  if (currentCalories
        &amp;gt; highestCalories[c]) {\n    if (c &amp;lt; highestCalories.length
        - 1)\n      highestCalories[c + 1] = highestCalories[c];\n    highestCalories[c]
        = currentCalories;\n    break;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;let
        sum = 0;\n  highestCalories.forEach((e) =&amp;gt; (sum += e));\n  return sum;\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjcn65/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjcn65", "created":
        1669927725.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq4dvf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670052505.0, "send_replies": true,
        "parent_id": "t1_iyjcn65", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq4dvf/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq4dvf", "created": 1670052505.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjdyny",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "NeelBhatt",
        "can_mod_post": false, "created_utc": 1669928228.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_7lsu8qh", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "C# -&gt; [https://github.com/NeelBhatt/AdventOfCode2022/blob/main/Day1](https://github.com/NeelBhatt/AdventOfCode2022/blob/main/Day1)\n\nExecution
        time 17ms\n\n&amp;#x200B;\n\n`var caleries = File.ReadAllLines(@\"..\\net6.0\\TextFile1.txt\");`\n\n`var
        caleriesByElf = new List&lt;int&gt;();`\n\n`var totalCaleriesByElf = 0;`\n\n`foreach
        (var cal in caleries)`\n\n`{`\n\n`if (cal != String.Empty)`\n\n`{`\n\n`totalCaleriesByElf
        += int.Parse(cal);`\n\n`}`\n\n`else`\n\n`{`\n\n`caleriesByElf.Add(totalCaleriesByElf);`\n\n`totalCaleriesByElf
        = 0;`\n\n`continue;`\n\n`}`\n\n`}`\n\n`var top3Caleries = caleriesByElf.OrderByDescending(x
        =&gt; x).Take(3);`\n\n`Console.WriteLine(top3Caleries.Sum());`\n\n`Console.ReadLine();`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C# -&amp;gt; &lt;a href=\"https://github.com/NeelBhatt/AdventOfCode2022/blob/main/Day1\"&gt;https://github.com/NeelBhatt/AdventOfCode2022/blob/main/Day1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Execution
        time 17ms&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var
        caleries = File.ReadAllLines(@&amp;quot;..\\net6.0\\TextFile1.txt&amp;quot;);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var
        caleriesByElf = new List&amp;lt;int&amp;gt;();&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var
        totalCaleriesByElf = 0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;foreach
        (var cal in caleries)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if
        (cal != String.Empty)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;totalCaleriesByElf
        += int.Parse(cal);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;else&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;{&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;caleriesByElf.Add(totalCaleriesByElf);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;totalCaleriesByElf
        = 0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;continue;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;var
        top3Caleries = caleriesByElf.OrderByDescending(x =&amp;gt; x).Take(3);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Console.WriteLine(top3Caleries.Sum());&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Console.ReadLine();&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjdyny/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjdyny", "created":
        1669928228.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq4a3v",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670052419.0, "send_replies": true,
        "parent_id": "t1_iyjdyny", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Inlined code is intended for `short snippets` of code only.  Your code \"block\"
        right now is unreadable;  it''s all on one line and gets cut off at the edge
        of the screen because it is not horizontally scrollable.\n\nPlease edit your
        post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Inlined code is intended
        for &lt;code&gt;short snippets&lt;/code&gt; of code only.  Your code &amp;quot;block&amp;quot;
        right now is unreadable;  it&amp;#39;s all on one line and gets cut off at
        the edge of the screen because it is not horizontally scrollable.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq4a3v/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq4a3v", "created": 1670052419.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjn3ll",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "dvidmar",
        "can_mod_post": false, "created_utc": 1669931746.0, "send_replies": true,
        "parent_id": "t1_iyjdyny", "score": 1, "author_fullname": "t2_15l8i5", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "This has a bug that would reveal itself if the last group would have the
        largest sum.  You are not processing the last group, as there is no trailing
        empty line.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This
        has a bug that would reveal itself if the last group would have the largest
        sum.  You are not processing the last group, as there is no trailing empty
        line.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjn3ll/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjn3ll", "created":
        1669931746.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjjbuu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "CalligrapherArtistic",
        "can_mod_post": false, "created_utc": 1669930257.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_68wsq3yl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python:\n\n`current = 0`\r  \n`largest = 0`\r  \n`second_largest = 0`\r  \n`third_largest
        = 0`\r  \n\r  \n`f = open(\"Advent of Code\\day 1.txt\", \"r\")`\r  \n`elves
        = f.readlines()`\r  \n\r  \n`for i in range(len(elves)):`\r  \n`temp = elves[i]`\r  \n`if
        temp != ''\\n'':`\r  \n`current += int(temp.rstrip(temp[-2]))`\r  \n`else:`\r  \n`if
        current &gt; largest:`\r  \n`largest = current`\r  \n`elif current &gt; second_largest:`\r  \n`second_largest
        = current`\r  \n`elif current &gt; third_largest:`\r  \n`third_largest = current`\r  \n`current
        = 0`\r  \n\r  \n`print(largest + second_largest + third_largest)`", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Python:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;current
        = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;largest = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;second_largest
        = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;third_largest = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;f
        = open(&amp;quot;Advent of Code\\day 1.txt&amp;quot;, &amp;quot;r&amp;quot;)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;elves
        = f.readlines()&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;for i in range(len(elves)):&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;temp
        = elves[i]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if temp != &amp;#39;\\n&amp;#39;:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;current
        += int(temp.rstrip(temp[-2]))&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;else:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if
        current &amp;gt; largest:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;largest
        = current&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;elif current &amp;gt;
        second_largest:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;second_largest
        = current&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;elif current &amp;gt;
        third_largest:&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;third_largest
        = current&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;current = 0&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;print(largest
        + second_largest + third_largest)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjjbuu/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyjjbuu", "created": 1669930257.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyq3h90", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670051766.0, "send_replies": true, "parent_id": "t1_iyjjbuu",
        "score": 1, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Inlined code is intended
        for `short snippets` of code only.  \n\nPlease edit your post to use the [four-spaces
        Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Inlined code is intended
        for &lt;code&gt;short snippets&lt;/code&gt; of code only.  &lt;/p&gt;\n\n&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq3h90/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq3h90", "created": 1670051766.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_z9ezjb", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "iyjjlwa", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 0, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[removed]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_iyjjlwa", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[removed]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjjlwa/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669930368.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669930368.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 0}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjjrj0",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "vitothelegend",
        "can_mod_post": false, "created_utc": 1669930427.0, "send_replies": true,
        "parent_id": "t1_iyjjlwa", "score": 3, "author_fullname": "t2_wvmop", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "everyone''s anwser is different as input is personal as well", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;everyone&amp;#39;s anwser is different as
        input is personal as well&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjjrj0/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjjrj0", "created":
        1669930427.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjlynn",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "osheaf01",
        "can_mod_post": false, "created_utc": 1669931293.0, "send_replies": true,
        "parent_id": "t1_iyjjrj0", "score": 1, "author_fullname": "t2_up3xdq0y", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "OK, but if it''s not clipboard content, can you upload a file? a Github link?",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;OK, but if it&amp;#39;s
        not clipboard content, can you upload a file? a Github link?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjlynn/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjlynn", "created":
        1669931293.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykta9t",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "adambombz",
        "can_mod_post": false, "created_utc": 1669950797.0, "send_replies": true,
        "parent_id": "t1_iyjlynn", "score": 1, "author_fullname": "t2_oytkt", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "the answer is a number or sometimes text", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;the answer is a number or sometimes text&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykta9t/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykta9t", "created":
        1669950797.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq3f36",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670051716.0, "send_replies": true,
        "parent_id": "t1_iyjjlwa", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "[Top-level posts in `Solution Megathread`s are for *code solutions* only.](/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_top-level_posts_are_for_code_solutions_only)\n\n[Create
        your own individual `Help` post](/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_incomplete_solutions)
        in /r/adventofcode.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a
        href=\"/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_top-level_posts_are_for_code_solutions_only\"&gt;Top-level
        posts in &lt;code&gt;Solution Megathread&lt;/code&gt;s are for &lt;em&gt;code
        solutions&lt;/em&gt; only.&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_incomplete_solutions\"&gt;Create
        your own individual &lt;code&gt;Help&lt;/code&gt; post&lt;/a&gt; in &lt;a
        href=\"/r/adventofcode\"&gt;/r/adventofcode&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq3f36/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq3f36", "created":
        1670051716.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyjosmn", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Dzefo_",
        "can_mod_post": false, "created_utc": 1669932442.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_5f5fa437", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "My solution of day 1 in Rust:\n```\nuse anyhow::Result;\nuse aoc_runner_derive::{aoc,
        aoc_generator};\n\n#[aoc_generator(day1)]\nfn parse_input_day1(input: &amp;str)
        -&gt; Result&lt;Vec&lt;i32&gt;&gt; {\n    let mut result: Vec&lt;i32&gt; =
        vec![];\n\n    let calorie_groups: Vec&lt;&amp;str&gt; = input.split(\"\\n\\n\").collect();\n\n    for
        group in calorie_groups.iter() {\n        let elve_calories: Vec&lt;i32&gt;
        = group.lines().map(|l| l.parse().unwrap()).collect();\n        let total_calories:
        i32 = elve_calories.iter().sum();\n        result.push(total_calories)\n    }\n\n    Ok(result)\n}\n\n#[aoc(day1,
        part1)]\nfn part1(elves: &amp;[i32]) -&gt; i32 {\n    *elves.iter().max().unwrap()\n}\n\n#[aoc(day1,
        part2)]\nfn part2(elves: &amp;[i32]) -&gt; i32 {\n    let mut elves: Vec&lt;i32&gt;
        = elves.to_vec();\n    elves.sort();\n    elves.iter().rev().take(3).sum()\n}\n\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My solution of day 1
        in Rust:\n```\nuse anyhow::Result;\nuse aoc_runner_derive::{aoc, aoc_generator};&lt;/p&gt;\n\n&lt;h1&gt;[aoc_generator(day1)]&lt;/h1&gt;\n\n&lt;p&gt;fn
        parse_input_day1(input: &amp;amp;str) -&amp;gt; Result&amp;lt;Vec&amp;lt;i32&amp;gt;&amp;gt;
        {\n    let mut result: Vec&amp;lt;i32&amp;gt; = vec![];&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let
        calorie_groups: Vec&amp;lt;&amp;amp;str&amp;gt; = input.split(&amp;quot;\\n\\n&amp;quot;).collect();\n\nfor
        group in calorie_groups.iter() {\n    let elve_calories: Vec&amp;lt;i32&amp;gt;
        = group.lines().map(|l| l.parse().unwrap()).collect();\n    let total_calories:
        i32 = elve_calories.iter().sum();\n    result.push(total_calories)\n}\n\nOk(result)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;h1&gt;[aoc(day1,
        part1)]&lt;/h1&gt;\n\n&lt;p&gt;fn part1(elves: &amp;amp;[i32]) -&amp;gt; i32
        {\n    *elves.iter().max().unwrap()\n}&lt;/p&gt;\n\n&lt;h1&gt;[aoc(day1, part2)]&lt;/h1&gt;\n\n&lt;p&gt;fn
        part2(elves: &amp;amp;[i32]) -&amp;gt; i32 {\n    let mut elves: Vec&amp;lt;i32&amp;gt;
        = elves.to_vec();\n    elves.sort();\n    elves.iter().rev().take(3).sum()\n}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjosmn/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjosmn", "created":
        1669932442.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq3ay7",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670051622.0, "send_replies": true,
        "parent_id": "t1_iyjosmn", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq3ay7/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq3ay7", "created": 1670051622.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjq2ke",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "futureEngineer123",
        "can_mod_post": false, "created_utc": 1669932978.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_mjnwpocv", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python3 using readline() -&gt; O(nlogn)\n```\ncalorieList = []\nwith open(''input.txt'')
        as file1:\n    tempSum = 0\n    while True:\n        line = file1.readline()\n        if
        line == '''':\n            calorieList.append(tempSum)\n            break\n        elif
        line == ''\\n'':\n            calorieList.append(tempSum)\n            tempSum
        = 0\n        else:\n            line = line.strip(''\\n'')\n            tempSum
        += int(line)\n\ncalorieList.sort()\nprint(''Part 1 -&gt;'', calorieList[-1])\nprint(''Part
        2 -&gt;'', sum(calorieList[-3:]))\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python3 using readline() -&amp;gt; O(nlogn)\n```\ncalorieList
        = []\nwith open(&amp;#39;input.txt&amp;#39;) as file1:\n    tempSum = 0\n    while
        True:\n        line = file1.readline()\n        if line == &amp;#39;&amp;#39;:\n            calorieList.append(tempSum)\n            break\n        elif
        line == &amp;#39;\\n&amp;#39;:\n            calorieList.append(tempSum)\n            tempSum
        = 0\n        else:\n            line = line.strip(&amp;#39;\\n&amp;#39;)\n            tempSum
        += int(line)&lt;/p&gt;\n\n&lt;p&gt;calorieList.sort()\nprint(&amp;#39;Part
        1 -&amp;gt;&amp;#39;, calorieList[-1])\nprint(&amp;#39;Part 2 -&amp;gt;&amp;#39;,
        sum(calorieList[-3:]))\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjq2ke/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjq2ke", "created":
        1669932978.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq2lh4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670051059.0, "send_replies": true,
        "parent_id": "t1_iyjq2ke", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq2lh4/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq2lh4", "created": 1670051059.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iyjqs6b", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "Suspicious-Cheetah89", "can_mod_post":
        false, "created_utc": 1669933277.0, "send_replies": true, "parent_id": "t3_z9ezjb",
        "score": 1, "author_fullname": "t2_2jiktetc", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "A Scala solution:\n\n```\nimport
        scala.io.Source\n\ndef splitByEmpty(ls: List[String]): List[List[String]]
        = ls.span(s =&gt; s.nonEmpty) match\n    case (h, _ :: t) =&gt; h :: splitByEmpty(t)\n    case
        (h, _) =&gt; List(h)\n\ndef listOfSums(ll: List[List[Int]]): List[Int] = ll
        match\n  case h :: t =&gt; h.sum :: listOfSums(t)\n  case nil =&gt; Nil\n\n@main
        def calories: Unit =\n  val li = splitByEmpty(Source.fromResource(\"calories.txt\").getLines().toList)\n  val
        ls = listOfSums(li.map(l =&gt; l.map(s =&gt; s.toInt))).sorted(Ordering.Int.reverse)\n  println(\"max
        = \" + ls.head)\n  println(\"sum of 3 = \" + ls.take(3).sum)\n```", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;A Scala solution:&lt;/p&gt;\n\n&lt;p&gt;```\nimport
        scala.io.Source&lt;/p&gt;\n\n&lt;p&gt;def splitByEmpty(ls: List[String]):
        List[List[String]] = ls.span(s =&amp;gt; s.nonEmpty) match\n    case (h, _
        :: t) =&amp;gt; h :: splitByEmpty(t)\n    case (h, _) =&amp;gt; List(h)&lt;/p&gt;\n\n&lt;p&gt;def
        listOfSums(ll: List[List[Int]]): List[Int] = ll match\n  case h :: t =&amp;gt;
        h.sum :: listOfSums(t)\n  case nil =&amp;gt; Nil&lt;/p&gt;\n\n&lt;p&gt;@main
        def calories: Unit =\n  val li = splitByEmpty(Source.fromResource(&amp;quot;calories.txt&amp;quot;).getLines().toList)\n  val
        ls = listOfSums(li.map(l =&amp;gt; l.map(s =&amp;gt; s.toInt))).sorted(Ordering.Int.reverse)\n  println(&amp;quot;max
        = &amp;quot; + ls.head)\n  println(&amp;quot;sum of 3 = &amp;quot; + ls.take(3).sum)\n```&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjqs6b/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjqs6b", "created":
        1669933277.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq2heu",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670050967.0, "send_replies": true,
        "parent_id": "t1_iyjqs6b", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq2heu/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq2heu", "created": 1670050967.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk2b5l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "UltraXDZN",
        "can_mod_post": false, "created_utc": 1669938270.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_x28retm", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "`#include &lt;bits/stdc++.h&gt;`\r  \n`using namespace std;`\r  \n \r  \n`int
        main() {`\r  \n \r  \n`vector&lt;int&gt; sums;`\r  \n`string num;`\r  \n`int
        sum=0;`\r  \n`while (num != \"-1\"){`\r  \n`getline(cin,num);`\r  \n`if (num.empty()){`\r  \n`sums.push_back(sum);`\r  \n`sum
        = 0;`\r  \n`}`\r  \n`else`  \r  \n`sum += stoi(num);`\r  \n`}`\r  \n  \n`cout
        &lt;&lt; endl&lt;&lt; \"Solution 1: \"&lt;&lt;*max_element (sums.begin(),
        sums.end());`\r  \n`sort(sums.begin(), sums.end(), greater&lt;int&gt;());`\r  \n`cout
        &lt;&lt; endl&lt;&lt; \"Solution 2: \"&lt;&lt;sums[0] + sums[1] + sums[2];`\r  \n`return
        0;`\r  \n`}`", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;code&gt;#include
        &amp;lt;bits/stdc++.h&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;using
        namespace std;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;int main() {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;vector&amp;lt;int&amp;gt;
        sums;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;string num;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;int
        sum=0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;while (num != &amp;quot;-1&amp;quot;){&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;getline(cin,num);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;if
        (num.empty()){&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sums.push_back(sum);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sum
        = 0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;else&lt;/code&gt;  &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sum
        += stoi(num);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;cout
        &amp;lt;&amp;lt; endl&amp;lt;&amp;lt; &amp;quot;Solution 1: &amp;quot;&amp;lt;&amp;lt;*max_element
        (sums.begin(), sums.end());&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sort(sums.begin(),
        sums.end(), greater&amp;lt;int&amp;gt;());&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;cout
        &amp;lt;&amp;lt; endl&amp;lt;&amp;lt; &amp;quot;Solution 2: &amp;quot;&amp;lt;&amp;lt;sums[0]
        + sums[1] + sums[2];&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;return
        0;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk2b5l/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk2b5l", "created":
        1669938270.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq0c5l",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670049295.0, "send_replies": true,
        "parent_id": "t1_iyk2b5l", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.\n\nWhile
        you''re at it, [state which programming language this code is written in](/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n\n&lt;p&gt;While you&amp;#39;re
        at it, &lt;a href=\"/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        which programming language this code is written in&lt;/a&gt;.  This makes
        it easier for folks who Ctrl-F the megathreads looking for a specific language.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq0c5l/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq0c5l", "created":
        1670049295.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyk38p6", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SolarBear",
        "can_mod_post": false, "created_utc": 1669938688.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_1vm8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "**Ruby solution**\n\nApplying the KISS principle: using `slice_before` makes
        for much shorter code but kills readability, at least to this Ruby noob.\n\n```ruby\nfile
        = File.open(''input1.txt'')\nsums = [0]\n\nfile.readlines.map(&amp;:strip).each
        do |line|\n  if line == ''''\n    sums.prepend(0)\n  else\n    sums[0] +=
        line.to_i\n  end\nend\n\nfile.close\nputs sums.max\nputs sums.max(3).sum\n```",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Ruby solution&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Applying
        the KISS principle: using &lt;code&gt;slice_before&lt;/code&gt; makes for
        much shorter code but kills readability, at least to this Ruby noob.&lt;/p&gt;\n\n&lt;p&gt;```ruby\nfile
        = File.open(&amp;#39;input1.txt&amp;#39;)\nsums = [0]&lt;/p&gt;\n\n&lt;p&gt;file.readlines.map(&amp;amp;:strip).each
        do |line|\n  if line == &amp;#39;&amp;#39;\n    sums.prepend(0)\n  else\n    sums[0]
        += line.to_i\n  end\nend&lt;/p&gt;\n\n&lt;p&gt;file.close\nputs sums.max\nputs
        sums.max(3).sum\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk38p6/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk38p6", "created":
        1669938688.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq01xm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670049083.0, "send_replies": true,
        "parent_id": "t1_iyk38p6", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq01xm/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyq01xm", "created": 1670049083.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk42v2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "damoncrob",
        "can_mod_post": false, "created_utc": 1669939062.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_u3vm0yt4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Good excuse to learn a bit with polars and duckdb (made the code longer though):
        https://htmlpreview.github.io/?https://github.com/DamonCharlesRoberts/advent\\_of\\_code/blob/main/advent\\_2022/code/dcr\\_aoc.html",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good excuse to learn
        a bit with polars and duckdb (made the code longer though): &lt;a href=\"https://htmlpreview.github.io/?https://github.com/DamonCharlesRoberts/advent%5C_of%5C_code/blob/main/advent%5C_2022/code/dcr%5C_aoc.html\"&gt;https://htmlpreview.github.io/?https://github.com/DamonCharlesRoberts/advent\\_of\\_code/blob/main/advent\\_2022/code/dcr\\_aoc.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk42v2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk42v2", "created":
        1669939062.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyq00v1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670049061.0, "send_replies": true,
        "parent_id": "t1_iyk42v2", "score": 2, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "FYI: your [link is borked](https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links)
        on old.reddit and some mobile Reddit apps.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;FYI: your &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links\"&gt;link
        is borked&lt;/a&gt; on old.reddit and some mobile Reddit apps.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyq00v1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyq00v1", "created":
        1670049061.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykjata", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "tanisebb",
        "can_mod_post": false, "created_utc": 1669946154.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_cwd9d2d6", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s my solution in python: https://github.com/taniseb/adventofcode2022/blob/main/Advent\\_Code\\_1\\_GIT.ipynb",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s my solution
        in python: &lt;a href=\"https://github.com/taniseb/adventofcode2022/blob/main/Advent%5C_Code%5C_1%5C_GIT.ipynb\"&gt;https://github.com/taniseb/adventofcode2022/blob/main/Advent\\_Code\\_1\\_GIT.ipynb&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykjata/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykjata", "created":
        1669946154.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iypyj42",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670047959.0, "send_replies": true,
        "parent_id": "t1_iykjata", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "FYI: your [link is borked](https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links)
        on old.reddit and some mobile Reddit apps.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;FYI: your &lt;a href=\"https://www.reddit.com/r/adventofcode/wiki/faqs/bugs/borked_links\"&gt;link
        is borked&lt;/a&gt; on old.reddit and some mobile Reddit apps.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypyj42/",
        "subreddit_type": "public", "locked": false, "name": "t1_iypyj42", "created":
        1670047959.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1669949057.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykl2k8", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ArtanisOfLorien",
        "can_mod_post": false, "created_utc": 1669946979.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_h4zsq9nl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "part 2 in js\n```\n`${require(\"fs\").readFileSync(\"i\")}`\n  .split(\"\\n\\n\")\n  .map((l)
        =&gt; l.split(\"\\n\").reduce((s, c) =&gt; s + +c, 0))\n  .sort()\n  .reverse()\n  .slice(0,
        3)\n  .reduce((s, c) =&gt; s + c);\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;part 2 in js\n&lt;code&gt;\n`${require(&amp;quot;fs&amp;quot;).readFileSync(&amp;quot;i&amp;quot;)}`\n  .split(&amp;quot;\\n\\n&amp;quot;)\n  .map((l)
        =&amp;gt; l.split(&amp;quot;\\n&amp;quot;).reduce((s, c) =&amp;gt; s + +c,
        0))\n  .sort()\n  .reverse()\n  .slice(0, 3)\n  .reduce((s, c) =&amp;gt; s
        + c);\n&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykl2k8/",
        "subreddit_type": "public", "locked": false, "name": "t1_iykl2k8", "created":
        1669946979.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iypyft8",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670047892.0, "send_replies": true,
        "parent_id": "t1_iykl2k8", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Inlined code is intended for `short snippets` of code only.  Your code \"block\"
        right now is unreadable;  it''s all on one line and gets cut off at the edge
        of the screen because it is not horizontally scrollable.\n\nPlease edit your
        post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read inside a *scrollable* box.\n\n\nWhile
        you''re at it, [expand the full name of the programming language](/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_no_abbreviations)
        (`JavaScript`).  This makes it easier for folks to Ctrl-F the megathreads
        searching for solutions written in a specific programming language.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Inlined code is intended for &lt;code&gt;short
        snippets&lt;/code&gt; of code only.  Your code &amp;quot;block&amp;quot; right
        now is unreadable;  it&amp;#39;s all on one line and gets cut off at the edge
        of the screen because it is not horizontally scrollable.&lt;/p&gt;\n\n&lt;p&gt;Please
        edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        inside a &lt;em&gt;scrollable&lt;/em&gt; box.&lt;/p&gt;\n\n&lt;p&gt;While
        you&amp;#39;re at it, &lt;a href=\"/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_no_abbreviations\"&gt;expand
        the full name of the programming language&lt;/a&gt; (&lt;code&gt;JavaScript&lt;/code&gt;).  This
        makes it easier for folks to Ctrl-F the megathreads searching for solutions
        written in a specific programming language.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypyft8/", "subreddit_type":
        "public", "locked": false, "name": "t1_iypyft8", "created": 1670047892.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"subreddit_id":
        "t5_3b3wa", "approved_at_utc": null, "author_is_blocked": false, "comment_type":
        null, "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1,
        "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iypyydj",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ArtanisOfLorien",
        "can_mod_post": false, "created_utc": 1670048267.0, "send_replies": true,
        "parent_id": "t1_iypyft8", "score": 1, "author_fullname": "t2_h4zsq9nl", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "okie", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;okie&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypyydj/",
        "subreddit_type": "public", "locked": false, "name": "t1_iypyydj", "created":
        1670048267.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"total_awards_received": 0, "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "removal_reason": null, "link_id": "t3_z9ezjb", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iykopsr", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": "DELETED", "no_follow": true, "author": "[deleted]",
        "can_mod_post": false, "send_replies": true, "parent_id": "t3_z9ezjb", "score":
        1, "approved_by": null, "mod_note": null, "all_awardings": [], "subreddit_id":
        "t5_3b3wa", "body": "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class":
        null, "name": "t1_iykopsr", "collapsed": false, "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings":
        {}, "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykopsr/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669948644.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669948644.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iypyck2",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670047825.0, "send_replies": true,
        "parent_id": "t1_iykopsr", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Does TS mean `TypeScript`?  [Please don''t abbreviate your programming language](https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_no_abbreviations).",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Does TS mean &lt;code&gt;TypeScript&lt;/code&gt;?  &lt;a
        href=\"https://www.reddit.com/r/adventofcode/wiki/solution_megathreads/post_guidelines#wiki_no_abbreviations\"&gt;Please
        don&amp;#39;t abbreviate your programming language&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypyck2/",
        "subreddit_type": "public", "locked": false, "name": "t1_iypyck2", "created":
        1670047825.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": 1686570458.0,
        "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iyl783x", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "57R31",
        "can_mod_post": false, "created_utc": 1669958218.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_26ygk21q", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "part1 - javascript oneliner for browser console `\u200b`\u200b`Math.max(...document.getElementsByTagName(''pre'')\\[0\\].innerText.split(\"\\\\n\\\\n\").map(cal=&gt;cal.split(\"\\\\n\").reduce((acc,cur)=&gt;acc+Number(cur),0)))`\u200b`\u200b`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;part1 - javascript oneliner
        for browser console &lt;code&gt;\u200b&lt;/code&gt;\u200b&lt;code&gt;Math.max(...document.getElementsByTagName(&amp;#39;pre&amp;#39;)\\[0\\].innerText.split(&amp;quot;\\\\n\\\\n&amp;quot;).map(cal=&amp;gt;cal.split(&amp;quot;\\\\n&amp;quot;).reduce((acc,cur)=&amp;gt;acc+Number(cur),0)))&lt;/code&gt;\u200b&lt;code&gt;\u200b&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyl783x/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyl783x", "created":
        1669958218.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyppkp4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670042345.0, "send_replies": true,
        "parent_id": "t1_iyl783x", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is nicer to read.\n\nWhile you''re at it, [expand
        the full name of the programming language](/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_no_abbreviations)
        (`JavaScript`).  This makes it easier for folks to Ctrl-F the megathreads
        searching for solutions written in a specific programming language.", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": true, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is nicer to read.&lt;/p&gt;\n\n&lt;p&gt;While
        you&amp;#39;re at it, &lt;a href=\"/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_no_abbreviations\"&gt;expand
        the full name of the programming language&lt;/a&gt; (&lt;code&gt;JavaScript&lt;/code&gt;).  This
        makes it easier for folks to Ctrl-F the megathreads searching for solutions
        written in a specific programming language.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyppkp4/", "subreddit_type":
        "public", "locked": false, "name": "t1_iyppkp4", "created": 1670042345.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}, {"kind": "t1", "data": {"total_awards_received":
        0, "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "removal_reason":
        null, "link_id": "t3_z9ezjb", "author_flair_template_id": null, "likes": null,
        "replies": "", "user_reports": [], "saved": false, "id": "iylenyb", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        "DELETED", "no_follow": true, "author": "[deleted]", "can_mod_post": false,
        "send_replies": true, "parent_id": "t3_z9ezjb", "score": 1, "approved_by":
        null, "mod_note": null, "all_awardings": [], "subreddit_id": "t5_3b3wa", "body":
        "[deleted]", "awarders": [], "downs": 0, "author_flair_css_class": null, "name":
        "t1_iylenyb", "collapsed": false, "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "gildings": {},
        "collapsed_reason": null, "distinguished": null, "associated_award": null,
        "stickied": false, "can_gild": false, "top_awarded_type": null, "unrepliable_reason":
        null, "author_flair_text_color": "dark", "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylenyb/", "num_reports":
        null, "locked": false, "report_reasons": null, "created": 1669963208.0, "subreddit":
        "adventofcode", "author_flair_text": null, "treatment_tags": [], "created_utc":
        1669963208.0, "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": "", "collapsed_because_crowd_control":
        null, "mod_reports": [], "subreddit_type": "public", "ups": 1}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylgmyp",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SarcasmKing1289",
        "can_mod_post": false, "created_utc": 1669964676.0, "send_replies": true,
        "parent_id": "t1_iylenyb", "score": 2, "author_fullname": "t2_hgag6o4n", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Y u put day2 solution here?", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Y
        u put day2 solution here?&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylgmyp/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylgmyp", "created":
        1669964676.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylgrsd",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "fsed123",
        "can_mod_post": false, "created_utc": 1669964781.0, "send_replies": true,
        "parent_id": "t1_iylgmyp", "score": 1, "author_fullname": "t2_2lwv2ppr", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        ":O dummy mistake sorry , thanks for the hint will remove it", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;:O dummy mistake sorry , thanks for the
        hint will remove it&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylgrsd/",
        "subreddit_type": "public", "locked": false, "name": "t1_iylgrsd", "created":
        1669964781.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iylmebf",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Billym0351",
        "can_mod_post": false, "created_utc": 1669969354.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_crl2y6a", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt;\\#include &lt;iostream&gt;\r  \n\\#include &lt;string&gt;\r  \n\\#include
        &lt;fstream&gt;\r  \n\\#include &lt;vector&gt;\r  \n\\#include &lt;algorithm&gt;\r  \n\r  \nusing
        namespace std;\r  \n\r  \nint main() {\r  \n\r  \nifstream myFile;\r  \nstring
        temp;\r  \nint temp2 = 0;\r  \nint temp3 = 0;\r  \nint temp4 = 0;\r  \n\r  \nint
        total = 0;\r  \n\r  \nvector&lt;int&gt; values;\r  \nint i = 0;\r  \n\r  \nmyFile.open(\"calories.txt\");\r  \n\r  \n\r  \nif
        (myFile.is\\_open()) {\r  \nwhile (getline(myFile, temp)) {\r  \nif (temp
        == \"\") {\r  \nvalues.push\\_back(temp3);\r  \nif (temp4 &lt; temp3) {\r  \ntemp4
        = temp3;\r  \ngetline(myFile, temp);\r  \n}\r  \ntemp2 = 0;\r  \ntemp3 = 0;\r  \ngetline(myFile,
        temp);\r  \n}\r  \ntemp2 = stoi(temp);\r  \ntemp3 = temp3 + temp2;\r  \n}\r  \nmyFile.close();\r  \n}\r  \n\r  \nsort(values.begin(),
        values.end());\r  \n\r  \ni = values.size();\r  \ntotal = values\\[i-1\\]
        + values\\[i-2\\] + values\\[i-3\\];\r  \n\r  \ncout &lt;&lt; total &lt;&lt;
        endl;\r  \n\r  \n\r  \nreturn 0;\r  \n}\r  \n\n\nI''m a noob and I''m proud.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;#include
        &amp;lt;iostream&amp;gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;#include
        &amp;lt;string&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;#include &amp;lt;fstream&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;#include
        &amp;lt;vector&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;#include &amp;lt;algorithm&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;using
        namespace std;&lt;/p&gt;\n\n&lt;p&gt;int main() {&lt;/p&gt;\n\n&lt;p&gt;ifstream
        myFile;&lt;/p&gt;\n\n&lt;p&gt;string temp;&lt;/p&gt;\n\n&lt;p&gt;int temp2
        = 0;&lt;/p&gt;\n\n&lt;p&gt;int temp3 = 0;&lt;/p&gt;\n\n&lt;p&gt;int temp4
        = 0;&lt;/p&gt;\n\n&lt;p&gt;int total = 0;&lt;/p&gt;\n\n&lt;p&gt;vector&amp;lt;int&amp;gt;
        values;&lt;/p&gt;\n\n&lt;p&gt;int i = 0;&lt;/p&gt;\n\n&lt;p&gt;myFile.open(&amp;quot;calories.txt&amp;quot;);&lt;/p&gt;\n\n&lt;p&gt;if
        (myFile.is_open()) {&lt;/p&gt;\n\n&lt;p&gt;while (getline(myFile, temp)) {&lt;/p&gt;\n\n&lt;p&gt;if
        (temp == &amp;quot;&amp;quot;) {&lt;/p&gt;\n\n&lt;p&gt;values.push_back(temp3);&lt;/p&gt;\n\n&lt;p&gt;if
        (temp4 &amp;lt; temp3) {&lt;/p&gt;\n\n&lt;p&gt;temp4 = temp3;&lt;/p&gt;\n\n&lt;p&gt;getline(myFile,
        temp);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;temp2 = 0;&lt;/p&gt;\n\n&lt;p&gt;temp3
        = 0;&lt;/p&gt;\n\n&lt;p&gt;getline(myFile, temp);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;temp2
        = stoi(temp);&lt;/p&gt;\n\n&lt;p&gt;temp3 = temp3 + temp2;&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;myFile.close();&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;sort(values.begin(),
        values.end());&lt;/p&gt;\n\n&lt;p&gt;i = values.size();&lt;/p&gt;\n\n&lt;p&gt;total
        = values[i-1] + values[i-2] + values[i-3];&lt;/p&gt;\n\n&lt;p&gt;cout &amp;lt;&amp;lt;
        total &amp;lt;&amp;lt; endl;&lt;/p&gt;\n\n&lt;p&gt;return 0;&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m
        a noob and I&amp;#39;m proud.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iylmebf/", "subreddit_type":
        "public", "locked": false, "name": "t1_iylmebf", "created": 1669969354.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 0, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iypp7nk", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "daggerdragon", "can_mod_post": false,
        "created_utc": 1670042149.0, "send_replies": true, "parent_id": "t1_iylmebf",
        "score": 1, "author_fullname": "t2_60niu", "report_reasons": null, "approved_by":
        null, "all_awardings": [], "collapsed": false, "body": "Please edit your post
        to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read.\n\nWhile you''re at it, [state
        which programming language this code is written in](/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29).  This
        makes it easier for folks who Ctrl-F the megathreads looking for a specific
        language.  (Looks like some variant of C?)", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": true, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Please edit your post to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read.&lt;/p&gt;\n\n&lt;p&gt;While
        you&amp;#39;re at it, &lt;a href=\"/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29\"&gt;state
        which programming language this code is written in&lt;/a&gt;.  This makes
        it easier for folks who Ctrl-F the megathreads looking for a specific language.  (Looks
        like some variant of C?)&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypp7nk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iypp7nk", "created":
        1670042149.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": "moderator"}},
        {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null,
        "author_is_blocked": false, "comment_type": null, "edited": false, "mod_reason_by":
        null, "banned_by": null, "ups": 1, "num_reports": null, "author_flair_type":
        "text", "total_awards_received": 0, "subreddit": "adventofcode", "author_flair_template_id":
        null, "likes": null, "replies": "", "user_reports": [], "saved": false, "id":
        "iymoetz", "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "MDTv_Teka",
        "can_mod_post": false, "created_utc": 1669994320.0, "send_replies": true,
        "parent_id": "t3_z9ezjb", "score": 1, "author_fullname": "t2_13w24m", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Python one-liner (except for reading input):\n\n```py\nimport numpy as np,
        os\n\n__location__: str = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(__file__)))\n\nwith
        open(os.path.join(__location__, ''input.txt''), ''r'') as raw_input:\n        input_data:
        str = raw_input.read()\n\n\nreturn np.argmax(np.array([np.sum(np.array(line,
        dtype=object)) for line in list(map(lambda each: list(map(int, each.split(''\\n''))),
        input_data.split(''\\n\\n'')))], dtype=object))\n```", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Python one-liner (except for reading input):&lt;/p&gt;\n\n&lt;p&gt;```py\nimport
        numpy as np, os&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;location&lt;/strong&gt;:
        str = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(&lt;strong&gt;file&lt;/strong&gt;)))&lt;/p&gt;\n\n&lt;p&gt;with
        open(os.path.join(&lt;strong&gt;location&lt;/strong&gt;, &amp;#39;input.txt&amp;#39;),
        &amp;#39;r&amp;#39;) as raw_input:\n        input_data: str = raw_input.read()&lt;/p&gt;\n\n&lt;p&gt;return
        np.argmax(np.array([np.sum(np.array(line, dtype=object)) for line in list(map(lambda
        each: list(map(int, each.split(&amp;#39;\\n&amp;#39;))), input_data.split(&amp;#39;\\n\\n&amp;#39;)))],
        dtype=object))\n```&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iymoetz/",
        "subreddit_type": "public", "locked": false, "name": "t1_iymoetz", "created":
        1669994320.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 0, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iypnw5s",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "daggerdragon",
        "can_mod_post": false, "created_utc": 1670041438.0, "send_replies": true,
        "parent_id": "t1_iymoetz", "score": 1, "author_fullname": "t2_60niu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Please edit your post to use the [four-spaces Markdown syntax](https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks)
        for a code block so your code is easier to read on old.reddit and mobile apps.",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        true, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please edit your post
        to use the &lt;a href=\"https://www.reddit.com/r/adventofcode/w/faqs/code_formatting/fenced_code_blocks\"&gt;four-spaces
        Markdown syntax&lt;/a&gt; for a code block so your code is easier to read
        on old.reddit and mobile apps.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iypnw5s/", "subreddit_type":
        "public", "locked": false, "name": "t1_iypnw5s", "created": 1670041438.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 1, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": "moderator"}}], true]], [0, 12, "attr", "things"],
        [12, 13, "call", ["t1_iyj5tvu"]], [13, 14, "attr", "focus"], [14, 15, "call",
        []], [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr",
        "filter"], [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"],
        [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:40 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:40 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=NCi7qADPKEBZh408Yq; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:40 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iygyaku
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1693'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv4i7i8.2.1741472681058.Z0FBQUFBQm56TU9wdDJMRkM2TDFKcFNHSi0zYVloQnJ6U2U2WHVFZnQ3Qk5FSVoxYkVLcnNnYlp5NG9MZGdLaWpFcEQxZ2tuTmY0THA5MmhHbHpTemxzczdPV05ROFZQMFpOUDJ0RkFwR1JiRU5UbWR4ZjNJZkQwMGhOZFl6YXBONm1vQUVHU252SGI;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:41
        GMT; secure, session_tracker=icrerporqlolblkjoi.0.1741472681070.Z0FBQUFBQm56TU9wSFFtNVFyYmlkTFhmZmVDUmlWTVQ4SUFFcTVfN2cwbTZwaWg3Wkptbm1RMUlodVlFYmxEbmdwd29WLVNITS00VmdwNkJBaWlCQzk5akRicEdZVFRxQ2lvU09IWl9FdGcweDRtb1pLN2x5bDhsZC1OTzhwT3lxSENFT3ZrRUpsRk0;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:41
        GMT; secure, edgebucket=amTxWZvHGCbojCUdTe; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '41'
      x-ratelimit-remaining:
      - '59.0'
      x-ratelimit-reset:
      - '318'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:41 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygyaku",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "riffraff",
        "can_mod_post": false, "created_utc": 1669884560.0, "send_replies": true,
        "parent_id": "t1_iygtai7", "score": 3, "author_fullname": "t2_1vf8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I got 43 and 52 separately\n\n1\n\n    p $&lt;.chunk{_1!=?\\n}.map{_2.sum(&amp;:to_i)}.max\n\n2\n\n    p
        $&lt;.map(&amp;:to_i).chunk{_1!=0}.map{_2.sum}.max(3).sum", "awarders": [],
        "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I got 43 and 52 separately&lt;/p&gt;\n\n&lt;p&gt;1&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p
        $&amp;lt;.chunk{_1!=?\\n}.map{_2.sum(&amp;amp;:to_i)}.max\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p
        $&amp;lt;.map(&amp;amp;:to_i).chunk{_1!=0}.map{_2.sum}.max(3).sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygyaku/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygyaku", "created":
        1669884560.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 6, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iygznkm",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "MuumiJumala",
        "can_mod_post": false, "created_utc": 1669885807.0, "send_replies": true,
        "parent_id": "t1_iygyaku", "score": 6, "author_fullname": "t2_9hygu", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "You can save a few more:\n\nPart 1 (39 bytes)\n\n    p$&lt;.chunk{_1&lt;?0}.map{_2.sum
        &amp;:to_i}.max\n\nPart 2 (50 bytes)\n\n    p$&lt;.map(&amp;:to_i).chunk{_1&gt;0}.map{_2.sum}.max(3).sum",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can save a few more:&lt;/p&gt;\n\n&lt;p&gt;Part
        1 (39 bytes)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p$&amp;lt;.chunk{_1&amp;lt;?0}.map{_2.sum
        &amp;amp;:to_i}.max\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Part 2 (50 bytes)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p$&amp;lt;.map(&amp;amp;:to_i).chunk{_1&amp;gt;0}.map{_2.sum}.max(3).sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygznkm/",
        "subreddit_type": "public", "locked": false, "name": "t1_iygznkm", "created":
        1669885807.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 2, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhahfc",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "riffraff",
        "can_mod_post": false, "created_utc": 1669895246.0, "send_replies": true,
        "parent_id": "t1_iygznkm", "score": 2, "author_fullname": "t2_1vf8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "brilliant, thanks!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;brilliant,
        thanks!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhahfc/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhahfc", "created":
        1669895246.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 3, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iykmmuq",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "jstanley0",
        "can_mod_post": false, "created_utc": 1669947687.0, "send_replies": true,
        "parent_id": "t1_iygznkm", "score": 1, "author_fullname": "t2_dutikx4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Here''s Part 2 in 49 bytes:\n\n    p$&lt;.slice_after(?\\n).map{_1.sum &amp;:to_i}.max(3).sum",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s Part
        2 in 49 bytes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p$&amp;lt;.slice_after(?\\n).map{_1.sum
        &amp;amp;:to_i}.max(3).sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykmmuq/", "subreddit_type":
        "public", "locked": false, "name": "t1_iykmmuq", "created": 1669947687.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 3, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}, {"kind": "t1", "data": {"subreddit_id": "t5_3b3wa",
        "approved_at_utc": null, "author_is_blocked": false, "comment_type": null,
        "edited": false, "mod_reason_by": null, "banned_by": null, "ups": 1, "num_reports":
        null, "author_flair_type": "text", "total_awards_received": 0, "subreddit":
        "adventofcode", "author_flair_template_id": null, "likes": null, "replies":
        "", "user_reports": [], "saved": false, "id": "iykn57v", "banned_at_utc":
        null, "mod_reason_title": null, "gilded": 0, "archived": true, "collapsed_reason_code":
        null, "no_follow": true, "author": "jstanley0", "can_mod_post": false, "created_utc":
        1669947922.0, "send_replies": true, "parent_id": "t1_iykmmuq", "score": 1,
        "author_fullname": "t2_dutikx4", "report_reasons": null, "approved_by": null,
        "all_awardings": [], "collapsed": false, "body": "I am failing to learn all
        the lessons in the examples above. 46 bytes:\n\n    p$&lt;.chunk{_1&lt;?0}.map{_2.sum
        &amp;:to_i}.max(3).sum", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        am failing to learn all the lessons in the examples above. 46 bytes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;p$&amp;lt;.chunk{_1&amp;lt;?0}.map{_2.sum
        &amp;amp;:to_i}.max(3).sum\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "removal_reason":
        null, "collapsed_reason": null, "associated_award": null, "stickied": false,
        "author_premium": false, "can_gild": false, "gildings": {}, "unrepliable_reason":
        null, "author_flair_text_color": null, "score_hidden": false, "permalink":
        "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iykn57v/", "subreddit_type":
        "public", "locked": false, "name": "t1_iykn57v", "created": 1669947922.0,
        "author_flair_text": null, "treatment_tags": [], "link_id": "t3_z9ezjb", "subreddit_name_prefixed":
        "r/adventofcode", "controversiality": 0, "depth": 4, "author_flair_background_color":
        null, "collapsed_because_crowd_control": null, "mod_reports": [], "mod_note":
        null, "distinguished": null}}], true]], [0, 12, "attr", "things"], [12, 13,
        "call", ["t1_iygyaku"]], [13, 14, "attr", "focus"], [14, 15, "call", []],
        [0, 16, "attr", "things"], [16, 17, "call", ["None"]], [17, 18, "attr", "filter"],
        [18, 19, "call", [".morechildren"]], [19, 20, "attr", "remove"], [20, 21,
        "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:41 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:41 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=J0cQQAXREGPcHxCE8a; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:41 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyjw7pk
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1076'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv4l8jk.2.1741472681487.Z0FBQUFBQm56TU9wd2xib1VkWmtqcDlZUXEwRHJycFY2ZEtpemREWGI5cDhzZnFPX3ZxeDdIdDVndndfNnJEeGRiYjlzakxQOTVPdUNiT2xtTmVMdGVFem14aDJCcHdzTE5Nek8yQmdnRVBlUzFfeFpBLWNtbjlPeEU5aWJBcHQ4QlRjNnpQd3BNTVo;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:41
        GMT; secure, session_tracker=hffdpapqlrfpiciflo.0.1741472681499.Z0FBQUFBQm56TU9wOHBWREVGN0dvVXloTUk2bzlvZDhWd3BKV0lRazFkYUJKQjNSUW5lTHZETThmRHFudEFpX3R6d2wtZVoxbFpzNEhZZWVlUXdaV3V1YnBtaDFuNkpPbUc2MFp4NW5xam5fLWJjNkphTE1PWHJfb2JGeWJUSTh0WGxadUxCQlMwNS0;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:41
        GMT; secure, edgebucket=N6Xm0jTHxhKAZPvMbv; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '42'
      x-ratelimit-remaining:
      - '58.0'
      x-ratelimit-reset:
      - '318'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:41 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyjw7pk",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "ignurant",
        "can_mod_post": false, "created_utc": 1669935591.0, "send_replies": true,
        "parent_id": "t1_iyio3gx", "score": 1, "author_fullname": "t2_6uqli", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Don''t forget you can reduce `\"\\n\"` to `$/`! And `$/*2 =&gt; \"\\n\\n\"`",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t forget
        you can reduce &lt;code&gt;&amp;quot;\\n&amp;quot;&lt;/code&gt; to &lt;code&gt;$/&lt;/code&gt;!
        And &lt;code&gt;$/*2 =&amp;gt; &amp;quot;\\n\\n&amp;quot;&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjw7pk/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyjw7pk", "created":
        1669935591.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_iyjw7pk"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:41 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:41 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=1M5HIXRyNvjO66rSJs; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:41 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyhkgs4,iyhrkz9,iyhhp2d
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '2098'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv4od8u.2.1741472681905.Z0FBQUFBQm56TU9wMTYwRlhUUFlOUUZRakRfbDFobUdnNEgzZGZTd3JIVWRaZHdoR3o4OVBxVXlWUTZRY1lBQVRQSlpLbE9IbUtNS1ZjdkpuM29wcEQ5bUN6Q2Z5NGNtU0ZJTFJVRHRDUkdIaTRJMFRoRjExOFRmMHM5WndOSlRQUjBVLUlLVUJ6clU;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:41
        GMT; secure, session_tracker=epfpcejraigkidrddn.0.1741472681916.Z0FBQUFBQm56TU9wbldJVnB3ZGpYMHNLMjJOdEpFWjdFNjBLaXJmN1hXZ0h2WHhJbUxIZHZ2eTFzaVB6R2Nya0hkT3dhYkVsNEFkYUhkM2c4cm5rZWJiUVhQWGxnSGZDcEQxdFJTWjRtVTk5RXVoWGQtam13cDVtRUh6T0plYmpCYnh1MnZ4NDBjbGs;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:41
        GMT; secure, edgebucket=WyEA5JL8yHqjhnYaPl; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '43'
      x-ratelimit-remaining:
      - '57.0'
      x-ratelimit-reset:
      - '318'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:42 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 5, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhkgs4",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": false, "author": "mkeeter",
        "can_mod_post": false, "created_utc": 1669901538.0, "send_replies": true,
        "parent_id": "t1_iyhchgs", "score": 5, "author_fullname": "t2_qlyix", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I''ve done several years worth of AoC in Rust, and plan to use it again this
        year!\n\nHere''s my code for this problem (reading from `stdin` instead of
        a file):\n\n    use anyhow::Result;\n    use std::io::BufRead;\n    \n    fn
        main() -&gt; Result&lt;()&gt; {\n        let nums = std::io::stdin()\n            .lock()\n            .lines()\n            .collect::&lt;Result&lt;Vec&lt;String&gt;,
        _&gt;&gt;()?;\n    \n        let mut elves = nums\n            .split(String::is_empty)\n            .map(|lines|
        lines.iter().map(|s| s.parse::&lt;u64&gt;()).sum())\n            .collect::&lt;Result&lt;Vec&lt;_&gt;,
        _&gt;&gt;()?;\n        elves.sort_unstable();\n    \n        println!(\"Part
        1: {}\", elves.last().unwrap());\n        println!(\"Part 2: {}\", elves.iter().rev().take(3).sum::&lt;u64&gt;());\n    \n        Ok(())\n    }\n\n(and
        the repository: https://github.com/mkeeter/advent-of-code/)", "awarders":
        [], "top_awarded_type": null, "author_flair_css_class": null, "author_patreon_flair":
        false, "downs": 0, "author_flair_richtext": [], "is_submitter": false, "body_html":
        "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve done several years worth of
        AoC in Rust, and plan to use it again this year!&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s
        my code for this problem (reading from &lt;code&gt;stdin&lt;/code&gt; instead
        of a file):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use anyhow::Result;\nuse std::io::BufRead;\n\nfn
        main() -&amp;gt; Result&amp;lt;()&amp;gt; {\n    let nums = std::io::stdin()\n        .lock()\n        .lines()\n        .collect::&amp;lt;Result&amp;lt;Vec&amp;lt;String&amp;gt;,
        _&amp;gt;&amp;gt;()?;\n\n    let mut elves = nums\n        .split(String::is_empty)\n        .map(|lines|
        lines.iter().map(|s| s.parse::&amp;lt;u64&amp;gt;()).sum())\n        .collect::&amp;lt;Result&amp;lt;Vec&amp;lt;_&amp;gt;,
        _&amp;gt;&amp;gt;()?;\n    elves.sort_unstable();\n\n    println!(&amp;quot;Part
        1: {}&amp;quot;, elves.last().unwrap());\n    println!(&amp;quot;Part 2: {}&amp;quot;,
        elves.iter().rev().take(3).sum::&amp;lt;u64&amp;gt;());\n\n    Ok(())\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(and
        the repository: &lt;a href=\"https://github.com/mkeeter/advent-of-code/\"&gt;https://github.com/mkeeter/advent-of-code/&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhkgs4/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhkgs4", "created":
        1669901538.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 3, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhrkz9",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "Leading_Frosting9655",
        "can_mod_post": false, "created_utc": 1669905072.0, "send_replies": true,
        "parent_id": "t1_iyhchgs", "score": 3, "author_fullname": "t2_mhavb3u9", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "&gt;`[sums.len()-3..].to_vec().iter().sum()`\n\nMaybe `.iter().rev().take(3).sum()`?",
        "awarders": [], "top_awarded_type": null, "author_flair_css_class": null,
        "author_patreon_flair": false, "downs": 0, "author_flair_richtext": [], "is_submitter":
        false, "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;&lt;code&gt;[sums.len()-3..].to_vec().iter().sum()&lt;/code&gt;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Maybe
        &lt;code&gt;.iter().rev().take(3).sum()&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhrkz9/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhrkz9", "created":
        1669905072.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhhp2d",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "R4yRayR4yy",
        "can_mod_post": false, "created_utc": 1669899995.0, "send_replies": true,
        "parent_id": "t1_iyhchgs", "score": 1, "author_fullname": "t2_kiee4", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I did whole AoC last year in Rust and Im going to do the same this year,
        here you go: [https://github.com/DevRayy/AdventOfCode2022](https://github.com/DevRayy/AdventOfCode2022)  \n\n\nIm
        no rust professional tho", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        did whole AoC last year in Rust and Im going to do the same this year, here
        you go: &lt;a href=\"https://github.com/DevRayy/AdventOfCode2022\"&gt;https://github.com/DevRayy/AdventOfCode2022&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Im
        no rust professional tho&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhhp2d/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhhp2d", "created":
        1669899995.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}, {"kind":
        "t1", "data": {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyhjid1",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "FeerMonger",
        "can_mod_post": false, "created_utc": 1669901015.0, "send_replies": true,
        "parent_id": "t1_iyhhp2d", "score": 1, "author_fullname": "t2_7h8wi", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "I appreciate it, thank you!", "awarders": [], "top_awarded_type": null, "author_flair_css_class":
        null, "author_patreon_flair": false, "downs": 0, "author_flair_richtext":
        [], "is_submitter": false, "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I
        appreciate it, thank you!&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null,
        "collapsed_reason": null, "associated_award": null, "stickied": false, "author_premium":
        false, "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyhjid1/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyhjid1", "created":
        1669901015.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_iyhkgs4"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:41 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:42 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=u8VQk9m5iqn0HxJPpq; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:42 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iyk21bw
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1010'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv4ruc6.2.1741472682350.Z0FBQUFBQm56TU9xVEdZQnFlRGVxNXJVYTI1NEwxUGpVS1FwUS1yM1dMZC12cHRMam56aGE0M1QwbTZuaWZGbU4xaEVrSVI0V180QVJPSHl5Y0U0d09GVEF0MlhpQ2d1RGNCV0NrYlhnOW9qTGNmdi1IZjZLX003Y2JBVVBqVmdRMW5BWDRmcU9XeEc;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:42
        GMT; secure, session_tracker=hgjhdrkaccrilmqreb.0.1741472682364.Z0FBQUFBQm56TU9xYWstM25naWRVcjBtTGNkbzlETTZOZlRPN0FBcGpSVzVoeEo3QmVXQ2dTZVp4NHkzcjhqS1VKdlB5OVVDMzV1b1NtLWg4aDRaUUpvMmc4czRyUmF5MWJ1d01kS3E2SmtOUktmMXlCRkF2SUFYdGRwSjVidGI0c3FBOVFSWmhnVmU;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:42
        GMT; secure, edgebucket=rGn6UIe1cBUj5Cphot; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '44'
      x-ratelimit-remaining:
      - '56.0'
      x-ratelimit-reset:
      - '317'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:42 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iyk21bw",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "SolarBear",
        "can_mod_post": false, "created_utc": 1669938147.0, "send_replies": true,
        "parent_id": "t1_iyjzlv2", "score": 1, "author_fullname": "t2_1vm8", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Using Ruby is cheating.\n\nI did the same.", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Using Ruby is cheating.&lt;/p&gt;\n\n&lt;p&gt;I did
        the same.&lt;/p&gt;\n&lt;/div&gt;", "removal_reason": null, "collapsed_reason":
        null, "associated_award": null, "stickied": false, "author_premium": false,
        "can_gild": false, "gildings": {}, "unrepliable_reason": null, "author_flair_text_color":
        null, "score_hidden": false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyk21bw/",
        "subreddit_type": "public", "locked": false, "name": "t1_iyk21bw", "created":
        1669938147.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 1, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_iyk21bw"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:42 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:42 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=sULhtVZzD5H1phRqOO; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:42 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iywszjr
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1011'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv4vy4g.2.1741472682796.Z0FBQUFBQm56TU9xV041SW1fcmQ1LVg4ZVJKS0hLQkoxTmJVX1p1RDlTdEV6ZU1XWWduVDhxc1lZXzRDVW4zTkJIY2ktOEpfcVdHUjhBY0swTmN4N05rRDRCY2ZwVk9KMDlISk5lSWViR1kyMTZZQV8yTVViNjF0ekJTdkFTRFY3M05RdmVJWlIwQno;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:42
        GMT; secure, session_tracker=qqlgdqadcrobjclmfd.0.1741472682809.Z0FBQUFBQm56TU9xMnhEdWJXRndXWUEzQ2VzZnJ1NC1NbU9yOC11aVNJTlNNeGVIR3IyZlBULW9aclR3N2hJRWI0Yk85Rk16bzczelpGS0lORUZqdFU2WnlmNkRTQnI2N2dkSVV0LVRqMWlPWWJSbnhLY3V3dVlPWmZ0LWhEM2dLdXo2TGJSakRGNTM;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:42
        GMT; secure, edgebucket=McwiRohCWHNXx70fhZ; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '45'
      x-ratelimit-remaining:
      - '55.0'
      x-ratelimit-reset:
      - '317'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:42 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iywszjr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1670183441.0, "send_replies": true,
        "parent_id": "t1_iyq4rtz", "score": 1, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thanks! I''ll take a look at that!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Thanks! I&amp;#39;ll take a look at that!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iywszjr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iywszjr", "created":
        1670183441.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_iywszjr"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:42 GMT
- request:
    method: post
    uri: https://www.reddit.com/api/v1/access_token
    body:
      encoding: UTF-8
      string: grant_type=password&username=fpsvogel&password=stubbed_reddit_password
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Authorization:
      - Basic Ukpwcjc0Zjl6TFBXQzNjcUVCLXFsdzpGQm5kLWdnR2JrWF9na1RRVVIxV2hGeFo1emRRNkE=
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '26'
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:43 GMT
      via:
      - 1.1 varnish
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      set-cookie:
      - edgebucket=Spf3QXo6neq4eLy4YH; Domain=reddit.com; Max-Age=63071999; Path=/;  secure
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"error": "invalid_grant"}'
  recorded_at: Sat, 08 Mar 2025 22:24:43 GMT
- request:
    method: post
    uri: https://oauth.reddit.com/api/morechildren.json
    body:
      encoding: UTF-8
      string: link_id=t3_z9ezjb&children=iywszjr
    headers:
      User-Agent:
      - AdventOfRubyScript/0.2.0 by fpsvogel
      Accept:
      - application/json
      Authorization:
      - 'Bearer '
  response:
    status:
      code: 200
      message: OK
    headers:
      connection:
      - keep-alive
      content-length:
      - '1011'
      x-ua-compatible:
      - IE=edge
      content-type:
      - application/json; charset=UTF-8
      expires:
      - "-1"
      cache-control:
      - private, s-maxage=0, max-age=0, must-revalidate, no-store
      set-cookie:
      - loid=000000001ksfv4ywgq.2.1741472683216.Z0FBQUFBQm56TU9yV0lfVW4tWXNLb2pFT1hnMU9ZamlNcy16TEZ4MTBfZ0tlX0JDZ3YtdlFoa0xjX1BHWVpWcVRTbGpWNEZJMDRZZjFlM2J0Rm8zNWNBcG5KWEpxV0huUnJpSHpjZHpNcWpkRTI1aDMtZ1lmVXJwMFpra25sS00yd0VZSV9nV3hLeGk;
        Domain=reddit.com; Max-Age=63071999; Path=/; expires=Mon, 08-Mar-2027 22:24:43
        GMT; secure, session_tracker=phbohdogjlnkaijbok.0.1741472683230.Z0FBQUFBQm56TU9yenViRmUyVVZLUkZGelhpYlluSXM0Nnc1S2RQd0o5dVFmUW1vaTVTU2ZqdW9xQnBQa0hKS0xGam1HRGE2QzNTaWMxSk1TeVZxbkdvM2sxcmpBSTU5QkVsUWlzZDE2NnlTdU1tV2EySVp6ME4xVlBlLWsyUnNfOWFZbGQ3UW0wSHA;
        Domain=reddit.com; Max-Age=7199; Path=/; expires=Sun, 09-Mar-2025 00:24:43
        GMT; secure, edgebucket=CrUgwng8Ur7QsFlSw0; Domain=reddit.com; Max-Age=63071999;
        Path=/;  secure
      content-encoding:
      - gzip
      x-ratelimit-used:
      - '46'
      x-ratelimit-remaining:
      - '54.0'
      x-ratelimit-reset:
      - '316'
      accept-ranges:
      - bytes
      date:
      - Sat, 08 Mar 2025 22:24:43 GMT
      via:
      - 1.1 varnish
      vary:
      - accept-encoding
      strict-transport-security:
      - max-age=31536000; includeSubdomains
      x-content-type-options:
      - nosniff
      x-frame-options:
      - SAMEORIGIN
      x-xss-protection:
      - 1; mode=block
      server:
      - snooserv
      report-to:
      - '{"group": "w3-reporting-nel", "max_age": 14400, "include_subdomains": true,  "endpoints":
        [{ "url": "https://w3-reporting-nel.reddit.com/reports" }]}, {"group": "w3-reporting",
        "max_age": 14400, "include_subdomains": true, "endpoints": [{ "url": "https://w3-reporting.reddit.com/reports"
        }]}, {"group": "w3-reporting-csp", "max_age": 14400, "include_subdomains":
        true, "endpoints": [{ "url": "https://w3-reporting-csp.reddit.com/reports"
        }]}'
      nel:
      - '{"report_to": "w3-reporting-nel", "max_age": 14400, "include_subdomains":
        false, "success_fraction": 1.0, "failure_fraction": 1.0}'
    body:
      encoding: UTF-8
      string: '{"jquery": [[0, 1, "call", ["body"]], [1, 2, "attr", "find"], [2, 3,
        "call", [".status"]], [3, 4, "attr", "hide"], [4, 5, "call", []], [5, 6, "attr",
        "html"], [6, 7, "call", [""]], [7, 8, "attr", "end"], [8, 9, "call", []],
        [0, 10, "attr", "insert_things"], [10, 11, "call", [[{"kind": "t1", "data":
        {"subreddit_id": "t5_3b3wa", "approved_at_utc": null, "author_is_blocked":
        false, "comment_type": null, "edited": false, "mod_reason_by": null, "banned_by":
        null, "ups": 1, "num_reports": null, "author_flair_type": "text", "total_awards_received":
        0, "subreddit": "adventofcode", "author_flair_template_id": null, "likes":
        null, "replies": "", "user_reports": [], "saved": false, "id": "iywszjr",
        "banned_at_utc": null, "mod_reason_title": null, "gilded": 0, "archived":
        true, "collapsed_reason_code": null, "no_follow": true, "author": "thedjotaku",
        "can_mod_post": false, "created_utc": 1670183441.0, "send_replies": true,
        "parent_id": "t1_iyq4rtz", "score": 1, "author_fullname": "t2_d7b8t", "report_reasons":
        null, "approved_by": null, "all_awardings": [], "collapsed": false, "body":
        "Thanks! I''ll take a look at that!", "awarders": [], "top_awarded_type":
        null, "author_flair_css_class": null, "author_patreon_flair": false, "downs":
        0, "author_flair_richtext": [], "is_submitter": false, "body_html": "&lt;div
        class=\"md\"&gt;&lt;p&gt;Thanks! I&amp;#39;ll take a look at that!&lt;/p&gt;\n&lt;/div&gt;",
        "removal_reason": null, "collapsed_reason": null, "associated_award": null,
        "stickied": false, "author_premium": false, "can_gild": false, "gildings":
        {}, "unrepliable_reason": null, "author_flair_text_color": null, "score_hidden":
        false, "permalink": "/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iywszjr/",
        "subreddit_type": "public", "locked": false, "name": "t1_iywszjr", "created":
        1670183441.0, "author_flair_text": null, "treatment_tags": [], "link_id":
        "t3_z9ezjb", "subreddit_name_prefixed": "r/adventofcode", "controversiality":
        0, "depth": 2, "author_flair_background_color": null, "collapsed_because_crowd_control":
        null, "mod_reports": [], "mod_note": null, "distinguished": null}}], true]],
        [0, 12, "attr", "things"], [12, 13, "call", ["t1_iywszjr"]], [13, 14, "attr",
        "focus"], [14, 15, "call", []], [0, 16, "attr", "things"], [16, 17, "call",
        ["None"]], [17, 18, "attr", "filter"], [18, 19, "call", [".morechildren"]],
        [19, 20, "attr", "remove"], [20, 21, "call", []]], "success": true}'
  recorded_at: Sat, 08 Mar 2025 22:24:43 GMT
recorded_with: VCR 6.3.1
