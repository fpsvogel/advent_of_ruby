---
- :author: SnacksOnAPlane
  :url: https://www.reddit.com/r/adventofcode/comments/3vw32y/day_8_solutions/cxr8gpg/
  :body: |-
    **Ruby**

    Part 1:

    ```ruby
    code_chars = 0
    real_chars = 0

    File.readlines("8-1.data").each do |line|
      line = line.chomp
      code_chars += line.length
      real_chars += eval(line).length
    end

    puts code_chars - real_chars
    ```

    Part 2:

    ```ruby
    code_chars = 0
    esc_chars = 0

    File.readlines("8-1.data").each do |line|
      line = line.chomp
      code_chars += line.length
      esc_chars += line.dump.length
    end

    puts esc_chars - code_chars
    ```
  :replies:
  - :author: gfixler
    :url: https://www.reddit.com/r/adventofcode/comments/3vw32y/day_8_solutions/cxr9142/
    :body: Do you still get the right answers without the chomps?
    :replies:
    - :author: "[deleted]"
      :url: https://www.reddit.com/r/adventofcode/comments/3vw32y/day_8_solutions/cxr95zi/
      :body: "[deleted]"
      :replies:
      - :author: gfixler
        :url: https://www.reddit.com/r/adventofcode/comments/3vw32y/day_8_solutions/cxr9gsc/
        :body: If you leave them in, the delta stays the same between input and output.
        :replies: []
- :author: packrat386
  :url: https://www.reddit.com/r/adventofcode/comments/3vw32y/day_8_solutions/cxr8pmv/
  :body: |-
    Roughly 12 lines of ruby, eval is fun

    ```ruby
    #!/usr/bin/ruby

    raw = 0
    parsed = 0
    encoded = 0
    File.readlines(ARGV[0]).each do |l|
      l.chomp!
      puts "#{l} -> #{l.inspect}"
      raw += l.size
      parsed += eval(l).size
      encoded += l.inspect.size
    end

    puts "RAW: #{raw}"
    puts "PARSED: #{parsed}"
    puts "ENCODED: #{encoded}"
    ```
  :replies: []
- :author: gnuconsulting
  :url: https://www.reddit.com/r/adventofcode/comments/3vw32y/day_8_solutions/cxr8y8u/
  :body: |-
    Wasted a bunch of time trying to do it just doing global search/replace regexes in vim, couldn't get the magic incantation right. Peeked over here, saw a python solution using eval which made a lightbulb go off and it was pretty easy from there. As per the moderator's comment, I only scrolled down to look at the answers when the leaderboard was already full. _grin_

    ```ruby
    #!/usr/bin/env ruby

    data = File.readlines("input.txt")
    code = 0
    count = 0

    data.each do |c|
      c = c.chomp
      code += c.length
      count += eval(c).length
    end

    p code - count

    code = 0
    count = 0

    data.each do |c|
      c = c.chomp
      code += c.length
      count += c.dump.length
    end

    p count - code
    ```
  :replies: []
