---
- :author: Stronbold
  :url: https://www.reddit.com/r/adventofcode/comments/1hj2odw/2024_day_21_solutions/m3c99gh
  :body: "[Solution](https://github.com/Alvaro-Kothe/Advent-of-Code/blob/main/2024/day21.rb)"
  :replies: []
- :author: JAntaresN
  :url: https://www.reddit.com/r/adventofcode/comments/1hj2odw/2024_day_21_solutions/m38oozv
  :body: |-
    [git link](https://github.com/jw-rx-93/advent-of-code-2024/blob/main/day21/day21.rb)

    Struggled hard on this one. Recognized that it was dp problem, but I had issue figuring out what I needed to memoize. I also made a mistake of selecting individual sub sequence by "weighing" them based on the number of movements required, and selecting only one of them. That was a mistake. Weighing them is fine, but all the substrings of the same weight must be accounted for as well, and that took some snooping around here to figure out.
  :replies: []
- :author: NullT3rminated
  :url: https://www.reddit.com/r/adventofcode/comments/1hj2odw/2024_day_21_solutions/m33nqyg
  :body: |-
    [Language: Ruby 710/223]

    My recursive solution set me up well for part 2, I just needed to add memoization. I was surprised I did this well, I guess it was just a hard problem

    [paste](https://topaz.github.io/paste/#XQAAAQDFBwAAAAAAAAA5GUqKNoFH6SMqVwa6yG0l+GbarPLmcoOjU+diH4oGkfzoDs8nu4dmVhYVKW+v9/4pixeespRGd6tcsbqkK0tqdtAW/cV8BKHGZ9ajYRn8DgzVUnHgSukF3AdnaQnWWKCJKKH+cmVm95d1TYhAIps7zoHJ5mpoXbZMt5uQduTy6Mc6oYaHReNVmjNqu+TkcXq+iZyiX8BhxEA4vROa6BWHYlmrFArJAzQr6BY6Cl6Ioef+7RoyT5RoZ6SYv07wKdWjBDoIp3UAKTfMsMDXDhg39gjpG9cdUSQtsdPixyDZesvSup6AXItKVqXjbN5mNSly9aHOcHuVch4Um6AcXyNIICWmykuWNChhwA9WNJDDO/oappe6XRV/p1SA009C9Ilemweo8cGfxYi/Cmu41EKpweCYd3jFDSSzFgkBYS/d9E1mnGA/hQ6P4jzi/1MaDSxwbhzcY/+Zo0c4Q+Owru9pDh1bIpgqLCNdfSMSbFm/32CEsQHAkBv9PEIfZf9eoY05y9UYQBTMgELl2oNa6olqo6Acpl/bO1PJeHr6C+OImz+ixk5wVSa4ln7n2bPxz1p1oEQ1pMVxKkwA8977pWbi0oU7shVh5rEGm1wuQqqe0wsVQLFdPV/2jpj9uFwnksgEmk+XHZUnuiT5rSSl92iMtpeGJqcCMcgp2ocB9P5E/PqS7ZuJjStqol0QThavnZ4BZdotJwpFwS/wGWnm5yad2sdIgZWKJCJ71hxHEuiE/TjDvq296vu14IWJe6S+0zQZ4S3/7ztwQpro9+CUpMwujlZX1tAk+2TaBsylsdfUPhVM/h5MDrAYRxp2KJK/B8V/c0M07aTk+hqyJhGq1/gr7Fsdz9LPhLPPwgpOdGPef3tivFUxMnwSAuh2nHIhKoaIzedIArFm9k/rLku+6uvCBo0AnTslwXKKdaScJjYPtn3FMedUCf9twY3IHPZ4fNCy+hRWIg/eL7HvJdMi2JPyZch2O64Ca7zwww7bq22SbUuA6bLk1+B/mFaq4LzuCzT6bs0bUAWDa66ezI8RDsLSGvza+74yofmLu7WcBPKLv/+aQ58O)
  :replies: []
