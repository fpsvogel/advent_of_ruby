---
- :author: Kache
  :url: https://www.reddit.com/r/adventofcode/comments/ebai4g/2019_day_16_solutions/fb3zrlr
  :body: |-
    **Ruby**

    [Part 1 and 2](https://github.com/Kache/advent_of_code/blob/8ee09f0889873dea5d4fde32ebcd160b5a2dd8b7/2019/solutions.rb#L599), about 10 lines each, runs in 2 secs & 4 secs, respectively
  :replies:
  - :author: craigontour
    :url: https://www.reddit.com/r/adventofcode/comments/ebai4g/2019_day_16_solutions/fezx2c3
    :body: |-
      > Ruby

      Hi

      Could you please explain how the following works in your solution (esp the reduce function):

      ```ruby
      nums[nth - 1] = (nth..nums.size).reduce(0) do |sum, n|
        sum + nums[n - 1] * base_pat[(n / nth) % 4]
      end.abs % 10
      ```

      Regards
    :replies:
    - :author: Kache
      :url: https://www.reddit.com/r/adventofcode/comments/ebai4g/2019_day_16_solutions/ff2c8ir
      :body: |-
        Unwrapping the `reduce`, the above is same as:

        ```ruby
        sum = 0
        (nth..nums.size).each do |n|
          sum = sum + nums[n - 1] * base_pat[(n / nth) % 4]
        end
        nums[nth - 1] = sum.abs % 10
        ```
      :replies:
      - :author: craigontour
        :url: https://www.reddit.com/r/adventofcode/comments/ebai4g/2019_day_16_solutions/ff39jff
        :body: Sorry, I was really after explanation of how reduce(0) works
        :replies: []
  - :author: petercooper
    :url: https://www.reddit.com/r/adventofcode/comments/ebai4g/2019_day_16_solutions/fb4e57x
    :body: |-
      Woop, Rubyists unite here in the comments :-)

      I just finished and came looking to see what techniques people had used, and amazingly (reassuringly?) my part 2 solution is almost character for character the same as yours :-) (Except I used #length out of habit, and I only convert the relevant part of the input to integers.)

      https://github.com/peterc/aoc2019solutions/blob/master/16b.rb

      My part 1 is somewhat different to yours though as I used #cycle on a pre-constructed pattern array rather than doing it on the fly.

      https://github.com/peterc/aoc2019solutions/blob/master/16.rb
    :replies:
    - :author: vinc686
      :url: https://www.reddit.com/r/adventofcode/comments/ebai4g/2019_day_16_solutions/fb5105r
      :body: I couldn't finish part 2 in time today, I'm really impressed by both of you, my code is a mess by comparison!
      :replies: []
