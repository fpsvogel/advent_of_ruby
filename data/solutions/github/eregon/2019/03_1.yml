---
- :name: 3a.rb
  :url: https://github.com/eregon/adventofcode/blob/master/2019
  :solution: "input = File.readlines('3.txt')\n\nclass Complex\n  def distance\n    real.abs + imag.abs\n  end\nend\n\nDIRS = { U: 1i, R: 1, D: -1i, L: -1 }\npassing = Hash.new(0)\n\ninput.map.with_index { |wire, i|\n  mask = 1 << i\n  pos = 0 + 0i\n  wire.chomp.split(',').each { |segment|\n    dir = DIRS.fetch(segment[0].to_sym)\n    n = Integer(segment[1..-1])\n    n.times {\n      pos += dir\n      passing[pos] |= mask\n    }\n  }  \n}\n\np passing.each_pair.select { |pos, count|\n  count == 0b11\n}.map(&:first).map(&:distance).min"
