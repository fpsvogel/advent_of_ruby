---
- :name: 3b.rb
  :url: https://github.com/eregon/adventofcode/blob/master/2024
  :solution: |-
    def mul(a,b)=a*b
    # Both work:
    # pp"do()#{$<.read}".scan(/(?:do\(\)|don't\(\)).*?(?=\Z|do\(\)|don't\(\))/m)
    # pp"do()#{$<.read}".scan(/(?:do\(\)|don't\(\))(?:(?!do\(\)|don't\(\)).)*/m)
    pp"do()#{$<.read}".scan(/(?:do\(\)|don't\(\)).*?(?=\Z|do\(\)|don't\(\))/m).grep(/\Ado\(\)/).sum{
      it.scan(/mul\(\d{1,3},\d{1,3}\)/).sum{eval it}
    }
- :name: 3b2.rb
  :url: https://github.com/eregon/adventofcode/blob/master/2024
  :solution: |-
    def mul(a,b)=a*b
    enabled = true
    sum = 0
    $<.read.scan(/mul\(\d{1,3},\d{1,3}\)|do\(\)|don't\(\)/) {
      case it
      in "do()" then enabled = true
      in "don't()" then enabled = false
      else sum += eval(it) if enabled
      end
    }
    p sum
