---
- :name: day-25-part-1.rb
  :url: https://github.com/gchan/advent-of-code-ruby/blob/main/2018/day-25
  :solution: |-
    constellations = []

    points = input.split("\n").map do |line|
      line.split(",").map(&:to_i)
    end

    def distance(point, other)
      point.zip(other)
        .map { |(p1, p2)| (p1 - p2).abs }
        .inject(:+)
    end

    points.each do |point|
      matches = constellations.select do |constellation|
        constellation.any? { |other_point| distance(point, other_point) <= 3 }
      end

      case matches.count
      when 0
        constellations << [point]
      when 1
        matches.first << point
      else
        matches.each { |constellation| constellations.delete(constellation) }
        constellation = matches.inject(&:concat) << point
        constellations << constellation
      end
    end

    puts constellations.count
