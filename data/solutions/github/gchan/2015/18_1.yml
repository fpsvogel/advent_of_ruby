---
- :name: day-18-part-1.rb
  :url: https://github.com/gchan/advent-of-code-ruby/blob/main/2015/day-18
  :solution: |-
    grid = Array.new(100) { Array.new(100, false) }

    input.each_with_index do |input, y|
      input.strip.chars.each_with_index do |state, x|
        grid[y][x] = state == '#'
      end
    end

    def neighbours_on(grid, x, y)
      x_coords = [x - 1, x, x + 1].select { |x| x.between?(0, 99) }
      y_coords = [y - 1, y, y + 1].select { |y| y.between?(0, 99) }

      x_coords.product(y_coords).
        reject { |coords| coords == [x, y] }.
        count { |x, y| grid[y][x] }
    end

    100.times do
      new_grid = Array.new(100) { Array.new(100, false) }

      (0..99).to_a.product((0..99).to_a).each do |x, y|
        neighbours = neighbours_on(grid, x, y)

        if grid[y][x]
          new_grid[y][x] = neighbours.between?(2, 3)
        else
          new_grid[y][x] = neighbours == 3
        end
      end

      grid = new_grid
    end

    puts grid.flatten.count { |state| state }
