---
- :name: day-05-part-2.rb
  :url: https://github.com/gchan/advent-of-code-ruby/blob/main/2022/day-05
  :solution: |-
    stacks, instructions = input.split("\n\n")

    stacks = stacks.split("\n")
    num_stacks = stacks.pop.split.last.to_i

    rows = stacks.map { |row|
      row = row.chars.each_slice(4).map { |col| col.join.scan(/\w/).first }

      (num_stacks - row.length).times { row << nil }

      row
    }

    stacks = rows.transpose.map(&:compact)

    instructions.each_line do |instruction|
      count, from, to = instruction.scan(/(\d+).*(\d+).*(\d+)/)[0].map(&:to_i)

      stacks[to -1].unshift(
        *stacks[from - 1].shift(count)
      )
    end

    puts stacks.map(&:first).join
