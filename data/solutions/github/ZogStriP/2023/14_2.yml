---
- :name: 14_parabolic_reflector_dish.rb
  :url: https://github.com/ZogStriP/adventofcode-old/blob/master/2023
  :solution: |-
    map = DATA.map { _1.chomp.chars.map &{ ?O => 0, ?# => 1 } }

    def load(m) = m.sum { _1.each_with_index.sum { |c, i| c == 0 ? i + 1 : 0 } }
    def rotate(m) = m.reverse.transpose

    def tilt(m)
      n = Array.new(m.size) { [nil] * m[0].size }
      m.each_with_index { |row, r|
        (b = row.size).downto(0) { |c|
          case row[c]
          when 1; n[r][b  = c] = 1
          when 0; n[r][b -= 1] = 0
          end
        }
      }
      n
    end

    p load tilt rotate map

    seen = []

    4.times { map = tilt rotate map } until offset = (seen << map)[...-1].index(map)

    p load rotate seen[offset + (1_000_000_000 - offset) % (seen.size - 1 - offset)]
