---
- :name: 18_snailfish.rb
  :url: https://github.com/ZogStriP/adventofcode-old/blob/master/2021
  :solution: "lines = DATA.map { eval _1 }\n\nadd_left = -> x, n {\n  return x if !n\n  return x + n if Integer === x\n  [add_left[x[0], n], x[1]]\n}\n\nadd_right = -> x, n {\n  return x if !n\n  return x + n if Integer === x\n  [x[0], add_right[x[1], n]]\n}\n\nexplode = -> x, n=4 {\n  return [false, nil, x, nil] if Integer === x\n  return [true, x[0], 0, x[1]] if n == 0\n  a, b = x\n  \U0001F4A5, left, a, right = explode[a, n - 1]\n  return [true, left, [a, add_left[b, right]], nil] if \U0001F4A5\n  \U0001F4A5, left, b, right = explode[b, n - 1]\n  return [true, nil, [add_right[a, left], b], right] if \U0001F4A5\n  [false, nil, x, nil]\n}\n\nsplit = -> x {\n  return (x > 9 ? [true, [x / 2, (x / 2.0).ceil]] : [false, x]) if Integer === x\n  a, b = x\n  \U0001FA93, a = split[a]\n  return [true, [a, b]] if \U0001FA93\n  \U0001FA93, b = split[b]\n  [\U0001FA93, [a, b]]\n}\n\nadd = -> a, b {\n  x = [a, b]\n  loop {\n    \U0001F4A5, _, x, _ = explode[x]\n    next if \U0001F4A5\n    \U0001FA93, x = split[x]\n    return x if !\U0001FA93\n  }\n}\n\nmagnitude = -> a {\n  Integer === a ? a : 3 * magnitude[a[0]] + 2 * magnitude[a[1]]\n}\n\np magnitude[lines.inject { add[_1, _2] }]\np lines.permutation(2).map { magnitude[add[_1, _2]] }.max"
