---
- :name: 16_permutation_promenade.rb
  :url: https://github.com/ZogStriP/adventofcode-old/blob/master/2017
  :solution: |-
    def dance(programs, moves)
      moves.each { |m|
        case m
        when /s(\d+)/
          programs.rotate!(-$1.to_i)
        when /x(\d+)\/(\d+)/
          a, b = $1.to_i, $2.to_i
          programs[a], programs[b] = programs[b], programs[a]
        when /p([a-p])\/([a-p])/
          a, b = programs.index($1), programs.index($2)
          programs[a], programs[b] = programs[b], programs[a]
        end
      }
      programs
    end

    programs = ("a".."p").to_a
    moves = DATA.read.strip.split(",")

    positions = [programs]

    loop {
      positions << dance(positions[-1].dup, moves)
      break if positions[0] == positions[-1]
    }

    positions.pop

    puts positions[1].join
    puts positions[1_000_000_000 % positions.size].join
