---
- :name: 14_docking_data.rb
  :url: https://github.com/ZogStriP/adventofcode-old/blob/master/2020
  :solution: |-
    mem1, mem2 = {}, {}
    zeros, ones, floats = 0, 0, 0

    DATA.each_line { |line|
      case line
      when /mask = ([01X]+)/
        zeros, ones, floats = 0, 0, 0

        $1.reverse.each_char.with_index { |c, i|
          case c
          when ?0; zeros  |= 1 << i
          when ?1; ones   |= 1 << i
          when ?X; floats |= 1 << i
          end
        }
      when /mem\[(\d+)\] = (\d+)/
        addr, val = $1.to_i, $2.to_i

        mem1[addr] = (val | ones) & ~zeros

        o = 0
        addr = (addr | ones) & ~floats

        loop do
          mem2[addr | o] = val
          o = (o + ~floats + 1) & floats
          break if o == 0
        end
      end
    }

    p mem1.values.sum, mem2.values.sum
