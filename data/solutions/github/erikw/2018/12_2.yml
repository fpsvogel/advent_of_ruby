---
- :name: part2.rb
  :url: https://github.com/erikw/advent-of-code-solutions/blob/main/2018/12
  :solution: |-
    require_relative 'lib'

    GENERATIONS = 50_000_000_000

    pots, states = read_input
    sums = [0, 0, 0]
    gen = 0
    loop do
      (sums << pots_sum(pots)).shift
      break if sums.each_cons(2).map { |a, b| b - a }.uniq.length == 1

      pots = next_generation(states, pots)
      gen += 1
    end

    final_sum = sums.last + (GENERATIONS - gen) * (sums[1] - sums[0])
    puts final_sum
